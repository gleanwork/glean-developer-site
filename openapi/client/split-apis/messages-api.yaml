openapi: 3.0.0
info:
  version: 0.9.0
  title: Messages
  description: Messages operations for Glean API
  x-logo:
    url: https://app.glean.com/images/glean-text2.svg
  x-speakeasy-name: Glean API
servers:
  - url: https://{instance}-be.glean.com
    variables:
      instance:
        default: instance-name
        description: The instance name (typically the email domain without the TLD) that determines the deployment backend.
tags:
  - name: Messages
    description: Messages
paths:
  /rest/api/v1/messages:
    post:
      tags:
        - Messages
      summary: Read messages
      description: Retrieves list of messages from messaging/chat datasources (e.g. Slack, Teams).
      operationId: messages
      x-visibility: Preview
      x-codegen-request-body-name: payload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessagesRequest'
        description: Includes request params such as the id for channel/message and direction.
        required: true
        x-exportParamName: MessagesRequest
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: retrieve
      x-speakeasy-group: client.messages
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean, models
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                res = glean.client.messages.retrieve(id_type=models.IDType.CONVERSATION_ID, id="<id>")

                # Handle response
                print(res)
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.messages.retrieve({
                idType: "CONVERSATION_ID",
                id: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Messages.Retrieve(ctx, components.MessagesRequest{\n        IDType: components.IDTypeConversationID,\n        ID: \"<id>\",\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.MessagesResponse != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.IdType;
            import org.openapis.openapi.models.components.MessagesRequest;
            import org.openapis.openapi.models.operations.MessagesResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken("<YOUR_BEARER_TOKEN_HERE>")
                            .instance("<YOUR_GLEAN_INSTANCE_HERE>")
                        .build();

                    MessagesRequest req = MessagesRequest.builder()
                            .idType(IdType.CONVERSATION_ID)
                            .id("<id>")
                            .build();

                    MessagesResponse res = sdk.client().messages().retrieve()
                            .request(req)
                            .call();

                    if (res.messagesResponse().isPresent()) {
                        // handle response
                    }
                }
            }
components:
  schemas:
    MessagesRequest:
      required:
        - id
        - idType
      properties:
        idType:
          type: string
          enum:
            - CHANNEL_NAME
            - THREAD_ID
            - CONVERSATION_ID
          description: Type of the id in the incoming request.
        id:
          type: string
          description: ID corresponding to the requested idType. Note that channel and threads are represented by the underlying datasource's ID and conversations are represented by their document's ID.
        workspaceId:
          type: string
          description: Id for the for the workspace in case of multiple workspaces.
        direction:
          type: string
          enum:
            - OLDER
            - NEWER
          description: The direction of the results asked with respect to the reference timestamp. Missing field defaults to OLDER. Only applicable when using a message_id.
        timestampMillis:
          type: integer
          format: int64
          description: Timestamp in millis of the reference message. Only applicable when using a message_id.
        includeRootMessage:
          type: boolean
          description: Whether to include root message in response.
        datasource:
          type: string
          enum:
            - SLACK
            - MICROSOFTTEAMS
            - FACEBOOKWORKPLACE
          description: The type of the data source. Missing field defaults to SLACK.
        datasourceInstanceDisplayName:
          type: string
          description: The datasource instance display name from which the document was extracted. This is used for appinstance facet filter for datasources that support multiple instances.
      type: object
    MessagesResponse:
      required:
        - hasMore
      properties:
        hasMore:
          type: boolean
          description: Whether there are more results for client to continue requesting.
        searchResponse:
          example:
            trackingToken: trackingToken
            suggestedSpellCorrectedQuery: suggestedSpellCorrectedQuery
            hasMoreResults: true
            errorInfo:
              errorMessages:
                - source: gmail
                  errorMessage: invalid token
                - source: slack
                  errorMessage: expired token
            requestID: 5e345ae500ff0befa2b9d1a3ba0001737e7363696f312d323535323137000171756572792d656e64706f696e743a323032303031333074313830343032000100
            results:
              - snippets:
                  - snippet: snippet
                    mimeType: mimeType
                metadata:
                  container: container
                  createTime: '2000-01-23T04:56:07.000Z'
                  datasource: datasource
                  author:
                    name: name
                  documentId: documentId
                  updateTime: '2000-01-23T04:56:07.000Z'
                  mimeType: mimeType
                  objectType: objectType
                title: title
                url: https://www.example.com/
              - snippets:
                  - snippet: snippet
                    mimeType: mimeType
                metadata:
                  container: container
                  createTime: '2000-01-23T04:56:07.000Z'
                  datasource: datasource
                  author:
                    name: name
                  documentId: documentId
                  updateTime: '2000-01-23T04:56:07.000Z'
                  mimeType: mimeType
                  objectType: objectType
                title: title
                url: https://www.example.com/
            facetResults:
              - buckets:
                  - percentage: 5
                    count: 1
                    value:
                      stringValue: stringValue
                      integerValue: 5
                  - percentage: 5
                    count: 1
                    value:
                      stringValue: stringValue
                      integerValue: 5
                sourceName: sourceName
                operatorName: operatorName
                objectType: objectType
              - buckets:
                  - percentage: 5
                    count: 1
                    value:
                      stringValue: stringValue
                      integerValue: 5
                  - percentage: 5
                    count: 1
                    value:
                      stringValue: stringValue
                      integerValue: 5
                sourceName: sourceName
                operatorName: operatorName
                objectType: objectType
            rewrittenQuery: rewrittenQuery
            rewrittenFacetFilters:
              - fieldName: fieldName
                values:
                  - fieldValues
                  - fieldValues
              - fieldName: fieldName
                values:
                  - fieldValues
                  - fieldValues
          type: object
          properties:
            trackingToken:
              type: string
              description: A token that should be passed for additional requests related to this request (such as more results requests).
            sessionInfo:
              properties:
                sessionTrackingToken:
                  type: string
                  description: A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab.
                tabId:
                  type: string
                  description: A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab.
                lastSeen:
                  type: string
                  format: date-time
                  description: The last time the server saw this token.
                lastQuery:
                  type: string
                  description: The last query seen by the server.
              type: object
            results:
              type: array
              items:
                type: object
                description: Flattened SearchResult
                example:
                  snippets:
                    - snippet: snippet
                      mimeType: mimeType
                  metadata:
                    container: container
                    createTime: '2000-01-23T04:56:07.000Z'
                    datasource: datasource
                    author:
                      name: name
                    documentId: documentId
                    updateTime: '2000-01-23T04:56:07.000Z'
                    mimeType: mimeType
                    objectType: objectType
                  title: title
                  url: https://example.com/foo/bar
                  nativeAppUrl: slack://foo/bar
                  mustIncludeSuggestions:
                    - missingTerm: container
                      query: container
                properties:
                  structuredResults:
                    type: array
                    description: An array of entities in the work graph retrieved via a data request.
                    items:
                      description: A single object that can support any object in the work graph. Only a single object will be populated.
                      properties:
                        document:
                          properties:
                            id:
                              type: string
                              description: The Glean Document ID.
                            datasource:
                              type: string
                              description: The app or other repository type from which the document was extracted
                            connectorType:
                              type: string
                              description: The source from which document content was pulled, e.g. an API crawl or browser history
                              enum:
                                - API_CRAWL
                                - BROWSER_CRAWL
                                - BROWSER_HISTORY
                                - BUILTIN
                                - FEDERATED_SEARCH
                                - PUSH_API
                                - WEB_CRAWL
                                - NATIVE_HISTORY
                            docType:
                              type: string
                              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                            content:
                              properties:
                                fullTextList:
                                  type: array
                                  description: The plaintext content of the document.
                                  items:
                                    type: string
                              type: object
                            containerDocument:
                              type: object
                              description: Document object
                            parentDocument:
                              type: object
                              description: Document object
                            title:
                              type: string
                              description: The title of the document.
                            url:
                              type: string
                              description: A permalink for the document.
                            metadata:
                              type: object
                              description: DocumentMetadata object
                            sections:
                              type: array
                              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                              items:
                                type: object
                                properties:
                                  title:
                                    type: string
                                    description: The title of the document section (e.g. the section header).
                                  url:
                                    type: string
                                    description: The permalink of the document section.
                          type: object
                        person:
                          required:
                            - name
                            - obfuscatedId
                          example:
                            name: George Clooney
                            obfuscatedId: abc123
                          properties:
                            name:
                              type: string
                              description: The display name.
                            obfuscatedId:
                              type: string
                              description: An opaque identifier that can be used to request metadata for a Person.
                            relatedDocuments:
                              type: array
                              description: A list of documents related to this person.
                              items:
                                properties:
                                  relation:
                                    type: string
                                    description: How this document relates to the including entity.
                                    enum:
                                      - ATTACHMENT
                                      - CANONICAL
                                      - CASE
                                      - CONTACT
                                      - CONVERSATION_MESSAGES
                                      - EXPERT
                                      - FROM
                                      - HIGHLIGHT
                                      - OPPORTUNITY
                                      - RECENT
                                      - SOURCE
                                      - TICKET
                                      - TRANSCRIPT
                                      - WITH
                                    x-enumDescriptions:
                                      CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                  associatedEntityId:
                                    type: string
                                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                  querySuggestion:
                                    required:
                                      - query
                                    example:
                                      query: app:github type:pull author:mortimer
                                      label: Mortimer's PRs
                                      datasource: github
                                    properties:
                                      missingTerm:
                                        type: string
                                        description: A query term missing from the original query on which this suggestion is based.
                                      query:
                                        type: string
                                        description: The query being suggested (e.g. enforcing the missing term from the original query).
                                      searchProviderInfo:
                                        example:
                                          name: Google
                                          logo: https://app.glean.com/images/feather/globe.svg
                                          searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                        properties:
                                          name:
                                            type: string
                                            description: Name of the search provider.
                                          logoUrl:
                                            type: string
                                            description: URL to the provider's logo.
                                          searchLinkUrlTemplate:
                                            type: string
                                            description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                        type: object
                                      label:
                                        type: string
                                        description: A user-facing description to display for the suggestion.
                                      datasource:
                                        type: string
                                        description: The datasource associated with the suggestion.
                                      requestOptions:
                                        required:
                                          - facetBucketSize
                                        example:
                                          datasourceFilter: JIRA
                                          datasourcesFilter:
                                            - JIRA
                                          queryOverridesFacetFilters: true
                                          facetFilters:
                                            - fieldName: fieldName
                                              values:
                                                - fieldValues
                                                - fieldValues
                                            - fieldName: fieldName
                                              values:
                                                - fieldValues
                                                - fieldValues
                                        properties:
                                          datasourceFilter:
                                            type: string
                                            description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                          datasourcesFilter:
                                            type: array
                                            description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                            items:
                                              type: string
                                          queryOverridesFacetFilters:
                                            type: boolean
                                            description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                          facetFilters:
                                            type: array
                                            description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                            items:
                                              example:
                                                fieldName: type
                                                values:
                                                  - value: Spreadsheet
                                                    relationType: EQUALS
                                                  - value: Presentation
                                                    relationType: EQUALS
                                              properties:
                                                fieldName:
                                                  type: string
                                                  example: owner
                                                values:
                                                  type: array
                                                  description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                  items:
                                                    properties:
                                                      value:
                                                        type: string
                                                        example: Spreadsheet
                                                      relationType:
                                                        type: string
                                                        enum:
                                                          - EQUALS
                                                          - ID_EQUALS
                                                          - LT
                                                          - GT
                                                        example: EQUALS
                                                      isNegated:
                                                        type: boolean
                                                        deprecated: true
                                                        description: DEPRECATED - please use relationType instead
                                                    type: object
                                                groupName:
                                                  type: string
                                                  example: Spreadsheet
                                                  description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                              type: object
                                          facetFilterSets:
                                            type: array
                                            description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                            items:
                                              description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                              properties:
                                                filters:
                                                  type: array
                                                  items:
                                                    example:
                                                      fieldName: type
                                                      values:
                                                        - value: Spreadsheet
                                                          relationType: EQUALS
                                                        - value: Presentation
                                                          relationType: EQUALS
                                                    properties:
                                                      fieldName:
                                                        type: string
                                                        example: owner
                                                      values:
                                                        type: array
                                                        description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                        items:
                                                          properties:
                                                            value:
                                                              type: string
                                                              example: Spreadsheet
                                                            relationType:
                                                              type: string
                                                              enum:
                                                                - EQUALS
                                                                - ID_EQUALS
                                                                - LT
                                                                - GT
                                                              example: EQUALS
                                                            isNegated:
                                                              type: boolean
                                                              deprecated: true
                                                              description: DEPRECATED - please use relationType instead
                                                          type: object
                                                      groupName:
                                                        type: string
                                                        example: Spreadsheet
                                                        description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                    type: object
                                              type: object
                                          facetBucketFilter:
                                            properties:
                                              facet:
                                                type: string
                                                description: The facet whose buckets should be filtered.
                                              prefix:
                                                type: string
                                                description: The per-term prefix that facet buckets should be filtered on.
                                            type: object
                                          facetBucketSize:
                                            type: integer
                                            description: The maximum number of FacetBuckets to return in each FacetResult.
                                          defaultFacets:
                                            type: array
                                            description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                            items:
                                              type: string
                                          authTokens:
                                            type: array
                                            description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                            items:
                                              required:
                                                - accessToken
                                                - datasource
                                              example:
                                                accessToken: 123abc
                                                datasource: gmail
                                                scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                tokenType: Bearer
                                                authUser: '1'
                                              properties:
                                                accessToken:
                                                  type: string
                                                datasource:
                                                  type: string
                                                scope:
                                                  type: string
                                                tokenType:
                                                  type: string
                                                authUser:
                                                  description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                  type: string
                                                expiration:
                                                  description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                  type: integer
                                                  format: int64
                                              type: object
                                          fetchAllDatasourceCounts:
                                            type: boolean
                                            description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                          responseHints:
                                            type: array
                                            description: Array of hints containing which fields should be populated in the response.
                                            items:
                                              type: string
                                              description: Hints for the response content.
                                              x-enumDescriptions:
                                                ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                FACET_RESULTS: Return only facet results.
                                                QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                RESULTS: Return search result documents.
                                                SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                              enum:
                                                - ALL_RESULT_COUNTS
                                                - FACET_RESULTS
                                                - QUERY_METADATA
                                                - RESULTS
                                                - SPELLCHECK_METADATA
                                          timezoneOffset:
                                            type: integer
                                            description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                          disableSpellcheck:
                                            type: boolean
                                            description: Whether or not to disable spellcheck.
                                          disableQueryAutocorrect:
                                            type: boolean
                                            description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                          returnLlmContentOverSnippets:
                                            type: boolean
                                            description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                          inclusions:
                                            properties:
                                              containerSpecs:
                                                description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                type: array
                                                items:
                                                  oneOf:
                                                    - type: object
                                                      properties:
                                                        url:
                                                          type: string
                                                          description: The URL of the document.
                                                    - type: object
                                                      properties:
                                                        id:
                                                          type: string
                                                          description: The ID of the document.
                                                    - type: object
                                                      properties:
                                                        ugcType:
                                                          type: string
                                                          enum:
                                                            - ANNOUNCEMENTS
                                                            - ANSWERS
                                                            - COLLECTIONS
                                                            - SHORTCUTS
                                                          description: The type of the user generated content (UGC datasource).
                                                        contentId:
                                                          type: integer
                                                          description: The id for user generated content.
                                                        docType:
                                                          type: string
                                                          description: The specific type of the user generated content type.
                                            type: object
                                          exclusions:
                                            properties:
                                              containerSpecs:
                                                description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                type: array
                                                items:
                                                  oneOf:
                                                    - type: object
                                                      properties:
                                                        url:
                                                          type: string
                                                          description: The URL of the document.
                                                    - type: object
                                                      properties:
                                                        id:
                                                          type: string
                                                          description: The ID of the document.
                                                    - type: object
                                                      properties:
                                                        ugcType:
                                                          type: string
                                                          enum:
                                                            - ANNOUNCEMENTS
                                                            - ANSWERS
                                                            - COLLECTIONS
                                                            - SHORTCUTS
                                                          description: The type of the user generated content (UGC datasource).
                                                        contentId:
                                                          type: integer
                                                          description: The id for user generated content.
                                                        docType:
                                                          type: string
                                                          description: The specific type of the user generated content type.
                                            type: object
                                        type: object
                                      ranges:
                                        type: array
                                        description: The bolded ranges within the query of the QuerySuggestion.
                                        items:
                                          required:
                                            - startIndex
                                          description: A subsection of a given string to which some special formatting should be applied.
                                          properties:
                                            startIndex:
                                              type: integer
                                              description: The inclusive start index of the range.
                                            endIndex:
                                              type: integer
                                              description: The exclusive end index of the range.
                                            type:
                                              type: string
                                              enum:
                                                - BOLD
                                                - CITATION
                                                - HIGHLIGHT
                                                - LINK
                                            url:
                                              type: string
                                              description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                            document:
                                              properties:
                                                id:
                                                  type: string
                                                  description: The Glean Document ID.
                                                datasource:
                                                  type: string
                                                  description: The app or other repository type from which the document was extracted
                                                connectorType:
                                                  type: string
                                                  description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                  enum:
                                                    - API_CRAWL
                                                    - BROWSER_CRAWL
                                                    - BROWSER_HISTORY
                                                    - BUILTIN
                                                    - FEDERATED_SEARCH
                                                    - PUSH_API
                                                    - WEB_CRAWL
                                                    - NATIVE_HISTORY
                                                docType:
                                                  type: string
                                                  description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                                content:
                                                  properties:
                                                    fullTextList:
                                                      type: array
                                                      description: The plaintext content of the document.
                                                      items:
                                                        type: string
                                                  type: object
                                                containerDocument:
                                                  type: object
                                                  description: Document object
                                                parentDocument:
                                                  type: object
                                                  description: Document object
                                                title:
                                                  type: string
                                                  description: The title of the document.
                                                url:
                                                  type: string
                                                  description: A permalink for the document.
                                                metadata:
                                                  type: object
                                                  description: DocumentMetadata object
                                                sections:
                                                  type: array
                                                  description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                  items:
                                                    type: object
                                                    properties:
                                                      title:
                                                        type: string
                                                        description: The title of the document section (e.g. the section header).
                                                      url:
                                                        type: string
                                                        description: The permalink of the document section.
                                              type: object
                                          type: object
                                      inputDetails:
                                        example:
                                          hasCopyPaste: true
                                        properties:
                                          hasCopyPaste:
                                            type: boolean
                                            description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                        type: object
                                    type: object
                                  documents:
                                    type: array
                                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                    deprecated: true
                                    items:
                                      properties:
                                        id:
                                          type: string
                                          description: The Glean Document ID.
                                        datasource:
                                          type: string
                                          description: The app or other repository type from which the document was extracted
                                        connectorType:
                                          type: string
                                          description: The source from which document content was pulled, e.g. an API crawl or browser history
                                          enum:
                                            - API_CRAWL
                                            - BROWSER_CRAWL
                                            - BROWSER_HISTORY
                                            - BUILTIN
                                            - FEDERATED_SEARCH
                                            - PUSH_API
                                            - WEB_CRAWL
                                            - NATIVE_HISTORY
                                        docType:
                                          type: string
                                          description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                        content:
                                          properties:
                                            fullTextList:
                                              type: array
                                              description: The plaintext content of the document.
                                              items:
                                                type: string
                                          type: object
                                        containerDocument:
                                          type: object
                                          description: Document object
                                        parentDocument:
                                          type: object
                                          description: Document object
                                        title:
                                          type: string
                                          description: The title of the document.
                                        url:
                                          type: string
                                          description: A permalink for the document.
                                        metadata:
                                          type: object
                                          description: DocumentMetadata object
                                        sections:
                                          type: array
                                          description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                          items:
                                            type: object
                                            properties:
                                              title:
                                                type: string
                                                description: The title of the document section (e.g. the section header).
                                              url:
                                                type: string
                                                description: The permalink of the document section.
                                      type: object
                                  results:
                                    type: array
                                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                    items:
                                      type: object
                                      description: SearchResult object (circular reference)
                                type: object
                            metadata:
                              type: object
                              description: PersonMetadata object
                          type: object
                        customer:
                          required:
                            - id
                            - company
                          properties:
                            id:
                              type: string
                              description: Unique identifier.
                            domains:
                              type: array
                              description: Link to company's associated website domains.
                              items:
                                type: string
                            company:
                              required:
                                - name
                              properties:
                                name:
                                  type: string
                                  description: User-friendly display name.
                                profileUrl:
                                  type: string
                                  description: Link to internal company company profile.
                                websiteUrls:
                                  type: array
                                  description: Link to company's associated websites.
                                  items:
                                    type: string
                                logoUrl:
                                  type: string
                                  description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                                location:
                                  type: string
                                  description: User facing string representing the company's location.
                                  example: New York City
                                phone:
                                  type: string
                                  description: Phone number as a number string.
                                fax:
                                  type: string
                                  description: Fax number as a number string.
                                industry:
                                  type: string
                                  description: User facing string representing the company's industry.
                                  example: Finances
                                annualRevenue:
                                  type: number
                                  format: double
                                  description: Average company's annual revenue for reference.
                                numberOfEmployees:
                                  type: integer
                                  format: int64
                                  description: Average company's number of employees for reference.
                                stockSymbol:
                                  type: string
                                  description: Company's stock symbol if company is public.
                                foundedDate:
                                  type: string
                                  format: date
                                  description: The date when the company was founded.
                                about:
                                  type: string
                                  description: User facing description of company.
                                  example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                              type: object
                            documentCounts:
                              type: object
                              description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                              additionalProperties:
                                type: integer
                            poc:
                              type: array
                              description: A list of POC for company.
                              items:
                                required:
                                  - name
                                  - obfuscatedId
                                example:
                                  name: George Clooney
                                  obfuscatedId: abc123
                                properties:
                                  name:
                                    type: string
                                    description: The display name.
                                  obfuscatedId:
                                    type: string
                                    description: An opaque identifier that can be used to request metadata for a Person.
                                  relatedDocuments:
                                    type: array
                                    description: A list of documents related to this person.
                                    items:
                                      properties:
                                        relation:
                                          type: string
                                          description: How this document relates to the including entity.
                                          enum:
                                            - ATTACHMENT
                                            - CANONICAL
                                            - CASE
                                            - CONTACT
                                            - CONVERSATION_MESSAGES
                                            - EXPERT
                                            - FROM
                                            - HIGHLIGHT
                                            - OPPORTUNITY
                                            - RECENT
                                            - SOURCE
                                            - TICKET
                                            - TRANSCRIPT
                                            - WITH
                                          x-enumDescriptions:
                                            CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                        associatedEntityId:
                                          type: string
                                          description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                        querySuggestion:
                                          required:
                                            - query
                                          example:
                                            query: app:github type:pull author:mortimer
                                            label: Mortimer's PRs
                                            datasource: github
                                          properties:
                                            missingTerm:
                                              type: string
                                              description: A query term missing from the original query on which this suggestion is based.
                                            query:
                                              type: string
                                              description: The query being suggested (e.g. enforcing the missing term from the original query).
                                            searchProviderInfo:
                                              example:
                                                name: Google
                                                logo: https://app.glean.com/images/feather/globe.svg
                                                searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                              properties:
                                                name:
                                                  type: string
                                                  description: Name of the search provider.
                                                logoUrl:
                                                  type: string
                                                  description: URL to the provider's logo.
                                                searchLinkUrlTemplate:
                                                  type: string
                                                  description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                              type: object
                                            label:
                                              type: string
                                              description: A user-facing description to display for the suggestion.
                                            datasource:
                                              type: string
                                              description: The datasource associated with the suggestion.
                                            requestOptions:
                                              required:
                                                - facetBucketSize
                                              example:
                                                datasourceFilter: JIRA
                                                datasourcesFilter:
                                                  - JIRA
                                                queryOverridesFacetFilters: true
                                                facetFilters:
                                                  - fieldName: fieldName
                                                    values:
                                                      - fieldValues
                                                      - fieldValues
                                                  - fieldName: fieldName
                                                    values:
                                                      - fieldValues
                                                      - fieldValues
                                              properties:
                                                datasourceFilter:
                                                  type: string
                                                  description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                                datasourcesFilter:
                                                  type: array
                                                  description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                                  items:
                                                    type: string
                                                queryOverridesFacetFilters:
                                                  type: boolean
                                                  description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                                facetFilters:
                                                  type: array
                                                  description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                  items:
                                                    example:
                                                      fieldName: type
                                                      values:
                                                        - value: Spreadsheet
                                                          relationType: EQUALS
                                                        - value: Presentation
                                                          relationType: EQUALS
                                                    properties:
                                                      fieldName:
                                                        type: string
                                                        example: owner
                                                      values:
                                                        type: array
                                                        description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                        items:
                                                          properties:
                                                            value:
                                                              type: string
                                                              example: Spreadsheet
                                                            relationType:
                                                              type: string
                                                              enum:
                                                                - EQUALS
                                                                - ID_EQUALS
                                                                - LT
                                                                - GT
                                                              example: EQUALS
                                                            isNegated:
                                                              type: boolean
                                                              deprecated: true
                                                              description: DEPRECATED - please use relationType instead
                                                          type: object
                                                      groupName:
                                                        type: string
                                                        example: Spreadsheet
                                                        description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                    type: object
                                                facetFilterSets:
                                                  type: array
                                                  description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                                  items:
                                                    description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                    properties:
                                                      filters:
                                                        type: array
                                                        items:
                                                          example:
                                                            fieldName: type
                                                            values:
                                                              - value: Spreadsheet
                                                                relationType: EQUALS
                                                              - value: Presentation
                                                                relationType: EQUALS
                                                          properties:
                                                            fieldName:
                                                              type: string
                                                              example: owner
                                                            values:
                                                              type: array
                                                              description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                              items:
                                                                properties:
                                                                  value:
                                                                    type: string
                                                                    example: Spreadsheet
                                                                  relationType:
                                                                    type: string
                                                                    enum:
                                                                      - EQUALS
                                                                      - ID_EQUALS
                                                                      - LT
                                                                      - GT
                                                                    example: EQUALS
                                                                  isNegated:
                                                                    type: boolean
                                                                    deprecated: true
                                                                    description: DEPRECATED - please use relationType instead
                                                                type: object
                                                            groupName:
                                                              type: string
                                                              example: Spreadsheet
                                                              description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                          type: object
                                                    type: object
                                                facetBucketFilter:
                                                  properties:
                                                    facet:
                                                      type: string
                                                      description: The facet whose buckets should be filtered.
                                                    prefix:
                                                      type: string
                                                      description: The per-term prefix that facet buckets should be filtered on.
                                                  type: object
                                                facetBucketSize:
                                                  type: integer
                                                  description: The maximum number of FacetBuckets to return in each FacetResult.
                                                defaultFacets:
                                                  type: array
                                                  description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                                  items:
                                                    type: string
                                                authTokens:
                                                  type: array
                                                  description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                                  items:
                                                    required:
                                                      - accessToken
                                                      - datasource
                                                    example:
                                                      accessToken: 123abc
                                                      datasource: gmail
                                                      scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                      tokenType: Bearer
                                                      authUser: '1'
                                                    properties:
                                                      accessToken:
                                                        type: string
                                                      datasource:
                                                        type: string
                                                      scope:
                                                        type: string
                                                      tokenType:
                                                        type: string
                                                      authUser:
                                                        description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                        type: string
                                                      expiration:
                                                        description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                        type: integer
                                                        format: int64
                                                    type: object
                                                fetchAllDatasourceCounts:
                                                  type: boolean
                                                  description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                                responseHints:
                                                  type: array
                                                  description: Array of hints containing which fields should be populated in the response.
                                                  items:
                                                    type: string
                                                    description: Hints for the response content.
                                                    x-enumDescriptions:
                                                      ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                      FACET_RESULTS: Return only facet results.
                                                      QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                      RESULTS: Return search result documents.
                                                      SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                    enum:
                                                      - ALL_RESULT_COUNTS
                                                      - FACET_RESULTS
                                                      - QUERY_METADATA
                                                      - RESULTS
                                                      - SPELLCHECK_METADATA
                                                timezoneOffset:
                                                  type: integer
                                                  description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                                disableSpellcheck:
                                                  type: boolean
                                                  description: Whether or not to disable spellcheck.
                                                disableQueryAutocorrect:
                                                  type: boolean
                                                  description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                                returnLlmContentOverSnippets:
                                                  type: boolean
                                                  description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                                inclusions:
                                                  properties:
                                                    containerSpecs:
                                                      description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                      type: array
                                                      items:
                                                        oneOf:
                                                          - type: object
                                                            properties:
                                                              url:
                                                                type: string
                                                                description: The URL of the document.
                                                          - type: object
                                                            properties:
                                                              id:
                                                                type: string
                                                                description: The ID of the document.
                                                          - type: object
                                                            properties:
                                                              ugcType:
                                                                type: string
                                                                enum:
                                                                  - ANNOUNCEMENTS
                                                                  - ANSWERS
                                                                  - COLLECTIONS
                                                                  - SHORTCUTS
                                                                description: The type of the user generated content (UGC datasource).
                                                              contentId:
                                                                type: integer
                                                                description: The id for user generated content.
                                                              docType:
                                                                type: string
                                                                description: The specific type of the user generated content type.
                                                  type: object
                                                exclusions:
                                                  properties:
                                                    containerSpecs:
                                                      description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                      type: array
                                                      items:
                                                        oneOf:
                                                          - type: object
                                                            properties:
                                                              url:
                                                                type: string
                                                                description: The URL of the document.
                                                          - type: object
                                                            properties:
                                                              id:
                                                                type: string
                                                                description: The ID of the document.
                                                          - type: object
                                                            properties:
                                                              ugcType:
                                                                type: string
                                                                enum:
                                                                  - ANNOUNCEMENTS
                                                                  - ANSWERS
                                                                  - COLLECTIONS
                                                                  - SHORTCUTS
                                                                description: The type of the user generated content (UGC datasource).
                                                              contentId:
                                                                type: integer
                                                                description: The id for user generated content.
                                                              docType:
                                                                type: string
                                                                description: The specific type of the user generated content type.
                                                  type: object
                                              type: object
                                            ranges:
                                              type: array
                                              description: The bolded ranges within the query of the QuerySuggestion.
                                              items:
                                                required:
                                                  - startIndex
                                                description: A subsection of a given string to which some special formatting should be applied.
                                                properties:
                                                  startIndex:
                                                    type: integer
                                                    description: The inclusive start index of the range.
                                                  endIndex:
                                                    type: integer
                                                    description: The exclusive end index of the range.
                                                  type:
                                                    type: string
                                                    enum:
                                                      - BOLD
                                                      - CITATION
                                                      - HIGHLIGHT
                                                      - LINK
                                                  url:
                                                    type: string
                                                    description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                                  document:
                                                    properties:
                                                      id:
                                                        type: string
                                                        description: The Glean Document ID.
                                                      datasource:
                                                        type: string
                                                        description: The app or other repository type from which the document was extracted
                                                      connectorType:
                                                        type: string
                                                        description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                        enum:
                                                          - API_CRAWL
                                                          - BROWSER_CRAWL
                                                          - BROWSER_HISTORY
                                                          - BUILTIN
                                                          - FEDERATED_SEARCH
                                                          - PUSH_API
                                                          - WEB_CRAWL
                                                          - NATIVE_HISTORY
                                                      docType:
                                                        type: string
                                                        description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                                      content:
                                                        properties:
                                                          fullTextList:
                                                            type: array
                                                            description: The plaintext content of the document.
                                                            items:
                                                              type: string
                                                        type: object
                                                      containerDocument:
                                                        type: object
                                                        description: Document object
                                                      parentDocument:
                                                        type: object
                                                        description: Document object
                                                      title:
                                                        type: string
                                                        description: The title of the document.
                                                      url:
                                                        type: string
                                                        description: A permalink for the document.
                                                      metadata:
                                                        type: object
                                                        description: DocumentMetadata object
                                                      sections:
                                                        type: array
                                                        description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                        items:
                                                          type: object
                                                          properties:
                                                            title:
                                                              type: string
                                                              description: The title of the document section (e.g. the section header).
                                                            url:
                                                              type: string
                                                              description: The permalink of the document section.
                                                    type: object
                                                type: object
                                            inputDetails:
                                              example:
                                                hasCopyPaste: true
                                              properties:
                                                hasCopyPaste:
                                                  type: boolean
                                                  description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                              type: object
                                          type: object
                                        documents:
                                          type: array
                                          description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                          deprecated: true
                                          items:
                                            properties:
                                              id:
                                                type: string
                                                description: The Glean Document ID.
                                              datasource:
                                                type: string
                                                description: The app or other repository type from which the document was extracted
                                              connectorType:
                                                type: string
                                                description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                enum:
                                                  - API_CRAWL
                                                  - BROWSER_CRAWL
                                                  - BROWSER_HISTORY
                                                  - BUILTIN
                                                  - FEDERATED_SEARCH
                                                  - PUSH_API
                                                  - WEB_CRAWL
                                                  - NATIVE_HISTORY
                                              docType:
                                                type: string
                                                description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                              content:
                                                properties:
                                                  fullTextList:
                                                    type: array
                                                    description: The plaintext content of the document.
                                                    items:
                                                      type: string
                                                type: object
                                              containerDocument:
                                                type: object
                                                description: Document object
                                              parentDocument:
                                                type: object
                                                description: Document object
                                              title:
                                                type: string
                                                description: The title of the document.
                                              url:
                                                type: string
                                                description: A permalink for the document.
                                              metadata:
                                                type: object
                                                description: DocumentMetadata object
                                              sections:
                                                type: array
                                                description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                items:
                                                  type: object
                                                  properties:
                                                    title:
                                                      type: string
                                                      description: The title of the document section (e.g. the section header).
                                                    url:
                                                      type: string
                                                      description: The permalink of the document section.
                                            type: object
                                        results:
                                          type: array
                                          description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                          items:
                                            type: object
                                            description: SearchResult object (circular reference)
                                      type: object
                                  metadata:
                                    type: object
                                    description: PersonMetadata object
                                type: object
                            metadata:
                              properties:
                                datasourceId:
                                  type: string
                                  description: The user visible id of the salesforce customer account.
                                customData:
                                  type: object
                                  description: Custom fields specific to individual datasources
                                  additionalProperties:
                                    $ref: '#/components/schemas/CustomDataValue'
                              type: object
                            mergedCustomers:
                              type: array
                              description: A list of Customers.
                              items:
                                type: object
                                description: Customer object
                            startDate:
                              type: string
                              format: date
                              description: The date when the interaction with customer started.
                            contractAnnualRevenue:
                              type: number
                              format: double
                              description: Average contract annual revenue with that customer.
                            notes:
                              type: string
                              description: User facing (potentially generated) notes about company.
                              example: CIO is interested in trying out the product.
                          type: object
                        team:
                          type: object
                          properties:
                            relatedObjects:
                              type: object
                              description: A list of objects related to a source object.
                              additionalProperties:
                                $ref: '#/components/schemas/RelatedObjectEdge'
                            permissions:
                              properties:
                                write:
                                  description: Describes the write permissions levels that a user has for a specific feature
                                  properties:
                                    scopeType:
                                      type: string
                                      description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                      enum:
                                        - GLOBAL
                                        - OWN
                                    create:
                                      type: boolean
                                      description: True if user has create permission for this feature and scope
                                    update:
                                      type: boolean
                                      description: True if user has update permission for this feature and scope
                                    delete:
                                      type: boolean
                                      description: True if user has delete permission for this feature and scope
                                  type: object
                              type: object
                            id:
                              type: string
                              description: Unique identifier
                            name:
                              type: string
                              description: Team name
                            description:
                              type: string
                              description: A description of the team
                            businessUnit:
                              type: string
                              description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                            department:
                              type: string
                              description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                            photoUrl:
                              type: string
                              format: url
                              description: A link to the team's photo.
                            bannerUrl:
                              type: string
                              format: url
                              description: A link to the team's banner photo.
                            externalLink:
                              type: string
                              format: uri
                              description: Link to a team page on the internet or your company's intranet
                            members:
                              type: array
                              description: The members on this team
                              items:
                                required:
                                  - person
                                type: object
                                description: Metadata about the relationship of a person to a team.
                                properties:
                                  person:
                                    required:
                                      - name
                                      - obfuscatedId
                                    example:
                                      name: George Clooney
                                      obfuscatedId: abc123
                                    properties:
                                      name:
                                        type: string
                                        description: The display name.
                                      obfuscatedId:
                                        type: string
                                        description: An opaque identifier that can be used to request metadata for a Person.
                                      relatedDocuments:
                                        type: array
                                        description: A list of documents related to this person.
                                        items:
                                          properties:
                                            relation:
                                              type: string
                                              description: How this document relates to the including entity.
                                              enum:
                                                - ATTACHMENT
                                                - CANONICAL
                                                - CASE
                                                - CONTACT
                                                - CONVERSATION_MESSAGES
                                                - EXPERT
                                                - FROM
                                                - HIGHLIGHT
                                                - OPPORTUNITY
                                                - RECENT
                                                - SOURCE
                                                - TICKET
                                                - TRANSCRIPT
                                                - WITH
                                              x-enumDescriptions:
                                                CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                            associatedEntityId:
                                              type: string
                                              description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                            querySuggestion:
                                              required:
                                                - query
                                              example:
                                                query: app:github type:pull author:mortimer
                                                label: Mortimer's PRs
                                                datasource: github
                                              properties:
                                                missingTerm:
                                                  type: string
                                                  description: A query term missing from the original query on which this suggestion is based.
                                                query:
                                                  type: string
                                                  description: The query being suggested (e.g. enforcing the missing term from the original query).
                                                searchProviderInfo:
                                                  example:
                                                    name: Google
                                                    logo: https://app.glean.com/images/feather/globe.svg
                                                    searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                                  properties:
                                                    name:
                                                      type: string
                                                      description: Name of the search provider.
                                                    logoUrl:
                                                      type: string
                                                      description: URL to the provider's logo.
                                                    searchLinkUrlTemplate:
                                                      type: string
                                                      description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                                  type: object
                                                label:
                                                  type: string
                                                  description: A user-facing description to display for the suggestion.
                                                datasource:
                                                  type: string
                                                  description: The datasource associated with the suggestion.
                                                requestOptions:
                                                  required:
                                                    - facetBucketSize
                                                  example:
                                                    datasourceFilter: JIRA
                                                    datasourcesFilter:
                                                      - JIRA
                                                    queryOverridesFacetFilters: true
                                                    facetFilters:
                                                      - fieldName: fieldName
                                                        values:
                                                          - fieldValues
                                                          - fieldValues
                                                      - fieldName: fieldName
                                                        values:
                                                          - fieldValues
                                                          - fieldValues
                                                  properties:
                                                    datasourceFilter:
                                                      type: string
                                                      description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                                    datasourcesFilter:
                                                      type: array
                                                      description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                                      items:
                                                        type: string
                                                    queryOverridesFacetFilters:
                                                      type: boolean
                                                      description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                                    facetFilters:
                                                      type: array
                                                      description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                      items:
                                                        example:
                                                          fieldName: type
                                                          values:
                                                            - value: Spreadsheet
                                                              relationType: EQUALS
                                                            - value: Presentation
                                                              relationType: EQUALS
                                                        properties:
                                                          fieldName:
                                                            type: string
                                                            example: owner
                                                          values:
                                                            type: array
                                                            description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                            items:
                                                              properties:
                                                                value:
                                                                  type: string
                                                                  example: Spreadsheet
                                                                relationType:
                                                                  type: string
                                                                  enum:
                                                                    - EQUALS
                                                                    - ID_EQUALS
                                                                    - LT
                                                                    - GT
                                                                  example: EQUALS
                                                                isNegated:
                                                                  type: boolean
                                                                  deprecated: true
                                                                  description: DEPRECATED - please use relationType instead
                                                              type: object
                                                          groupName:
                                                            type: string
                                                            example: Spreadsheet
                                                            description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                        type: object
                                                    facetFilterSets:
                                                      type: array
                                                      description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                                      items:
                                                        description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                        properties:
                                                          filters:
                                                            type: array
                                                            items:
                                                              example:
                                                                fieldName: type
                                                                values:
                                                                  - value: Spreadsheet
                                                                    relationType: EQUALS
                                                                  - value: Presentation
                                                                    relationType: EQUALS
                                                              properties:
                                                                fieldName:
                                                                  type: string
                                                                  example: owner
                                                                values:
                                                                  type: array
                                                                  description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                                  items:
                                                                    properties:
                                                                      value:
                                                                        type: string
                                                                        example: Spreadsheet
                                                                      relationType:
                                                                        type: string
                                                                        enum:
                                                                          - EQUALS
                                                                          - ID_EQUALS
                                                                          - LT
                                                                          - GT
                                                                        example: EQUALS
                                                                      isNegated:
                                                                        type: boolean
                                                                        deprecated: true
                                                                        description: DEPRECATED - please use relationType instead
                                                                    type: object
                                                                groupName:
                                                                  type: string
                                                                  example: Spreadsheet
                                                                  description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                              type: object
                                                        type: object
                                                    facetBucketFilter:
                                                      properties:
                                                        facet:
                                                          type: string
                                                          description: The facet whose buckets should be filtered.
                                                        prefix:
                                                          type: string
                                                          description: The per-term prefix that facet buckets should be filtered on.
                                                      type: object
                                                    facetBucketSize:
                                                      type: integer
                                                      description: The maximum number of FacetBuckets to return in each FacetResult.
                                                    defaultFacets:
                                                      type: array
                                                      description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                                      items:
                                                        type: string
                                                    authTokens:
                                                      type: array
                                                      description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                                      items:
                                                        required:
                                                          - accessToken
                                                          - datasource
                                                        example:
                                                          accessToken: 123abc
                                                          datasource: gmail
                                                          scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                          tokenType: Bearer
                                                          authUser: '1'
                                                        properties:
                                                          accessToken:
                                                            type: string
                                                          datasource:
                                                            type: string
                                                          scope:
                                                            type: string
                                                          tokenType:
                                                            type: string
                                                          authUser:
                                                            description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                            type: string
                                                          expiration:
                                                            description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                            type: integer
                                                            format: int64
                                                        type: object
                                                    fetchAllDatasourceCounts:
                                                      type: boolean
                                                      description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                                    responseHints:
                                                      type: array
                                                      description: Array of hints containing which fields should be populated in the response.
                                                      items:
                                                        type: string
                                                        description: Hints for the response content.
                                                        x-enumDescriptions:
                                                          ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                          FACET_RESULTS: Return only facet results.
                                                          QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                          RESULTS: Return search result documents.
                                                          SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                        enum:
                                                          - ALL_RESULT_COUNTS
                                                          - FACET_RESULTS
                                                          - QUERY_METADATA
                                                          - RESULTS
                                                          - SPELLCHECK_METADATA
                                                    timezoneOffset:
                                                      type: integer
                                                      description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                                    disableSpellcheck:
                                                      type: boolean
                                                      description: Whether or not to disable spellcheck.
                                                    disableQueryAutocorrect:
                                                      type: boolean
                                                      description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                                    returnLlmContentOverSnippets:
                                                      type: boolean
                                                      description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                                    inclusions:
                                                      properties:
                                                        containerSpecs:
                                                          description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                          type: array
                                                          items:
                                                            oneOf:
                                                              - type: object
                                                                properties:
                                                                  url:
                                                                    type: string
                                                                    description: The URL of the document.
                                                              - type: object
                                                                properties:
                                                                  id:
                                                                    type: string
                                                                    description: The ID of the document.
                                                              - type: object
                                                                properties:
                                                                  ugcType:
                                                                    type: string
                                                                    enum:
                                                                      - ANNOUNCEMENTS
                                                                      - ANSWERS
                                                                      - COLLECTIONS
                                                                      - SHORTCUTS
                                                                    description: The type of the user generated content (UGC datasource).
                                                                  contentId:
                                                                    type: integer
                                                                    description: The id for user generated content.
                                                                  docType:
                                                                    type: string
                                                                    description: The specific type of the user generated content type.
                                                      type: object
                                                    exclusions:
                                                      properties:
                                                        containerSpecs:
                                                          description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                          type: array
                                                          items:
                                                            oneOf:
                                                              - type: object
                                                                properties:
                                                                  url:
                                                                    type: string
                                                                    description: The URL of the document.
                                                              - type: object
                                                                properties:
                                                                  id:
                                                                    type: string
                                                                    description: The ID of the document.
                                                              - type: object
                                                                properties:
                                                                  ugcType:
                                                                    type: string
                                                                    enum:
                                                                      - ANNOUNCEMENTS
                                                                      - ANSWERS
                                                                      - COLLECTIONS
                                                                      - SHORTCUTS
                                                                    description: The type of the user generated content (UGC datasource).
                                                                  contentId:
                                                                    type: integer
                                                                    description: The id for user generated content.
                                                                  docType:
                                                                    type: string
                                                                    description: The specific type of the user generated content type.
                                                      type: object
                                                  type: object
                                                ranges:
                                                  type: array
                                                  description: The bolded ranges within the query of the QuerySuggestion.
                                                  items:
                                                    required:
                                                      - startIndex
                                                    description: A subsection of a given string to which some special formatting should be applied.
                                                    properties:
                                                      startIndex:
                                                        type: integer
                                                        description: The inclusive start index of the range.
                                                      endIndex:
                                                        type: integer
                                                        description: The exclusive end index of the range.
                                                      type:
                                                        type: string
                                                        enum:
                                                          - BOLD
                                                          - CITATION
                                                          - HIGHLIGHT
                                                          - LINK
                                                      url:
                                                        type: string
                                                        description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                                      document:
                                                        properties:
                                                          id:
                                                            type: string
                                                            description: The Glean Document ID.
                                                          datasource:
                                                            type: string
                                                            description: The app or other repository type from which the document was extracted
                                                          connectorType:
                                                            type: string
                                                            description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                            enum:
                                                              - API_CRAWL
                                                              - BROWSER_CRAWL
                                                              - BROWSER_HISTORY
                                                              - BUILTIN
                                                              - FEDERATED_SEARCH
                                                              - PUSH_API
                                                              - WEB_CRAWL
                                                              - NATIVE_HISTORY
                                                          docType:
                                                            type: string
                                                            description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                                          content:
                                                            properties:
                                                              fullTextList:
                                                                type: array
                                                                description: The plaintext content of the document.
                                                                items:
                                                                  type: string
                                                            type: object
                                                          containerDocument:
                                                            type: object
                                                            description: Document object
                                                          parentDocument:
                                                            type: object
                                                            description: Document object
                                                          title:
                                                            type: string
                                                            description: The title of the document.
                                                          url:
                                                            type: string
                                                            description: A permalink for the document.
                                                          metadata:
                                                            type: object
                                                            description: DocumentMetadata object
                                                          sections:
                                                            type: array
                                                            description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                            items:
                                                              type: object
                                                              properties:
                                                                title:
                                                                  type: string
                                                                  description: The title of the document section (e.g. the section header).
                                                                url:
                                                                  type: string
                                                                  description: The permalink of the document section.
                                                        type: object
                                                    type: object
                                                inputDetails:
                                                  example:
                                                    hasCopyPaste: true
                                                  properties:
                                                    hasCopyPaste:
                                                      type: boolean
                                                      description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                                  type: object
                                              type: object
                                            documents:
                                              type: array
                                              description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                              deprecated: true
                                              items:
                                                properties:
                                                  id:
                                                    type: string
                                                    description: The Glean Document ID.
                                                  datasource:
                                                    type: string
                                                    description: The app or other repository type from which the document was extracted
                                                  connectorType:
                                                    type: string
                                                    description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                    enum:
                                                      - API_CRAWL
                                                      - BROWSER_CRAWL
                                                      - BROWSER_HISTORY
                                                      - BUILTIN
                                                      - FEDERATED_SEARCH
                                                      - PUSH_API
                                                      - WEB_CRAWL
                                                      - NATIVE_HISTORY
                                                  docType:
                                                    type: string
                                                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                                  content:
                                                    properties:
                                                      fullTextList:
                                                        type: array
                                                        description: The plaintext content of the document.
                                                        items:
                                                          type: string
                                                    type: object
                                                  containerDocument:
                                                    type: object
                                                    description: Document object
                                                  parentDocument:
                                                    type: object
                                                    description: Document object
                                                  title:
                                                    type: string
                                                    description: The title of the document.
                                                  url:
                                                    type: string
                                                    description: A permalink for the document.
                                                  metadata:
                                                    type: object
                                                    description: DocumentMetadata object
                                                  sections:
                                                    type: array
                                                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                    items:
                                                      type: object
                                                      properties:
                                                        title:
                                                          type: string
                                                          description: The title of the document section (e.g. the section header).
                                                        url:
                                                          type: string
                                                          description: The permalink of the document section.
                                                type: object
                                            results:
                                              type: array
                                              description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                              items:
                                                type: object
                                                description: SearchResult object (circular reference)
                                          type: object
                                      metadata:
                                        type: object
                                        description: PersonMetadata object
                                    type: object
                                  relationship:
                                    type: string
                                    description: The team member's relationship to the team. This defaults to MEMBER if not set.
                                    default: MEMBER
                                    enum:
                                      - MEMBER
                                      - MANAGER
                                      - LEAD
                                      - POINT_OF_CONTACT
                                      - OTHER
                                  customRelationshipStr:
                                    type: string
                                    description: Displayed name for the relationship if relationship is set to `OTHER`.
                                  joinDate:
                                    type: string
                                    format: date-time
                                    description: The team member's start date
                            memberCount:
                              type: integer
                              description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                            emails:
                              type: array
                              description: The emails for this team
                              items:
                                properties:
                                  email:
                                    type: string
                                    format: email
                                    description: An email address
                                  type:
                                    type: string
                                    enum:
                                      - PRIMARY
                                      - SECONDARY
                                      - ONCALL
                                      - OTHER
                                    default: OTHER
                                  isUserGenerated:
                                    type: boolean
                                    description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                                type: object
                            customFields:
                              type: array
                              description: Customizable fields for additional team information.
                              items:
                                required:
                                  - label
                                  - values
                                  - displayable
                                properties:
                                  label:
                                    type: string
                                    description: A user-facing label for this field.
                                  values:
                                    type: array
                                    items:
                                      oneOf:
                                        - properties:
                                            strText:
                                              type: string
                                              description: Text field for string value.
                                          type: object
                                        - properties:
                                            urlAnchor:
                                              type: string
                                              description: Anchor text for hyperlink.
                                            urlLink:
                                              type: string
                                              description: Link for this URL.
                                          type: object
                                        - properties:
                                            person:
                                              required:
                                                - name
                                                - obfuscatedId
                                              example:
                                                name: George Clooney
                                                obfuscatedId: abc123
                                              properties:
                                                name:
                                                  type: string
                                                  description: The display name.
                                                obfuscatedId:
                                                  type: string
                                                  description: An opaque identifier that can be used to request metadata for a Person.
                                                relatedDocuments:
                                                  type: array
                                                  description: A list of documents related to this person.
                                                  items:
                                                    properties:
                                                      relation:
                                                        type: string
                                                        description: How this document relates to the including entity.
                                                        enum:
                                                          - ATTACHMENT
                                                          - CANONICAL
                                                          - CASE
                                                          - CONTACT
                                                          - CONVERSATION_MESSAGES
                                                          - EXPERT
                                                          - FROM
                                                          - HIGHLIGHT
                                                          - OPPORTUNITY
                                                          - RECENT
                                                          - SOURCE
                                                          - TICKET
                                                          - TRANSCRIPT
                                                          - WITH
                                                        x-enumDescriptions:
                                                          CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                                      associatedEntityId:
                                                        type: string
                                                        description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                                      querySuggestion:
                                                        required:
                                                          - query
                                                        example:
                                                          query: app:github type:pull author:mortimer
                                                          label: Mortimer's PRs
                                                          datasource: github
                                                        properties:
                                                          missingTerm:
                                                            type: string
                                                            description: A query term missing from the original query on which this suggestion is based.
                                                          query:
                                                            type: string
                                                            description: The query being suggested (e.g. enforcing the missing term from the original query).
                                                          searchProviderInfo:
                                                            example:
                                                              name: Google
                                                              logo: https://app.glean.com/images/feather/globe.svg
                                                              searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                                            properties:
                                                              name:
                                                                type: string
                                                                description: Name of the search provider.
                                                              logoUrl:
                                                                type: string
                                                                description: URL to the provider's logo.
                                                              searchLinkUrlTemplate:
                                                                type: string
                                                                description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                                            type: object
                                                          label:
                                                            type: string
                                                            description: A user-facing description to display for the suggestion.
                                                          datasource:
                                                            type: string
                                                            description: The datasource associated with the suggestion.
                                                          requestOptions:
                                                            required:
                                                              - facetBucketSize
                                                            example:
                                                              datasourceFilter: JIRA
                                                              datasourcesFilter:
                                                                - JIRA
                                                              queryOverridesFacetFilters: true
                                                              facetFilters:
                                                                - fieldName: fieldName
                                                                  values:
                                                                    - fieldValues
                                                                    - fieldValues
                                                                - fieldName: fieldName
                                                                  values:
                                                                    - fieldValues
                                                                    - fieldValues
                                                            properties:
                                                              datasourceFilter:
                                                                type: string
                                                                description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                                              datasourcesFilter:
                                                                type: array
                                                                description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                                                items:
                                                                  type: string
                                                              queryOverridesFacetFilters:
                                                                type: boolean
                                                                description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                                              facetFilters:
                                                                type: array
                                                                description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                                items:
                                                                  example:
                                                                    fieldName: type
                                                                    values:
                                                                      - value: Spreadsheet
                                                                        relationType: EQUALS
                                                                      - value: Presentation
                                                                        relationType: EQUALS
                                                                  properties:
                                                                    fieldName:
                                                                      type: string
                                                                      example: owner
                                                                    values:
                                                                      type: array
                                                                      description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                                      items:
                                                                        properties:
                                                                          value:
                                                                            type: string
                                                                            example: Spreadsheet
                                                                          relationType:
                                                                            type: string
                                                                            enum:
                                                                              - EQUALS
                                                                              - ID_EQUALS
                                                                              - LT
                                                                              - GT
                                                                            example: EQUALS
                                                                          isNegated:
                                                                            type: boolean
                                                                            deprecated: true
                                                                            description: DEPRECATED - please use relationType instead
                                                                        type: object
                                                                    groupName:
                                                                      type: string
                                                                      example: Spreadsheet
                                                                      description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                                  type: object
                                                              facetFilterSets:
                                                                type: array
                                                                description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                                                items:
                                                                  description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                                  properties:
                                                                    filters:
                                                                      type: array
                                                                      items:
                                                                        example:
                                                                          fieldName: type
                                                                          values:
                                                                            - value: Spreadsheet
                                                                              relationType: EQUALS
                                                                            - value: Presentation
                                                                              relationType: EQUALS
                                                                        properties:
                                                                          fieldName:
                                                                            type: string
                                                                            example: owner
                                                                          values:
                                                                            type: array
                                                                            description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                                            items:
                                                                              properties:
                                                                                value:
                                                                                  type: string
                                                                                  example: Spreadsheet
                                                                                relationType:
                                                                                  type: string
                                                                                  enum:
                                                                                    - EQUALS
                                                                                    - ID_EQUALS
                                                                                    - LT
                                                                                    - GT
                                                                                  example: EQUALS
                                                                                isNegated:
                                                                                  type: boolean
                                                                                  deprecated: true
                                                                                  description: DEPRECATED - please use relationType instead
                                                                              type: object
                                                                          groupName:
                                                                            type: string
                                                                            example: Spreadsheet
                                                                            description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                                        type: object
                                                                  type: object
                                                              facetBucketFilter:
                                                                properties:
                                                                  facet:
                                                                    type: string
                                                                    description: The facet whose buckets should be filtered.
                                                                  prefix:
                                                                    type: string
                                                                    description: The per-term prefix that facet buckets should be filtered on.
                                                                type: object
                                                              facetBucketSize:
                                                                type: integer
                                                                description: The maximum number of FacetBuckets to return in each FacetResult.
                                                              defaultFacets:
                                                                type: array
                                                                description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                                                items:
                                                                  type: string
                                                              authTokens:
                                                                type: array
                                                                description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                                                items:
                                                                  required:
                                                                    - accessToken
                                                                    - datasource
                                                                  example:
                                                                    accessToken: 123abc
                                                                    datasource: gmail
                                                                    scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                                    tokenType: Bearer
                                                                    authUser: '1'
                                                                  properties:
                                                                    accessToken:
                                                                      type: string
                                                                    datasource:
                                                                      type: string
                                                                    scope:
                                                                      type: string
                                                                    tokenType:
                                                                      type: string
                                                                    authUser:
                                                                      description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                                      type: string
                                                                    expiration:
                                                                      description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                                      type: integer
                                                                      format: int64
                                                                  type: object
                                                              fetchAllDatasourceCounts:
                                                                type: boolean
                                                                description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                                              responseHints:
                                                                type: array
                                                                description: Array of hints containing which fields should be populated in the response.
                                                                items:
                                                                  type: string
                                                                  description: Hints for the response content.
                                                                  x-enumDescriptions:
                                                                    ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                                    FACET_RESULTS: Return only facet results.
                                                                    QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                                    RESULTS: Return search result documents.
                                                                    SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                                  enum:
                                                                    - ALL_RESULT_COUNTS
                                                                    - FACET_RESULTS
                                                                    - QUERY_METADATA
                                                                    - RESULTS
                                                                    - SPELLCHECK_METADATA
                                                              timezoneOffset:
                                                                type: integer
                                                                description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                                              disableSpellcheck:
                                                                type: boolean
                                                                description: Whether or not to disable spellcheck.
                                                              disableQueryAutocorrect:
                                                                type: boolean
                                                                description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                                              returnLlmContentOverSnippets:
                                                                type: boolean
                                                                description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                                              inclusions:
                                                                properties:
                                                                  containerSpecs:
                                                                    description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                                    type: array
                                                                    items:
                                                                      oneOf:
                                                                        - type: object
                                                                          properties:
                                                                            url:
                                                                              type: string
                                                                              description: The URL of the document.
                                                                        - type: object
                                                                          properties:
                                                                            id:
                                                                              type: string
                                                                              description: The ID of the document.
                                                                        - type: object
                                                                          properties:
                                                                            ugcType:
                                                                              type: string
                                                                              enum:
                                                                                - ANNOUNCEMENTS
                                                                                - ANSWERS
                                                                                - COLLECTIONS
                                                                                - SHORTCUTS
                                                                              description: The type of the user generated content (UGC datasource).
                                                                            contentId:
                                                                              type: integer
                                                                              description: The id for user generated content.
                                                                            docType:
                                                                              type: string
                                                                              description: The specific type of the user generated content type.
                                                                type: object
                                                              exclusions:
                                                                properties:
                                                                  containerSpecs:
                                                                    description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                                    type: array
                                                                    items:
                                                                      oneOf:
                                                                        - type: object
                                                                          properties:
                                                                            url:
                                                                              type: string
                                                                              description: The URL of the document.
                                                                        - type: object
                                                                          properties:
                                                                            id:
                                                                              type: string
                                                                              description: The ID of the document.
                                                                        - type: object
                                                                          properties:
                                                                            ugcType:
                                                                              type: string
                                                                              enum:
                                                                                - ANNOUNCEMENTS
                                                                                - ANSWERS
                                                                                - COLLECTIONS
                                                                                - SHORTCUTS
                                                                              description: The type of the user generated content (UGC datasource).
                                                                            contentId:
                                                                              type: integer
                                                                              description: The id for user generated content.
                                                                            docType:
                                                                              type: string
                                                                              description: The specific type of the user generated content type.
                                                                type: object
                                                            type: object
                                                          ranges:
                                                            type: array
                                                            description: The bolded ranges within the query of the QuerySuggestion.
                                                            items:
                                                              required:
                                                                - startIndex
                                                              description: A subsection of a given string to which some special formatting should be applied.
                                                              properties:
                                                                startIndex:
                                                                  type: integer
                                                                  description: The inclusive start index of the range.
                                                                endIndex:
                                                                  type: integer
                                                                  description: The exclusive end index of the range.
                                                                type:
                                                                  type: string
                                                                  enum:
                                                                    - BOLD
                                                                    - CITATION
                                                                    - HIGHLIGHT
                                                                    - LINK
                                                                url:
                                                                  type: string
                                                                  description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                                                document:
                                                                  properties:
                                                                    id:
                                                                      type: string
                                                                      description: The Glean Document ID.
                                                                    datasource:
                                                                      type: string
                                                                      description: The app or other repository type from which the document was extracted
                                                                    connectorType:
                                                                      type: string
                                                                      description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                                      enum:
                                                                        - API_CRAWL
                                                                        - BROWSER_CRAWL
                                                                        - BROWSER_HISTORY
                                                                        - BUILTIN
                                                                        - FEDERATED_SEARCH
                                                                        - PUSH_API
                                                                        - WEB_CRAWL
                                                                        - NATIVE_HISTORY
                                                                    docType:
                                                                      type: string
                                                                      description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                                                    content:
                                                                      properties:
                                                                        fullTextList:
                                                                          type: array
                                                                          description: The plaintext content of the document.
                                                                          items:
                                                                            type: string
                                                                      type: object
                                                                    containerDocument:
                                                                      type: object
                                                                      description: Document object
                                                                    parentDocument:
                                                                      type: object
                                                                      description: Document object
                                                                    title:
                                                                      type: string
                                                                      description: The title of the document.
                                                                    url:
                                                                      type: string
                                                                      description: A permalink for the document.
                                                                    metadata:
                                                                      type: object
                                                                      description: DocumentMetadata object
                                                                    sections:
                                                                      type: array
                                                                      description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                                      items:
                                                                        type: object
                                                                        properties:
                                                                          title:
                                                                            type: string
                                                                            description: The title of the document section (e.g. the section header).
                                                                          url:
                                                                            type: string
                                                                            description: The permalink of the document section.
                                                                  type: object
                                                              type: object
                                                          inputDetails:
                                                            example:
                                                              hasCopyPaste: true
                                                            properties:
                                                              hasCopyPaste:
                                                                type: boolean
                                                                description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                                            type: object
                                                        type: object
                                                      documents:
                                                        type: array
                                                        description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                                        deprecated: true
                                                        items:
                                                          properties:
                                                            id:
                                                              type: string
                                                              description: The Glean Document ID.
                                                            datasource:
                                                              type: string
                                                              description: The app or other repository type from which the document was extracted
                                                            connectorType:
                                                              type: string
                                                              description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                              enum:
                                                                - API_CRAWL
                                                                - BROWSER_CRAWL
                                                                - BROWSER_HISTORY
                                                                - BUILTIN
                                                                - FEDERATED_SEARCH
                                                                - PUSH_API
                                                                - WEB_CRAWL
                                                                - NATIVE_HISTORY
                                                            docType:
                                                              type: string
                                                              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                                            content:
                                                              properties:
                                                                fullTextList:
                                                                  type: array
                                                                  description: The plaintext content of the document.
                                                                  items:
                                                                    type: string
                                                              type: object
                                                            containerDocument:
                                                              type: object
                                                              description: Document object
                                                            parentDocument:
                                                              type: object
                                                              description: Document object
                                                            title:
                                                              type: string
                                                              description: The title of the document.
                                                            url:
                                                              type: string
                                                              description: A permalink for the document.
                                                            metadata:
                                                              type: object
                                                              description: DocumentMetadata object
                                                            sections:
                                                              type: array
                                                              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                              items:
                                                                type: object
                                                                properties:
                                                                  title:
                                                                    type: string
                                                                    description: The title of the document section (e.g. the section header).
                                                                  url:
                                                                    type: string
                                                                    description: The permalink of the document section.
                                                          type: object
                                                      results:
                                                        type: array
                                                        description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                                        items:
                                                          type: object
                                                          description: SearchResult object (circular reference)
                                                    type: object
                                                metadata:
                                                  type: object
                                                  description: PersonMetadata object
                                              type: object
                                          type: object
                                  displayable:
                                    type: boolean
                                    description: Determines whether the client should display this custom field
                                    default: true
                                type: object
                            datasourceProfiles:
                              type: array
                              description: The datasource profiles of the team
                              items:
                                required:
                                  - datasource
                                  - handle
                                properties:
                                  datasource:
                                    type: string
                                    example: github
                                    description: The datasource the profile is of.
                                  handle:
                                    type: string
                                    description: The display name of the entity in the given datasource.
                                  url:
                                    type: string
                                    description: URL to view the entity's profile.
                                  nativeAppUrl:
                                    type: string
                                    description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                                  isUserGenerated:
                                    type: boolean
                                    description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                                type: object
                            datasource:
                              type: string
                              description: the data source of the team, e.g. GDRIVE
                            createdFrom:
                              type: string
                              description: For teams created from docs, the doc title. Otherwise empty.
                            lastUpdatedAt:
                              type: string
                              format: date-time
                              description: when this team was last updated.
                            status:
                              type: string
                              description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                              default: PROCESSED
                              enum:
                                - PROCESSED
                                - QUEUED_FOR_CREATION
                                - QUEUED_FOR_DELETION
                            canBeDeleted:
                              type: boolean
                              description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                              default: true
                            loggingId:
                              type: string
                              description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                          required:
                            - id
                            - name
                        customEntity:
                          type: object
                          properties:
                            permissions:
                              properties:
                                write:
                                  description: Describes the write permissions levels that a user has for a specific feature
                                  properties:
                                    scopeType:
                                      type: string
                                      description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                      enum:
                                        - GLOBAL
                                        - OWN
                                    create:
                                      type: boolean
                                      description: True if user has create permission for this feature and scope
                                    update:
                                      type: boolean
                                      description: True if user has update permission for this feature and scope
                                    delete:
                                      type: boolean
                                      description: True if user has delete permission for this feature and scope
                                  type: object
                              type: object
                            id:
                              type: string
                              description: Unique identifier.
                            title:
                              type: string
                              description: Title or name of the custom entity.
                            datasource:
                              type: string
                              description: The datasource the custom entity is from.
                            objectType:
                              type: string
                              description: The type of the entity. Interpretation is specific to each datasource
                            metadata:
                              properties:
                                customData:
                                  type: object
                                  description: Custom fields specific to individual datasources
                                  additionalProperties:
                                    $ref: '#/components/schemas/CustomDataValue'
                              type: object
                            roles:
                              type: array
                              description: A list of user roles for the custom entity explicitly granted by the owner.
                              items:
                                required:
                                  - role
                                properties:
                                  sourceDocumentSpec:
                                    oneOf:
                                      - type: object
                                        properties:
                                          url:
                                            type: string
                                            description: The URL of the document.
                                      - type: object
                                        properties:
                                          id:
                                            type: string
                                            description: The ID of the document.
                                      - type: object
                                        properties:
                                          ugcType:
                                            type: string
                                            enum:
                                              - ANNOUNCEMENTS
                                              - ANSWERS
                                              - COLLECTIONS
                                              - SHORTCUTS
                                            description: The type of the user generated content (UGC datasource).
                                          contentId:
                                            type: integer
                                            description: The id for user generated content.
                                          docType:
                                            type: string
                                            description: The specific type of the user generated content type.
                                  person:
                                    required:
                                      - name
                                      - obfuscatedId
                                    example:
                                      name: George Clooney
                                      obfuscatedId: abc123
                                    properties:
                                      name:
                                        type: string
                                        description: The display name.
                                      obfuscatedId:
                                        type: string
                                        description: An opaque identifier that can be used to request metadata for a Person.
                                      relatedDocuments:
                                        type: array
                                        description: A list of documents related to this person.
                                        items:
                                          properties:
                                            relation:
                                              type: string
                                              description: How this document relates to the including entity.
                                              enum:
                                                - ATTACHMENT
                                                - CANONICAL
                                                - CASE
                                                - CONTACT
                                                - CONVERSATION_MESSAGES
                                                - EXPERT
                                                - FROM
                                                - HIGHLIGHT
                                                - OPPORTUNITY
                                                - RECENT
                                                - SOURCE
                                                - TICKET
                                                - TRANSCRIPT
                                                - WITH
                                              x-enumDescriptions:
                                                CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                            associatedEntityId:
                                              type: string
                                              description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                            querySuggestion:
                                              required:
                                                - query
                                              example:
                                                query: app:github type:pull author:mortimer
                                                label: Mortimer's PRs
                                                datasource: github
                                              properties:
                                                missingTerm:
                                                  type: string
                                                  description: A query term missing from the original query on which this suggestion is based.
                                                query:
                                                  type: string
                                                  description: The query being suggested (e.g. enforcing the missing term from the original query).
                                                searchProviderInfo:
                                                  example:
                                                    name: Google
                                                    logo: https://app.glean.com/images/feather/globe.svg
                                                    searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                                  properties:
                                                    name:
                                                      type: string
                                                      description: Name of the search provider.
                                                    logoUrl:
                                                      type: string
                                                      description: URL to the provider's logo.
                                                    searchLinkUrlTemplate:
                                                      type: string
                                                      description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                                  type: object
                                                label:
                                                  type: string
                                                  description: A user-facing description to display for the suggestion.
                                                datasource:
                                                  type: string
                                                  description: The datasource associated with the suggestion.
                                                requestOptions:
                                                  required:
                                                    - facetBucketSize
                                                  example:
                                                    datasourceFilter: JIRA
                                                    datasourcesFilter:
                                                      - JIRA
                                                    queryOverridesFacetFilters: true
                                                    facetFilters:
                                                      - fieldName: fieldName
                                                        values:
                                                          - fieldValues
                                                          - fieldValues
                                                      - fieldName: fieldName
                                                        values:
                                                          - fieldValues
                                                          - fieldValues
                                                  properties:
                                                    datasourceFilter:
                                                      type: string
                                                      description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                                    datasourcesFilter:
                                                      type: array
                                                      description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                                      items:
                                                        type: string
                                                    queryOverridesFacetFilters:
                                                      type: boolean
                                                      description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                                    facetFilters:
                                                      type: array
                                                      description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                      items:
                                                        example:
                                                          fieldName: type
                                                          values:
                                                            - value: Spreadsheet
                                                              relationType: EQUALS
                                                            - value: Presentation
                                                              relationType: EQUALS
                                                        properties:
                                                          fieldName:
                                                            type: string
                                                            example: owner
                                                          values:
                                                            type: array
                                                            description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                            items:
                                                              properties:
                                                                value:
                                                                  type: string
                                                                  example: Spreadsheet
                                                                relationType:
                                                                  type: string
                                                                  enum:
                                                                    - EQUALS
                                                                    - ID_EQUALS
                                                                    - LT
                                                                    - GT
                                                                  example: EQUALS
                                                                isNegated:
                                                                  type: boolean
                                                                  deprecated: true
                                                                  description: DEPRECATED - please use relationType instead
                                                              type: object
                                                          groupName:
                                                            type: string
                                                            example: Spreadsheet
                                                            description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                        type: object
                                                    facetFilterSets:
                                                      type: array
                                                      description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                                      items:
                                                        description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                        properties:
                                                          filters:
                                                            type: array
                                                            items:
                                                              example:
                                                                fieldName: type
                                                                values:
                                                                  - value: Spreadsheet
                                                                    relationType: EQUALS
                                                                  - value: Presentation
                                                                    relationType: EQUALS
                                                              properties:
                                                                fieldName:
                                                                  type: string
                                                                  example: owner
                                                                values:
                                                                  type: array
                                                                  description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                                  items:
                                                                    properties:
                                                                      value:
                                                                        type: string
                                                                        example: Spreadsheet
                                                                      relationType:
                                                                        type: string
                                                                        enum:
                                                                          - EQUALS
                                                                          - ID_EQUALS
                                                                          - LT
                                                                          - GT
                                                                        example: EQUALS
                                                                      isNegated:
                                                                        type: boolean
                                                                        deprecated: true
                                                                        description: DEPRECATED - please use relationType instead
                                                                    type: object
                                                                groupName:
                                                                  type: string
                                                                  example: Spreadsheet
                                                                  description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                              type: object
                                                        type: object
                                                    facetBucketFilter:
                                                      properties:
                                                        facet:
                                                          type: string
                                                          description: The facet whose buckets should be filtered.
                                                        prefix:
                                                          type: string
                                                          description: The per-term prefix that facet buckets should be filtered on.
                                                      type: object
                                                    facetBucketSize:
                                                      type: integer
                                                      description: The maximum number of FacetBuckets to return in each FacetResult.
                                                    defaultFacets:
                                                      type: array
                                                      description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                                      items:
                                                        type: string
                                                    authTokens:
                                                      type: array
                                                      description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                                      items:
                                                        required:
                                                          - accessToken
                                                          - datasource
                                                        example:
                                                          accessToken: 123abc
                                                          datasource: gmail
                                                          scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                          tokenType: Bearer
                                                          authUser: '1'
                                                        properties:
                                                          accessToken:
                                                            type: string
                                                          datasource:
                                                            type: string
                                                          scope:
                                                            type: string
                                                          tokenType:
                                                            type: string
                                                          authUser:
                                                            description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                            type: string
                                                          expiration:
                                                            description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                            type: integer
                                                            format: int64
                                                        type: object
                                                    fetchAllDatasourceCounts:
                                                      type: boolean
                                                      description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                                    responseHints:
                                                      type: array
                                                      description: Array of hints containing which fields should be populated in the response.
                                                      items:
                                                        type: string
                                                        description: Hints for the response content.
                                                        x-enumDescriptions:
                                                          ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                          FACET_RESULTS: Return only facet results.
                                                          QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                          RESULTS: Return search result documents.
                                                          SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                        enum:
                                                          - ALL_RESULT_COUNTS
                                                          - FACET_RESULTS
                                                          - QUERY_METADATA
                                                          - RESULTS
                                                          - SPELLCHECK_METADATA
                                                    timezoneOffset:
                                                      type: integer
                                                      description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                                    disableSpellcheck:
                                                      type: boolean
                                                      description: Whether or not to disable spellcheck.
                                                    disableQueryAutocorrect:
                                                      type: boolean
                                                      description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                                    returnLlmContentOverSnippets:
                                                      type: boolean
                                                      description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                                    inclusions:
                                                      properties:
                                                        containerSpecs:
                                                          description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                          type: array
                                                          items:
                                                            oneOf:
                                                              - type: object
                                                                properties:
                                                                  url:
                                                                    type: string
                                                                    description: The URL of the document.
                                                              - type: object
                                                                properties:
                                                                  id:
                                                                    type: string
                                                                    description: The ID of the document.
                                                              - type: object
                                                                properties:
                                                                  ugcType:
                                                                    type: string
                                                                    enum:
                                                                      - ANNOUNCEMENTS
                                                                      - ANSWERS
                                                                      - COLLECTIONS
                                                                      - SHORTCUTS
                                                                    description: The type of the user generated content (UGC datasource).
                                                                  contentId:
                                                                    type: integer
                                                                    description: The id for user generated content.
                                                                  docType:
                                                                    type: string
                                                                    description: The specific type of the user generated content type.
                                                      type: object
                                                    exclusions:
                                                      properties:
                                                        containerSpecs:
                                                          description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                          type: array
                                                          items:
                                                            type: object
                                                            description: DocumentSpec object
                                                      type: object
                                                  type: object
                                                ranges:
                                                  type: array
                                                  description: The bolded ranges within the query of the QuerySuggestion.
                                                  items:
                                                    required:
                                                      - startIndex
                                                    description: A subsection of a given string to which some special formatting should be applied.
                                                    properties:
                                                      startIndex:
                                                        type: integer
                                                        description: The inclusive start index of the range.
                                                      endIndex:
                                                        type: integer
                                                        description: The exclusive end index of the range.
                                                      type:
                                                        type: string
                                                        enum:
                                                          - BOLD
                                                          - CITATION
                                                          - HIGHLIGHT
                                                          - LINK
                                                      url:
                                                        type: string
                                                        description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                                      document:
                                                        properties:
                                                          id:
                                                            type: string
                                                            description: The Glean Document ID.
                                                          datasource:
                                                            type: string
                                                            description: The app or other repository type from which the document was extracted
                                                          connectorType:
                                                            type: string
                                                            description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                            enum:
                                                              - API_CRAWL
                                                              - BROWSER_CRAWL
                                                              - BROWSER_HISTORY
                                                              - BUILTIN
                                                              - FEDERATED_SEARCH
                                                              - PUSH_API
                                                              - WEB_CRAWL
                                                              - NATIVE_HISTORY
                                                          docType:
                                                            type: string
                                                            description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                                          content:
                                                            properties:
                                                              fullTextList:
                                                                type: array
                                                                description: The plaintext content of the document.
                                                                items:
                                                                  type: string
                                                            type: object
                                                          containerDocument:
                                                            type: object
                                                            description: Document object
                                                          parentDocument:
                                                            type: object
                                                            description: Document object
                                                          title:
                                                            type: string
                                                            description: The title of the document.
                                                          url:
                                                            type: string
                                                            description: A permalink for the document.
                                                          metadata:
                                                            type: object
                                                            description: DocumentMetadata object
                                                          sections:
                                                            type: array
                                                            description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                            items:
                                                              type: object
                                                              properties:
                                                                title:
                                                                  type: string
                                                                  description: The title of the document section (e.g. the section header).
                                                                url:
                                                                  type: string
                                                                  description: The permalink of the document section.
                                                        type: object
                                                    type: object
                                                inputDetails:
                                                  example:
                                                    hasCopyPaste: true
                                                  properties:
                                                    hasCopyPaste:
                                                      type: boolean
                                                      description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                                  type: object
                                              type: object
                                            documents:
                                              type: array
                                              description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                              deprecated: true
                                              items:
                                                type: object
                                                description: Document object
                                            results:
                                              type: array
                                              description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                              items:
                                                type: object
                                                description: SearchResult object (circular reference)
                                          type: object
                                      metadata:
                                        type: object
                                        description: PersonMetadata object
                                    type: object
                                  group:
                                    required:
                                      - type
                                      - id
                                    properties:
                                      type:
                                        type: string
                                        description: The type of user group
                                        enum:
                                          - DEPARTMENT
                                          - ALL
                                          - TEAM
                                          - JOB_TITLE
                                          - ROLE_TYPE
                                          - LOCATION
                                          - REGION
                                          - EXTERNAL_GROUP
                                      id:
                                        type: string
                                        description: A unique identifier for the group. May be the same as name.
                                      name:
                                        type: string
                                        description: Name of the group.
                                    type: object
                                  role:
                                    type: string
                                    description: A user's role with respect to a specific document.
                                    enum:
                                      - OWNER
                                      - VIEWER
                                      - ANSWER_MODERATOR
                                      - EDITOR
                                      - VERIFIER
                                type: object
                        answer:
                          type: object
                          description: Answer object
                        extractedQnA:
                          properties:
                            heading:
                              type: string
                              description: Heading text that was matched to produce this result.
                            question:
                              type: string
                              description: Question text that was matched to produce this result.
                            questionResult:
                              type: object
                              description: SearchResult object (circular reference)
                          type: object
                        meeting:
                          properties:
                            id:
                              type: string
                            title:
                              type: string
                            description:
                              type: string
                            url:
                              type: string
                            startTime:
                              type: string
                              format: date-time
                            endTime:
                              type: string
                              format: date-time
                            attendees:
                              properties:
                                people:
                                  type: array
                                  description: Full details of some of the attendees of this event
                                  items:
                                    required:
                                      - person
                                    properties:
                                      isOrganizer:
                                        type: boolean
                                        description: Whether or not this attendee is an organizer.
                                      isInGroup:
                                        type: boolean
                                        description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                                      person:
                                        required:
                                          - name
                                          - obfuscatedId
                                        example:
                                          name: George Clooney
                                          obfuscatedId: abc123
                                        properties:
                                          name:
                                            type: string
                                            description: The display name.
                                          obfuscatedId:
                                            type: string
                                            description: An opaque identifier that can be used to request metadata for a Person.
                                          relatedDocuments:
                                            type: array
                                            description: A list of documents related to this person.
                                            items:
                                              properties:
                                                relation:
                                                  type: string
                                                  description: How this document relates to the including entity.
                                                  enum:
                                                    - ATTACHMENT
                                                    - CANONICAL
                                                    - CASE
                                                    - CONTACT
                                                    - CONVERSATION_MESSAGES
                                                    - EXPERT
                                                    - FROM
                                                    - HIGHLIGHT
                                                    - OPPORTUNITY
                                                    - RECENT
                                                    - SOURCE
                                                    - TICKET
                                                    - TRANSCRIPT
                                                    - WITH
                                                  x-enumDescriptions:
                                                    CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                                associatedEntityId:
                                                  type: string
                                                  description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                                querySuggestion:
                                                  required:
                                                    - query
                                                  example:
                                                    query: app:github type:pull author:mortimer
                                                    label: Mortimer's PRs
                                                    datasource: github
                                                  properties:
                                                    missingTerm:
                                                      type: string
                                                      description: A query term missing from the original query on which this suggestion is based.
                                                    query:
                                                      type: string
                                                      description: The query being suggested (e.g. enforcing the missing term from the original query).
                                                    searchProviderInfo:
                                                      example:
                                                        name: Google
                                                        logo: https://app.glean.com/images/feather/globe.svg
                                                        searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                                      properties:
                                                        name:
                                                          type: string
                                                          description: Name of the search provider.
                                                        logoUrl:
                                                          type: string
                                                          description: URL to the provider's logo.
                                                        searchLinkUrlTemplate:
                                                          type: string
                                                          description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                                      type: object
                                                    label:
                                                      type: string
                                                      description: A user-facing description to display for the suggestion.
                                                    datasource:
                                                      type: string
                                                      description: The datasource associated with the suggestion.
                                                    requestOptions:
                                                      required:
                                                        - facetBucketSize
                                                      example:
                                                        datasourceFilter: JIRA
                                                        datasourcesFilter:
                                                          - JIRA
                                                        queryOverridesFacetFilters: true
                                                        facetFilters:
                                                          - fieldName: fieldName
                                                            values:
                                                              - fieldValues
                                                              - fieldValues
                                                          - fieldName: fieldName
                                                            values:
                                                              - fieldValues
                                                              - fieldValues
                                                      properties:
                                                        datasourceFilter:
                                                          type: string
                                                          description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                                        datasourcesFilter:
                                                          type: array
                                                          description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                                          items:
                                                            type: string
                                                        queryOverridesFacetFilters:
                                                          type: boolean
                                                          description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                                        facetFilters:
                                                          type: array
                                                          description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                          items:
                                                            type: object
                                                            description: FacetFilter object
                                                        facetFilterSets:
                                                          type: array
                                                          description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                                          items:
                                                            description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                            properties:
                                                              filters:
                                                                type: array
                                                                items:
                                                                  type: object
                                                                  description: FacetFilter object
                                                            type: object
                                                        facetBucketFilter:
                                                          properties:
                                                            facet:
                                                              type: string
                                                              description: The facet whose buckets should be filtered.
                                                            prefix:
                                                              type: string
                                                              description: The per-term prefix that facet buckets should be filtered on.
                                                          type: object
                                                        facetBucketSize:
                                                          type: integer
                                                          description: The maximum number of FacetBuckets to return in each FacetResult.
                                                        defaultFacets:
                                                          type: array
                                                          description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                                          items:
                                                            type: string
                                                        authTokens:
                                                          type: array
                                                          description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                                          items:
                                                            required:
                                                              - accessToken
                                                              - datasource
                                                            example:
                                                              accessToken: 123abc
                                                              datasource: gmail
                                                              scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                              tokenType: Bearer
                                                              authUser: '1'
                                                            properties:
                                                              accessToken:
                                                                type: string
                                                              datasource:
                                                                type: string
                                                              scope:
                                                                type: string
                                                              tokenType:
                                                                type: string
                                                              authUser:
                                                                description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                                type: string
                                                              expiration:
                                                                description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                                type: integer
                                                                format: int64
                                                            type: object
                                                        fetchAllDatasourceCounts:
                                                          type: boolean
                                                          description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                                        responseHints:
                                                          type: array
                                                          description: Array of hints containing which fields should be populated in the response.
                                                          items:
                                                            type: string
                                                            description: Hints for the response content.
                                                            x-enumDescriptions:
                                                              ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                              FACET_RESULTS: Return only facet results.
                                                              QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                              RESULTS: Return search result documents.
                                                              SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                            enum:
                                                              - ALL_RESULT_COUNTS
                                                              - FACET_RESULTS
                                                              - QUERY_METADATA
                                                              - RESULTS
                                                              - SPELLCHECK_METADATA
                                                        timezoneOffset:
                                                          type: integer
                                                          description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                                        disableSpellcheck:
                                                          type: boolean
                                                          description: Whether or not to disable spellcheck.
                                                        disableQueryAutocorrect:
                                                          type: boolean
                                                          description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                                        returnLlmContentOverSnippets:
                                                          type: boolean
                                                          description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                                        inclusions:
                                                          type: object
                                                          description: RestrictionFilters object
                                                        exclusions:
                                                          type: object
                                                          description: RestrictionFilters object
                                                      type: object
                                                    ranges:
                                                      type: array
                                                      description: The bolded ranges within the query of the QuerySuggestion.
                                                      items:
                                                        required:
                                                          - startIndex
                                                        description: A subsection of a given string to which some special formatting should be applied.
                                                        properties:
                                                          startIndex:
                                                            type: integer
                                                            description: The inclusive start index of the range.
                                                          endIndex:
                                                            type: integer
                                                            description: The exclusive end index of the range.
                                                          type:
                                                            type: string
                                                            enum:
                                                              - BOLD
                                                              - CITATION
                                                              - HIGHLIGHT
                                                              - LINK
                                                          url:
                                                            type: string
                                                            description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                                          document:
                                                            type: object
                                                            description: Document object
                                                        type: object
                                                    inputDetails:
                                                      example:
                                                        hasCopyPaste: true
                                                      properties:
                                                        hasCopyPaste:
                                                          type: boolean
                                                          description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                                      type: object
                                                  type: object
                                                documents:
                                                  type: array
                                                  description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                                  deprecated: true
                                                  items:
                                                    type: object
                                                    description: Document object
                                                results:
                                                  type: array
                                                  description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                                  items:
                                                    type: object
                                                    description: SearchResult object (circular reference)
                                              type: object
                                          metadata:
                                            type: object
                                            description: PersonMetadata object
                                        type: object
                                      groupAttendees:
                                        type: array
                                        description: If this attendee is a group, represents the list of individual attendees in the group.
                                        items:
                                          type: object
                                          description: CalendarAttendee object
                                      responseStatus:
                                        type: string
                                        enum:
                                          - ACCEPTED
                                          - DECLINED
                                          - NO_RESPONSE
                                          - TENTATIVE
                                    type: object
                                isLimit:
                                  type: boolean
                                  description: Whether the total count of the people returned is at the retrieval limit.
                                total:
                                  type: integer
                                  description: Total number of attendees in this event.
                                numAccepted:
                                  type: integer
                                  description: Total number of attendees who have accepted this event.
                                numDeclined:
                                  type: integer
                                  description: Total number of attendees who have declined this event.
                                numNoResponse:
                                  type: integer
                                  description: Total number of attendees who have not responded to this event.
                                numTentative:
                                  type: integer
                                  description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                              type: object
                          type: object
                        app:
                          required:
                            - datasource
                          properties:
                            datasource:
                              type: string
                              description: The app or other repository type this represents
                            docType:
                              type: string
                              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                            mimeType:
                              type: string
                              description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                            iconUrl:
                              type: string
                              description: If there is available icon URL.
                          type: object
                        collection:
                          type: object
                          description: Flattened Collection
                          properties:
                            name:
                              type: string
                              description: The unique name of the Collection.
                            description:
                              type: string
                              description: A brief summary of the Collection's contents.
                            addedRoles:
                              type: array
                              description: A list of added user roles for the Collection.
                              items:
                                required:
                                  - role
                                properties:
                                  sourceDocumentSpec:
                                    type: object
                                    description: DocumentSpec object
                                  person:
                                    required:
                                      - name
                                      - obfuscatedId
                                    example:
                                      name: George Clooney
                                      obfuscatedId: abc123
                                    properties:
                                      name:
                                        type: string
                                        description: The display name.
                                      obfuscatedId:
                                        type: string
                                        description: An opaque identifier that can be used to request metadata for a Person.
                                      relatedDocuments:
                                        type: array
                                        description: A list of documents related to this person.
                                        items:
                                          properties:
                                            relation:
                                              type: string
                                              description: How this document relates to the including entity.
                                              enum:
                                                - ATTACHMENT
                                                - CANONICAL
                                                - CASE
                                                - CONTACT
                                                - CONVERSATION_MESSAGES
                                                - EXPERT
                                                - FROM
                                                - HIGHLIGHT
                                                - OPPORTUNITY
                                                - RECENT
                                                - SOURCE
                                                - TICKET
                                                - TRANSCRIPT
                                                - WITH
                                              x-enumDescriptions:
                                                CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                            associatedEntityId:
                                              type: string
                                              description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                            querySuggestion:
                                              required:
                                                - query
                                              example:
                                                query: app:github type:pull author:mortimer
                                                label: Mortimer's PRs
                                                datasource: github
                                              properties:
                                                missingTerm:
                                                  type: string
                                                  description: A query term missing from the original query on which this suggestion is based.
                                                query:
                                                  type: string
                                                  description: The query being suggested (e.g. enforcing the missing term from the original query).
                                                searchProviderInfo:
                                                  example:
                                                    name: Google
                                                    logo: https://app.glean.com/images/feather/globe.svg
                                                    searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                                  properties:
                                                    name:
                                                      type: string
                                                      description: Name of the search provider.
                                                    logoUrl:
                                                      type: string
                                                      description: URL to the provider's logo.
                                                    searchLinkUrlTemplate:
                                                      type: string
                                                      description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                                  type: object
                                                label:
                                                  type: string
                                                  description: A user-facing description to display for the suggestion.
                                                datasource:
                                                  type: string
                                                  description: The datasource associated with the suggestion.
                                                requestOptions:
                                                  required:
                                                    - facetBucketSize
                                                  example:
                                                    datasourceFilter: JIRA
                                                    datasourcesFilter:
                                                      - JIRA
                                                    queryOverridesFacetFilters: true
                                                    facetFilters:
                                                      - fieldName: fieldName
                                                        values:
                                                          - fieldValues
                                                          - fieldValues
                                                      - fieldName: fieldName
                                                        values:
                                                          - fieldValues
                                                          - fieldValues
                                                  properties:
                                                    datasourceFilter:
                                                      type: string
                                                      description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                                    datasourcesFilter:
                                                      type: array
                                                      description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                                      items:
                                                        type: string
                                                    queryOverridesFacetFilters:
                                                      type: boolean
                                                      description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                                    facetFilters:
                                                      type: array
                                                      description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                      items:
                                                        type: object
                                                        description: FacetFilter object
                                                    facetFilterSets:
                                                      type: array
                                                      description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                                      items:
                                                        description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                        properties:
                                                          filters:
                                                            type: array
                                                            items:
                                                              type: object
                                                              description: FacetFilter object
                                                        type: object
                                                    facetBucketFilter:
                                                      properties:
                                                        facet:
                                                          type: string
                                                          description: The facet whose buckets should be filtered.
                                                        prefix:
                                                          type: string
                                                          description: The per-term prefix that facet buckets should be filtered on.
                                                      type: object
                                                    facetBucketSize:
                                                      type: integer
                                                      description: The maximum number of FacetBuckets to return in each FacetResult.
                                                    defaultFacets:
                                                      type: array
                                                      description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                                      items:
                                                        type: string
                                                    authTokens:
                                                      type: array
                                                      description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                                      items:
                                                        required:
                                                          - accessToken
                                                          - datasource
                                                        example:
                                                          accessToken: 123abc
                                                          datasource: gmail
                                                          scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                          tokenType: Bearer
                                                          authUser: '1'
                                                        properties:
                                                          accessToken:
                                                            type: string
                                                          datasource:
                                                            type: string
                                                          scope:
                                                            type: string
                                                          tokenType:
                                                            type: string
                                                          authUser:
                                                            description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                            type: string
                                                          expiration:
                                                            description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                            type: integer
                                                            format: int64
                                                        type: object
                                                    fetchAllDatasourceCounts:
                                                      type: boolean
                                                      description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                                    responseHints:
                                                      type: array
                                                      description: Array of hints containing which fields should be populated in the response.
                                                      items:
                                                        type: string
                                                        description: Hints for the response content.
                                                        x-enumDescriptions:
                                                          ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                          FACET_RESULTS: Return only facet results.
                                                          QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                          RESULTS: Return search result documents.
                                                          SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                        enum:
                                                          - ALL_RESULT_COUNTS
                                                          - FACET_RESULTS
                                                          - QUERY_METADATA
                                                          - RESULTS
                                                          - SPELLCHECK_METADATA
                                                    timezoneOffset:
                                                      type: integer
                                                      description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                                    disableSpellcheck:
                                                      type: boolean
                                                      description: Whether or not to disable spellcheck.
                                                    disableQueryAutocorrect:
                                                      type: boolean
                                                      description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                                    returnLlmContentOverSnippets:
                                                      type: boolean
                                                      description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                                    inclusions:
                                                      type: object
                                                      description: RestrictionFilters object
                                                    exclusions:
                                                      type: object
                                                      description: RestrictionFilters object
                                                  type: object
                                                ranges:
                                                  type: array
                                                  description: The bolded ranges within the query of the QuerySuggestion.
                                                  items:
                                                    required:
                                                      - startIndex
                                                    description: A subsection of a given string to which some special formatting should be applied.
                                                    properties:
                                                      startIndex:
                                                        type: integer
                                                        description: The inclusive start index of the range.
                                                      endIndex:
                                                        type: integer
                                                        description: The exclusive end index of the range.
                                                      type:
                                                        type: string
                                                        enum:
                                                          - BOLD
                                                          - CITATION
                                                          - HIGHLIGHT
                                                          - LINK
                                                      url:
                                                        type: string
                                                        description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                                      document:
                                                        type: object
                                                        description: Document object
                                                    type: object
                                                inputDetails:
                                                  example:
                                                    hasCopyPaste: true
                                                  properties:
                                                    hasCopyPaste:
                                                      type: boolean
                                                      description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                                  type: object
                                              type: object
                                            documents:
                                              type: array
                                              description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                              deprecated: true
                                              items:
                                                type: object
                                                description: Document object
                                            results:
                                              type: array
                                              description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                              items:
                                                type: object
                                                description: SearchResult object (circular reference)
                                          type: object
                                      metadata:
                                        type: object
                                        description: PersonMetadata object
                                    type: object
                                  group:
                                    required:
                                      - type
                                      - id
                                    properties:
                                      type:
                                        type: string
                                        description: The type of user group
                                        enum:
                                          - DEPARTMENT
                                          - ALL
                                          - TEAM
                                          - JOB_TITLE
                                          - ROLE_TYPE
                                          - LOCATION
                                          - REGION
                                          - EXTERNAL_GROUP
                                      id:
                                        type: string
                                        description: A unique identifier for the group. May be the same as name.
                                      name:
                                        type: string
                                        description: Name of the group.
                                    type: object
                                  role:
                                    type: string
                                    description: A user's role with respect to a specific document.
                                    enum:
                                      - OWNER
                                      - VIEWER
                                      - ANSWER_MODERATOR
                                      - EDITOR
                                      - VERIFIER
                                type: object
                            removedRoles:
                              type: array
                              description: A list of removed user roles for the Collection.
                              items:
                                required:
                                  - role
                                properties:
                                  sourceDocumentSpec:
                                    type: object
                                    description: DocumentSpec object
                                  person:
                                    required:
                                      - name
                                      - obfuscatedId
                                    example:
                                      name: George Clooney
                                      obfuscatedId: abc123
                                    properties:
                                      name:
                                        type: string
                                        description: The display name.
                                      obfuscatedId:
                                        type: string
                                        description: An opaque identifier that can be used to request metadata for a Person.
                                      relatedDocuments:
                                        type: array
                                        description: A list of documents related to this person.
                                        items:
                                          properties:
                                            relation:
                                              type: string
                                              description: How this document relates to the including entity.
                                              enum:
                                                - ATTACHMENT
                                                - CANONICAL
                                                - CASE
                                                - CONTACT
                                                - CONVERSATION_MESSAGES
                                                - EXPERT
                                                - FROM
                                                - HIGHLIGHT
                                                - OPPORTUNITY
                                                - RECENT
                                                - SOURCE
                                                - TICKET
                                                - TRANSCRIPT
                                                - WITH
                                              x-enumDescriptions:
                                                CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                            associatedEntityId:
                                              type: string
                                              description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                            querySuggestion:
                                              required:
                                                - query
                                              example:
                                                query: app:github type:pull author:mortimer
                                                label: Mortimer's PRs
                                                datasource: github
                                              properties:
                                                missingTerm:
                                                  type: string
                                                  description: A query term missing from the original query on which this suggestion is based.
                                                query:
                                                  type: string
                                                  description: The query being suggested (e.g. enforcing the missing term from the original query).
                                                searchProviderInfo:
                                                  example:
                                                    name: Google
                                                    logo: https://app.glean.com/images/feather/globe.svg
                                                    searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                                  properties:
                                                    name:
                                                      type: string
                                                      description: Name of the search provider.
                                                    logoUrl:
                                                      type: string
                                                      description: URL to the provider's logo.
                                                    searchLinkUrlTemplate:
                                                      type: string
                                                      description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                                  type: object
                                                label:
                                                  type: string
                                                  description: A user-facing description to display for the suggestion.
                                                datasource:
                                                  type: string
                                                  description: The datasource associated with the suggestion.
                                                requestOptions:
                                                  required:
                                                    - facetBucketSize
                                                  example:
                                                    datasourceFilter: JIRA
                                                    datasourcesFilter:
                                                      - JIRA
                                                    queryOverridesFacetFilters: true
                                                    facetFilters:
                                                      - fieldName: fieldName
                                                        values:
                                                          - fieldValues
                                                          - fieldValues
                                                      - fieldName: fieldName
                                                        values:
                                                          - fieldValues
                                                          - fieldValues
                                                  properties:
                                                    datasourceFilter:
                                                      type: string
                                                      description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                                    datasourcesFilter:
                                                      type: array
                                                      description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                                      items:
                                                        type: string
                                                    queryOverridesFacetFilters:
                                                      type: boolean
                                                      description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                                    facetFilters:
                                                      type: array
                                                      description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                      items:
                                                        type: object
                                                        description: FacetFilter object
                                                    facetFilterSets:
                                                      type: array
                                                      description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                                      items:
                                                        description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                        properties:
                                                          filters:
                                                            type: array
                                                            items:
                                                              type: object
                                                              description: FacetFilter object
                                                        type: object
                                                    facetBucketFilter:
                                                      properties:
                                                        facet:
                                                          type: string
                                                          description: The facet whose buckets should be filtered.
                                                        prefix:
                                                          type: string
                                                          description: The per-term prefix that facet buckets should be filtered on.
                                                      type: object
                                                    facetBucketSize:
                                                      type: integer
                                                      description: The maximum number of FacetBuckets to return in each FacetResult.
                                                    defaultFacets:
                                                      type: array
                                                      description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                                      items:
                                                        type: string
                                                    authTokens:
                                                      type: array
                                                      description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                                      items:
                                                        required:
                                                          - accessToken
                                                          - datasource
                                                        example:
                                                          accessToken: 123abc
                                                          datasource: gmail
                                                          scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                          tokenType: Bearer
                                                          authUser: '1'
                                                        properties:
                                                          accessToken:
                                                            type: string
                                                          datasource:
                                                            type: string
                                                          scope:
                                                            type: string
                                                          tokenType:
                                                            type: string
                                                          authUser:
                                                            description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                            type: string
                                                          expiration:
                                                            description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                            type: integer
                                                            format: int64
                                                        type: object
                                                    fetchAllDatasourceCounts:
                                                      type: boolean
                                                      description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                                    responseHints:
                                                      type: array
                                                      description: Array of hints containing which fields should be populated in the response.
                                                      items:
                                                        type: string
                                                        description: Hints for the response content.
                                                        x-enumDescriptions:
                                                          ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                          FACET_RESULTS: Return only facet results.
                                                          QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                          RESULTS: Return search result documents.
                                                          SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                        enum:
                                                          - ALL_RESULT_COUNTS
                                                          - FACET_RESULTS
                                                          - QUERY_METADATA
                                                          - RESULTS
                                                          - SPELLCHECK_METADATA
                                                    timezoneOffset:
                                                      type: integer
                                                      description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                                    disableSpellcheck:
                                                      type: boolean
                                                      description: Whether or not to disable spellcheck.
                                                    disableQueryAutocorrect:
                                                      type: boolean
                                                      description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                                    returnLlmContentOverSnippets:
                                                      type: boolean
                                                      description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                                    inclusions:
                                                      type: object
                                                      description: RestrictionFilters object
                                                    exclusions:
                                                      type: object
                                                      description: RestrictionFilters object
                                                  type: object
                                                ranges:
                                                  type: array
                                                  description: The bolded ranges within the query of the QuerySuggestion.
                                                  items:
                                                    required:
                                                      - startIndex
                                                    description: A subsection of a given string to which some special formatting should be applied.
                                                    properties:
                                                      startIndex:
                                                        type: integer
                                                        description: The inclusive start index of the range.
                                                      endIndex:
                                                        type: integer
                                                        description: The exclusive end index of the range.
                                                      type:
                                                        type: string
                                                        enum:
                                                          - BOLD
                                                          - CITATION
                                                          - HIGHLIGHT
                                                          - LINK
                                                      url:
                                                        type: string
                                                        description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                                      document:
                                                        type: object
                                                        description: Document object
                                                    type: object
                                                inputDetails:
                                                  example:
                                                    hasCopyPaste: true
                                                  properties:
                                                    hasCopyPaste:
                                                      type: boolean
                                                      description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                                  type: object
                                              type: object
                                            documents:
                                              type: array
                                              description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                              deprecated: true
                                              items:
                                                type: object
                                                description: Document object
                                            results:
                                              type: array
                                              description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                              items:
                                                type: object
                                                description: SearchResult object (circular reference)
                                          type: object
                                      metadata:
                                        type: object
                                        description: PersonMetadata object
                                    type: object
                                  group:
                                    required:
                                      - type
                                      - id
                                    properties:
                                      type:
                                        type: string
                                        description: The type of user group
                                        enum:
                                          - DEPARTMENT
                                          - ALL
                                          - TEAM
                                          - JOB_TITLE
                                          - ROLE_TYPE
                                          - LOCATION
                                          - REGION
                                          - EXTERNAL_GROUP
                                      id:
                                        type: string
                                        description: A unique identifier for the group. May be the same as name.
                                      name:
                                        type: string
                                        description: Name of the group.
                                    type: object
                                  role:
                                    type: string
                                    description: A user's role with respect to a specific document.
                                    enum:
                                      - OWNER
                                      - VIEWER
                                      - ANSWER_MODERATOR
                                      - EDITOR
                                      - VERIFIER
                                type: object
                            audienceFilters:
                              type: array
                              description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                              items:
                                type: object
                                description: FacetFilter object
                            icon:
                              type: string
                              description: The emoji icon of this Collection.
                            adminLocked:
                              type: boolean
                              description: Indicates whether edits are allowed for everyone or only admins.
                            parentId:
                              type: integer
                              description: The parent of this Collection, or 0 if it's a top-level Collection.
                            thumbnail:
                              properties:
                                photoId:
                                  type: string
                                  description: Photo id if the thumbnail is from splash.
                                url:
                                  type: string
                                  description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                              type: object
                            allowedDatasource:
                              type: string
                              description: The datasource type this Collection can hold.
                            permissions:
                              type: object
                              description: Flattened ObjectPermissions
                              properties:
                                write:
                                  type: object
                                  description: Describes the write permissions levels that a user has for a specific feature
                                  properties:
                                    scopeType:
                                      type: string
                                      description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                      enum:
                                        - GLOBAL
                                        - OWN
                                      properties: {}
                                    create:
                                      type: boolean
                                      description: True if user has create permission for this feature and scope
                                    update:
                                      type: boolean
                                      description: True if user has update permission for this feature and scope
                                    delete:
                                      type: boolean
                                      description: True if user has delete permission for this feature and scope
                            id:
                              type: integer
                              description: The unique ID of the Collection.
                            createTime:
                              type: string
                              format: date-time
                            updateTime:
                              type: string
                              format: date-time
                            creator:
                              required:
                                - name
                                - obfuscatedId
                              example:
                                name: George Clooney
                                obfuscatedId: abc123
                              properties:
                                name:
                                  type: string
                                  description: The display name.
                                obfuscatedId:
                                  type: string
                                  description: An opaque identifier that can be used to request metadata for a Person.
                                relatedDocuments:
                                  type: array
                                  description: A list of documents related to this person.
                                  items:
                                    properties:
                                      relation:
                                        type: string
                                        description: How this document relates to the including entity.
                                        enum:
                                          - ATTACHMENT
                                          - CANONICAL
                                          - CASE
                                          - CONTACT
                                          - CONVERSATION_MESSAGES
                                          - EXPERT
                                          - FROM
                                          - HIGHLIGHT
                                          - OPPORTUNITY
                                          - RECENT
                                          - SOURCE
                                          - TICKET
                                          - TRANSCRIPT
                                          - WITH
                                        x-enumDescriptions:
                                          CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                      associatedEntityId:
                                        type: string
                                        description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                      querySuggestion:
                                        required:
                                          - query
                                        example:
                                          query: app:github type:pull author:mortimer
                                          label: Mortimer's PRs
                                          datasource: github
                                        properties:
                                          missingTerm:
                                            type: string
                                            description: A query term missing from the original query on which this suggestion is based.
                                          query:
                                            type: string
                                            description: The query being suggested (e.g. enforcing the missing term from the original query).
                                          searchProviderInfo:
                                            example:
                                              name: Google
                                              logo: https://app.glean.com/images/feather/globe.svg
                                              searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                            properties:
                                              name:
                                                type: string
                                                description: Name of the search provider.
                                              logoUrl:
                                                type: string
                                                description: URL to the provider's logo.
                                              searchLinkUrlTemplate:
                                                type: string
                                                description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                            type: object
                                          label:
                                            type: string
                                            description: A user-facing description to display for the suggestion.
                                          datasource:
                                            type: string
                                            description: The datasource associated with the suggestion.
                                          requestOptions:
                                            required:
                                              - facetBucketSize
                                            example:
                                              datasourceFilter: JIRA
                                              datasourcesFilter:
                                                - JIRA
                                              queryOverridesFacetFilters: true
                                              facetFilters:
                                                - fieldName: fieldName
                                                  values:
                                                    - fieldValues
                                                    - fieldValues
                                                - fieldName: fieldName
                                                  values:
                                                    - fieldValues
                                                    - fieldValues
                                            properties:
                                              datasourceFilter:
                                                type: string
                                                description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                              datasourcesFilter:
                                                type: array
                                                description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                                items:
                                                  type: string
                                              queryOverridesFacetFilters:
                                                type: boolean
                                                description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                              facetFilters:
                                                type: array
                                                description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                items:
                                                  type: object
                                                  description: FacetFilter object
                                              facetFilterSets:
                                                type: array
                                                description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                                items:
                                                  description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                  properties:
                                                    filters:
                                                      type: array
                                                      items:
                                                        type: object
                                                        description: FacetFilter object
                                                  type: object
                                              facetBucketFilter:
                                                properties:
                                                  facet:
                                                    type: string
                                                    description: The facet whose buckets should be filtered.
                                                  prefix:
                                                    type: string
                                                    description: The per-term prefix that facet buckets should be filtered on.
                                                type: object
                                              facetBucketSize:
                                                type: integer
                                                description: The maximum number of FacetBuckets to return in each FacetResult.
                                              defaultFacets:
                                                type: array
                                                description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                                items:
                                                  type: string
                                              authTokens:
                                                type: array
                                                description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                                items:
                                                  required:
                                                    - accessToken
                                                    - datasource
                                                  example:
                                                    accessToken: 123abc
                                                    datasource: gmail
                                                    scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                    tokenType: Bearer
                                                    authUser: '1'
                                                  properties:
                                                    accessToken:
                                                      type: string
                                                    datasource:
                                                      type: string
                                                    scope:
                                                      type: string
                                                    tokenType:
                                                      type: string
                                                    authUser:
                                                      description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                      type: string
                                                    expiration:
                                                      description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                      type: integer
                                                      format: int64
                                                  type: object
                                              fetchAllDatasourceCounts:
                                                type: boolean
                                                description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                              responseHints:
                                                type: array
                                                description: Array of hints containing which fields should be populated in the response.
                                                items:
                                                  type: string
                                                  description: Hints for the response content.
                                                  x-enumDescriptions:
                                                    ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                    FACET_RESULTS: Return only facet results.
                                                    QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                    RESULTS: Return search result documents.
                                                    SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                  enum:
                                                    - ALL_RESULT_COUNTS
                                                    - FACET_RESULTS
                                                    - QUERY_METADATA
                                                    - RESULTS
                                                    - SPELLCHECK_METADATA
                                              timezoneOffset:
                                                type: integer
                                                description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                              disableSpellcheck:
                                                type: boolean
                                                description: Whether or not to disable spellcheck.
                                              disableQueryAutocorrect:
                                                type: boolean
                                                description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                              returnLlmContentOverSnippets:
                                                type: boolean
                                                description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                              inclusions:
                                                type: object
                                                description: RestrictionFilters object
                                              exclusions:
                                                type: object
                                                description: RestrictionFilters object
                                            type: object
                                          ranges:
                                            type: array
                                            description: The bolded ranges within the query of the QuerySuggestion.
                                            items:
                                              required:
                                                - startIndex
                                              description: A subsection of a given string to which some special formatting should be applied.
                                              properties:
                                                startIndex:
                                                  type: integer
                                                  description: The inclusive start index of the range.
                                                endIndex:
                                                  type: integer
                                                  description: The exclusive end index of the range.
                                                type:
                                                  type: string
                                                  enum:
                                                    - BOLD
                                                    - CITATION
                                                    - HIGHLIGHT
                                                    - LINK
                                                url:
                                                  type: string
                                                  description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                                document:
                                                  type: object
                                                  description: Document object
                                              type: object
                                          inputDetails:
                                            example:
                                              hasCopyPaste: true
                                            properties:
                                              hasCopyPaste:
                                                type: boolean
                                                description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                            type: object
                                        type: object
                                      documents:
                                        type: array
                                        description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                        deprecated: true
                                        items:
                                          type: object
                                          description: Document object
                                      results:
                                        type: array
                                        description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                        items:
                                          type: object
                                          description: SearchResult object
                                    type: object
                                metadata:
                                  type: object
                                  description: PersonMetadata object
                              type: object
                            updatedBy:
                              required:
                                - name
                                - obfuscatedId
                              example:
                                name: George Clooney
                                obfuscatedId: abc123
                              properties:
                                name:
                                  type: string
                                  description: The display name.
                                obfuscatedId:
                                  type: string
                                  description: An opaque identifier that can be used to request metadata for a Person.
                                relatedDocuments:
                                  type: array
                                  description: A list of documents related to this person.
                                  items:
                                    properties:
                                      relation:
                                        type: string
                                        description: How this document relates to the including entity.
                                        enum:
                                          - ATTACHMENT
                                          - CANONICAL
                                          - CASE
                                          - CONTACT
                                          - CONVERSATION_MESSAGES
                                          - EXPERT
                                          - FROM
                                          - HIGHLIGHT
                                          - OPPORTUNITY
                                          - RECENT
                                          - SOURCE
                                          - TICKET
                                          - TRANSCRIPT
                                          - WITH
                                        x-enumDescriptions:
                                          CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                      associatedEntityId:
                                        type: string
                                        description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                      querySuggestion:
                                        required:
                                          - query
                                        example:
                                          query: app:github type:pull author:mortimer
                                          label: Mortimer's PRs
                                          datasource: github
                                        properties:
                                          missingTerm:
                                            type: string
                                            description: A query term missing from the original query on which this suggestion is based.
                                          query:
                                            type: string
                                            description: The query being suggested (e.g. enforcing the missing term from the original query).
                                          searchProviderInfo:
                                            example:
                                              name: Google
                                              logo: https://app.glean.com/images/feather/globe.svg
                                              searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                            properties:
                                              name:
                                                type: string
                                                description: Name of the search provider.
                                              logoUrl:
                                                type: string
                                                description: URL to the provider's logo.
                                              searchLinkUrlTemplate:
                                                type: string
                                                description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                            type: object
                                          label:
                                            type: string
                                            description: A user-facing description to display for the suggestion.
                                          datasource:
                                            type: string
                                            description: The datasource associated with the suggestion.
                                          requestOptions:
                                            required:
                                              - facetBucketSize
                                            example:
                                              datasourceFilter: JIRA
                                              datasourcesFilter:
                                                - JIRA
                                              queryOverridesFacetFilters: true
                                              facetFilters:
                                                - fieldName: fieldName
                                                  values:
                                                    - fieldValues
                                                    - fieldValues
                                                - fieldName: fieldName
                                                  values:
                                                    - fieldValues
                                                    - fieldValues
                                            properties:
                                              datasourceFilter:
                                                type: string
                                                description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                              datasourcesFilter:
                                                type: array
                                                description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                                items:
                                                  type: string
                                              queryOverridesFacetFilters:
                                                type: boolean
                                                description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                              facetFilters:
                                                type: array
                                                description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                items:
                                                  type: object
                                                  description: FacetFilter object
                                              facetFilterSets:
                                                type: array
                                                description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                                items:
                                                  description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                  properties:
                                                    filters:
                                                      type: array
                                                      items:
                                                        type: object
                                                        description: FacetFilter object
                                                  type: object
                                              facetBucketFilter:
                                                properties:
                                                  facet:
                                                    type: string
                                                    description: The facet whose buckets should be filtered.
                                                  prefix:
                                                    type: string
                                                    description: The per-term prefix that facet buckets should be filtered on.
                                                type: object
                                              facetBucketSize:
                                                type: integer
                                                description: The maximum number of FacetBuckets to return in each FacetResult.
                                              defaultFacets:
                                                type: array
                                                description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                                items:
                                                  type: string
                                              authTokens:
                                                type: array
                                                description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                                items:
                                                  required:
                                                    - accessToken
                                                    - datasource
                                                  example:
                                                    accessToken: 123abc
                                                    datasource: gmail
                                                    scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                    tokenType: Bearer
                                                    authUser: '1'
                                                  properties:
                                                    accessToken:
                                                      type: string
                                                    datasource:
                                                      type: string
                                                    scope:
                                                      type: string
                                                    tokenType:
                                                      type: string
                                                    authUser:
                                                      description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                      type: string
                                                    expiration:
                                                      description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                      type: integer
                                                      format: int64
                                                  type: object
                                              fetchAllDatasourceCounts:
                                                type: boolean
                                                description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                              responseHints:
                                                type: array
                                                description: Array of hints containing which fields should be populated in the response.
                                                items:
                                                  type: string
                                                  description: Hints for the response content.
                                                  x-enumDescriptions:
                                                    ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                    FACET_RESULTS: Return only facet results.
                                                    QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                    RESULTS: Return search result documents.
                                                    SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                  enum:
                                                    - ALL_RESULT_COUNTS
                                                    - FACET_RESULTS
                                                    - QUERY_METADATA
                                                    - RESULTS
                                                    - SPELLCHECK_METADATA
                                              timezoneOffset:
                                                type: integer
                                                description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                              disableSpellcheck:
                                                type: boolean
                                                description: Whether or not to disable spellcheck.
                                              disableQueryAutocorrect:
                                                type: boolean
                                                description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                              returnLlmContentOverSnippets:
                                                type: boolean
                                                description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                              inclusions:
                                                type: object
                                                description: RestrictionFilters object
                                              exclusions:
                                                type: object
                                                description: RestrictionFilters object
                                            type: object
                                          ranges:
                                            type: array
                                            description: The bolded ranges within the query of the QuerySuggestion.
                                            items:
                                              required:
                                                - startIndex
                                              description: A subsection of a given string to which some special formatting should be applied.
                                              properties:
                                                startIndex:
                                                  type: integer
                                                  description: The inclusive start index of the range.
                                                endIndex:
                                                  type: integer
                                                  description: The exclusive end index of the range.
                                                type:
                                                  type: string
                                                  enum:
                                                    - BOLD
                                                    - CITATION
                                                    - HIGHLIGHT
                                                    - LINK
                                                url:
                                                  type: string
                                                  description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                                document:
                                                  type: object
                                                  description: Document object
                                              type: object
                                          inputDetails:
                                            example:
                                              hasCopyPaste: true
                                            properties:
                                              hasCopyPaste:
                                                type: boolean
                                                description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                            type: object
                                        type: object
                                      documents:
                                        type: array
                                        description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                        deprecated: true
                                        items:
                                          type: object
                                          description: Document object
                                      results:
                                        type: array
                                        description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                        items:
                                          type: object
                                          description: SearchResult object
                                    type: object
                                metadata:
                                  type: object
                                  description: PersonMetadata object
                              type: object
                            itemCount:
                              type: integer
                              description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                            childCount:
                              type: integer
                              description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                            items:
                              type: array
                              description: The items in this Collection.
                              items:
                                type: object
                                description: CollectionItem object
                            pinMetadata:
                              required:
                                - pinnedCategories
                                - eligibleCategoriesForPinning
                              properties:
                                existingPins:
                                  type: array
                                  description: List of targets this Collection is pinned to.
                                  items:
                                    required:
                                      - category
                                    properties:
                                      category:
                                        type: string
                                        description: Categories a Collection can be pinned to.
                                        enum:
                                          - COMPANY_RESOURCE
                                          - DEPARTMENT_RESOURCE
                                          - TEAM_RESOURCE
                                      value:
                                        type: string
                                        description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                      target:
                                        type: string
                                        description: What targets can a Collection be pinned to.
                                        enum:
                                          - RESOURCE_CARD
                                          - TEAM_PROFILE_PAGE
                                    type: object
                                eligiblePins:
                                  type: array
                                  description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                                  items:
                                    required:
                                      - id
                                      - target
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the Collection.
                                      target:
                                        required:
                                          - category
                                        properties:
                                          category:
                                            type: string
                                            description: Categories a Collection can be pinned to.
                                            enum:
                                              - COMPANY_RESOURCE
                                              - DEPARTMENT_RESOURCE
                                              - TEAM_RESOURCE
                                          value:
                                            type: string
                                            description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                          target:
                                            type: string
                                            description: What targets can a Collection be pinned to.
                                            enum:
                                              - RESOURCE_CARD
                                              - TEAM_PROFILE_PAGE
                                        type: object
                                    type: object
                              type: object
                            shortcuts:
                              type: array
                              description: The names of the shortcuts (Go Links) that point to this Collection.
                              items:
                                type: string
                            children:
                              type: array
                              description: The children Collections of this Collection.
                              items:
                                type: object
                                description: Collection object
                            roles:
                              type: array
                              description: A list of user roles for the Collection.
                              items:
                                required:
                                  - role
                                properties:
                                  sourceDocumentSpec:
                                    type: object
                                    description: DocumentSpec object
                                  person:
                                    type: object
                                    description: Person object
                                  group:
                                    required:
                                      - type
                                      - id
                                    properties:
                                      type:
                                        type: string
                                        description: The type of user group
                                        enum:
                                          - DEPARTMENT
                                          - ALL
                                          - TEAM
                                          - JOB_TITLE
                                          - ROLE_TYPE
                                          - LOCATION
                                          - REGION
                                          - EXTERNAL_GROUP
                                      id:
                                        type: string
                                        description: A unique identifier for the group. May be the same as name.
                                      name:
                                        type: string
                                        description: Name of the group.
                                    type: object
                                  role:
                                    type: string
                                    description: A user's role with respect to a specific document.
                                    enum:
                                      - OWNER
                                      - VIEWER
                                      - ANSWER_MODERATOR
                                      - EDITOR
                                      - VERIFIER
                                type: object
                        answerBoard:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The unique name of the Collection.
                            description:
                              type: string
                              description: A brief summary of the Collection's contents.
                            addedRoles:
                              type: array
                              description: A list of added user roles for the Collection.
                              items:
                                required:
                                  - role
                                properties:
                                  sourceDocumentSpec:
                                    type: object
                                    description: DocumentSpec object
                                  person:
                                    type: object
                                    description: Person object
                                  group:
                                    required:
                                      - type
                                      - id
                                    properties:
                                      type:
                                        type: string
                                        description: The type of user group
                                        enum:
                                          - DEPARTMENT
                                          - ALL
                                          - TEAM
                                          - JOB_TITLE
                                          - ROLE_TYPE
                                          - LOCATION
                                          - REGION
                                          - EXTERNAL_GROUP
                                      id:
                                        type: string
                                        description: A unique identifier for the group. May be the same as name.
                                      name:
                                        type: string
                                        description: Name of the group.
                                    type: object
                                  role:
                                    type: string
                                    description: A user's role with respect to a specific document.
                                    enum:
                                      - OWNER
                                      - VIEWER
                                      - ANSWER_MODERATOR
                                      - EDITOR
                                      - VERIFIER
                                type: object
                            removedRoles:
                              type: array
                              description: A list of removed user roles for the Collection.
                              items:
                                required:
                                  - role
                                properties:
                                  sourceDocumentSpec:
                                    type: object
                                    description: DocumentSpec object
                                  person:
                                    type: object
                                    description: Person object
                                  group:
                                    required:
                                      - type
                                      - id
                                    properties:
                                      type:
                                        type: string
                                        description: The type of user group
                                        enum:
                                          - DEPARTMENT
                                          - ALL
                                          - TEAM
                                          - JOB_TITLE
                                          - ROLE_TYPE
                                          - LOCATION
                                          - REGION
                                          - EXTERNAL_GROUP
                                      id:
                                        type: string
                                        description: A unique identifier for the group. May be the same as name.
                                      name:
                                        type: string
                                        description: Name of the group.
                                    type: object
                                  role:
                                    type: string
                                    description: A user's role with respect to a specific document.
                                    enum:
                                      - OWNER
                                      - VIEWER
                                      - ANSWER_MODERATOR
                                      - EDITOR
                                      - VERIFIER
                                type: object
                            audienceFilters:
                              type: array
                              description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                              items:
                                type: object
                                description: FacetFilter object
                            permissions:
                              properties:
                                write:
                                  description: Describes the write permissions levels that a user has for a specific feature
                                  properties:
                                    scopeType:
                                      type: string
                                      description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                      enum:
                                        - GLOBAL
                                        - OWN
                                    create:
                                      type: boolean
                                      description: True if user has create permission for this feature and scope
                                    update:
                                      type: boolean
                                      description: True if user has update permission for this feature and scope
                                    delete:
                                      type: boolean
                                      description: True if user has delete permission for this feature and scope
                                  type: object
                              type: object
                            id:
                              type: integer
                              description: The unique ID of the Answer Board.
                            createTime:
                              type: string
                              format: date-time
                            updateTime:
                              type: string
                              format: date-time
                            creator:
                              type: object
                              description: Person object
                            updatedBy:
                              type: object
                              description: Person object
                            itemCount:
                              type: integer
                              description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                            roles:
                              type: array
                              description: A list of user roles for the Answer Board.
                              items:
                                required:
                                  - role
                                properties:
                                  sourceDocumentSpec:
                                    type: object
                                    description: DocumentSpec object
                                  person:
                                    type: object
                                    description: Person object
                                  group:
                                    required:
                                      - type
                                      - id
                                    properties:
                                      type:
                                        type: string
                                        description: The type of user group
                                        enum:
                                          - DEPARTMENT
                                          - ALL
                                          - TEAM
                                          - JOB_TITLE
                                          - ROLE_TYPE
                                          - LOCATION
                                          - REGION
                                          - EXTERNAL_GROUP
                                      id:
                                        type: string
                                        description: A unique identifier for the group. May be the same as name.
                                      name:
                                        type: string
                                        description: Name of the group.
                                    type: object
                                  role:
                                    type: string
                                    description: A user's role with respect to a specific document.
                                    enum:
                                      - OWNER
                                      - VIEWER
                                      - ANSWER_MODERATOR
                                      - EDITOR
                                      - VERIFIER
                                type: object
                          required:
                            - name
                            - id
                            - description
                        code:
                          example:
                            repoName: scio
                            fileName: README.md
                            matches:
                              - lineNumber: 1
                                content: Welcome to the beginning
                                ranges: []
                              - lineNumber: 2
                                content: Second line of the file
                                ranges: []
                              - lineNumber: 3
                                content: hello world hello world
                                ranges:
                                  - startindex: 0
                                    endIndex: 5
                                  - startIndex: 12
                                    endIndex: 17
                          properties:
                            repoName:
                              type: string
                            fileName:
                              type: string
                            fileUrl:
                              type: string
                            lines:
                              type: array
                              items:
                                properties:
                                  lineNumber:
                                    type: integer
                                  content:
                                    type: string
                                  ranges:
                                    type: array
                                    description: Index ranges depicting matched sections of the line
                                    items:
                                      type: object
                                      description: TextRange object
                                type: object
                            isLastMatch:
                              type: boolean
                              description: Last file match for a repo
                          type: object
                        shortcut:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The opaque id of the user generated content.
                            inputAlias:
                              type: string
                              description: Link text following go/ prefix as entered by the user.
                            destinationUrl:
                              type: string
                              description: Destination URL for the shortcut.
                            destinationDocumentId:
                              type: string
                              description: Glean Document ID for the URL, if known.
                            description:
                              type: string
                              description: A short, plain text blurb to help people understand the intent of the shortcut.
                            unlisted:
                              type: boolean
                              description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                            urlTemplate:
                              type: string
                              description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                            addedRoles:
                              type: array
                              description: A list of user roles added for the Shortcut.
                              items:
                                required:
                                  - role
                                properties:
                                  sourceDocumentSpec:
                                    type: object
                                    description: DocumentSpec object
                                  person:
                                    type: object
                                    description: Person object
                                  group:
                                    required:
                                      - type
                                      - id
                                    properties:
                                      type:
                                        type: string
                                        description: The type of user group
                                        enum:
                                          - DEPARTMENT
                                          - ALL
                                          - TEAM
                                          - JOB_TITLE
                                          - ROLE_TYPE
                                          - LOCATION
                                          - REGION
                                          - EXTERNAL_GROUP
                                      id:
                                        type: string
                                        description: A unique identifier for the group. May be the same as name.
                                      name:
                                        type: string
                                        description: Name of the group.
                                    type: object
                                  role:
                                    type: string
                                    description: A user's role with respect to a specific document.
                                    enum:
                                      - OWNER
                                      - VIEWER
                                      - ANSWER_MODERATOR
                                      - EDITOR
                                      - VERIFIER
                                type: object
                            removedRoles:
                              type: array
                              description: A list of user roles removed for the Shortcut.
                              items:
                                required:
                                  - role
                                properties:
                                  sourceDocumentSpec:
                                    type: object
                                    description: DocumentSpec object
                                  person:
                                    type: object
                                    description: Person object
                                  group:
                                    required:
                                      - type
                                      - id
                                    properties:
                                      type:
                                        type: string
                                        description: The type of user group
                                        enum:
                                          - DEPARTMENT
                                          - ALL
                                          - TEAM
                                          - JOB_TITLE
                                          - ROLE_TYPE
                                          - LOCATION
                                          - REGION
                                          - EXTERNAL_GROUP
                                      id:
                                        type: string
                                        description: A unique identifier for the group. May be the same as name.
                                      name:
                                        type: string
                                        description: Name of the group.
                                    type: object
                                  role:
                                    type: string
                                    description: A user's role with respect to a specific document.
                                    enum:
                                      - OWNER
                                      - VIEWER
                                      - ANSWER_MODERATOR
                                      - EDITOR
                                      - VERIFIER
                                type: object
                            permissions:
                              properties:
                                write:
                                  description: Describes the write permissions levels that a user has for a specific feature
                                  properties:
                                    scopeType:
                                      type: string
                                      description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                      enum:
                                        - GLOBAL
                                        - OWN
                                    create:
                                      type: boolean
                                      description: True if user has create permission for this feature and scope
                                    update:
                                      type: boolean
                                      description: True if user has update permission for this feature and scope
                                    delete:
                                      type: boolean
                                      description: True if user has delete permission for this feature and scope
                                  type: object
                              type: object
                            createdBy:
                              type: object
                              description: Person object
                            createTime:
                              type: string
                              format: date-time
                              description: The time the shortcut was created in ISO format (ISO 8601).
                            updatedBy:
                              type: object
                              description: Person object
                            updateTime:
                              type: string
                              format: date-time
                              description: The time the shortcut was updated in ISO format (ISO 8601).
                            destinationDocument:
                              type: object
                              description: Document object
                            intermediateUrl:
                              type: string
                              description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                            viewPrefix:
                              type: string
                              description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                            isExternal:
                              type: boolean
                              description: Indicates whether a shortcut is native or external.
                            editUrl:
                              type: string
                              description: The URL using which the user can access the edit page of the shortcut.
                            alias:
                              type: string
                              description: canonical link text following go/ prefix where hyphen/underscore is removed.
                            title:
                              type: string
                              description: Title for the Go Link
                            roles:
                              type: array
                              description: A list of user roles for the Go Link.
                              items:
                                required:
                                  - role
                                properties:
                                  sourceDocumentSpec:
                                    type: object
                                    description: DocumentSpec object
                                  person:
                                    type: object
                                    description: Person object
                                  group:
                                    required:
                                      - type
                                      - id
                                    properties:
                                      type:
                                        type: string
                                        description: The type of user group
                                        enum:
                                          - DEPARTMENT
                                          - ALL
                                          - TEAM
                                          - JOB_TITLE
                                          - ROLE_TYPE
                                          - LOCATION
                                          - REGION
                                          - EXTERNAL_GROUP
                                      id:
                                        type: string
                                        description: A unique identifier for the group. May be the same as name.
                                      name:
                                        type: string
                                        description: Name of the group.
                                    type: object
                                  role:
                                    type: string
                                    description: A user's role with respect to a specific document.
                                    enum:
                                      - OWNER
                                      - VIEWER
                                      - ANSWER_MODERATOR
                                      - EDITOR
                                      - VERIFIER
                                type: object
                          required:
                            - inputAlias
                        querySuggestions:
                          properties:
                            suggestions:
                              type: array
                              items:
                                type: object
                                description: QuerySuggestion object
                            person:
                              type: object
                              description: Person object
                          type: object
                        relatedDocuments:
                          type: array
                          description: A list of documents related to this structured result.
                          items:
                            type: object
                            description: RelatedDocuments object
                        relatedQuestion:
                          properties:
                            question:
                              type: string
                              description: The text of the related question
                            answer:
                              type: string
                              description: The answer for the related question
                            ranges:
                              type: array
                              description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                              items:
                                type: object
                                description: TextRange object
                          type: object
                        disambiguation:
                          type: object
                          description: A disambiguation between multiple entities with the same name
                          properties:
                            name:
                              type: string
                              description: Name of the ambiguous entity
                            id:
                              type: string
                              description: The unique id of the entity in the knowledge graph
                            type:
                              type: string
                              description: The type of entity.
                              x-include-enum-class-prefix: true
                              enum:
                                - PERSON
                                - PROJECT
                                - CUSTOMER
                        snippets:
                          description: Any snippets associated to the populated object.
                          type: array
                          items:
                            required:
                              - snippet
                            example:
                              snippet: snippet
                              mimeType: mimeType
                            properties:
                              snippet:
                                type: string
                                description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                              mimeType:
                                type: string
                                description: The mime type of the snippets, currently either text/plain or text/html.
                              text:
                                type: string
                                description: A matching snippet from the document with no highlights.
                              snippetTextOrdering:
                                type: integer
                                description: Used for sorting based off the snippet's location within all_snippetable_text
                              ranges:
                                type: array
                                description: The bolded ranges within text.
                                items:
                                  type: object
                                  description: TextRange object
                              url:
                                type: string
                                description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                            type: object
                        trackingToken:
                          type: string
                          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                        prominence:
                          type: string
                          description: The level of visual distinction that should be given to a result.
                          x-enumDescriptions:
                            HERO: A high-confidence result that should feature prominently on the page.
                            PROMOTED: May not be the best result but should be given additional visual distinction.
                            STANDARD: Should not be distinct from any other results.
                          enum:
                            - HERO
                            - PROMOTED
                            - STANDARD
                        source:
                          type: string
                          description: Source context for this result. Possible values depend on the result type.
                          enum:
                            - EXPERT_DETECTION
                            - ENTITY_NLQ
                      type: object
                  trackingToken:
                    type: string
                    description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                  document:
                    type: object
                    description: Document object
                  title:
                    type: string
                  url:
                    type: string
                  nativeAppUrl:
                    type: string
                    description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                  snippets:
                    type: array
                    description: Text content from the result document which contains search query terms, if available.
                    items:
                      required:
                        - snippet
                      example:
                        snippet: snippet
                        mimeType: mimeType
                      properties:
                        snippet:
                          type: string
                          description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                        mimeType:
                          type: string
                          description: The mime type of the snippets, currently either text/plain or text/html.
                        text:
                          type: string
                          description: A matching snippet from the document with no highlights.
                        snippetTextOrdering:
                          type: integer
                          description: Used for sorting based off the snippet's location within all_snippetable_text
                        ranges:
                          type: array
                          description: The bolded ranges within text.
                          items:
                            type: object
                            description: TextRange object
                        url:
                          type: string
                          description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                      type: object
                  fullText:
                    type: string
                    description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                  fullTextList:
                    type: array
                    description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                    items:
                      type: string
                  relatedResults:
                    type: array
                    description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                    items:
                      type: object
                      description: RelatedDocuments object
                  clusteredResults:
                    type: array
                    description: A list of results that should be displayed as associated with this result.
                    items:
                      type: object
                      description: SearchResult object
                  allClusteredResults:
                    type: array
                    description: A list of results that should be displayed as associated with this result.
                    items:
                      type: object
                      description: ClusterGroup object
                  attachmentCount:
                    type: integer
                    description: The total number of attachments.
                  attachments:
                    type: array
                    description: A (potentially partial) list of results representing documents attached to the main result document.
                    items:
                      type: object
                      description: SearchResult object
                  backlinkResults:
                    type: array
                    description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                    items:
                      type: object
                      description: SearchResult object
                  clusterType:
                    type: string
                    description: The reason for inclusion of clusteredResults.
                    enum:
                      - SIMILAR
                      - FRESHNESS
                      - TITLE
                      - CONTENT
                      - NONE
                      - THREAD_REPLY
                      - THREAD_ROOT
                      - PREFIX
                      - SUFFIX
                  mustIncludeSuggestions:
                    properties:
                      suggestions:
                        type: array
                        items:
                          type: object
                          description: QuerySuggestion object
                      person:
                        type: object
                        description: Person object
                    type: object
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object
                  prominence:
                    type: string
                    description: |
                      The level of visual distinction that should be given to a result.
                    x-enumDescriptions:
                      HERO: A high-confidence result that should feature prominently on the page.
                      PROMOTED: May not be the best result but should be given additional visual distinction.
                      STANDARD: Should not be distinct from any other results.
                    enum:
                      - HERO
                      - PROMOTED
                      - STANDARD
                  attachmentContext:
                    type: string
                    description: Additional context for the relationship between the result and the document it's attached to.
                  pins:
                    type: array
                    description: A list of pins associated with this search result.
                    items:
                      type: object
                      properties:
                        queries:
                          type: array
                          description: The query strings for which the pinned result will show.
                          items:
                            type: string
                        audienceFilters:
                          type: array
                          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                          items:
                            type: object
                            description: FacetFilter object
                        id:
                          type: string
                          description: The opaque id of the pin.
                        documentId:
                          type: string
                          description: The document which should be a pinned result.
                        attribution:
                          type: object
                          description: Person object
                        updatedBy:
                          type: object
                          description: Person object
                        createTime:
                          type: string
                          format: date-time
                        updateTime:
                          type: string
                          format: date-time
                      required:
                        - documentId
            structuredResults:
              type: array
              items:
                description: A single object that can support any object in the work graph. Only a single object will be populated.
                properties:
                  document:
                    type: object
                    description: Document object
                  person:
                    type: object
                    description: Person object
                  customer:
                    required:
                      - id
                      - company
                    properties:
                      id:
                        type: string
                        description: Unique identifier.
                      domains:
                        type: array
                        description: Link to company's associated website domains.
                        items:
                          type: string
                      company:
                        required:
                          - name
                        properties:
                          name:
                            type: string
                            description: User-friendly display name.
                          profileUrl:
                            type: string
                            description: Link to internal company company profile.
                          websiteUrls:
                            type: array
                            description: Link to company's associated websites.
                            items:
                              type: string
                          logoUrl:
                            type: string
                            description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                          location:
                            type: string
                            description: User facing string representing the company's location.
                            example: New York City
                          phone:
                            type: string
                            description: Phone number as a number string.
                          fax:
                            type: string
                            description: Fax number as a number string.
                          industry:
                            type: string
                            description: User facing string representing the company's industry.
                            example: Finances
                          annualRevenue:
                            type: number
                            format: double
                            description: Average company's annual revenue for reference.
                          numberOfEmployees:
                            type: integer
                            format: int64
                            description: Average company's number of employees for reference.
                          stockSymbol:
                            type: string
                            description: Company's stock symbol if company is public.
                          foundedDate:
                            type: string
                            format: date
                            description: The date when the company was founded.
                          about:
                            type: string
                            description: User facing description of company.
                            example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                        type: object
                      documentCounts:
                        type: object
                        description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                        additionalProperties:
                          type: integer
                      poc:
                        type: array
                        description: A list of POC for company.
                        items:
                          type: object
                          description: Person object
                      metadata:
                        properties:
                          datasourceId:
                            type: string
                            description: The user visible id of the salesforce customer account.
                          customData:
                            type: object
                            description: Custom fields specific to individual datasources
                            additionalProperties:
                              $ref: '#/components/schemas/CustomDataValue'
                        type: object
                      mergedCustomers:
                        type: array
                        description: A list of Customers.
                        items:
                          type: object
                          description: Customer object
                      startDate:
                        type: string
                        format: date
                        description: The date when the interaction with customer started.
                      contractAnnualRevenue:
                        type: number
                        format: double
                        description: Average contract annual revenue with that customer.
                      notes:
                        type: string
                        description: User facing (potentially generated) notes about company.
                        example: CIO is interested in trying out the product.
                    type: object
                  team:
                    type: object
                    properties:
                      relatedObjects:
                        type: object
                        description: A list of objects related to a source object.
                        additionalProperties:
                          $ref: '#/components/schemas/RelatedObjectEdge'
                      permissions:
                        properties:
                          write:
                            description: Describes the write permissions levels that a user has for a specific feature
                            properties:
                              scopeType:
                                type: string
                                description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                enum:
                                  - GLOBAL
                                  - OWN
                              create:
                                type: boolean
                                description: True if user has create permission for this feature and scope
                              update:
                                type: boolean
                                description: True if user has update permission for this feature and scope
                              delete:
                                type: boolean
                                description: True if user has delete permission for this feature and scope
                            type: object
                        type: object
                      id:
                        type: string
                        description: Unique identifier
                      name:
                        type: string
                        description: Team name
                      description:
                        type: string
                        description: A description of the team
                      businessUnit:
                        type: string
                        description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                      department:
                        type: string
                        description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                      photoUrl:
                        type: string
                        format: url
                        description: A link to the team's photo.
                      bannerUrl:
                        type: string
                        format: url
                        description: A link to the team's banner photo.
                      externalLink:
                        type: string
                        format: uri
                        description: Link to a team page on the internet or your company's intranet
                      members:
                        type: array
                        description: The members on this team
                        items:
                          required:
                            - person
                          type: object
                          description: Metadata about the relationship of a person to a team.
                          properties:
                            person:
                              type: object
                              description: Person object
                            relationship:
                              type: string
                              description: The team member's relationship to the team. This defaults to MEMBER if not set.
                              default: MEMBER
                              enum:
                                - MEMBER
                                - MANAGER
                                - LEAD
                                - POINT_OF_CONTACT
                                - OTHER
                            customRelationshipStr:
                              type: string
                              description: Displayed name for the relationship if relationship is set to `OTHER`.
                            joinDate:
                              type: string
                              format: date-time
                              description: The team member's start date
                      memberCount:
                        type: integer
                        description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                      emails:
                        type: array
                        description: The emails for this team
                        items:
                          properties:
                            email:
                              type: string
                              format: email
                              description: An email address
                            type:
                              type: string
                              enum:
                                - PRIMARY
                                - SECONDARY
                                - ONCALL
                                - OTHER
                              default: OTHER
                            isUserGenerated:
                              type: boolean
                              description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                          type: object
                      customFields:
                        type: array
                        description: Customizable fields for additional team information.
                        items:
                          required:
                            - label
                            - values
                            - displayable
                          properties:
                            label:
                              type: string
                              description: A user-facing label for this field.
                            values:
                              type: array
                              items:
                                oneOf:
                                  - properties:
                                      strText:
                                        type: string
                                        description: Text field for string value.
                                    type: object
                                  - properties:
                                      urlAnchor:
                                        type: string
                                        description: Anchor text for hyperlink.
                                      urlLink:
                                        type: string
                                        description: Link for this URL.
                                    type: object
                                  - properties:
                                      person:
                                        type: object
                                        description: Person object
                                    type: object
                            displayable:
                              type: boolean
                              description: Determines whether the client should display this custom field
                              default: true
                          type: object
                      datasourceProfiles:
                        type: array
                        description: The datasource profiles of the team
                        items:
                          required:
                            - datasource
                            - handle
                          properties:
                            datasource:
                              type: string
                              example: github
                              description: The datasource the profile is of.
                            handle:
                              type: string
                              description: The display name of the entity in the given datasource.
                            url:
                              type: string
                              description: URL to view the entity's profile.
                            nativeAppUrl:
                              type: string
                              description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                            isUserGenerated:
                              type: boolean
                              description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                          type: object
                      datasource:
                        type: string
                        description: the data source of the team, e.g. GDRIVE
                      createdFrom:
                        type: string
                        description: For teams created from docs, the doc title. Otherwise empty.
                      lastUpdatedAt:
                        type: string
                        format: date-time
                        description: when this team was last updated.
                      status:
                        type: string
                        description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                        default: PROCESSED
                        enum:
                          - PROCESSED
                          - QUEUED_FOR_CREATION
                          - QUEUED_FOR_DELETION
                      canBeDeleted:
                        type: boolean
                        description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                        default: true
                      loggingId:
                        type: string
                        description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                    required:
                      - id
                      - name
                  customEntity:
                    type: object
                    properties:
                      permissions:
                        properties:
                          write:
                            description: Describes the write permissions levels that a user has for a specific feature
                            properties:
                              scopeType:
                                type: string
                                description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                enum:
                                  - GLOBAL
                                  - OWN
                              create:
                                type: boolean
                                description: True if user has create permission for this feature and scope
                              update:
                                type: boolean
                                description: True if user has update permission for this feature and scope
                              delete:
                                type: boolean
                                description: True if user has delete permission for this feature and scope
                            type: object
                        type: object
                      id:
                        type: string
                        description: Unique identifier.
                      title:
                        type: string
                        description: Title or name of the custom entity.
                      datasource:
                        type: string
                        description: The datasource the custom entity is from.
                      objectType:
                        type: string
                        description: The type of the entity. Interpretation is specific to each datasource
                      metadata:
                        properties:
                          customData:
                            type: object
                            description: Custom fields specific to individual datasources
                            additionalProperties:
                              $ref: '#/components/schemas/CustomDataValue'
                        type: object
                      roles:
                        type: array
                        description: A list of user roles for the custom entity explicitly granted by the owner.
                        items:
                          type: object
                          description: UserRoleSpecification object
                  answer:
                    type: object
                    description: Answer object
                  extractedQnA:
                    properties:
                      heading:
                        type: string
                        description: Heading text that was matched to produce this result.
                      question:
                        type: string
                        description: Question text that was matched to produce this result.
                      questionResult:
                        type: object
                        description: SearchResult object
                    type: object
                  meeting:
                    properties:
                      id:
                        type: string
                      title:
                        type: string
                      description:
                        type: string
                      url:
                        type: string
                      startTime:
                        type: string
                        format: date-time
                      endTime:
                        type: string
                        format: date-time
                      attendees:
                        properties:
                          people:
                            type: array
                            description: Full details of some of the attendees of this event
                            items:
                              required:
                                - person
                              properties:
                                isOrganizer:
                                  type: boolean
                                  description: Whether or not this attendee is an organizer.
                                isInGroup:
                                  type: boolean
                                  description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                                person:
                                  type: object
                                  description: Person object
                                groupAttendees:
                                  type: array
                                  description: If this attendee is a group, represents the list of individual attendees in the group.
                                  items:
                                    type: object
                                    description: CalendarAttendee object
                                responseStatus:
                                  type: string
                                  enum:
                                    - ACCEPTED
                                    - DECLINED
                                    - NO_RESPONSE
                                    - TENTATIVE
                              type: object
                          isLimit:
                            type: boolean
                            description: Whether the total count of the people returned is at the retrieval limit.
                          total:
                            type: integer
                            description: Total number of attendees in this event.
                          numAccepted:
                            type: integer
                            description: Total number of attendees who have accepted this event.
                          numDeclined:
                            type: integer
                            description: Total number of attendees who have declined this event.
                          numNoResponse:
                            type: integer
                            description: Total number of attendees who have not responded to this event.
                          numTentative:
                            type: integer
                            description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                        type: object
                    type: object
                  app:
                    required:
                      - datasource
                    properties:
                      datasource:
                        type: string
                        description: The app or other repository type this represents
                      docType:
                        type: string
                        description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                      mimeType:
                        type: string
                        description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                      iconUrl:
                        type: string
                        description: If there is available icon URL.
                    type: object
                  collection:
                    type: object
                    description: Flattened Collection
                    properties:
                      name:
                        type: string
                        description: The unique name of the Collection.
                      description:
                        type: string
                        description: A brief summary of the Collection's contents.
                      addedRoles:
                        type: array
                        description: A list of added user roles for the Collection.
                        items:
                          type: object
                          description: UserRoleSpecification object
                      removedRoles:
                        type: array
                        description: A list of removed user roles for the Collection.
                        items:
                          type: object
                          description: UserRoleSpecification object
                      audienceFilters:
                        type: array
                        description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                        items:
                          type: object
                          description: FacetFilter object
                      icon:
                        type: string
                        description: The emoji icon of this Collection.
                      adminLocked:
                        type: boolean
                        description: Indicates whether edits are allowed for everyone or only admins.
                      parentId:
                        type: integer
                        description: The parent of this Collection, or 0 if it's a top-level Collection.
                      thumbnail:
                        properties:
                          photoId:
                            type: string
                            description: Photo id if the thumbnail is from splash.
                          url:
                            type: string
                            description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                        type: object
                      allowedDatasource:
                        type: string
                        description: The datasource type this Collection can hold.
                      permissions:
                        type: object
                        description: Flattened ObjectPermissions
                        properties:
                          write:
                            type: object
                            description: Describes the write permissions levels that a user has for a specific feature
                            properties:
                              scopeType:
                                type: string
                                description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                enum:
                                  - GLOBAL
                                  - OWN
                                properties: {}
                              create:
                                type: boolean
                                description: True if user has create permission for this feature and scope
                              update:
                                type: boolean
                                description: True if user has update permission for this feature and scope
                              delete:
                                type: boolean
                                description: True if user has delete permission for this feature and scope
                      id:
                        type: integer
                        description: The unique ID of the Collection.
                      createTime:
                        type: string
                        format: date-time
                      updateTime:
                        type: string
                        format: date-time
                      creator:
                        type: object
                        description: Person object
                      updatedBy:
                        type: object
                        description: Person object
                      itemCount:
                        type: integer
                        description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                      childCount:
                        type: integer
                        description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                      items:
                        type: array
                        description: The items in this Collection.
                        items:
                          type: object
                          description: CollectionItem object
                      pinMetadata:
                        required:
                          - pinnedCategories
                          - eligibleCategoriesForPinning
                        properties:
                          existingPins:
                            type: array
                            description: List of targets this Collection is pinned to.
                            items:
                              required:
                                - category
                              properties:
                                category:
                                  type: string
                                  description: Categories a Collection can be pinned to.
                                  enum:
                                    - COMPANY_RESOURCE
                                    - DEPARTMENT_RESOURCE
                                    - TEAM_RESOURCE
                                value:
                                  type: string
                                  description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                target:
                                  type: string
                                  description: What targets can a Collection be pinned to.
                                  enum:
                                    - RESOURCE_CARD
                                    - TEAM_PROFILE_PAGE
                              type: object
                          eligiblePins:
                            type: array
                            description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                            items:
                              required:
                                - id
                                - target
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the Collection.
                                target:
                                  required:
                                    - category
                                  properties:
                                    category:
                                      type: string
                                      description: Categories a Collection can be pinned to.
                                      enum:
                                        - COMPANY_RESOURCE
                                        - DEPARTMENT_RESOURCE
                                        - TEAM_RESOURCE
                                    value:
                                      type: string
                                      description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                    target:
                                      type: string
                                      description: What targets can a Collection be pinned to.
                                      enum:
                                        - RESOURCE_CARD
                                        - TEAM_PROFILE_PAGE
                                  type: object
                              type: object
                        type: object
                      shortcuts:
                        type: array
                        description: The names of the shortcuts (Go Links) that point to this Collection.
                        items:
                          type: string
                      children:
                        type: array
                        description: The children Collections of this Collection.
                        items:
                          type: object
                          description: Collection object
                      roles:
                        type: array
                        description: A list of user roles for the Collection.
                        items:
                          type: object
                          description: UserRoleSpecification object
                  answerBoard:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The unique name of the Collection.
                      description:
                        type: string
                        description: A brief summary of the Collection's contents.
                      addedRoles:
                        type: array
                        description: A list of added user roles for the Collection.
                        items:
                          type: object
                          description: UserRoleSpecification object
                      removedRoles:
                        type: array
                        description: A list of removed user roles for the Collection.
                        items:
                          type: object
                          description: UserRoleSpecification object
                      audienceFilters:
                        type: array
                        description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                        items:
                          type: object
                          description: FacetFilter object
                      permissions:
                        properties:
                          write:
                            description: Describes the write permissions levels that a user has for a specific feature
                            properties:
                              scopeType:
                                type: string
                                description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                enum:
                                  - GLOBAL
                                  - OWN
                              create:
                                type: boolean
                                description: True if user has create permission for this feature and scope
                              update:
                                type: boolean
                                description: True if user has update permission for this feature and scope
                              delete:
                                type: boolean
                                description: True if user has delete permission for this feature and scope
                            type: object
                        type: object
                      id:
                        type: integer
                        description: The unique ID of the Answer Board.
                      createTime:
                        type: string
                        format: date-time
                      updateTime:
                        type: string
                        format: date-time
                      creator:
                        type: object
                        description: Person object
                      updatedBy:
                        type: object
                        description: Person object
                      itemCount:
                        type: integer
                        description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                      roles:
                        type: array
                        description: A list of user roles for the Answer Board.
                        items:
                          type: object
                          description: UserRoleSpecification object
                    required:
                      - name
                      - id
                      - description
                  code:
                    example:
                      repoName: scio
                      fileName: README.md
                      matches:
                        - lineNumber: 1
                          content: Welcome to the beginning
                          ranges: []
                        - lineNumber: 2
                          content: Second line of the file
                          ranges: []
                        - lineNumber: 3
                          content: hello world hello world
                          ranges:
                            - startindex: 0
                              endIndex: 5
                            - startIndex: 12
                              endIndex: 17
                    properties:
                      repoName:
                        type: string
                      fileName:
                        type: string
                      fileUrl:
                        type: string
                      lines:
                        type: array
                        items:
                          properties:
                            lineNumber:
                              type: integer
                            content:
                              type: string
                            ranges:
                              type: array
                              description: Index ranges depicting matched sections of the line
                              items:
                                type: object
                                description: TextRange object
                          type: object
                      isLastMatch:
                        type: boolean
                        description: Last file match for a repo
                    type: object
                  shortcut:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The opaque id of the user generated content.
                      inputAlias:
                        type: string
                        description: Link text following go/ prefix as entered by the user.
                      destinationUrl:
                        type: string
                        description: Destination URL for the shortcut.
                      destinationDocumentId:
                        type: string
                        description: Glean Document ID for the URL, if known.
                      description:
                        type: string
                        description: A short, plain text blurb to help people understand the intent of the shortcut.
                      unlisted:
                        type: boolean
                        description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                      urlTemplate:
                        type: string
                        description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                      addedRoles:
                        type: array
                        description: A list of user roles added for the Shortcut.
                        items:
                          type: object
                          description: UserRoleSpecification object
                      removedRoles:
                        type: array
                        description: A list of user roles removed for the Shortcut.
                        items:
                          type: object
                          description: UserRoleSpecification object
                      permissions:
                        properties:
                          write:
                            description: Describes the write permissions levels that a user has for a specific feature
                            properties:
                              scopeType:
                                type: string
                                description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                enum:
                                  - GLOBAL
                                  - OWN
                              create:
                                type: boolean
                                description: True if user has create permission for this feature and scope
                              update:
                                type: boolean
                                description: True if user has update permission for this feature and scope
                              delete:
                                type: boolean
                                description: True if user has delete permission for this feature and scope
                            type: object
                        type: object
                      createdBy:
                        type: object
                        description: Person object
                      createTime:
                        type: string
                        format: date-time
                        description: The time the shortcut was created in ISO format (ISO 8601).
                      updatedBy:
                        type: object
                        description: Person object
                      updateTime:
                        type: string
                        format: date-time
                        description: The time the shortcut was updated in ISO format (ISO 8601).
                      destinationDocument:
                        type: object
                        description: Document object
                      intermediateUrl:
                        type: string
                        description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                      viewPrefix:
                        type: string
                        description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                      isExternal:
                        type: boolean
                        description: Indicates whether a shortcut is native or external.
                      editUrl:
                        type: string
                        description: The URL using which the user can access the edit page of the shortcut.
                      alias:
                        type: string
                        description: canonical link text following go/ prefix where hyphen/underscore is removed.
                      title:
                        type: string
                        description: Title for the Go Link
                      roles:
                        type: array
                        description: A list of user roles for the Go Link.
                        items:
                          type: object
                          description: UserRoleSpecification object
                    required:
                      - inputAlias
                  querySuggestions:
                    properties:
                      suggestions:
                        type: array
                        items:
                          type: object
                          description: QuerySuggestion object
                      person:
                        type: object
                        description: Person object
                    type: object
                  relatedDocuments:
                    type: array
                    description: A list of documents related to this structured result.
                    items:
                      type: object
                      description: RelatedDocuments object
                  relatedQuestion:
                    properties:
                      question:
                        type: string
                        description: The text of the related question
                      answer:
                        type: string
                        description: The answer for the related question
                      ranges:
                        type: array
                        description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                        items:
                          type: object
                          description: TextRange object
                    type: object
                  disambiguation:
                    type: object
                    description: A disambiguation between multiple entities with the same name
                    properties:
                      name:
                        type: string
                        description: Name of the ambiguous entity
                      id:
                        type: string
                        description: The unique id of the entity in the knowledge graph
                      type:
                        type: string
                        description: The type of entity.
                        x-include-enum-class-prefix: true
                        enum:
                          - PERSON
                          - PROJECT
                          - CUSTOMER
                  snippets:
                    description: Any snippets associated to the populated object.
                    type: array
                    items:
                      required:
                        - snippet
                      example:
                        snippet: snippet
                        mimeType: mimeType
                      properties:
                        snippet:
                          type: string
                          description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                        mimeType:
                          type: string
                          description: The mime type of the snippets, currently either text/plain or text/html.
                        text:
                          type: string
                          description: A matching snippet from the document with no highlights.
                        snippetTextOrdering:
                          type: integer
                          description: Used for sorting based off the snippet's location within all_snippetable_text
                        ranges:
                          type: array
                          description: The bolded ranges within text.
                          items:
                            type: object
                            description: TextRange object
                        url:
                          type: string
                          description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                      type: object
                  trackingToken:
                    type: string
                    description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                  prominence:
                    type: string
                    description: The level of visual distinction that should be given to a result.
                    x-enumDescriptions:
                      HERO: A high-confidence result that should feature prominently on the page.
                      PROMOTED: May not be the best result but should be given additional visual distinction.
                      STANDARD: Should not be distinct from any other results.
                    enum:
                      - HERO
                      - PROMOTED
                      - STANDARD
                  source:
                    type: string
                    description: Source context for this result. Possible values depend on the result type.
                    enum:
                      - EXPERT_DETECTION
                      - ENTITY_NLQ
                type: object
            generatedQnaResult:
              properties:
                question:
                  type: string
                  description: Search query rephrased into a question.
                answer:
                  type: string
                  description: Answer generated for the given query or the generated question.
                followUpPrompts:
                  type: array
                  description: List of all follow-up prompts generated for the given query or the generated question.
                  items:
                    type: string
                followupActions:
                  description: List of follow-up actions generated for the given query or the generated question.
                  type: array
                  items:
                    description: A follow-up action that can be invoked by the user after a response. The action parameters are not included and need to be predicted/filled separately.
                    properties:
                      actionRunId:
                        type: string
                        description: Unique identifier for this actionRun recommendation event.
                      actionInstanceId:
                        type: string
                        description: The ID of the action instance that will be invoked.
                      actionId:
                        type: string
                        description: The ID of the associated action.
                      recommendationText:
                        type: string
                        description: Text to be displayed to the user when recommending the action instance.
                      actionLabel:
                        type: string
                        description: The label to be used when displaying a button to execute this action instance.
                      userConfirmationRequired:
                        type: boolean
                        description: Whether user confirmation is needed before executing this action instance.
                    type: object
                ranges:
                  type: array
                  description: Answer subsections to mark with special formatting (citations, bolding etc)
                  items:
                    type: object
                    description: TextRange object
                status:
                  type: string
                  enum:
                    - COMPUTING
                    - DISABLED
                    - FAILED
                    - NO_ANSWER
                    - SKIPPED
                    - STREAMING
                    - SUCCEEDED
                    - TIMEOUT
                  description: Status of backend generating the answer
                cursor:
                  type: string
                  description: An opaque cursor representing the search request
                trackingToken:
                  type: string
                  description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
              type: object
            errorInfo:
              x-speakeasy-name-override: GleanDataError
              properties:
                badGmailToken:
                  type: boolean
                  description: Indicates the gmail results could not be fetched due to bad token.
                badOutlookToken:
                  type: boolean
                  description: Indicates the outlook results could not be fetched due to bad token.
                invalidOperators:
                  type: array
                  description: Indicates results could not be fetched due to invalid operators in the query.
                  items:
                    properties:
                      key:
                        description: The operator key that has an invalid value.
                        type: string
                      value:
                        description: The invalid operator value.
                        type: string
                    type: object
                errorMessages:
                  type: array
                  items:
                    properties:
                      source:
                        description: The datasource this message relates to.
                        type: string
                      errorMessage:
                        type: string
                    type: object
              type: object
            requestID:
              type: string
              description: A platform-generated request ID to correlate backend logs.
            backendTimeMillis:
              type: integer
              format: int64
              description: Time in milliseconds the backend took to respond to the request.
              example: 1100
            experimentIds:
              type: array
              description: List of experiment ids for the corresponding request.
              items:
                type: integer
                format: int64
            metadata:
              properties:
                rewrittenQuery:
                  type: string
                  description: A cleaned up or updated version of the query to be displayed in the query box. Useful for mapping visual facets to search operators.
                searchedQuery:
                  type: string
                  description: The actual query used to perform search and return results.
                searchedQueryRanges:
                  type: array
                  description: The bolded ranges within the searched query.
                  items:
                    type: object
                    description: TextRange object
                originalQuery:
                  type: string
                  description: The query text sent by the client in the request.
                querySuggestion:
                  type: object
                  description: QuerySuggestion object
                additionalQuerySuggestions:
                  properties:
                    suggestions:
                      type: array
                      items:
                        type: object
                        description: QuerySuggestion object
                    person:
                      type: object
                      description: Person object
                  type: object
                negatedTerms:
                  type: array
                  description: A list of terms that were negated when processing the query.
                  items:
                    type: string
                modifiedQueryWasUsed:
                  type: boolean
                  description: A different query was performed than the one requested.
                originalQueryHadNoResults:
                  type: boolean
                  description: No results were found for the original query. The usage of this bit in conjunction with modifiedQueryWasUsed will dictate whether the full page replacement is 0-result or few-result based.
                searchWarning:
                  required:
                    - warningType
                  properties:
                    warningType:
                      type: string
                      enum:
                        - LONG_QUERY
                        - QUOTED_PUNCTUATION
                        - PUNCTUATION_ONLY
                        - COPYPASTED_QUOTES
                        - INVALID_OPERATOR
                        - MAYBE_INVALID_FACET_QUERY
                      description: The type of the warning.
                    lastUsedTerm:
                      type: string
                      description: The last term we considered in the user's long query.
                    quotesIgnoredQuery:
                      type: string
                      description: The query after ignoring/removing quotes.
                    ignoredTerms:
                      type: array
                      description: A list of query terms that were ignored when generating search results, if any. For example, terms containing invalid filters such as "updated:invalid_date" will be ignored.
                      items:
                        type: string
                  type: object
                triggeredExpertDetection:
                  type: boolean
                  description: Whether the query triggered expert detection results in the People tab.
                isNoQuotesSuggestion:
                  type: boolean
                  description: Whether the query was modified to remove quotes
              type: object
            facetResults:
              type: array
              items:
                properties:
                  sourceName:
                    type: string
                    description: The source of this facet (e.g. container_name, type, last_updated_at).
                    example: container_name
                  operatorName:
                    type: string
                    description: How to display this facet. Currently supportes 'SelectSingle' and 'SelectMultiple'.
                    example: SelectMultiple
                  buckets:
                    type: array
                    description: A list of unique buckets that exist within this result set.
                    items:
                      properties:
                        count:
                          type: integer
                          description: Estimated number of results in this facet.
                          example: 1
                        datasource:
                          type: string
                          example: jira
                          description: The datasource the value belongs to. This will be used by the all tab to show types across all datasources.
                        percentage:
                          type: integer
                          description: Estimated percentage of results in this facet.
                          example: 5
                        value:
                          properties:
                            stringValue:
                              type: string
                              example: engineering
                              description: The value that should be set in the FacetFilter when applying this filter to a search request.
                            integerValue:
                              type: integer
                              example: 5
                            displayLabel:
                              type: string
                              example: engineering
                              description: An optional user-friendly label to display in place of the facet value.
                            iconConfig:
                              description: Defines how to render an icon
                              example:
                                color: '#343CED'
                                key: person_icon
                                iconType: GLYPH
                                name: user
                              properties:
                                generatedBackgroundColorKey:
                                  type: string
                                backgroundColor:
                                  type: string
                                color:
                                  type: string
                                key:
                                  type: string
                                iconType:
                                  enum:
                                    - COLLECTION
                                    - CUSTOM
                                    - DATASOURCE
                                    - DATASOURCE_INSTANCE
                                    - FAVICON
                                    - FILE_TYPE
                                    - GENERATED_BACKGROUND
                                    - GLYPH
                                    - MIME_TYPE
                                    - NO_ICON
                                    - PERSON
                                    - REACTIONS
                                    - URL
                                masked:
                                  type: boolean
                                  description: Whether the icon should be masked based on current theme.
                                name:
                                  type: string
                                  description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
                                url:
                                  type: string
                                  description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
                              type: object
                          type: object
                      type: object
                  hasMoreBuckets:
                    type: boolean
                    description: Returns true if more buckets exist than those returned. Additional buckets can be retrieve by requesting again with a higher facetBucketSize.
                    example: false
                  groupName:
                    type: string
                    description: For most facets this will be the empty string, meaning the facet is high-level and applies to all documents for the datasource. When non-empty, this is used to group facets together (i.e. group facets for each doctype for a certain datasource)
                    example: Service Cloud
                type: object
            resultTabs:
              type: array
              description: All result tabs available for the current query. Populated if QUERY_METADATA is specified in the request.
              items:
                properties:
                  id:
                    type: string
                    description: The unique ID of the tab. Can be passed in a search request to get results for that tab.
                  count:
                    type: integer
                    description: The number of results in this tab for the current query.
                  datasource:
                    type: string
                    description: The datasource associated with the tab, if any.
                  datasourceInstance:
                    type: string
                    description: The datasource instance associated with the tab, if any.
                type: object
            resultTabIds:
              type: array
              description: The unique IDs of the result tabs to which this response belongs.
              items:
                type: string
            resultsDescription:
              properties:
                text:
                  type: string
                  description: Textual description of the results. Can be shown at the top of SERP, e.g. 'People who write about this topic' for experts in people tab.
                iconConfig:
                  description: Defines how to render an icon
                  example:
                    color: '#343CED'
                    key: person_icon
                    iconType: GLYPH
                    name: user
                  properties:
                    generatedBackgroundColorKey:
                      type: string
                    backgroundColor:
                      type: string
                    color:
                      type: string
                    key:
                      type: string
                    iconType:
                      enum:
                        - COLLECTION
                        - CUSTOM
                        - DATASOURCE
                        - DATASOURCE_INSTANCE
                        - FAVICON
                        - FILE_TYPE
                        - GENERATED_BACKGROUND
                        - GLYPH
                        - MIME_TYPE
                        - NO_ICON
                        - PERSON
                        - REACTIONS
                        - URL
                    masked:
                      type: boolean
                      description: Whether the icon should be masked based on current theme.
                    name:
                      type: string
                      description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
                    url:
                      type: string
                      description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
                  type: object
              type: object
            rewrittenFacetFilters:
              type: array
              description: The actual applied facet filters based on the operators and facetFilters in the query. Useful for mapping typed operators to visual facets.
              items:
                type: object
                description: FacetFilter object
            cursor:
              type: string
              description: Cursor that indicates the start of the next page of results. To be passed in "more" requests for this query.
            hasMoreResults:
              type: boolean
              description: Whether more results are available. Use cursor to retrieve them.
        rootMessage:
          type: object
          description: SearchResult object
      type: object
    SearchResponse:
      example:
        trackingToken: trackingToken
        suggestedSpellCorrectedQuery: suggestedSpellCorrectedQuery
        hasMoreResults: true
        errorInfo:
          errorMessages:
            - source: gmail
              errorMessage: invalid token
            - source: slack
              errorMessage: expired token
        requestID: 5e345ae500ff0befa2b9d1a3ba0001737e7363696f312d323535323137000171756572792d656e64706f696e743a323032303031333074313830343032000100
        results:
          - snippets:
              - snippet: snippet
                mimeType: mimeType
            metadata:
              container: container
              createTime: '2000-01-23T04:56:07.000Z'
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: '2000-01-23T04:56:07.000Z'
              mimeType: mimeType
              objectType: objectType
            title: title
            url: https://www.example.com/
          - snippets:
              - snippet: snippet
                mimeType: mimeType
            metadata:
              container: container
              createTime: '2000-01-23T04:56:07.000Z'
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: '2000-01-23T04:56:07.000Z'
              mimeType: mimeType
              objectType: objectType
            title: title
            url: https://www.example.com/
        facetResults:
          - buckets:
              - percentage: 5
                count: 1
                value:
                  stringValue: stringValue
                  integerValue: 5
              - percentage: 5
                count: 1
                value:
                  stringValue: stringValue
                  integerValue: 5
            sourceName: sourceName
            operatorName: operatorName
            objectType: objectType
          - buckets:
              - percentage: 5
                count: 1
                value:
                  stringValue: stringValue
                  integerValue: 5
              - percentage: 5
                count: 1
                value:
                  stringValue: stringValue
                  integerValue: 5
            sourceName: sourceName
            operatorName: operatorName
            objectType: objectType
        rewrittenQuery: rewrittenQuery
        rewrittenFacetFilters:
          - fieldName: fieldName
            values:
              - fieldValues
              - fieldValues
          - fieldName: fieldName
            values:
              - fieldValues
              - fieldValues
      type: object
      properties:
        trackingToken:
          type: string
          description: A token that should be passed for additional requests related to this request (such as more results requests).
        sessionInfo:
          properties:
            sessionTrackingToken:
              type: string
              description: A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab.
            tabId:
              type: string
              description: A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab.
            lastSeen:
              type: string
              format: date-time
              description: The last time the server saw this token.
            lastQuery:
              type: string
              description: The last query seen by the server.
          type: object
        results:
          type: array
          items:
            type: object
            description: SearchResult object
        structuredResults:
          type: array
          items:
            description: A single object that can support any object in the work graph. Only a single object will be populated.
            properties:
              document:
                type: object
                description: Document object
              person:
                type: object
                description: Person object
              customer:
                required:
                  - id
                  - company
                properties:
                  id:
                    type: string
                    description: Unique identifier.
                  domains:
                    type: array
                    description: Link to company's associated website domains.
                    items:
                      type: string
                  company:
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        description: User-friendly display name.
                      profileUrl:
                        type: string
                        description: Link to internal company company profile.
                      websiteUrls:
                        type: array
                        description: Link to company's associated websites.
                        items:
                          type: string
                      logoUrl:
                        type: string
                        description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                      location:
                        type: string
                        description: User facing string representing the company's location.
                        example: New York City
                      phone:
                        type: string
                        description: Phone number as a number string.
                      fax:
                        type: string
                        description: Fax number as a number string.
                      industry:
                        type: string
                        description: User facing string representing the company's industry.
                        example: Finances
                      annualRevenue:
                        type: number
                        format: double
                        description: Average company's annual revenue for reference.
                      numberOfEmployees:
                        type: integer
                        format: int64
                        description: Average company's number of employees for reference.
                      stockSymbol:
                        type: string
                        description: Company's stock symbol if company is public.
                      foundedDate:
                        type: string
                        format: date
                        description: The date when the company was founded.
                      about:
                        type: string
                        description: User facing description of company.
                        example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                    type: object
                  documentCounts:
                    type: object
                    description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                    additionalProperties:
                      type: integer
                  poc:
                    type: array
                    description: A list of POC for company.
                    items:
                      type: object
                      description: Person object
                  metadata:
                    properties:
                      datasourceId:
                        type: string
                        description: The user visible id of the salesforce customer account.
                      customData:
                        type: object
                        description: Custom fields specific to individual datasources
                        additionalProperties:
                          $ref: '#/components/schemas/CustomDataValue'
                    type: object
                  mergedCustomers:
                    type: array
                    description: A list of Customers.
                    items:
                      type: object
                      description: Customer object
                  startDate:
                    type: string
                    format: date
                    description: The date when the interaction with customer started.
                  contractAnnualRevenue:
                    type: number
                    format: double
                    description: Average contract annual revenue with that customer.
                  notes:
                    type: string
                    description: User facing (potentially generated) notes about company.
                    example: CIO is interested in trying out the product.
                type: object
              team:
                type: object
                properties:
                  relatedObjects:
                    type: object
                    description: A list of objects related to a source object.
                    additionalProperties:
                      $ref: '#/components/schemas/RelatedObjectEdge'
                  permissions:
                    properties:
                      write:
                        description: Describes the write permissions levels that a user has for a specific feature
                        properties:
                          scopeType:
                            type: string
                            description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                            enum:
                              - GLOBAL
                              - OWN
                          create:
                            type: boolean
                            description: True if user has create permission for this feature and scope
                          update:
                            type: boolean
                            description: True if user has update permission for this feature and scope
                          delete:
                            type: boolean
                            description: True if user has delete permission for this feature and scope
                        type: object
                    type: object
                  id:
                    type: string
                    description: Unique identifier
                  name:
                    type: string
                    description: Team name
                  description:
                    type: string
                    description: A description of the team
                  businessUnit:
                    type: string
                    description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  department:
                    type: string
                    description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  photoUrl:
                    type: string
                    format: url
                    description: A link to the team's photo.
                  bannerUrl:
                    type: string
                    format: url
                    description: A link to the team's banner photo.
                  externalLink:
                    type: string
                    format: uri
                    description: Link to a team page on the internet or your company's intranet
                  members:
                    type: array
                    description: The members on this team
                    items:
                      required:
                        - person
                      type: object
                      description: Metadata about the relationship of a person to a team.
                      properties:
                        person:
                          type: object
                          description: Person object
                        relationship:
                          type: string
                          description: The team member's relationship to the team. This defaults to MEMBER if not set.
                          default: MEMBER
                          enum:
                            - MEMBER
                            - MANAGER
                            - LEAD
                            - POINT_OF_CONTACT
                            - OTHER
                        customRelationshipStr:
                          type: string
                          description: Displayed name for the relationship if relationship is set to `OTHER`.
                        joinDate:
                          type: string
                          format: date-time
                          description: The team member's start date
                  memberCount:
                    type: integer
                    description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                  emails:
                    type: array
                    description: The emails for this team
                    items:
                      properties:
                        email:
                          type: string
                          format: email
                          description: An email address
                        type:
                          type: string
                          enum:
                            - PRIMARY
                            - SECONDARY
                            - ONCALL
                            - OTHER
                          default: OTHER
                        isUserGenerated:
                          type: boolean
                          description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                      type: object
                  customFields:
                    type: array
                    description: Customizable fields for additional team information.
                    items:
                      required:
                        - label
                        - values
                        - displayable
                      properties:
                        label:
                          type: string
                          description: A user-facing label for this field.
                        values:
                          type: array
                          items:
                            oneOf:
                              - properties:
                                  strText:
                                    type: string
                                    description: Text field for string value.
                                type: object
                              - properties:
                                  urlAnchor:
                                    type: string
                                    description: Anchor text for hyperlink.
                                  urlLink:
                                    type: string
                                    description: Link for this URL.
                                type: object
                              - properties:
                                  person:
                                    type: object
                                    description: Person object
                                type: object
                        displayable:
                          type: boolean
                          description: Determines whether the client should display this custom field
                          default: true
                      type: object
                  datasourceProfiles:
                    type: array
                    description: The datasource profiles of the team
                    items:
                      required:
                        - datasource
                        - handle
                      properties:
                        datasource:
                          type: string
                          example: github
                          description: The datasource the profile is of.
                        handle:
                          type: string
                          description: The display name of the entity in the given datasource.
                        url:
                          type: string
                          description: URL to view the entity's profile.
                        nativeAppUrl:
                          type: string
                          description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                        isUserGenerated:
                          type: boolean
                          description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                      type: object
                  datasource:
                    type: string
                    description: the data source of the team, e.g. GDRIVE
                  createdFrom:
                    type: string
                    description: For teams created from docs, the doc title. Otherwise empty.
                  lastUpdatedAt:
                    type: string
                    format: date-time
                    description: when this team was last updated.
                  status:
                    type: string
                    description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                    default: PROCESSED
                    enum:
                      - PROCESSED
                      - QUEUED_FOR_CREATION
                      - QUEUED_FOR_DELETION
                  canBeDeleted:
                    type: boolean
                    description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                    default: true
                  loggingId:
                    type: string
                    description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                required:
                  - id
                  - name
              customEntity:
                type: object
                properties:
                  permissions:
                    properties:
                      write:
                        description: Describes the write permissions levels that a user has for a specific feature
                        properties:
                          scopeType:
                            type: string
                            description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                            enum:
                              - GLOBAL
                              - OWN
                          create:
                            type: boolean
                            description: True if user has create permission for this feature and scope
                          update:
                            type: boolean
                            description: True if user has update permission for this feature and scope
                          delete:
                            type: boolean
                            description: True if user has delete permission for this feature and scope
                        type: object
                    type: object
                  id:
                    type: string
                    description: Unique identifier.
                  title:
                    type: string
                    description: Title or name of the custom entity.
                  datasource:
                    type: string
                    description: The datasource the custom entity is from.
                  objectType:
                    type: string
                    description: The type of the entity. Interpretation is specific to each datasource
                  metadata:
                    properties:
                      customData:
                        type: object
                        description: Custom fields specific to individual datasources
                        additionalProperties:
                          $ref: '#/components/schemas/CustomDataValue'
                    type: object
                  roles:
                    type: array
                    description: A list of user roles for the custom entity explicitly granted by the owner.
                    items:
                      type: object
                      description: UserRoleSpecification object
              answer:
                type: object
                description: Answer object
              extractedQnA:
                properties:
                  heading:
                    type: string
                    description: Heading text that was matched to produce this result.
                  question:
                    type: string
                    description: Question text that was matched to produce this result.
                  questionResult:
                    type: object
                    description: SearchResult object
                type: object
              meeting:
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  url:
                    type: string
                  startTime:
                    type: string
                    format: date-time
                  endTime:
                    type: string
                    format: date-time
                  attendees:
                    properties:
                      people:
                        type: array
                        description: Full details of some of the attendees of this event
                        items:
                          required:
                            - person
                          properties:
                            isOrganizer:
                              type: boolean
                              description: Whether or not this attendee is an organizer.
                            isInGroup:
                              type: boolean
                              description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                            person:
                              type: object
                              description: Person object
                            groupAttendees:
                              type: array
                              description: If this attendee is a group, represents the list of individual attendees in the group.
                              items:
                                type: object
                                description: CalendarAttendee object
                            responseStatus:
                              type: string
                              enum:
                                - ACCEPTED
                                - DECLINED
                                - NO_RESPONSE
                                - TENTATIVE
                          type: object
                      isLimit:
                        type: boolean
                        description: Whether the total count of the people returned is at the retrieval limit.
                      total:
                        type: integer
                        description: Total number of attendees in this event.
                      numAccepted:
                        type: integer
                        description: Total number of attendees who have accepted this event.
                      numDeclined:
                        type: integer
                        description: Total number of attendees who have declined this event.
                      numNoResponse:
                        type: integer
                        description: Total number of attendees who have not responded to this event.
                      numTentative:
                        type: integer
                        description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                    type: object
                type: object
              app:
                required:
                  - datasource
                properties:
                  datasource:
                    type: string
                    description: The app or other repository type this represents
                  docType:
                    type: string
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  mimeType:
                    type: string
                    description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                  iconUrl:
                    type: string
                    description: If there is available icon URL.
                type: object
              collection:
                type: object
                description: Flattened Collection
                properties:
                  name:
                    type: string
                    description: The unique name of the Collection.
                  description:
                    type: string
                    description: A brief summary of the Collection's contents.
                  addedRoles:
                    type: array
                    description: A list of added user roles for the Collection.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  removedRoles:
                    type: array
                    description: A list of removed user roles for the Collection.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  audienceFilters:
                    type: array
                    description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                    items:
                      type: object
                      description: FacetFilter object
                  icon:
                    type: string
                    description: The emoji icon of this Collection.
                  adminLocked:
                    type: boolean
                    description: Indicates whether edits are allowed for everyone or only admins.
                  parentId:
                    type: integer
                    description: The parent of this Collection, or 0 if it's a top-level Collection.
                  thumbnail:
                    properties:
                      photoId:
                        type: string
                        description: Photo id if the thumbnail is from splash.
                      url:
                        type: string
                        description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                    type: object
                  allowedDatasource:
                    type: string
                    description: The datasource type this Collection can hold.
                  permissions:
                    type: object
                    description: Flattened ObjectPermissions
                    properties:
                      write:
                        type: object
                        description: Describes the write permissions levels that a user has for a specific feature
                        properties:
                          scopeType:
                            type: string
                            description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                            enum:
                              - GLOBAL
                              - OWN
                            properties: {}
                          create:
                            type: boolean
                            description: True if user has create permission for this feature and scope
                          update:
                            type: boolean
                            description: True if user has update permission for this feature and scope
                          delete:
                            type: boolean
                            description: True if user has delete permission for this feature and scope
                  id:
                    type: integer
                    description: The unique ID of the Collection.
                  createTime:
                    type: string
                    format: date-time
                  updateTime:
                    type: string
                    format: date-time
                  creator:
                    type: object
                    description: Person object
                  updatedBy:
                    type: object
                    description: Person object
                  itemCount:
                    type: integer
                    description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                  childCount:
                    type: integer
                    description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                  items:
                    type: array
                    description: The items in this Collection.
                    items:
                      type: object
                      description: CollectionItem object
                  pinMetadata:
                    required:
                      - pinnedCategories
                      - eligibleCategoriesForPinning
                    properties:
                      existingPins:
                        type: array
                        description: List of targets this Collection is pinned to.
                        items:
                          required:
                            - category
                          properties:
                            category:
                              type: string
                              description: Categories a Collection can be pinned to.
                              enum:
                                - COMPANY_RESOURCE
                                - DEPARTMENT_RESOURCE
                                - TEAM_RESOURCE
                            value:
                              type: string
                              description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                            target:
                              type: string
                              description: What targets can a Collection be pinned to.
                              enum:
                                - RESOURCE_CARD
                                - TEAM_PROFILE_PAGE
                          type: object
                      eligiblePins:
                        type: array
                        description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                        items:
                          required:
                            - id
                            - target
                          properties:
                            id:
                              type: integer
                              description: The ID of the Collection.
                            target:
                              required:
                                - category
                              properties:
                                category:
                                  type: string
                                  description: Categories a Collection can be pinned to.
                                  enum:
                                    - COMPANY_RESOURCE
                                    - DEPARTMENT_RESOURCE
                                    - TEAM_RESOURCE
                                value:
                                  type: string
                                  description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                target:
                                  type: string
                                  description: What targets can a Collection be pinned to.
                                  enum:
                                    - RESOURCE_CARD
                                    - TEAM_PROFILE_PAGE
                              type: object
                          type: object
                    type: object
                  shortcuts:
                    type: array
                    description: The names of the shortcuts (Go Links) that point to this Collection.
                    items:
                      type: string
                  children:
                    type: array
                    description: The children Collections of this Collection.
                    items:
                      type: object
                      description: Collection object
                  roles:
                    type: array
                    description: A list of user roles for the Collection.
                    items:
                      type: object
                      description: UserRoleSpecification object
              answerBoard:
                type: object
                description: PermissionedObject object
                properties:
                  name:
                    type: string
                    description: The unique name of the Collection.
                  description:
                    type: string
                    description: A brief summary of the Collection's contents.
                  addedRoles:
                    type: array
                    description: A list of added user roles for the Collection.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  removedRoles:
                    type: array
                    description: A list of removed user roles for the Collection.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  audienceFilters:
                    type: array
                    description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                    items:
                      type: object
                      description: FacetFilter object
                  id:
                    type: integer
                    description: The unique ID of the Answer Board.
                  createTime:
                    type: string
                    format: date-time
                  updateTime:
                    type: string
                    format: date-time
                  creator:
                    type: object
                    description: Person object
                  updatedBy:
                    type: object
                    description: Person object
                  itemCount:
                    type: integer
                    description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                  roles:
                    type: array
                    description: A list of user roles for the Answer Board.
                    items:
                      type: object
                      description: UserRoleSpecification object
                required:
                  - name
                  - id
                  - description
              code:
                example:
                  repoName: scio
                  fileName: README.md
                  matches:
                    - lineNumber: 1
                      content: Welcome to the beginning
                      ranges: []
                    - lineNumber: 2
                      content: Second line of the file
                      ranges: []
                    - lineNumber: 3
                      content: hello world hello world
                      ranges:
                        - startindex: 0
                          endIndex: 5
                        - startIndex: 12
                          endIndex: 17
                properties:
                  repoName:
                    type: string
                  fileName:
                    type: string
                  fileUrl:
                    type: string
                  lines:
                    type: array
                    items:
                      properties:
                        lineNumber:
                          type: integer
                        content:
                          type: string
                        ranges:
                          type: array
                          description: Index ranges depicting matched sections of the line
                          items:
                            type: object
                            description: TextRange object
                      type: object
                  isLastMatch:
                    type: boolean
                    description: Last file match for a repo
                type: object
              shortcut:
                type: object
                description: PermissionedObject object
                properties:
                  id:
                    type: integer
                    description: The opaque id of the user generated content.
                  inputAlias:
                    type: string
                    description: Link text following go/ prefix as entered by the user.
                  destinationUrl:
                    type: string
                    description: Destination URL for the shortcut.
                  destinationDocumentId:
                    type: string
                    description: Glean Document ID for the URL, if known.
                  description:
                    type: string
                    description: A short, plain text blurb to help people understand the intent of the shortcut.
                  unlisted:
                    type: boolean
                    description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                  urlTemplate:
                    type: string
                    description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                  addedRoles:
                    type: array
                    description: A list of user roles added for the Shortcut.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  removedRoles:
                    type: array
                    description: A list of user roles removed for the Shortcut.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  createdBy:
                    type: object
                    description: Person object
                  createTime:
                    type: string
                    format: date-time
                    description: The time the shortcut was created in ISO format (ISO 8601).
                  updatedBy:
                    type: object
                    description: Person object
                  updateTime:
                    type: string
                    format: date-time
                    description: The time the shortcut was updated in ISO format (ISO 8601).
                  destinationDocument:
                    type: object
                    description: Document object
                  intermediateUrl:
                    type: string
                    description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                  viewPrefix:
                    type: string
                    description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                  isExternal:
                    type: boolean
                    description: Indicates whether a shortcut is native or external.
                  editUrl:
                    type: string
                    description: The URL using which the user can access the edit page of the shortcut.
                  alias:
                    type: string
                    description: canonical link text following go/ prefix where hyphen/underscore is removed.
                  title:
                    type: string
                    description: Title for the Go Link
                  roles:
                    type: array
                    description: A list of user roles for the Go Link.
                    items:
                      type: object
                      description: UserRoleSpecification object
                required:
                  - inputAlias
              querySuggestions:
                properties:
                  suggestions:
                    type: array
                    items:
                      type: object
                      description: QuerySuggestion object
                  person:
                    type: object
                    description: Person object
                type: object
              relatedDocuments:
                type: array
                description: A list of documents related to this structured result.
                items:
                  type: object
                  description: RelatedDocuments object
              relatedQuestion:
                properties:
                  question:
                    type: string
                    description: The text of the related question
                  answer:
                    type: string
                    description: The answer for the related question
                  ranges:
                    type: array
                    description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                    items:
                      type: object
                      description: TextRange object
                type: object
              disambiguation:
                type: object
                description: A disambiguation between multiple entities with the same name
                properties:
                  name:
                    type: string
                    description: Name of the ambiguous entity
                  id:
                    type: string
                    description: The unique id of the entity in the knowledge graph
                  type:
                    type: string
                    description: The type of entity.
                    x-include-enum-class-prefix: true
                    enum:
                      - PERSON
                      - PROJECT
                      - CUSTOMER
              snippets:
                description: Any snippets associated to the populated object.
                type: array
                items:
                  required:
                    - snippet
                  example:
                    snippet: snippet
                    mimeType: mimeType
                  properties:
                    snippet:
                      type: string
                      description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                    mimeType:
                      type: string
                      description: The mime type of the snippets, currently either text/plain or text/html.
                    text:
                      type: string
                      description: A matching snippet from the document with no highlights.
                    snippetTextOrdering:
                      type: integer
                      description: Used for sorting based off the snippet's location within all_snippetable_text
                    ranges:
                      type: array
                      description: The bolded ranges within text.
                      items:
                        type: object
                        description: TextRange object
                    url:
                      type: string
                      description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                  type: object
              trackingToken:
                type: string
                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
              prominence:
                type: string
                description: The level of visual distinction that should be given to a result.
                x-enumDescriptions:
                  HERO: A high-confidence result that should feature prominently on the page.
                  PROMOTED: May not be the best result but should be given additional visual distinction.
                  STANDARD: Should not be distinct from any other results.
                enum:
                  - HERO
                  - PROMOTED
                  - STANDARD
              source:
                type: string
                description: Source context for this result. Possible values depend on the result type.
                enum:
                  - EXPERT_DETECTION
                  - ENTITY_NLQ
            type: object
        generatedQnaResult:
          properties:
            question:
              type: string
              description: Search query rephrased into a question.
            answer:
              type: string
              description: Answer generated for the given query or the generated question.
            followUpPrompts:
              type: array
              description: List of all follow-up prompts generated for the given query or the generated question.
              items:
                type: string
            followupActions:
              description: List of follow-up actions generated for the given query or the generated question.
              type: array
              items:
                description: A follow-up action that can be invoked by the user after a response. The action parameters are not included and need to be predicted/filled separately.
                properties:
                  actionRunId:
                    type: string
                    description: Unique identifier for this actionRun recommendation event.
                  actionInstanceId:
                    type: string
                    description: The ID of the action instance that will be invoked.
                  actionId:
                    type: string
                    description: The ID of the associated action.
                  recommendationText:
                    type: string
                    description: Text to be displayed to the user when recommending the action instance.
                  actionLabel:
                    type: string
                    description: The label to be used when displaying a button to execute this action instance.
                  userConfirmationRequired:
                    type: boolean
                    description: Whether user confirmation is needed before executing this action instance.
                type: object
            ranges:
              type: array
              description: Answer subsections to mark with special formatting (citations, bolding etc)
              items:
                type: object
                description: TextRange object
            status:
              type: string
              enum:
                - COMPUTING
                - DISABLED
                - FAILED
                - NO_ANSWER
                - SKIPPED
                - STREAMING
                - SUCCEEDED
                - TIMEOUT
              description: Status of backend generating the answer
            cursor:
              type: string
              description: An opaque cursor representing the search request
            trackingToken:
              type: string
              description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
          type: object
        errorInfo:
          x-speakeasy-name-override: GleanDataError
          properties:
            badGmailToken:
              type: boolean
              description: Indicates the gmail results could not be fetched due to bad token.
            badOutlookToken:
              type: boolean
              description: Indicates the outlook results could not be fetched due to bad token.
            invalidOperators:
              type: array
              description: Indicates results could not be fetched due to invalid operators in the query.
              items:
                properties:
                  key:
                    description: The operator key that has an invalid value.
                    type: string
                  value:
                    description: The invalid operator value.
                    type: string
                type: object
            errorMessages:
              type: array
              items:
                properties:
                  source:
                    description: The datasource this message relates to.
                    type: string
                  errorMessage:
                    type: string
                type: object
          type: object
        requestID:
          type: string
          description: A platform-generated request ID to correlate backend logs.
        backendTimeMillis:
          type: integer
          format: int64
          description: Time in milliseconds the backend took to respond to the request.
          example: 1100
        experimentIds:
          type: array
          description: List of experiment ids for the corresponding request.
          items:
            type: integer
            format: int64
        metadata:
          properties:
            rewrittenQuery:
              type: string
              description: A cleaned up or updated version of the query to be displayed in the query box. Useful for mapping visual facets to search operators.
            searchedQuery:
              type: string
              description: The actual query used to perform search and return results.
            searchedQueryRanges:
              type: array
              description: The bolded ranges within the searched query.
              items:
                type: object
                description: TextRange object
            originalQuery:
              type: string
              description: The query text sent by the client in the request.
            querySuggestion:
              type: object
              description: QuerySuggestion object
            additionalQuerySuggestions:
              properties:
                suggestions:
                  type: array
                  items:
                    type: object
                    description: QuerySuggestion object
                person:
                  type: object
                  description: Person object
              type: object
            negatedTerms:
              type: array
              description: A list of terms that were negated when processing the query.
              items:
                type: string
            modifiedQueryWasUsed:
              type: boolean
              description: A different query was performed than the one requested.
            originalQueryHadNoResults:
              type: boolean
              description: No results were found for the original query. The usage of this bit in conjunction with modifiedQueryWasUsed will dictate whether the full page replacement is 0-result or few-result based.
            searchWarning:
              required:
                - warningType
              properties:
                warningType:
                  type: string
                  enum:
                    - LONG_QUERY
                    - QUOTED_PUNCTUATION
                    - PUNCTUATION_ONLY
                    - COPYPASTED_QUOTES
                    - INVALID_OPERATOR
                    - MAYBE_INVALID_FACET_QUERY
                  description: The type of the warning.
                lastUsedTerm:
                  type: string
                  description: The last term we considered in the user's long query.
                quotesIgnoredQuery:
                  type: string
                  description: The query after ignoring/removing quotes.
                ignoredTerms:
                  type: array
                  description: A list of query terms that were ignored when generating search results, if any. For example, terms containing invalid filters such as "updated:invalid_date" will be ignored.
                  items:
                    type: string
              type: object
            triggeredExpertDetection:
              type: boolean
              description: Whether the query triggered expert detection results in the People tab.
            isNoQuotesSuggestion:
              type: boolean
              description: Whether the query was modified to remove quotes
          type: object
        facetResults:
          type: array
          items:
            properties:
              sourceName:
                type: string
                description: The source of this facet (e.g. container_name, type, last_updated_at).
                example: container_name
              operatorName:
                type: string
                description: How to display this facet. Currently supportes 'SelectSingle' and 'SelectMultiple'.
                example: SelectMultiple
              buckets:
                type: array
                description: A list of unique buckets that exist within this result set.
                items:
                  properties:
                    count:
                      type: integer
                      description: Estimated number of results in this facet.
                      example: 1
                    datasource:
                      type: string
                      example: jira
                      description: The datasource the value belongs to. This will be used by the all tab to show types across all datasources.
                    percentage:
                      type: integer
                      description: Estimated percentage of results in this facet.
                      example: 5
                    value:
                      properties:
                        stringValue:
                          type: string
                          example: engineering
                          description: The value that should be set in the FacetFilter when applying this filter to a search request.
                        integerValue:
                          type: integer
                          example: 5
                        displayLabel:
                          type: string
                          example: engineering
                          description: An optional user-friendly label to display in place of the facet value.
                        iconConfig:
                          description: Defines how to render an icon
                          example:
                            color: '#343CED'
                            key: person_icon
                            iconType: GLYPH
                            name: user
                          properties:
                            generatedBackgroundColorKey:
                              type: string
                            backgroundColor:
                              type: string
                            color:
                              type: string
                            key:
                              type: string
                            iconType:
                              enum:
                                - COLLECTION
                                - CUSTOM
                                - DATASOURCE
                                - DATASOURCE_INSTANCE
                                - FAVICON
                                - FILE_TYPE
                                - GENERATED_BACKGROUND
                                - GLYPH
                                - MIME_TYPE
                                - NO_ICON
                                - PERSON
                                - REACTIONS
                                - URL
                            masked:
                              type: boolean
                              description: Whether the icon should be masked based on current theme.
                            name:
                              type: string
                              description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
                            url:
                              type: string
                              description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
                          type: object
                      type: object
                  type: object
              hasMoreBuckets:
                type: boolean
                description: Returns true if more buckets exist than those returned. Additional buckets can be retrieve by requesting again with a higher facetBucketSize.
                example: false
              groupName:
                type: string
                description: For most facets this will be the empty string, meaning the facet is high-level and applies to all documents for the datasource. When non-empty, this is used to group facets together (i.e. group facets for each doctype for a certain datasource)
                example: Service Cloud
            type: object
        resultTabs:
          type: array
          description: All result tabs available for the current query. Populated if QUERY_METADATA is specified in the request.
          items:
            properties:
              id:
                type: string
                description: The unique ID of the tab. Can be passed in a search request to get results for that tab.
              count:
                type: integer
                description: The number of results in this tab for the current query.
              datasource:
                type: string
                description: The datasource associated with the tab, if any.
              datasourceInstance:
                type: string
                description: The datasource instance associated with the tab, if any.
            type: object
        resultTabIds:
          type: array
          description: The unique IDs of the result tabs to which this response belongs.
          items:
            type: string
        resultsDescription:
          properties:
            text:
              type: string
              description: Textual description of the results. Can be shown at the top of SERP, e.g. 'People who write about this topic' for experts in people tab.
            iconConfig:
              description: Defines how to render an icon
              example:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              properties:
                generatedBackgroundColorKey:
                  type: string
                backgroundColor:
                  type: string
                color:
                  type: string
                key:
                  type: string
                iconType:
                  enum:
                    - COLLECTION
                    - CUSTOM
                    - DATASOURCE
                    - DATASOURCE_INSTANCE
                    - FAVICON
                    - FILE_TYPE
                    - GENERATED_BACKGROUND
                    - GLYPH
                    - MIME_TYPE
                    - NO_ICON
                    - PERSON
                    - REACTIONS
                    - URL
                masked:
                  type: boolean
                  description: Whether the icon should be masked based on current theme.
                name:
                  type: string
                  description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
                url:
                  type: string
                  description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
              type: object
          type: object
        rewrittenFacetFilters:
          type: array
          description: The actual applied facet filters based on the operators and facetFilters in the query. Useful for mapping typed operators to visual facets.
          items:
            type: object
            description: FacetFilter object
        cursor:
          type: string
          description: Cursor that indicates the start of the next page of results. To be passed in "more" requests for this query.
        hasMoreResults:
          type: boolean
          description: Whether more results are available. Use cursor to retrieve them.
    SearchResult:
      type: object
      description: SearchResult object
    ResultsResponse:
      properties:
        trackingToken:
          type: string
          description: A token that should be passed for additional requests related to this request (such as more results requests).
        sessionInfo:
          properties:
            sessionTrackingToken:
              type: string
              description: A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab.
            tabId:
              type: string
              description: A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab.
            lastSeen:
              type: string
              format: date-time
              description: The last time the server saw this token.
            lastQuery:
              type: string
              description: The last query seen by the server.
          type: object
        results:
          type: array
          items:
            type: object
            description: SearchResult object
        structuredResults:
          type: array
          items:
            description: A single object that can support any object in the work graph. Only a single object will be populated.
            properties:
              document:
                type: object
                description: Document object
              person:
                type: object
                description: Person object
              customer:
                required:
                  - id
                  - company
                properties:
                  id:
                    type: string
                    description: Unique identifier.
                  domains:
                    type: array
                    description: Link to company's associated website domains.
                    items:
                      type: string
                  company:
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        description: User-friendly display name.
                      profileUrl:
                        type: string
                        description: Link to internal company company profile.
                      websiteUrls:
                        type: array
                        description: Link to company's associated websites.
                        items:
                          type: string
                      logoUrl:
                        type: string
                        description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                      location:
                        type: string
                        description: User facing string representing the company's location.
                        example: New York City
                      phone:
                        type: string
                        description: Phone number as a number string.
                      fax:
                        type: string
                        description: Fax number as a number string.
                      industry:
                        type: string
                        description: User facing string representing the company's industry.
                        example: Finances
                      annualRevenue:
                        type: number
                        format: double
                        description: Average company's annual revenue for reference.
                      numberOfEmployees:
                        type: integer
                        format: int64
                        description: Average company's number of employees for reference.
                      stockSymbol:
                        type: string
                        description: Company's stock symbol if company is public.
                      foundedDate:
                        type: string
                        format: date
                        description: The date when the company was founded.
                      about:
                        type: string
                        description: User facing description of company.
                        example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                    type: object
                  documentCounts:
                    type: object
                    description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                    additionalProperties:
                      type: integer
                  poc:
                    type: array
                    description: A list of POC for company.
                    items:
                      type: object
                      description: Person object
                  metadata:
                    properties:
                      datasourceId:
                        type: string
                        description: The user visible id of the salesforce customer account.
                      customData:
                        type: object
                        description: Custom fields specific to individual datasources
                        additionalProperties:
                          $ref: '#/components/schemas/CustomDataValue'
                    type: object
                  mergedCustomers:
                    type: array
                    description: A list of Customers.
                    items:
                      type: object
                      description: Customer object
                  startDate:
                    type: string
                    format: date
                    description: The date when the interaction with customer started.
                  contractAnnualRevenue:
                    type: number
                    format: double
                    description: Average contract annual revenue with that customer.
                  notes:
                    type: string
                    description: User facing (potentially generated) notes about company.
                    example: CIO is interested in trying out the product.
                type: object
              team:
                type: object
                description: PermissionedObject object
                properties:
                  relatedObjects:
                    type: object
                    description: A list of objects related to a source object.
                    additionalProperties:
                      $ref: '#/components/schemas/RelatedObjectEdge'
                  id:
                    type: string
                    description: Unique identifier
                  name:
                    type: string
                    description: Team name
                  description:
                    type: string
                    description: A description of the team
                  businessUnit:
                    type: string
                    description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  department:
                    type: string
                    description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  photoUrl:
                    type: string
                    format: url
                    description: A link to the team's photo.
                  bannerUrl:
                    type: string
                    format: url
                    description: A link to the team's banner photo.
                  externalLink:
                    type: string
                    format: uri
                    description: Link to a team page on the internet or your company's intranet
                  members:
                    type: array
                    description: The members on this team
                    items:
                      required:
                        - person
                      type: object
                      description: Metadata about the relationship of a person to a team.
                      properties:
                        person:
                          type: object
                          description: Person object
                        relationship:
                          type: string
                          description: The team member's relationship to the team. This defaults to MEMBER if not set.
                          default: MEMBER
                          enum:
                            - MEMBER
                            - MANAGER
                            - LEAD
                            - POINT_OF_CONTACT
                            - OTHER
                        customRelationshipStr:
                          type: string
                          description: Displayed name for the relationship if relationship is set to `OTHER`.
                        joinDate:
                          type: string
                          format: date-time
                          description: The team member's start date
                  memberCount:
                    type: integer
                    description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                  emails:
                    type: array
                    description: The emails for this team
                    items:
                      properties:
                        email:
                          type: string
                          format: email
                          description: An email address
                        type:
                          type: string
                          enum:
                            - PRIMARY
                            - SECONDARY
                            - ONCALL
                            - OTHER
                          default: OTHER
                        isUserGenerated:
                          type: boolean
                          description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                      type: object
                  customFields:
                    type: array
                    description: Customizable fields for additional team information.
                    items:
                      required:
                        - label
                        - values
                        - displayable
                      properties:
                        label:
                          type: string
                          description: A user-facing label for this field.
                        values:
                          type: array
                          items:
                            oneOf:
                              - properties:
                                  strText:
                                    type: string
                                    description: Text field for string value.
                                type: object
                              - properties:
                                  urlAnchor:
                                    type: string
                                    description: Anchor text for hyperlink.
                                  urlLink:
                                    type: string
                                    description: Link for this URL.
                                type: object
                              - properties:
                                  person:
                                    type: object
                                    description: Person object
                                type: object
                        displayable:
                          type: boolean
                          description: Determines whether the client should display this custom field
                          default: true
                      type: object
                  datasourceProfiles:
                    type: array
                    description: The datasource profiles of the team
                    items:
                      required:
                        - datasource
                        - handle
                      properties:
                        datasource:
                          type: string
                          example: github
                          description: The datasource the profile is of.
                        handle:
                          type: string
                          description: The display name of the entity in the given datasource.
                        url:
                          type: string
                          description: URL to view the entity's profile.
                        nativeAppUrl:
                          type: string
                          description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                        isUserGenerated:
                          type: boolean
                          description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                      type: object
                  datasource:
                    type: string
                    description: the data source of the team, e.g. GDRIVE
                  createdFrom:
                    type: string
                    description: For teams created from docs, the doc title. Otherwise empty.
                  lastUpdatedAt:
                    type: string
                    format: date-time
                    description: when this team was last updated.
                  status:
                    type: string
                    description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                    default: PROCESSED
                    enum:
                      - PROCESSED
                      - QUEUED_FOR_CREATION
                      - QUEUED_FOR_DELETION
                  canBeDeleted:
                    type: boolean
                    description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                    default: true
                  loggingId:
                    type: string
                    description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                required:
                  - id
                  - name
              customEntity:
                description: PermissionedObject object
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier.
                  title:
                    type: string
                    description: Title or name of the custom entity.
                  datasource:
                    type: string
                    description: The datasource the custom entity is from.
                  objectType:
                    type: string
                    description: The type of the entity. Interpretation is specific to each datasource
                  metadata:
                    properties:
                      customData:
                        type: object
                        description: Custom fields specific to individual datasources
                        additionalProperties:
                          $ref: '#/components/schemas/CustomDataValue'
                    type: object
                  roles:
                    type: array
                    description: A list of user roles for the custom entity explicitly granted by the owner.
                    items:
                      type: object
                      description: UserRoleSpecification object
              answer:
                type: object
                description: Answer object
              extractedQnA:
                properties:
                  heading:
                    type: string
                    description: Heading text that was matched to produce this result.
                  question:
                    type: string
                    description: Question text that was matched to produce this result.
                  questionResult:
                    type: object
                    description: SearchResult object
                type: object
              meeting:
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  url:
                    type: string
                  startTime:
                    type: string
                    format: date-time
                  endTime:
                    type: string
                    format: date-time
                  attendees:
                    properties:
                      people:
                        type: array
                        description: Full details of some of the attendees of this event
                        items:
                          required:
                            - person
                          properties:
                            isOrganizer:
                              type: boolean
                              description: Whether or not this attendee is an organizer.
                            isInGroup:
                              type: boolean
                              description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                            person:
                              type: object
                              description: Person object
                            groupAttendees:
                              type: array
                              description: If this attendee is a group, represents the list of individual attendees in the group.
                              items:
                                type: object
                                description: CalendarAttendee object
                            responseStatus:
                              type: string
                              enum:
                                - ACCEPTED
                                - DECLINED
                                - NO_RESPONSE
                                - TENTATIVE
                          type: object
                      isLimit:
                        type: boolean
                        description: Whether the total count of the people returned is at the retrieval limit.
                      total:
                        type: integer
                        description: Total number of attendees in this event.
                      numAccepted:
                        type: integer
                        description: Total number of attendees who have accepted this event.
                      numDeclined:
                        type: integer
                        description: Total number of attendees who have declined this event.
                      numNoResponse:
                        type: integer
                        description: Total number of attendees who have not responded to this event.
                      numTentative:
                        type: integer
                        description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                    type: object
                type: object
              app:
                required:
                  - datasource
                properties:
                  datasource:
                    type: string
                    description: The app or other repository type this represents
                  docType:
                    type: string
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  mimeType:
                    type: string
                    description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                  iconUrl:
                    type: string
                    description: If there is available icon URL.
                type: object
              collection:
                type: object
                description: Flattened Collection
                properties:
                  name:
                    type: string
                    description: The unique name of the Collection.
                  description:
                    type: string
                    description: A brief summary of the Collection's contents.
                  addedRoles:
                    type: array
                    description: A list of added user roles for the Collection.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  removedRoles:
                    type: array
                    description: A list of removed user roles for the Collection.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  audienceFilters:
                    type: array
                    description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                    items:
                      type: object
                      description: FacetFilter object
                  icon:
                    type: string
                    description: The emoji icon of this Collection.
                  adminLocked:
                    type: boolean
                    description: Indicates whether edits are allowed for everyone or only admins.
                  parentId:
                    type: integer
                    description: The parent of this Collection, or 0 if it's a top-level Collection.
                  thumbnail:
                    properties:
                      photoId:
                        type: string
                        description: Photo id if the thumbnail is from splash.
                      url:
                        type: string
                        description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                    type: object
                  allowedDatasource:
                    type: string
                    description: The datasource type this Collection can hold.
                  permissions:
                    type: object
                    description: Flattened ObjectPermissions
                    properties:
                      write:
                        type: object
                        description: Describes the write permissions levels that a user has for a specific feature
                        properties:
                          scopeType:
                            type: string
                            description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                            enum:
                              - GLOBAL
                              - OWN
                            properties: {}
                          create:
                            type: boolean
                            description: True if user has create permission for this feature and scope
                          update:
                            type: boolean
                            description: True if user has update permission for this feature and scope
                          delete:
                            type: boolean
                            description: True if user has delete permission for this feature and scope
                  id:
                    type: integer
                    description: The unique ID of the Collection.
                  createTime:
                    type: string
                    format: date-time
                  updateTime:
                    type: string
                    format: date-time
                  creator:
                    type: object
                    description: Person object
                  updatedBy:
                    type: object
                    description: Person object
                  itemCount:
                    type: integer
                    description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                  childCount:
                    type: integer
                    description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                  items:
                    type: array
                    description: The items in this Collection.
                    items:
                      type: object
                      description: CollectionItem object
                  pinMetadata:
                    required:
                      - pinnedCategories
                      - eligibleCategoriesForPinning
                    properties:
                      existingPins:
                        type: array
                        description: List of targets this Collection is pinned to.
                        items:
                          required:
                            - category
                          properties:
                            category:
                              type: string
                              description: Categories a Collection can be pinned to.
                              enum:
                                - COMPANY_RESOURCE
                                - DEPARTMENT_RESOURCE
                                - TEAM_RESOURCE
                            value:
                              type: string
                              description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                            target:
                              type: string
                              description: What targets can a Collection be pinned to.
                              enum:
                                - RESOURCE_CARD
                                - TEAM_PROFILE_PAGE
                          type: object
                      eligiblePins:
                        type: array
                        description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                        items:
                          required:
                            - id
                            - target
                          properties:
                            id:
                              type: integer
                              description: The ID of the Collection.
                            target:
                              required:
                                - category
                              properties:
                                category:
                                  type: string
                                  description: Categories a Collection can be pinned to.
                                  enum:
                                    - COMPANY_RESOURCE
                                    - DEPARTMENT_RESOURCE
                                    - TEAM_RESOURCE
                                value:
                                  type: string
                                  description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                target:
                                  type: string
                                  description: What targets can a Collection be pinned to.
                                  enum:
                                    - RESOURCE_CARD
                                    - TEAM_PROFILE_PAGE
                              type: object
                          type: object
                    type: object
                  shortcuts:
                    type: array
                    description: The names of the shortcuts (Go Links) that point to this Collection.
                    items:
                      type: string
                  children:
                    type: array
                    description: The children Collections of this Collection.
                    items:
                      type: object
                      description: Collection object
                  roles:
                    type: array
                    description: A list of user roles for the Collection.
                    items:
                      type: object
                      description: UserRoleSpecification object
              answerBoard:
                type: object
                description: PermissionedObject object
                properties:
                  name:
                    type: string
                    description: The unique name of the Collection.
                  description:
                    type: string
                    description: A brief summary of the Collection's contents.
                  addedRoles:
                    type: array
                    description: A list of added user roles for the Collection.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  removedRoles:
                    type: array
                    description: A list of removed user roles for the Collection.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  audienceFilters:
                    type: array
                    description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                    items:
                      type: object
                      description: FacetFilter object
                  id:
                    type: integer
                    description: The unique ID of the Answer Board.
                  createTime:
                    type: string
                    format: date-time
                  updateTime:
                    type: string
                    format: date-time
                  creator:
                    type: object
                    description: Person object
                  updatedBy:
                    type: object
                    description: Person object
                  itemCount:
                    type: integer
                    description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                  roles:
                    type: array
                    description: A list of user roles for the Answer Board.
                    items:
                      type: object
                      description: UserRoleSpecification object
                required:
                  - name
                  - id
                  - description
              code:
                example:
                  repoName: scio
                  fileName: README.md
                  matches:
                    - lineNumber: 1
                      content: Welcome to the beginning
                      ranges: []
                    - lineNumber: 2
                      content: Second line of the file
                      ranges: []
                    - lineNumber: 3
                      content: hello world hello world
                      ranges:
                        - startindex: 0
                          endIndex: 5
                        - startIndex: 12
                          endIndex: 17
                properties:
                  repoName:
                    type: string
                  fileName:
                    type: string
                  fileUrl:
                    type: string
                  lines:
                    type: array
                    items:
                      properties:
                        lineNumber:
                          type: integer
                        content:
                          type: string
                        ranges:
                          type: array
                          description: Index ranges depicting matched sections of the line
                          items:
                            type: object
                            description: TextRange object
                      type: object
                  isLastMatch:
                    type: boolean
                    description: Last file match for a repo
                type: object
              shortcut:
                type: object
                description: PermissionedObject object
                properties:
                  id:
                    type: integer
                    description: The opaque id of the user generated content.
                  inputAlias:
                    type: string
                    description: Link text following go/ prefix as entered by the user.
                  destinationUrl:
                    type: string
                    description: Destination URL for the shortcut.
                  destinationDocumentId:
                    type: string
                    description: Glean Document ID for the URL, if known.
                  description:
                    type: string
                    description: A short, plain text blurb to help people understand the intent of the shortcut.
                  unlisted:
                    type: boolean
                    description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                  urlTemplate:
                    type: string
                    description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                  addedRoles:
                    type: array
                    description: A list of user roles added for the Shortcut.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  removedRoles:
                    type: array
                    description: A list of user roles removed for the Shortcut.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  createdBy:
                    type: object
                    description: Person object
                  createTime:
                    type: string
                    format: date-time
                    description: The time the shortcut was created in ISO format (ISO 8601).
                  updatedBy:
                    type: object
                    description: Person object
                  updateTime:
                    type: string
                    format: date-time
                    description: The time the shortcut was updated in ISO format (ISO 8601).
                  destinationDocument:
                    type: object
                    description: Document object
                  intermediateUrl:
                    type: string
                    description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                  viewPrefix:
                    type: string
                    description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                  isExternal:
                    type: boolean
                    description: Indicates whether a shortcut is native or external.
                  editUrl:
                    type: string
                    description: The URL using which the user can access the edit page of the shortcut.
                  alias:
                    type: string
                    description: canonical link text following go/ prefix where hyphen/underscore is removed.
                  title:
                    type: string
                    description: Title for the Go Link
                  roles:
                    type: array
                    description: A list of user roles for the Go Link.
                    items:
                      type: object
                      description: UserRoleSpecification object
                required:
                  - inputAlias
              querySuggestions:
                properties:
                  suggestions:
                    type: array
                    items:
                      type: object
                      description: QuerySuggestion object
                  person:
                    type: object
                    description: Person object
                type: object
              relatedDocuments:
                type: array
                description: A list of documents related to this structured result.
                items:
                  type: object
                  description: RelatedDocuments object
              relatedQuestion:
                properties:
                  question:
                    type: string
                    description: The text of the related question
                  answer:
                    type: string
                    description: The answer for the related question
                  ranges:
                    type: array
                    description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                    items:
                      type: object
                      description: TextRange object
                type: object
              disambiguation:
                type: object
                description: A disambiguation between multiple entities with the same name
                properties:
                  name:
                    type: string
                    description: Name of the ambiguous entity
                  id:
                    type: string
                    description: The unique id of the entity in the knowledge graph
                  type:
                    type: string
                    description: The type of entity.
                    x-include-enum-class-prefix: true
                    enum:
                      - PERSON
                      - PROJECT
                      - CUSTOMER
              snippets:
                description: Any snippets associated to the populated object.
                type: array
                items:
                  required:
                    - snippet
                  example:
                    snippet: snippet
                    mimeType: mimeType
                  properties:
                    snippet:
                      type: string
                      description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                    mimeType:
                      type: string
                      description: The mime type of the snippets, currently either text/plain or text/html.
                    text:
                      type: string
                      description: A matching snippet from the document with no highlights.
                    snippetTextOrdering:
                      type: integer
                      description: Used for sorting based off the snippet's location within all_snippetable_text
                    ranges:
                      type: array
                      description: The bolded ranges within text.
                      items:
                        type: object
                        description: TextRange object
                    url:
                      type: string
                      description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                  type: object
              trackingToken:
                type: string
                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
              prominence:
                type: string
                description: The level of visual distinction that should be given to a result.
                x-enumDescriptions:
                  HERO: A high-confidence result that should feature prominently on the page.
                  PROMOTED: May not be the best result but should be given additional visual distinction.
                  STANDARD: Should not be distinct from any other results.
                enum:
                  - HERO
                  - PROMOTED
                  - STANDARD
              source:
                type: string
                description: Source context for this result. Possible values depend on the result type.
                enum:
                  - EXPERT_DETECTION
                  - ENTITY_NLQ
            type: object
        generatedQnaResult:
          properties:
            question:
              type: string
              description: Search query rephrased into a question.
            answer:
              type: string
              description: Answer generated for the given query or the generated question.
            followUpPrompts:
              type: array
              description: List of all follow-up prompts generated for the given query or the generated question.
              items:
                type: string
            followupActions:
              description: List of follow-up actions generated for the given query or the generated question.
              type: array
              items:
                description: A follow-up action that can be invoked by the user after a response. The action parameters are not included and need to be predicted/filled separately.
                properties:
                  actionRunId:
                    type: string
                    description: Unique identifier for this actionRun recommendation event.
                  actionInstanceId:
                    type: string
                    description: The ID of the action instance that will be invoked.
                  actionId:
                    type: string
                    description: The ID of the associated action.
                  recommendationText:
                    type: string
                    description: Text to be displayed to the user when recommending the action instance.
                  actionLabel:
                    type: string
                    description: The label to be used when displaying a button to execute this action instance.
                  userConfirmationRequired:
                    type: boolean
                    description: Whether user confirmation is needed before executing this action instance.
                type: object
            ranges:
              type: array
              description: Answer subsections to mark with special formatting (citations, bolding etc)
              items:
                type: object
                description: TextRange object
            status:
              type: string
              enum:
                - COMPUTING
                - DISABLED
                - FAILED
                - NO_ANSWER
                - SKIPPED
                - STREAMING
                - SUCCEEDED
                - TIMEOUT
              description: Status of backend generating the answer
            cursor:
              type: string
              description: An opaque cursor representing the search request
            trackingToken:
              type: string
              description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
          type: object
        errorInfo:
          x-speakeasy-name-override: GleanDataError
          properties:
            badGmailToken:
              type: boolean
              description: Indicates the gmail results could not be fetched due to bad token.
            badOutlookToken:
              type: boolean
              description: Indicates the outlook results could not be fetched due to bad token.
            invalidOperators:
              type: array
              description: Indicates results could not be fetched due to invalid operators in the query.
              items:
                properties:
                  key:
                    description: The operator key that has an invalid value.
                    type: string
                  value:
                    description: The invalid operator value.
                    type: string
                type: object
            errorMessages:
              type: array
              items:
                properties:
                  source:
                    description: The datasource this message relates to.
                    type: string
                  errorMessage:
                    type: string
                type: object
          type: object
        requestID:
          type: string
          description: A platform-generated request ID to correlate backend logs.
        backendTimeMillis:
          type: integer
          format: int64
          description: Time in milliseconds the backend took to respond to the request.
          example: 1100
      type: object
    BackendExperimentsContext:
      properties:
        experimentIds:
          type: array
          description: List of experiment ids for the corresponding request.
          items:
            type: integer
            format: int64
      type: object
    SearchResponseMetadata:
      properties:
        rewrittenQuery:
          type: string
          description: A cleaned up or updated version of the query to be displayed in the query box. Useful for mapping visual facets to search operators.
        searchedQuery:
          type: string
          description: The actual query used to perform search and return results.
        searchedQueryRanges:
          type: array
          description: The bolded ranges within the searched query.
          items:
            type: object
            description: TextRange object
        originalQuery:
          type: string
          description: The query text sent by the client in the request.
        querySuggestion:
          type: object
          description: QuerySuggestion object
        additionalQuerySuggestions:
          properties:
            suggestions:
              type: array
              items:
                type: object
                description: QuerySuggestion object
            person:
              type: object
              description: Person object
          type: object
        negatedTerms:
          type: array
          description: A list of terms that were negated when processing the query.
          items:
            type: string
        modifiedQueryWasUsed:
          type: boolean
          description: A different query was performed than the one requested.
        originalQueryHadNoResults:
          type: boolean
          description: No results were found for the original query. The usage of this bit in conjunction with modifiedQueryWasUsed will dictate whether the full page replacement is 0-result or few-result based.
        searchWarning:
          required:
            - warningType
          properties:
            warningType:
              type: string
              enum:
                - LONG_QUERY
                - QUOTED_PUNCTUATION
                - PUNCTUATION_ONLY
                - COPYPASTED_QUOTES
                - INVALID_OPERATOR
                - MAYBE_INVALID_FACET_QUERY
              description: The type of the warning.
            lastUsedTerm:
              type: string
              description: The last term we considered in the user's long query.
            quotesIgnoredQuery:
              type: string
              description: The query after ignoring/removing quotes.
            ignoredTerms:
              type: array
              description: A list of query terms that were ignored when generating search results, if any. For example, terms containing invalid filters such as "updated:invalid_date" will be ignored.
              items:
                type: string
          type: object
        triggeredExpertDetection:
          type: boolean
          description: Whether the query triggered expert detection results in the People tab.
        isNoQuotesSuggestion:
          type: boolean
          description: Whether the query was modified to remove quotes
      type: object
    FacetResult:
      properties:
        sourceName:
          type: string
          description: The source of this facet (e.g. container_name, type, last_updated_at).
          example: container_name
        operatorName:
          type: string
          description: How to display this facet. Currently supportes 'SelectSingle' and 'SelectMultiple'.
          example: SelectMultiple
        buckets:
          type: array
          description: A list of unique buckets that exist within this result set.
          items:
            properties:
              count:
                type: integer
                description: Estimated number of results in this facet.
                example: 1
              datasource:
                type: string
                example: jira
                description: The datasource the value belongs to. This will be used by the all tab to show types across all datasources.
              percentage:
                type: integer
                description: Estimated percentage of results in this facet.
                example: 5
              value:
                properties:
                  stringValue:
                    type: string
                    example: engineering
                    description: The value that should be set in the FacetFilter when applying this filter to a search request.
                  integerValue:
                    type: integer
                    example: 5
                  displayLabel:
                    type: string
                    example: engineering
                    description: An optional user-friendly label to display in place of the facet value.
                  iconConfig:
                    description: Defines how to render an icon
                    example:
                      color: '#343CED'
                      key: person_icon
                      iconType: GLYPH
                      name: user
                    properties:
                      generatedBackgroundColorKey:
                        type: string
                      backgroundColor:
                        type: string
                      color:
                        type: string
                      key:
                        type: string
                      iconType:
                        enum:
                          - COLLECTION
                          - CUSTOM
                          - DATASOURCE
                          - DATASOURCE_INSTANCE
                          - FAVICON
                          - FILE_TYPE
                          - GENERATED_BACKGROUND
                          - GLYPH
                          - MIME_TYPE
                          - NO_ICON
                          - PERSON
                          - REACTIONS
                          - URL
                      masked:
                        type: boolean
                        description: Whether the icon should be masked based on current theme.
                      name:
                        type: string
                        description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
                      url:
                        type: string
                        description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
                    type: object
                type: object
            type: object
        hasMoreBuckets:
          type: boolean
          description: Returns true if more buckets exist than those returned. Additional buckets can be retrieve by requesting again with a higher facetBucketSize.
          example: false
        groupName:
          type: string
          description: For most facets this will be the empty string, meaning the facet is high-level and applies to all documents for the datasource. When non-empty, this is used to group facets together (i.e. group facets for each doctype for a certain datasource)
          example: Service Cloud
      type: object
    ResultTab:
      properties:
        id:
          type: string
          description: The unique ID of the tab. Can be passed in a search request to get results for that tab.
        count:
          type: integer
          description: The number of results in this tab for the current query.
        datasource:
          type: string
          description: The datasource associated with the tab, if any.
        datasourceInstance:
          type: string
          description: The datasource instance associated with the tab, if any.
      type: object
    ResultsDescription:
      properties:
        text:
          type: string
          description: Textual description of the results. Can be shown at the top of SERP, e.g. 'People who write about this topic' for experts in people tab.
        iconConfig:
          description: Defines how to render an icon
          example:
            color: '#343CED'
            key: person_icon
            iconType: GLYPH
            name: user
          properties:
            generatedBackgroundColorKey:
              type: string
            backgroundColor:
              type: string
            color:
              type: string
            key:
              type: string
            iconType:
              enum:
                - COLLECTION
                - CUSTOM
                - DATASOURCE
                - DATASOURCE_INSTANCE
                - FAVICON
                - FILE_TYPE
                - GENERATED_BACKGROUND
                - GLYPH
                - MIME_TYPE
                - NO_ICON
                - PERSON
                - REACTIONS
                - URL
            masked:
              type: boolean
              description: Whether the icon should be masked based on current theme.
            name:
              type: string
              description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
            url:
              type: string
              description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
          type: object
      type: object
    FacetFilter:
      type: object
      description: FacetFilter object
    Result:
      properties:
        structuredResults:
          type: array
          description: An array of entities in the work graph retrieved via a data request.
          items:
            description: A single object that can support any object in the work graph. Only a single object will be populated.
            properties:
              document:
                type: object
                description: Document object
              person:
                type: object
                description: Person object
              customer:
                required:
                  - id
                  - company
                properties:
                  id:
                    type: string
                    description: Unique identifier.
                  domains:
                    type: array
                    description: Link to company's associated website domains.
                    items:
                      type: string
                  company:
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        description: User-friendly display name.
                      profileUrl:
                        type: string
                        description: Link to internal company company profile.
                      websiteUrls:
                        type: array
                        description: Link to company's associated websites.
                        items:
                          type: string
                      logoUrl:
                        type: string
                        description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                      location:
                        type: string
                        description: User facing string representing the company's location.
                        example: New York City
                      phone:
                        type: string
                        description: Phone number as a number string.
                      fax:
                        type: string
                        description: Fax number as a number string.
                      industry:
                        type: string
                        description: User facing string representing the company's industry.
                        example: Finances
                      annualRevenue:
                        type: number
                        format: double
                        description: Average company's annual revenue for reference.
                      numberOfEmployees:
                        type: integer
                        format: int64
                        description: Average company's number of employees for reference.
                      stockSymbol:
                        type: string
                        description: Company's stock symbol if company is public.
                      foundedDate:
                        type: string
                        format: date
                        description: The date when the company was founded.
                      about:
                        type: string
                        description: User facing description of company.
                        example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                    type: object
                  documentCounts:
                    type: object
                    description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                    additionalProperties:
                      type: integer
                  poc:
                    type: array
                    description: A list of POC for company.
                    items:
                      type: object
                      description: Person object
                  metadata:
                    properties:
                      datasourceId:
                        type: string
                        description: The user visible id of the salesforce customer account.
                      customData:
                        type: object
                        description: Custom fields specific to individual datasources
                        additionalProperties:
                          $ref: '#/components/schemas/CustomDataValue'
                    type: object
                  mergedCustomers:
                    type: array
                    description: A list of Customers.
                    items:
                      type: object
                      description: Customer object
                  startDate:
                    type: string
                    format: date
                    description: The date when the interaction with customer started.
                  contractAnnualRevenue:
                    type: number
                    format: double
                    description: Average contract annual revenue with that customer.
                  notes:
                    type: string
                    description: User facing (potentially generated) notes about company.
                    example: CIO is interested in trying out the product.
                type: object
              team:
                type: object
                description: PermissionedObject object
                properties:
                  relatedObjects:
                    type: object
                    description: A list of objects related to a source object.
                    additionalProperties:
                      $ref: '#/components/schemas/RelatedObjectEdge'
                  id:
                    type: string
                    description: Unique identifier
                  name:
                    type: string
                    description: Team name
                  description:
                    type: string
                    description: A description of the team
                  businessUnit:
                    type: string
                    description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  department:
                    type: string
                    description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  photoUrl:
                    type: string
                    format: url
                    description: A link to the team's photo.
                  bannerUrl:
                    type: string
                    format: url
                    description: A link to the team's banner photo.
                  externalLink:
                    type: string
                    format: uri
                    description: Link to a team page on the internet or your company's intranet
                  members:
                    type: array
                    description: The members on this team
                    items:
                      required:
                        - person
                      type: object
                      description: Metadata about the relationship of a person to a team.
                      properties:
                        person:
                          type: object
                          description: Person object
                        relationship:
                          type: string
                          description: The team member's relationship to the team. This defaults to MEMBER if not set.
                          default: MEMBER
                          enum:
                            - MEMBER
                            - MANAGER
                            - LEAD
                            - POINT_OF_CONTACT
                            - OTHER
                        customRelationshipStr:
                          type: string
                          description: Displayed name for the relationship if relationship is set to `OTHER`.
                        joinDate:
                          type: string
                          format: date-time
                          description: The team member's start date
                  memberCount:
                    type: integer
                    description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                  emails:
                    type: array
                    description: The emails for this team
                    items:
                      properties:
                        email:
                          type: string
                          format: email
                          description: An email address
                        type:
                          type: string
                          enum:
                            - PRIMARY
                            - SECONDARY
                            - ONCALL
                            - OTHER
                          default: OTHER
                        isUserGenerated:
                          type: boolean
                          description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                      type: object
                  customFields:
                    type: array
                    description: Customizable fields for additional team information.
                    items:
                      required:
                        - label
                        - values
                        - displayable
                      properties:
                        label:
                          type: string
                          description: A user-facing label for this field.
                        values:
                          type: array
                          items:
                            oneOf:
                              - properties:
                                  strText:
                                    type: string
                                    description: Text field for string value.
                                type: object
                              - properties:
                                  urlAnchor:
                                    type: string
                                    description: Anchor text for hyperlink.
                                  urlLink:
                                    type: string
                                    description: Link for this URL.
                                type: object
                              - properties:
                                  person:
                                    type: object
                                    description: Person object
                                type: object
                        displayable:
                          type: boolean
                          description: Determines whether the client should display this custom field
                          default: true
                      type: object
                  datasourceProfiles:
                    type: array
                    description: The datasource profiles of the team
                    items:
                      required:
                        - datasource
                        - handle
                      properties:
                        datasource:
                          type: string
                          example: github
                          description: The datasource the profile is of.
                        handle:
                          type: string
                          description: The display name of the entity in the given datasource.
                        url:
                          type: string
                          description: URL to view the entity's profile.
                        nativeAppUrl:
                          type: string
                          description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                        isUserGenerated:
                          type: boolean
                          description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                      type: object
                  datasource:
                    type: string
                    description: the data source of the team, e.g. GDRIVE
                  createdFrom:
                    type: string
                    description: For teams created from docs, the doc title. Otherwise empty.
                  lastUpdatedAt:
                    type: string
                    format: date-time
                    description: when this team was last updated.
                  status:
                    type: string
                    description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                    default: PROCESSED
                    enum:
                      - PROCESSED
                      - QUEUED_FOR_CREATION
                      - QUEUED_FOR_DELETION
                  canBeDeleted:
                    type: boolean
                    description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                    default: true
                  loggingId:
                    type: string
                    description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                required:
                  - id
                  - name
              customEntity:
                description: PermissionedObject object
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier.
                  title:
                    type: string
                    description: Title or name of the custom entity.
                  datasource:
                    type: string
                    description: The datasource the custom entity is from.
                  objectType:
                    type: string
                    description: The type of the entity. Interpretation is specific to each datasource
                  metadata:
                    properties:
                      customData:
                        type: object
                        description: Custom fields specific to individual datasources
                        additionalProperties:
                          $ref: '#/components/schemas/CustomDataValue'
                    type: object
                  roles:
                    type: array
                    description: A list of user roles for the custom entity explicitly granted by the owner.
                    items:
                      type: object
                      description: UserRoleSpecification object
              answer:
                type: object
                description: Answer object
              extractedQnA:
                properties:
                  heading:
                    type: string
                    description: Heading text that was matched to produce this result.
                  question:
                    type: string
                    description: Question text that was matched to produce this result.
                  questionResult:
                    type: object
                    description: SearchResult object
                type: object
              meeting:
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  url:
                    type: string
                  startTime:
                    type: string
                    format: date-time
                  endTime:
                    type: string
                    format: date-time
                  attendees:
                    properties:
                      people:
                        type: array
                        description: Full details of some of the attendees of this event
                        items:
                          required:
                            - person
                          properties:
                            isOrganizer:
                              type: boolean
                              description: Whether or not this attendee is an organizer.
                            isInGroup:
                              type: boolean
                              description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                            person:
                              type: object
                              description: Person object
                            groupAttendees:
                              type: array
                              description: If this attendee is a group, represents the list of individual attendees in the group.
                              items:
                                type: object
                                description: CalendarAttendee object
                            responseStatus:
                              type: string
                              enum:
                                - ACCEPTED
                                - DECLINED
                                - NO_RESPONSE
                                - TENTATIVE
                          type: object
                      isLimit:
                        type: boolean
                        description: Whether the total count of the people returned is at the retrieval limit.
                      total:
                        type: integer
                        description: Total number of attendees in this event.
                      numAccepted:
                        type: integer
                        description: Total number of attendees who have accepted this event.
                      numDeclined:
                        type: integer
                        description: Total number of attendees who have declined this event.
                      numNoResponse:
                        type: integer
                        description: Total number of attendees who have not responded to this event.
                      numTentative:
                        type: integer
                        description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                    type: object
                type: object
              app:
                required:
                  - datasource
                properties:
                  datasource:
                    type: string
                    description: The app or other repository type this represents
                  docType:
                    type: string
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  mimeType:
                    type: string
                    description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                  iconUrl:
                    type: string
                    description: If there is available icon URL.
                type: object
              collection:
                type: object
                description: Flattened Collection
                properties:
                  name:
                    type: string
                    description: The unique name of the Collection.
                  description:
                    type: string
                    description: A brief summary of the Collection's contents.
                  addedRoles:
                    type: array
                    description: A list of added user roles for the Collection.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  removedRoles:
                    type: array
                    description: A list of removed user roles for the Collection.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  audienceFilters:
                    type: array
                    description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                    items:
                      type: object
                      description: FacetFilter object
                  icon:
                    type: string
                    description: The emoji icon of this Collection.
                  adminLocked:
                    type: boolean
                    description: Indicates whether edits are allowed for everyone or only admins.
                  parentId:
                    type: integer
                    description: The parent of this Collection, or 0 if it's a top-level Collection.
                  thumbnail:
                    properties:
                      photoId:
                        type: string
                        description: Photo id if the thumbnail is from splash.
                      url:
                        type: string
                        description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                    type: object
                  allowedDatasource:
                    type: string
                    description: The datasource type this Collection can hold.
                  permissions:
                    type: object
                    description: Flattened ObjectPermissions
                    properties:
                      write:
                        type: object
                        description: Describes the write permissions levels that a user has for a specific feature
                        properties:
                          scopeType:
                            type: string
                            description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                            enum:
                              - GLOBAL
                              - OWN
                            properties: {}
                          create:
                            type: boolean
                            description: True if user has create permission for this feature and scope
                          update:
                            type: boolean
                            description: True if user has update permission for this feature and scope
                          delete:
                            type: boolean
                            description: True if user has delete permission for this feature and scope
                  id:
                    type: integer
                    description: The unique ID of the Collection.
                  createTime:
                    type: string
                    format: date-time
                  updateTime:
                    type: string
                    format: date-time
                  creator:
                    type: object
                    description: Person object
                  updatedBy:
                    type: object
                    description: Person object
                  itemCount:
                    type: integer
                    description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                  childCount:
                    type: integer
                    description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                  items:
                    type: array
                    description: The items in this Collection.
                    items:
                      type: object
                      description: CollectionItem object
                  pinMetadata:
                    required:
                      - pinnedCategories
                      - eligibleCategoriesForPinning
                    properties:
                      existingPins:
                        type: array
                        description: List of targets this Collection is pinned to.
                        items:
                          required:
                            - category
                          properties:
                            category:
                              type: string
                              description: Categories a Collection can be pinned to.
                              enum:
                                - COMPANY_RESOURCE
                                - DEPARTMENT_RESOURCE
                                - TEAM_RESOURCE
                            value:
                              type: string
                              description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                            target:
                              type: string
                              description: What targets can a Collection be pinned to.
                              enum:
                                - RESOURCE_CARD
                                - TEAM_PROFILE_PAGE
                          type: object
                      eligiblePins:
                        type: array
                        description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                        items:
                          required:
                            - id
                            - target
                          properties:
                            id:
                              type: integer
                              description: The ID of the Collection.
                            target:
                              required:
                                - category
                              properties:
                                category:
                                  type: string
                                  description: Categories a Collection can be pinned to.
                                  enum:
                                    - COMPANY_RESOURCE
                                    - DEPARTMENT_RESOURCE
                                    - TEAM_RESOURCE
                                value:
                                  type: string
                                  description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                target:
                                  type: string
                                  description: What targets can a Collection be pinned to.
                                  enum:
                                    - RESOURCE_CARD
                                    - TEAM_PROFILE_PAGE
                              type: object
                          type: object
                    type: object
                  shortcuts:
                    type: array
                    description: The names of the shortcuts (Go Links) that point to this Collection.
                    items:
                      type: string
                  children:
                    type: array
                    description: The children Collections of this Collection.
                    items:
                      type: object
                      description: Collection object
                  roles:
                    type: array
                    description: A list of user roles for the Collection.
                    items:
                      type: object
                      description: UserRoleSpecification object
              answerBoard:
                type: object
                description: PermissionedObject object
                properties:
                  name:
                    type: string
                    description: The unique name of the Collection.
                  description:
                    type: string
                    description: A brief summary of the Collection's contents.
                  addedRoles:
                    type: array
                    description: A list of added user roles for the Collection.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  removedRoles:
                    type: array
                    description: A list of removed user roles for the Collection.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  audienceFilters:
                    type: array
                    description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                    items:
                      type: object
                      description: FacetFilter object
                  id:
                    type: integer
                    description: The unique ID of the Answer Board.
                  createTime:
                    type: string
                    format: date-time
                  updateTime:
                    type: string
                    format: date-time
                  creator:
                    type: object
                    description: Person object
                  updatedBy:
                    type: object
                    description: Person object
                  itemCount:
                    type: integer
                    description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                  roles:
                    type: array
                    description: A list of user roles for the Answer Board.
                    items:
                      type: object
                      description: UserRoleSpecification object
                required:
                  - name
                  - id
                  - description
              code:
                example:
                  repoName: scio
                  fileName: README.md
                  matches:
                    - lineNumber: 1
                      content: Welcome to the beginning
                      ranges: []
                    - lineNumber: 2
                      content: Second line of the file
                      ranges: []
                    - lineNumber: 3
                      content: hello world hello world
                      ranges:
                        - startindex: 0
                          endIndex: 5
                        - startIndex: 12
                          endIndex: 17
                properties:
                  repoName:
                    type: string
                  fileName:
                    type: string
                  fileUrl:
                    type: string
                  lines:
                    type: array
                    items:
                      properties:
                        lineNumber:
                          type: integer
                        content:
                          type: string
                        ranges:
                          type: array
                          description: Index ranges depicting matched sections of the line
                          items:
                            type: object
                            description: TextRange object
                      type: object
                  isLastMatch:
                    type: boolean
                    description: Last file match for a repo
                type: object
              shortcut:
                type: object
                description: PermissionedObject object
                properties:
                  id:
                    type: integer
                    description: The opaque id of the user generated content.
                  inputAlias:
                    type: string
                    description: Link text following go/ prefix as entered by the user.
                  destinationUrl:
                    type: string
                    description: Destination URL for the shortcut.
                  destinationDocumentId:
                    type: string
                    description: Glean Document ID for the URL, if known.
                  description:
                    type: string
                    description: A short, plain text blurb to help people understand the intent of the shortcut.
                  unlisted:
                    type: boolean
                    description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                  urlTemplate:
                    type: string
                    description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                  addedRoles:
                    type: array
                    description: A list of user roles added for the Shortcut.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  removedRoles:
                    type: array
                    description: A list of user roles removed for the Shortcut.
                    items:
                      type: object
                      description: UserRoleSpecification object
                  createdBy:
                    type: object
                    description: Person object
                  createTime:
                    type: string
                    format: date-time
                    description: The time the shortcut was created in ISO format (ISO 8601).
                  updatedBy:
                    type: object
                    description: Person object
                  updateTime:
                    type: string
                    format: date-time
                    description: The time the shortcut was updated in ISO format (ISO 8601).
                  destinationDocument:
                    type: object
                    description: Document object
                  intermediateUrl:
                    type: string
                    description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                  viewPrefix:
                    type: string
                    description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                  isExternal:
                    type: boolean
                    description: Indicates whether a shortcut is native or external.
                  editUrl:
                    type: string
                    description: The URL using which the user can access the edit page of the shortcut.
                  alias:
                    type: string
                    description: canonical link text following go/ prefix where hyphen/underscore is removed.
                  title:
                    type: string
                    description: Title for the Go Link
                  roles:
                    type: array
                    description: A list of user roles for the Go Link.
                    items:
                      type: object
                      description: UserRoleSpecification object
                required:
                  - inputAlias
              querySuggestions:
                properties:
                  suggestions:
                    type: array
                    items:
                      type: object
                      description: QuerySuggestion object
                  person:
                    type: object
                    description: Person object
                type: object
              relatedDocuments:
                type: array
                description: A list of documents related to this structured result.
                items:
                  type: object
                  description: RelatedDocuments object
              relatedQuestion:
                properties:
                  question:
                    type: string
                    description: The text of the related question
                  answer:
                    type: string
                    description: The answer for the related question
                  ranges:
                    type: array
                    description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                    items:
                      type: object
                      description: TextRange object
                type: object
              disambiguation:
                type: object
                description: A disambiguation between multiple entities with the same name
                properties:
                  name:
                    type: string
                    description: Name of the ambiguous entity
                  id:
                    type: string
                    description: The unique id of the entity in the knowledge graph
                  type:
                    type: string
                    description: The type of entity.
                    x-include-enum-class-prefix: true
                    enum:
                      - PERSON
                      - PROJECT
                      - CUSTOMER
              snippets:
                description: Any snippets associated to the populated object.
                type: array
                items:
                  required:
                    - snippet
                  example:
                    snippet: snippet
                    mimeType: mimeType
                  properties:
                    snippet:
                      type: string
                      description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                    mimeType:
                      type: string
                      description: The mime type of the snippets, currently either text/plain or text/html.
                    text:
                      type: string
                      description: A matching snippet from the document with no highlights.
                    snippetTextOrdering:
                      type: integer
                      description: Used for sorting based off the snippet's location within all_snippetable_text
                    ranges:
                      type: array
                      description: The bolded ranges within text.
                      items:
                        type: object
                        description: TextRange object
                    url:
                      type: string
                      description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                  type: object
              trackingToken:
                type: string
                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
              prominence:
                type: string
                description: The level of visual distinction that should be given to a result.
                x-enumDescriptions:
                  HERO: A high-confidence result that should feature prominently on the page.
                  PROMOTED: May not be the best result but should be given additional visual distinction.
                  STANDARD: Should not be distinct from any other results.
                enum:
                  - HERO
                  - PROMOTED
                  - STANDARD
              source:
                type: string
                description: Source context for this result. Possible values depend on the result type.
                enum:
                  - EXPERT_DETECTION
                  - ENTITY_NLQ
            type: object
        trackingToken:
          type: string
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
      type: object
    Document:
      type: object
      description: Document object
    SearchResultSnippet:
      required:
        - snippet
      example:
        snippet: snippet
        mimeType: mimeType
      properties:
        snippet:
          type: string
          description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
        mimeType:
          type: string
          description: The mime type of the snippets, currently either text/plain or text/html.
        text:
          type: string
          description: A matching snippet from the document with no highlights.
        snippetTextOrdering:
          type: integer
          description: Used for sorting based off the snippet's location within all_snippetable_text
        ranges:
          type: array
          description: The bolded ranges within text.
          items:
            type: object
            description: TextRange object
        url:
          type: string
          description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
      type: object
    RelatedDocuments:
      type: object
      description: RelatedDocuments object
    ClusterGroup:
      required:
        - visibleCountHint
      properties:
        clusteredResults:
          type: array
          description: A list of results that should be displayed as associated with this result.
          items:
            type: object
            description: SearchResult object
        clusterType:
          type: string
          description: The reason for inclusion of clusteredResults.
          enum:
            - SIMILAR
            - FRESHNESS
            - TITLE
            - CONTENT
            - NONE
            - THREAD_REPLY
            - THREAD_ROOT
            - PREFIX
            - SUFFIX
        visibleCountHint:
          type: integer
          description: The default number of results to display before truncating and showing a "see more" link
      type: object
    ClusterTypeEnum:
      type: string
      description: The reason for inclusion of clusteredResults.
      enum:
        - SIMILAR
        - FRESHNESS
        - TITLE
        - CONTENT
        - NONE
        - THREAD_REPLY
        - THREAD_ROOT
        - PREFIX
        - SUFFIX
    QuerySuggestionList:
      properties:
        suggestions:
          type: array
          items:
            type: object
            description: QuerySuggestion object
        person:
          type: object
          description: Person object
      type: object
    QuerySuggestion:
      type: object
      description: QuerySuggestion object
    SearchResultProminenceEnum:
      type: string
      description: |
        The level of visual distinction that should be given to a result.
      x-enumDescriptions:
        HERO: A high-confidence result that should feature prominently on the page.
        PROMOTED: May not be the best result but should be given additional visual distinction.
        STANDARD: Should not be distinct from any other results.
      enum:
        - HERO
        - PROMOTED
        - STANDARD
    PinDocument:
      type: object
      properties:
        queries:
          type: array
          description: The query strings for which the pinned result will show.
          items:
            type: string
        audienceFilters:
          type: array
          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
        id:
          type: string
          description: The opaque id of the pin.
        documentId:
          type: string
          description: The document which should be a pinned result.
        attribution:
          type: object
          description: Person object
        updatedBy:
          type: object
          description: Person object
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
      required:
        - documentId
    SessionInfo:
      properties:
        sessionTrackingToken:
          type: string
          description: A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab.
        tabId:
          type: string
          description: A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab.
        lastSeen:
          type: string
          format: date-time
          description: The last time the server saw this token.
        lastQuery:
          type: string
          description: The last query seen by the server.
      type: object
    StructuredResult:
      description: A single object that can support any object in the work graph. Only a single object will be populated.
      properties:
        document:
          type: object
          description: Document object
        person:
          type: object
          description: Person object
        customer:
          required:
            - id
            - company
          properties:
            id:
              type: string
              description: Unique identifier.
            domains:
              type: array
              description: Link to company's associated website domains.
              items:
                type: string
            company:
              required:
                - name
              properties:
                name:
                  type: string
                  description: User-friendly display name.
                profileUrl:
                  type: string
                  description: Link to internal company company profile.
                websiteUrls:
                  type: array
                  description: Link to company's associated websites.
                  items:
                    type: string
                logoUrl:
                  type: string
                  description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                location:
                  type: string
                  description: User facing string representing the company's location.
                  example: New York City
                phone:
                  type: string
                  description: Phone number as a number string.
                fax:
                  type: string
                  description: Fax number as a number string.
                industry:
                  type: string
                  description: User facing string representing the company's industry.
                  example: Finances
                annualRevenue:
                  type: number
                  format: double
                  description: Average company's annual revenue for reference.
                numberOfEmployees:
                  type: integer
                  format: int64
                  description: Average company's number of employees for reference.
                stockSymbol:
                  type: string
                  description: Company's stock symbol if company is public.
                foundedDate:
                  type: string
                  format: date
                  description: The date when the company was founded.
                about:
                  type: string
                  description: User facing description of company.
                  example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
              type: object
            documentCounts:
              type: object
              description: A map of {string, int} pairs representing counts of each document type associated with this customer.
              additionalProperties:
                type: integer
            poc:
              type: array
              description: A list of POC for company.
              items:
                type: object
                description: Person object
            metadata:
              properties:
                datasourceId:
                  type: string
                  description: The user visible id of the salesforce customer account.
                customData:
                  type: object
                  description: CustomData object
              type: object
            mergedCustomers:
              type: array
              description: A list of Customers.
              items:
                type: object
                description: Customer object
            startDate:
              type: string
              format: date
              description: The date when the interaction with customer started.
            contractAnnualRevenue:
              type: number
              format: double
              description: Average contract annual revenue with that customer.
            notes:
              type: string
              description: User facing (potentially generated) notes about company.
              example: CIO is interested in trying out the product.
          type: object
        team:
          type: object
          description: PermissionedObject object
          properties:
            relatedObjects:
              type: object
              description: A list of objects related to a source object.
              additionalProperties:
                $ref: '#/components/schemas/RelatedObjectEdge'
            id:
              type: string
              description: Unique identifier
            name:
              type: string
              description: Team name
            description:
              type: string
              description: A description of the team
            businessUnit:
              type: string
              description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
            department:
              type: string
              description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
            photoUrl:
              type: string
              format: url
              description: A link to the team's photo.
            bannerUrl:
              type: string
              format: url
              description: A link to the team's banner photo.
            externalLink:
              type: string
              format: uri
              description: Link to a team page on the internet or your company's intranet
            members:
              type: array
              description: The members on this team
              items:
                required:
                  - person
                type: object
                description: Metadata about the relationship of a person to a team.
                properties:
                  person:
                    type: object
                    description: Person object
                  relationship:
                    type: string
                    description: The team member's relationship to the team. This defaults to MEMBER if not set.
                    default: MEMBER
                    enum:
                      - MEMBER
                      - MANAGER
                      - LEAD
                      - POINT_OF_CONTACT
                      - OTHER
                  customRelationshipStr:
                    type: string
                    description: Displayed name for the relationship if relationship is set to `OTHER`.
                  joinDate:
                    type: string
                    format: date-time
                    description: The team member's start date
            memberCount:
              type: integer
              description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
            emails:
              type: array
              description: The emails for this team
              items:
                properties:
                  email:
                    type: string
                    format: email
                    description: An email address
                  type:
                    type: string
                    enum:
                      - PRIMARY
                      - SECONDARY
                      - ONCALL
                      - OTHER
                    default: OTHER
                  isUserGenerated:
                    type: boolean
                    description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                type: object
            customFields:
              type: array
              description: Customizable fields for additional team information.
              items:
                required:
                  - label
                  - values
                  - displayable
                properties:
                  label:
                    type: string
                    description: A user-facing label for this field.
                  values:
                    type: array
                    items:
                      oneOf:
                        - properties:
                            strText:
                              type: string
                              description: Text field for string value.
                          type: object
                        - properties:
                            urlAnchor:
                              type: string
                              description: Anchor text for hyperlink.
                            urlLink:
                              type: string
                              description: Link for this URL.
                          type: object
                        - properties:
                            person:
                              type: object
                              description: Person object
                          type: object
                  displayable:
                    type: boolean
                    description: Determines whether the client should display this custom field
                    default: true
                type: object
            datasourceProfiles:
              type: array
              description: The datasource profiles of the team
              items:
                required:
                  - datasource
                  - handle
                properties:
                  datasource:
                    type: string
                    example: github
                    description: The datasource the profile is of.
                  handle:
                    type: string
                    description: The display name of the entity in the given datasource.
                  url:
                    type: string
                    description: URL to view the entity's profile.
                  nativeAppUrl:
                    type: string
                    description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                  isUserGenerated:
                    type: boolean
                    description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                type: object
            datasource:
              type: string
              description: the data source of the team, e.g. GDRIVE
            createdFrom:
              type: string
              description: For teams created from docs, the doc title. Otherwise empty.
            lastUpdatedAt:
              type: string
              format: date-time
              description: when this team was last updated.
            status:
              type: string
              description: whether this team is fully processed or there are still unprocessed operations that'll affect it
              default: PROCESSED
              enum:
                - PROCESSED
                - QUEUED_FOR_CREATION
                - QUEUED_FOR_DELETION
            canBeDeleted:
              type: boolean
              description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
              default: true
            loggingId:
              type: string
              description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
          required:
            - id
            - name
        customEntity:
          description: PermissionedObject object
          type: object
          properties:
            id:
              type: string
              description: Unique identifier.
            title:
              type: string
              description: Title or name of the custom entity.
            datasource:
              type: string
              description: The datasource the custom entity is from.
            objectType:
              type: string
              description: The type of the entity. Interpretation is specific to each datasource
            metadata:
              properties:
                customData:
                  type: object
                  description: CustomData object
              type: object
            roles:
              type: array
              description: A list of user roles for the custom entity explicitly granted by the owner.
              items:
                type: object
                description: UserRoleSpecification object
        answer:
          type: object
          description: Answer object
        extractedQnA:
          properties:
            heading:
              type: string
              description: Heading text that was matched to produce this result.
            question:
              type: string
              description: Question text that was matched to produce this result.
            questionResult:
              type: object
              description: SearchResult object
          type: object
        meeting:
          properties:
            id:
              type: string
            title:
              type: string
            description:
              type: string
            url:
              type: string
            startTime:
              type: string
              format: date-time
            endTime:
              type: string
              format: date-time
            attendees:
              properties:
                people:
                  type: array
                  description: Full details of some of the attendees of this event
                  items:
                    required:
                      - person
                    properties:
                      isOrganizer:
                        type: boolean
                        description: Whether or not this attendee is an organizer.
                      isInGroup:
                        type: boolean
                        description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                      person:
                        type: object
                        description: Person object
                      groupAttendees:
                        type: array
                        description: If this attendee is a group, represents the list of individual attendees in the group.
                        items:
                          type: object
                          description: CalendarAttendee object
                      responseStatus:
                        type: string
                        enum:
                          - ACCEPTED
                          - DECLINED
                          - NO_RESPONSE
                          - TENTATIVE
                    type: object
                isLimit:
                  type: boolean
                  description: Whether the total count of the people returned is at the retrieval limit.
                total:
                  type: integer
                  description: Total number of attendees in this event.
                numAccepted:
                  type: integer
                  description: Total number of attendees who have accepted this event.
                numDeclined:
                  type: integer
                  description: Total number of attendees who have declined this event.
                numNoResponse:
                  type: integer
                  description: Total number of attendees who have not responded to this event.
                numTentative:
                  type: integer
                  description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
              type: object
          type: object
        app:
          required:
            - datasource
          properties:
            datasource:
              type: string
              description: The app or other repository type this represents
            docType:
              type: string
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
            mimeType:
              type: string
              description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
            iconUrl:
              type: string
              description: If there is available icon URL.
          type: object
        collection:
          type: object
          description: Flattened Collection
          properties:
            name:
              type: string
              description: The unique name of the Collection.
            description:
              type: string
              description: A brief summary of the Collection's contents.
            addedRoles:
              type: array
              description: A list of added user roles for the Collection.
              items:
                type: object
                description: UserRoleSpecification object
            removedRoles:
              type: array
              description: A list of removed user roles for the Collection.
              items:
                type: object
                description: UserRoleSpecification object
            audienceFilters:
              type: array
              description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
              items:
                type: object
                description: FacetFilter object
            icon:
              type: string
              description: The emoji icon of this Collection.
            adminLocked:
              type: boolean
              description: Indicates whether edits are allowed for everyone or only admins.
            parentId:
              type: integer
              description: The parent of this Collection, or 0 if it's a top-level Collection.
            thumbnail:
              properties:
                photoId:
                  type: string
                  description: Photo id if the thumbnail is from splash.
                url:
                  type: string
                  description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
              type: object
            allowedDatasource:
              type: string
              description: The datasource type this Collection can hold.
            permissions:
              type: object
              description: Flattened ObjectPermissions
              properties:
                write:
                  type: object
                  description: Describes the write permissions levels that a user has for a specific feature
                  properties:
                    scopeType:
                      type: string
                      description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                      enum:
                        - GLOBAL
                        - OWN
                      properties: {}
                    create:
                      type: boolean
                      description: True if user has create permission for this feature and scope
                    update:
                      type: boolean
                      description: True if user has update permission for this feature and scope
                    delete:
                      type: boolean
                      description: True if user has delete permission for this feature and scope
            id:
              type: integer
              description: The unique ID of the Collection.
            createTime:
              type: string
              format: date-time
            updateTime:
              type: string
              format: date-time
            creator:
              type: object
              description: Person object
            updatedBy:
              type: object
              description: Person object
            itemCount:
              type: integer
              description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
            childCount:
              type: integer
              description: The number of children Collections. Separated from the actual children so we can grab the count without children.
            items:
              type: array
              description: The items in this Collection.
              items:
                type: object
                description: CollectionItem object
            pinMetadata:
              required:
                - pinnedCategories
                - eligibleCategoriesForPinning
              properties:
                existingPins:
                  type: array
                  description: List of targets this Collection is pinned to.
                  items:
                    type: object
                    description: CollectionPinTarget object
                eligiblePins:
                  type: array
                  description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                  items:
                    required:
                      - id
                      - target
                    properties:
                      id:
                        type: integer
                        description: The ID of the Collection.
                      target:
                        type: object
                        description: CollectionPinTarget object
                    type: object
              type: object
            shortcuts:
              type: array
              description: The names of the shortcuts (Go Links) that point to this Collection.
              items:
                type: string
            children:
              type: array
              description: The children Collections of this Collection.
              items:
                type: object
                description: Collection object
            roles:
              type: array
              description: A list of user roles for the Collection.
              items:
                type: object
                description: UserRoleSpecification object
        answerBoard:
          type: object
          description: PermissionedObject object
          properties:
            name:
              type: string
              description: The unique name of the Collection.
            description:
              type: string
              description: A brief summary of the Collection's contents.
            addedRoles:
              type: array
              description: A list of added user roles for the Collection.
              items:
                type: object
                description: UserRoleSpecification object
            removedRoles:
              type: array
              description: A list of removed user roles for the Collection.
              items:
                type: object
                description: UserRoleSpecification object
            audienceFilters:
              type: array
              description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
              items:
                type: object
                description: FacetFilter object
            id:
              type: integer
              description: The unique ID of the Answer Board.
            createTime:
              type: string
              format: date-time
            updateTime:
              type: string
              format: date-time
            creator:
              type: object
              description: Person object
            updatedBy:
              type: object
              description: Person object
            itemCount:
              type: integer
              description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
            roles:
              type: array
              description: A list of user roles for the Answer Board.
              items:
                type: object
                description: UserRoleSpecification object
          required:
            - name
            - id
            - description
        code:
          example:
            repoName: scio
            fileName: README.md
            matches:
              - lineNumber: 1
                content: Welcome to the beginning
                ranges: []
              - lineNumber: 2
                content: Second line of the file
                ranges: []
              - lineNumber: 3
                content: hello world hello world
                ranges:
                  - startindex: 0
                    endIndex: 5
                  - startIndex: 12
                    endIndex: 17
          properties:
            repoName:
              type: string
            fileName:
              type: string
            fileUrl:
              type: string
            lines:
              type: array
              items:
                properties:
                  lineNumber:
                    type: integer
                  content:
                    type: string
                  ranges:
                    type: array
                    description: Index ranges depicting matched sections of the line
                    items:
                      type: object
                      description: TextRange object
                type: object
            isLastMatch:
              type: boolean
              description: Last file match for a repo
          type: object
        shortcut:
          type: object
          description: PermissionedObject object
          properties:
            id:
              type: integer
              description: The opaque id of the user generated content.
            inputAlias:
              type: string
              description: Link text following go/ prefix as entered by the user.
            destinationUrl:
              type: string
              description: Destination URL for the shortcut.
            destinationDocumentId:
              type: string
              description: Glean Document ID for the URL, if known.
            description:
              type: string
              description: A short, plain text blurb to help people understand the intent of the shortcut.
            unlisted:
              type: boolean
              description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
            urlTemplate:
              type: string
              description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
            addedRoles:
              type: array
              description: A list of user roles added for the Shortcut.
              items:
                type: object
                description: UserRoleSpecification object
            removedRoles:
              type: array
              description: A list of user roles removed for the Shortcut.
              items:
                type: object
                description: UserRoleSpecification object
            createdBy:
              type: object
              description: Person object
            createTime:
              type: string
              format: date-time
              description: The time the shortcut was created in ISO format (ISO 8601).
            updatedBy:
              type: object
              description: Person object
            updateTime:
              type: string
              format: date-time
              description: The time the shortcut was updated in ISO format (ISO 8601).
            destinationDocument:
              type: object
              description: Document object
            intermediateUrl:
              type: string
              description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
            viewPrefix:
              type: string
              description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
            isExternal:
              type: boolean
              description: Indicates whether a shortcut is native or external.
            editUrl:
              type: string
              description: The URL using which the user can access the edit page of the shortcut.
            alias:
              type: string
              description: canonical link text following go/ prefix where hyphen/underscore is removed.
            title:
              type: string
              description: Title for the Go Link
            roles:
              type: array
              description: A list of user roles for the Go Link.
              items:
                type: object
                description: UserRoleSpecification object
          required:
            - inputAlias
        querySuggestions:
          type: object
          description: QuerySuggestionList object
        relatedDocuments:
          type: array
          description: A list of documents related to this structured result.
          items:
            type: object
            description: RelatedDocuments object
        relatedQuestion:
          properties:
            question:
              type: string
              description: The text of the related question
            answer:
              type: string
              description: The answer for the related question
            ranges:
              type: array
              description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
              items:
                type: object
                description: TextRange object
          type: object
        disambiguation:
          type: object
          description: A disambiguation between multiple entities with the same name
          properties:
            name:
              type: string
              description: Name of the ambiguous entity
            id:
              type: string
              description: The unique id of the entity in the knowledge graph
            type:
              type: string
              description: The type of entity.
              x-include-enum-class-prefix: true
              enum:
                - PERSON
                - PROJECT
                - CUSTOMER
        snippets:
          description: Any snippets associated to the populated object.
          type: array
          items:
            required:
              - snippet
            example:
              snippet: snippet
              mimeType: mimeType
            properties:
              snippet:
                type: string
                description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
              mimeType:
                type: string
                description: The mime type of the snippets, currently either text/plain or text/html.
              text:
                type: string
                description: A matching snippet from the document with no highlights.
              snippetTextOrdering:
                type: integer
                description: Used for sorting based off the snippet's location within all_snippetable_text
              ranges:
                type: array
                description: The bolded ranges within text.
                items:
                  type: object
                  description: TextRange object
              url:
                type: string
                description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
            type: object
        trackingToken:
          type: string
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
        prominence:
          type: string
          description: The level of visual distinction that should be given to a result.
          x-enumDescriptions:
            HERO: A high-confidence result that should feature prominently on the page.
            PROMOTED: May not be the best result but should be given additional visual distinction.
            STANDARD: Should not be distinct from any other results.
          enum:
            - HERO
            - PROMOTED
            - STANDARD
        source:
          type: string
          description: Source context for this result. Possible values depend on the result type.
          enum:
            - EXPERT_DETECTION
            - ENTITY_NLQ
      type: object
    GeneratedQna:
      properties:
        question:
          type: string
          description: Search query rephrased into a question.
        answer:
          type: string
          description: Answer generated for the given query or the generated question.
        followUpPrompts:
          type: array
          description: List of all follow-up prompts generated for the given query or the generated question.
          items:
            type: string
        followupActions:
          description: List of follow-up actions generated for the given query or the generated question.
          type: array
          items:
            description: A follow-up action that can be invoked by the user after a response. The action parameters are not included and need to be predicted/filled separately.
            properties:
              actionRunId:
                type: string
                description: Unique identifier for this actionRun recommendation event.
              actionInstanceId:
                type: string
                description: The ID of the action instance that will be invoked.
              actionId:
                type: string
                description: The ID of the associated action.
              recommendationText:
                type: string
                description: Text to be displayed to the user when recommending the action instance.
              actionLabel:
                type: string
                description: The label to be used when displaying a button to execute this action instance.
              userConfirmationRequired:
                type: boolean
                description: Whether user confirmation is needed before executing this action instance.
            type: object
        ranges:
          type: array
          description: Answer subsections to mark with special formatting (citations, bolding etc)
          items:
            type: object
            description: TextRange object
        status:
          type: string
          enum:
            - COMPUTING
            - DISABLED
            - FAILED
            - NO_ANSWER
            - SKIPPED
            - STREAMING
            - SUCCEEDED
            - TIMEOUT
          description: Status of backend generating the answer
        cursor:
          type: string
          description: An opaque cursor representing the search request
        trackingToken:
          type: string
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
      type: object
    ErrorInfo:
      x-speakeasy-name-override: GleanDataError
      properties:
        badGmailToken:
          type: boolean
          description: Indicates the gmail results could not be fetched due to bad token.
        badOutlookToken:
          type: boolean
          description: Indicates the outlook results could not be fetched due to bad token.
        invalidOperators:
          type: array
          description: Indicates results could not be fetched due to invalid operators in the query.
          items:
            properties:
              key:
                description: The operator key that has an invalid value.
                type: string
              value:
                description: The invalid operator value.
                type: string
            type: object
        errorMessages:
          type: array
          items:
            properties:
              source:
                description: The datasource this message relates to.
                type: string
              errorMessage:
                type: string
            type: object
      type: object
    TextRange:
      type: object
      description: TextRange object
    SearchWarning:
      required:
        - warningType
      properties:
        warningType:
          type: string
          enum:
            - LONG_QUERY
            - QUOTED_PUNCTUATION
            - PUNCTUATION_ONLY
            - COPYPASTED_QUOTES
            - INVALID_OPERATOR
            - MAYBE_INVALID_FACET_QUERY
          description: The type of the warning.
        lastUsedTerm:
          type: string
          description: The last term we considered in the user's long query.
        quotesIgnoredQuery:
          type: string
          description: The query after ignoring/removing quotes.
        ignoredTerms:
          type: array
          description: A list of query terms that were ignored when generating search results, if any. For example, terms containing invalid filters such as "updated:invalid_date" will be ignored.
          items:
            type: string
      type: object
    FacetBucket:
      properties:
        count:
          type: integer
          description: Estimated number of results in this facet.
          example: 1
        datasource:
          type: string
          example: jira
          description: The datasource the value belongs to. This will be used by the all tab to show types across all datasources.
        percentage:
          type: integer
          description: Estimated percentage of results in this facet.
          example: 5
        value:
          properties:
            stringValue:
              type: string
              example: engineering
              description: The value that should be set in the FacetFilter when applying this filter to a search request.
            integerValue:
              type: integer
              example: 5
            displayLabel:
              type: string
              example: engineering
              description: An optional user-friendly label to display in place of the facet value.
            iconConfig:
              description: Defines how to render an icon
              example:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              properties:
                generatedBackgroundColorKey:
                  type: string
                backgroundColor:
                  type: string
                color:
                  type: string
                key:
                  type: string
                iconType:
                  enum:
                    - COLLECTION
                    - CUSTOM
                    - DATASOURCE
                    - DATASOURCE_INSTANCE
                    - FAVICON
                    - FILE_TYPE
                    - GENERATED_BACKGROUND
                    - GLYPH
                    - MIME_TYPE
                    - NO_ICON
                    - PERSON
                    - REACTIONS
                    - URL
                masked:
                  type: boolean
                  description: Whether the icon should be masked based on current theme.
                name:
                  type: string
                  description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
                url:
                  type: string
                  description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
              type: object
          type: object
      type: object
    IconConfig:
      description: Defines how to render an icon
      example:
        color: '#343CED'
        key: person_icon
        iconType: GLYPH
        name: user
      properties:
        generatedBackgroundColorKey:
          type: string
        backgroundColor:
          type: string
        color:
          type: string
        key:
          type: string
        iconType:
          enum:
            - COLLECTION
            - CUSTOM
            - DATASOURCE
            - DATASOURCE_INSTANCE
            - FAVICON
            - FILE_TYPE
            - GENERATED_BACKGROUND
            - GLYPH
            - MIME_TYPE
            - NO_ICON
            - PERSON
            - REACTIONS
            - URL
        masked:
          type: boolean
          description: Whether the icon should be masked based on current theme.
        name:
          type: string
          description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
        url:
          type: string
          description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
      type: object
    FacetFilterValue:
      type: object
      description: FacetFilterValue object
    ConnectorType:
      type: object
      description: ConnectorType object
    DocumentContent:
      type: object
      description: DocumentContent object
    DocumentMetadata:
      example:
        container: container
        parentId: JIRA_EN-1337
        createTime: '2000-01-23T04:56:07.000Z'
        datasource: datasource
        author:
          name: name
        documentId: documentId
        updateTime: '2000-01-23T04:56:07.000Z'
        mimeType: mimeType
        objectType: Feature Request
        components:
          - Backend
          - Networking
        status:
          - Done
        customData:
          someCustomField: someCustomValue
      properties:
        datasource:
          type: string
        datasourceInstance:
          type: string
          description: The datasource instance from which the document was extracted.
        objectType:
          type: string
          description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
        container:
          type: string
          description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
        containerId:
          type: string
          description: The Glean Document ID of the container. Uniquely identifies the container.
        superContainerId:
          type: string
          description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
        parentId:
          type: string
          description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
        mimeType:
          type: string
        documentId:
          type: string
          description: The index-wide unique identifier.
        loggingId:
          type: string
          description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
        documentIdHash:
          type: string
          description: Hash of the Glean Document ID.
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        author:
          type: object
          description: Person object
        owner:
          type: object
          description: Person object
        mentionedPeople:
          type: array
          description: A list of people mentioned in the document.
          items:
            type: object
            description: Person object
        visibility:
          type: string
          description: The level of visibility of the document as understood by our system.
          x-enumDescriptions:
            PRIVATE: Only one person is able to see the document.
            SPECIFIC_PEOPLE_AND_GROUPS: Only specific people and/or groups can see the document.
            DOMAIN_LINK: Anyone in the domain with the link can see the document.
            DOMAIN_VISIBLE: Anyone in the domain can search for the document.
            PUBLIC_LINK: Anyone with the link can see the document.
            PUBLIC_VISIBLE: Anyone on the internet can search for the document.
          enum:
            - PRIVATE
            - SPECIFIC_PEOPLE_AND_GROUPS
            - DOMAIN_LINK
            - DOMAIN_VISIBLE
            - PUBLIC_LINK
            - PUBLIC_VISIBLE
        components:
          type: array
          description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
          items:
            type: string
        status:
          type: string
          description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
        statusCategory:
          type: string
          description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
        pins:
          type: array
          description: A list of stars associated with this result.  "Pin" is an older name.
          items:
            type: object
            properties:
              queries:
                type: array
                description: The query strings for which the pinned result will show.
                items:
                  type: string
              audienceFilters:
                type: array
                description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                items:
                  type: object
                  description: FacetFilter object
              id:
                type: string
                description: The opaque id of the pin.
              documentId:
                type: string
                description: The document which should be a pinned result.
              attribution:
                type: object
                description: Person object
              updatedBy:
                type: object
                description: Person object
              createTime:
                type: string
                format: date-time
              updateTime:
                type: string
                format: date-time
            required:
              - documentId
        priority:
          type: string
          description: The document priority. Interpretation is datasource specific.
        assignedTo:
          type: object
          description: Person object
        updatedBy:
          type: object
          description: Person object
        labels:
          type: array
          description: A list of tags for the document. Interpretation is datasource specific.
          items:
            type: string
        collections:
          type: array
          description: A list of collections that the document belongs to.
          items:
            type: object
            description: Flattened Collection
            properties:
              name:
                type: string
                description: The unique name of the Collection.
              description:
                type: string
                description: A brief summary of the Collection's contents.
              addedRoles:
                type: array
                description: A list of added user roles for the Collection.
                items:
                  type: object
                  description: UserRoleSpecification object
              removedRoles:
                type: array
                description: A list of removed user roles for the Collection.
                items:
                  type: object
                  description: UserRoleSpecification object
              audienceFilters:
                type: array
                description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                items:
                  type: object
                  description: FacetFilter object
              icon:
                type: string
                description: The emoji icon of this Collection.
              adminLocked:
                type: boolean
                description: Indicates whether edits are allowed for everyone or only admins.
              parentId:
                type: integer
                description: The parent of this Collection, or 0 if it's a top-level Collection.
              thumbnail:
                properties:
                  photoId:
                    type: string
                    description: Photo id if the thumbnail is from splash.
                  url:
                    type: string
                    description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                type: object
              allowedDatasource:
                type: string
                description: The datasource type this Collection can hold.
              permissions:
                type: object
                description: Flattened ObjectPermissions
                properties:
                  write:
                    type: object
                    description: Describes the write permissions levels that a user has for a specific feature
                    properties:
                      scopeType:
                        type: string
                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                        enum:
                          - GLOBAL
                          - OWN
                        properties: {}
                      create:
                        type: boolean
                        description: True if user has create permission for this feature and scope
                      update:
                        type: boolean
                        description: True if user has update permission for this feature and scope
                      delete:
                        type: boolean
                        description: True if user has delete permission for this feature and scope
              id:
                type: integer
                description: The unique ID of the Collection.
              createTime:
                type: string
                format: date-time
              updateTime:
                type: string
                format: date-time
              creator:
                type: object
                description: Person object
              updatedBy:
                type: object
                description: Person object
              itemCount:
                type: integer
                description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
              childCount:
                type: integer
                description: The number of children Collections. Separated from the actual children so we can grab the count without children.
              items:
                type: array
                description: The items in this Collection.
                items:
                  type: object
                  description: CollectionItem object
              pinMetadata:
                required:
                  - pinnedCategories
                  - eligibleCategoriesForPinning
                properties:
                  existingPins:
                    type: array
                    description: List of targets this Collection is pinned to.
                    items:
                      type: object
                      description: CollectionPinTarget object
                  eligiblePins:
                    type: array
                    description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                    items:
                      required:
                        - id
                        - target
                      properties:
                        id:
                          type: integer
                          description: The ID of the Collection.
                        target:
                          type: object
                          description: CollectionPinTarget object
                      type: object
                type: object
              shortcuts:
                type: array
                description: The names of the shortcuts (Go Links) that point to this Collection.
                items:
                  type: string
              children:
                type: array
                description: The children Collections of this Collection.
                items:
                  type: object
                  description: Collection object
              roles:
                type: array
                description: A list of user roles for the Collection.
                items:
                  type: object
                  description: UserRoleSpecification object
        datasourceId:
          type: string
          description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
        interactions:
          properties:
            numComments:
              type: integer
              description: The count of comments (thread replies in the case of slack).
            numReactions:
              type: integer
              description: The count of reactions on the document.
            reactions:
              type: array
              description: To be deprecated in favor of reacts. A (potentially non-exhaustive) list of reactions for the document.
              deprecated: true
              items:
                type: string
            reacts:
              type: array
              items:
                properties:
                  type:
                    type: string
                  count:
                    type: integer
                    description: The count of the reaction type on the document.
                  reactors:
                    type: array
                    items:
                      type: object
                      description: Person object
                  reactedByViewer:
                    type: boolean
                    description: Whether the user in context reacted with this type to the document.
                type: object
            shares:
              type: array
              description: Describes instances of someone posting a link to this document in one of our indexed datasources.
              items:
                description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
                required:
                  - numDaysAgo
                properties:
                  numDaysAgo:
                    type: integer
                    description: The number of days that has passed since the share happened
                  sharer:
                    type: object
                    description: Person object
                  sharingDocument:
                    type: object
                    description: Document object
                type: object
            visitorCount:
              required:
                - count
              properties:
                count:
                  type: integer
                  description: The counter value
                period:
                  properties:
                    minDaysFromNow:
                      type: integer
                      description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                      deprecated: true
                    maxDaysFromNow:
                      type: integer
                      description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                      deprecated: true
                    start:
                      properties:
                        epochSeconds:
                          type: integer
                          description: Epoch seconds. Has precedence over daysFromNow.
                        daysFromNow:
                          type: integer
                          description: The number of days from now. Specification relative to current time. Can be negative.
                      type: object
                    end:
                      properties:
                        epochSeconds:
                          type: integer
                          description: Epoch seconds. Has precedence over daysFromNow.
                        daysFromNow:
                          type: integer
                          description: The number of days from now. Specification relative to current time. Can be negative.
                      type: object
                  type: object
                org:
                  type: string
                  description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
              type: object
          type: object
        verification:
          required:
            - state
          properties:
            state:
              type: string
              enum:
                - UNVERIFIED
                - VERIFIED
                - DEPRECATED
              description: The verification state for the document.
            metadata:
              required:
                - documentId
              properties:
                lastVerifier:
                  type: object
                  description: Person object
                lastVerificationTs:
                  type: integer
                  description: The unix timestamp of the verification (in seconds since epoch UTC).
                expirationTs:
                  type: integer
                  description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
                document:
                  type: object
                  description: Document object
                reminders:
                  type: array
                  description: Info about all outstanding verification reminders for the document if exists.
                  items:
                    required:
                      - assignee
                      - remindAt
                    properties:
                      assignee:
                        type: object
                        description: Person object
                      requestor:
                        type: object
                        description: Person object
                      remindAt:
                        type: integer
                        description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                      createdAt:
                        type: integer
                        description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                      reason:
                        type: string
                        description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                    type: object
                lastReminder:
                  required:
                    - assignee
                    - remindAt
                  properties:
                    assignee:
                      type: object
                      description: Person object
                    requestor:
                      type: object
                      description: Person object
                    remindAt:
                      type: integer
                      description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                    createdAt:
                      type: integer
                      description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                    reason:
                      type: string
                      description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                  type: object
                visitorCount:
                  type: array
                  description: Number of visitors to the document during included time periods.
                  items:
                    required:
                      - count
                    properties:
                      count:
                        type: integer
                        description: The counter value
                      period:
                        properties:
                          minDaysFromNow:
                            type: integer
                            description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                            deprecated: true
                          maxDaysFromNow:
                            type: integer
                            description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                            deprecated: true
                          start:
                            properties:
                              epochSeconds:
                                type: integer
                                description: Epoch seconds. Has precedence over daysFromNow.
                              daysFromNow:
                                type: integer
                                description: The number of days from now. Specification relative to current time. Can be negative.
                            type: object
                          end:
                            properties:
                              epochSeconds:
                                type: integer
                                description: Epoch seconds. Has precedence over daysFromNow.
                              daysFromNow:
                                type: integer
                                description: The number of days from now. Specification relative to current time. Can be negative.
                            type: object
                        type: object
                      org:
                        type: string
                        description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                    type: object
                candidateVerifiers:
                  type: array
                  description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
                  items:
                    type: object
                    description: Person object
              type: object
          type: object
        viewerInfo:
          properties:
            role:
              type: string
              enum:
                - ANSWER_MODERATOR
                - OWNER
                - VIEWER
              description: DEPRECATED - use permissions instead. Viewer's role on the specific document.
              deprecated: true
            lastViewedTime:
              type: string
              format: date-time
          type: object
        permissions:
          type: object
          description: ObjectPermissions object
        visitCount:
          required:
            - count
          properties:
            count:
              type: integer
              description: The counter value
            period:
              properties:
                minDaysFromNow:
                  type: integer
                  description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                  deprecated: true
                maxDaysFromNow:
                  type: integer
                  description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                  deprecated: true
                start:
                  properties:
                    epochSeconds:
                      type: integer
                      description: Epoch seconds. Has precedence over daysFromNow.
                    daysFromNow:
                      type: integer
                      description: The number of days from now. Specification relative to current time. Can be negative.
                  type: object
                end:
                  properties:
                    epochSeconds:
                      type: integer
                      description: Epoch seconds. Has precedence over daysFromNow.
                    daysFromNow:
                      type: integer
                      description: The number of days from now. Specification relative to current time. Can be negative.
                  type: object
              type: object
            org:
              type: string
              description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
          type: object
        shortcuts:
          type: array
          description: A list of shortcuts of which destination URL is for the document.
          items:
            type: object
            description: PermissionedObject object
            properties:
              id:
                type: integer
                description: The opaque id of the user generated content.
              inputAlias:
                type: string
                description: Link text following go/ prefix as entered by the user.
              destinationUrl:
                type: string
                description: Destination URL for the shortcut.
              destinationDocumentId:
                type: string
                description: Glean Document ID for the URL, if known.
              description:
                type: string
                description: A short, plain text blurb to help people understand the intent of the shortcut.
              unlisted:
                type: boolean
                description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
              urlTemplate:
                type: string
                description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
              addedRoles:
                type: array
                description: A list of user roles added for the Shortcut.
                items:
                  type: object
                  description: UserRoleSpecification object
              removedRoles:
                type: array
                description: A list of user roles removed for the Shortcut.
                items:
                  type: object
                  description: UserRoleSpecification object
              createdBy:
                type: object
                description: Person object
              createTime:
                type: string
                format: date-time
                description: The time the shortcut was created in ISO format (ISO 8601).
              updatedBy:
                type: object
                description: Person object
              updateTime:
                type: string
                format: date-time
                description: The time the shortcut was updated in ISO format (ISO 8601).
              destinationDocument:
                type: object
                description: Document object
              intermediateUrl:
                type: string
                description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
              viewPrefix:
                type: string
                description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
              isExternal:
                type: boolean
                description: Indicates whether a shortcut is native or external.
              editUrl:
                type: string
                description: The URL using which the user can access the edit page of the shortcut.
              alias:
                type: string
                description: canonical link text following go/ prefix where hyphen/underscore is removed.
              title:
                type: string
                description: Title for the Go Link
              roles:
                type: array
                description: A list of user roles for the Go Link.
                items:
                  type: object
                  description: UserRoleSpecification object
            required:
              - inputAlias
        path:
          type: string
          description: For file datasources like onedrive/github etc this has the path to the file
        customData:
          type: object
          description: CustomData object
        documentCategory:
          type: string
          description: The document's document_category(.proto).
        contactPerson:
          type: object
          description: Person object
        thumbnail:
          properties:
            photoId:
              type: string
              description: Photo id if the thumbnail is from splash.
            url:
              type: string
              description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
          type: object
        indexStatus:
          properties:
            lastCrawledTime:
              description: When the document was last crawled
              type: string
              format: date-time
            lastIndexedTime:
              description: When the document was last indexed
              type: string
              format: date-time
          type: object
        ancestors:
          type: array
          description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
          items:
            type: object
            description: Document object
      type: object
    DocumentSection:
      type: object
      description: DocumentSection object
    Person:
      type: object
      description: Person object
    SearchProviderInfo:
      type: object
      description: SearchProviderInfo object
    SearchRequestOptions:
      type: object
      description: SearchRequestOptions object
    SearchRequestInputDetails:
      type: object
      description: SearchRequestInputDetails object
    PinDocumentMutableProperties:
      properties:
        queries:
          type: array
          description: The query strings for which the pinned result will show.
          items:
            type: string
        audienceFilters:
          type: array
          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
      type: object
    Customer:
      required:
        - id
        - company
      properties:
        id:
          type: string
          description: Unique identifier.
        domains:
          type: array
          description: Link to company's associated website domains.
          items:
            type: string
        company:
          required:
            - name
          properties:
            name:
              type: string
              description: User-friendly display name.
            profileUrl:
              type: string
              description: Link to internal company company profile.
            websiteUrls:
              type: array
              description: Link to company's associated websites.
              items:
                type: string
            logoUrl:
              type: string
              description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
            location:
              type: string
              description: User facing string representing the company's location.
              example: New York City
            phone:
              type: string
              description: Phone number as a number string.
            fax:
              type: string
              description: Fax number as a number string.
            industry:
              type: string
              description: User facing string representing the company's industry.
              example: Finances
            annualRevenue:
              type: number
              format: double
              description: Average company's annual revenue for reference.
            numberOfEmployees:
              type: integer
              format: int64
              description: Average company's number of employees for reference.
            stockSymbol:
              type: string
              description: Company's stock symbol if company is public.
            foundedDate:
              type: string
              format: date
              description: The date when the company was founded.
            about:
              type: string
              description: User facing description of company.
              example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
          type: object
        documentCounts:
          type: object
          description: A map of {string, int} pairs representing counts of each document type associated with this customer.
          additionalProperties:
            type: integer
        poc:
          type: array
          description: A list of POC for company.
          items:
            type: object
            description: Person object
        metadata:
          properties:
            datasourceId:
              type: string
              description: The user visible id of the salesforce customer account.
            customData:
              type: object
              description: CustomData object
          type: object
        mergedCustomers:
          type: array
          description: A list of Customers.
          items:
            type: object
            description: Customer object
        startDate:
          type: string
          format: date
          description: The date when the interaction with customer started.
        contractAnnualRevenue:
          type: number
          format: double
          description: Average contract annual revenue with that customer.
        notes:
          type: string
          description: User facing (potentially generated) notes about company.
          example: CIO is interested in trying out the product.
      type: object
    Team:
      type: object
      description: PermissionedObject object
      properties:
        relatedObjects:
          type: object
          description: A list of objects related to a source object.
          additionalProperties:
            $ref: '#/components/schemas/RelatedObjectEdge'
        id:
          type: string
          description: Unique identifier
        name:
          type: string
          description: Team name
        description:
          type: string
          description: A description of the team
        businessUnit:
          type: string
          description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
        department:
          type: string
          description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
        photoUrl:
          type: string
          format: url
          description: A link to the team's photo.
        bannerUrl:
          type: string
          format: url
          description: A link to the team's banner photo.
        externalLink:
          type: string
          format: uri
          description: Link to a team page on the internet or your company's intranet
        members:
          type: array
          description: The members on this team
          items:
            required:
              - person
            type: object
            description: Metadata about the relationship of a person to a team.
            properties:
              person:
                type: object
                description: Person object
              relationship:
                type: string
                description: The team member's relationship to the team. This defaults to MEMBER if not set.
                default: MEMBER
                enum:
                  - MEMBER
                  - MANAGER
                  - LEAD
                  - POINT_OF_CONTACT
                  - OTHER
              customRelationshipStr:
                type: string
                description: Displayed name for the relationship if relationship is set to `OTHER`.
              joinDate:
                type: string
                format: date-time
                description: The team member's start date
        memberCount:
          type: integer
          description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
        emails:
          type: array
          description: The emails for this team
          items:
            properties:
              email:
                type: string
                format: email
                description: An email address
              type:
                type: string
                enum:
                  - PRIMARY
                  - SECONDARY
                  - ONCALL
                  - OTHER
                default: OTHER
              isUserGenerated:
                type: boolean
                description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
            type: object
        customFields:
          type: array
          description: Customizable fields for additional team information.
          items:
            required:
              - label
              - values
              - displayable
            properties:
              label:
                type: string
                description: A user-facing label for this field.
              values:
                type: array
                items:
                  oneOf:
                    - properties:
                        strText:
                          type: string
                          description: Text field for string value.
                      type: object
                    - properties:
                        urlAnchor:
                          type: string
                          description: Anchor text for hyperlink.
                        urlLink:
                          type: string
                          description: Link for this URL.
                      type: object
                    - properties:
                        person:
                          type: object
                          description: Person object
                      type: object
              displayable:
                type: boolean
                description: Determines whether the client should display this custom field
                default: true
            type: object
        datasourceProfiles:
          type: array
          description: The datasource profiles of the team
          items:
            required:
              - datasource
              - handle
            properties:
              datasource:
                type: string
                example: github
                description: The datasource the profile is of.
              handle:
                type: string
                description: The display name of the entity in the given datasource.
              url:
                type: string
                description: URL to view the entity's profile.
              nativeAppUrl:
                type: string
                description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
              isUserGenerated:
                type: boolean
                description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
            type: object
        datasource:
          type: string
          description: the data source of the team, e.g. GDRIVE
        createdFrom:
          type: string
          description: For teams created from docs, the doc title. Otherwise empty.
        lastUpdatedAt:
          type: string
          format: date-time
          description: when this team was last updated.
        status:
          type: string
          description: whether this team is fully processed or there are still unprocessed operations that'll affect it
          default: PROCESSED
          enum:
            - PROCESSED
            - QUEUED_FOR_CREATION
            - QUEUED_FOR_DELETION
        canBeDeleted:
          type: boolean
          description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
          default: true
        loggingId:
          type: string
          description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
      required:
        - id
        - name
    CustomEntity:
      description: PermissionedObject object
      type: object
      properties:
        id:
          type: string
          description: Unique identifier.
        title:
          type: string
          description: Title or name of the custom entity.
        datasource:
          type: string
          description: The datasource the custom entity is from.
        objectType:
          type: string
          description: The type of the entity. Interpretation is specific to each datasource
        metadata:
          properties:
            customData:
              type: object
              description: CustomData object
          type: object
        roles:
          type: array
          description: A list of user roles for the custom entity explicitly granted by the owner.
          items:
            type: object
            description: UserRoleSpecification object
    Answer:
      type: object
      description: PermissionedObject object
      properties:
        id:
          type: integer
          description: The opaque ID of the Answer.
          example: 3
        docId:
          type: string
          description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
          example: ANSWERS_answer_3
        question:
          type: string
          example: Why is the sky blue?
        questionVariations:
          type: array
          description: Additional ways of phrasing this question.
          items:
            type: string
        bodyText:
          type: string
          description: The plain text answer to the question.
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
        boardId:
          type: integer
          description: The parent board ID of this Answer, or 0 if it's a floating Answer.
        audienceFilters:
          type: array
          description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
        addedRoles:
          type: array
          description: A list of user roles for the answer added by the owner.
          items:
            type: object
            description: UserRoleSpecification object
        removedRoles:
          type: array
          description: A list of user roles for the answer removed by the owner.
          items:
            type: object
            description: UserRoleSpecification object
        roles:
          type: array
          description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
          items:
            type: object
            description: UserRoleSpecification object
        sourceDocumentSpec:
          type: object
          description: DocumentSpec object
        sourceType:
          type: string
          enum:
            - DOCUMENT
            - ASSISTANT
        combinedAnswerText:
          type: object
          properties:
            text:
              type: string
              example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
            structuredList:
              type: array
              description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
              items:
                properties:
                  link:
                    type: string
                    example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
                  document:
                    type: object
                    description: Document object
                  text:
                    type: string
                    example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
                  structuredResult:
                    description: A single object that can support any object in the work graph. Only a single object will be populated.
                    properties:
                      document:
                        type: object
                        description: Document object
                      person:
                        type: object
                        description: Person object
                      customer:
                        required:
                          - id
                          - company
                        properties:
                          id:
                            type: string
                            description: Unique identifier.
                          domains:
                            type: array
                            description: Link to company's associated website domains.
                            items:
                              type: string
                          company:
                            required:
                              - name
                            properties:
                              name:
                                type: string
                                description: User-friendly display name.
                              profileUrl:
                                type: string
                                description: Link to internal company company profile.
                              websiteUrls:
                                type: array
                                description: Link to company's associated websites.
                                items:
                                  type: string
                              logoUrl:
                                type: string
                                description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                              location:
                                type: string
                                description: User facing string representing the company's location.
                                example: New York City
                              phone:
                                type: string
                                description: Phone number as a number string.
                              fax:
                                type: string
                                description: Fax number as a number string.
                              industry:
                                type: string
                                description: User facing string representing the company's industry.
                                example: Finances
                              annualRevenue:
                                type: number
                                format: double
                                description: Average company's annual revenue for reference.
                              numberOfEmployees:
                                type: integer
                                format: int64
                                description: Average company's number of employees for reference.
                              stockSymbol:
                                type: string
                                description: Company's stock symbol if company is public.
                              foundedDate:
                                type: string
                                format: date
                                description: The date when the company was founded.
                              about:
                                type: string
                                description: User facing description of company.
                                example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                            type: object
                          documentCounts:
                            type: object
                            description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                            additionalProperties:
                              type: integer
                          poc:
                            type: array
                            description: A list of POC for company.
                            items:
                              type: object
                              description: Person object
                          metadata:
                            properties:
                              datasourceId:
                                type: string
                                description: The user visible id of the salesforce customer account.
                              customData:
                                type: object
                                description: CustomData object
                            type: object
                          mergedCustomers:
                            type: array
                            description: A list of Customers.
                            items:
                              type: object
                              description: Customer object
                          startDate:
                            type: string
                            format: date
                            description: The date when the interaction with customer started.
                          contractAnnualRevenue:
                            type: number
                            format: double
                            description: Average contract annual revenue with that customer.
                          notes:
                            type: string
                            description: User facing (potentially generated) notes about company.
                            example: CIO is interested in trying out the product.
                        type: object
                      team:
                        type: object
                        description: PermissionedObject object
                        properties:
                          relatedObjects:
                            type: object
                            description: A list of objects related to a source object.
                            additionalProperties:
                              $ref: '#/components/schemas/RelatedObjectEdge'
                          id:
                            type: string
                            description: Unique identifier
                          name:
                            type: string
                            description: Team name
                          description:
                            type: string
                            description: A description of the team
                          businessUnit:
                            type: string
                            description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                          department:
                            type: string
                            description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                          photoUrl:
                            type: string
                            format: url
                            description: A link to the team's photo.
                          bannerUrl:
                            type: string
                            format: url
                            description: A link to the team's banner photo.
                          externalLink:
                            type: string
                            format: uri
                            description: Link to a team page on the internet or your company's intranet
                          members:
                            type: array
                            description: The members on this team
                            items:
                              required:
                                - person
                              type: object
                              description: Metadata about the relationship of a person to a team.
                              properties:
                                person:
                                  type: object
                                  description: Person object
                                relationship:
                                  type: string
                                  description: The team member's relationship to the team. This defaults to MEMBER if not set.
                                  default: MEMBER
                                  enum:
                                    - MEMBER
                                    - MANAGER
                                    - LEAD
                                    - POINT_OF_CONTACT
                                    - OTHER
                                customRelationshipStr:
                                  type: string
                                  description: Displayed name for the relationship if relationship is set to `OTHER`.
                                joinDate:
                                  type: string
                                  format: date-time
                                  description: The team member's start date
                          memberCount:
                            type: integer
                            description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                          emails:
                            type: array
                            description: The emails for this team
                            items:
                              properties:
                                email:
                                  type: string
                                  format: email
                                  description: An email address
                                type:
                                  type: string
                                  enum:
                                    - PRIMARY
                                    - SECONDARY
                                    - ONCALL
                                    - OTHER
                                  default: OTHER
                                isUserGenerated:
                                  type: boolean
                                  description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                              type: object
                          customFields:
                            type: array
                            description: Customizable fields for additional team information.
                            items:
                              required:
                                - label
                                - values
                                - displayable
                              properties:
                                label:
                                  type: string
                                  description: A user-facing label for this field.
                                values:
                                  type: array
                                  items:
                                    oneOf:
                                      - properties:
                                          strText:
                                            type: string
                                            description: Text field for string value.
                                        type: object
                                      - properties:
                                          urlAnchor:
                                            type: string
                                            description: Anchor text for hyperlink.
                                          urlLink:
                                            type: string
                                            description: Link for this URL.
                                        type: object
                                      - properties:
                                          person:
                                            type: object
                                            description: Person object
                                        type: object
                                displayable:
                                  type: boolean
                                  description: Determines whether the client should display this custom field
                                  default: true
                              type: object
                          datasourceProfiles:
                            type: array
                            description: The datasource profiles of the team
                            items:
                              required:
                                - datasource
                                - handle
                              properties:
                                datasource:
                                  type: string
                                  example: github
                                  description: The datasource the profile is of.
                                handle:
                                  type: string
                                  description: The display name of the entity in the given datasource.
                                url:
                                  type: string
                                  description: URL to view the entity's profile.
                                nativeAppUrl:
                                  type: string
                                  description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                                isUserGenerated:
                                  type: boolean
                                  description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                              type: object
                          datasource:
                            type: string
                            description: the data source of the team, e.g. GDRIVE
                          createdFrom:
                            type: string
                            description: For teams created from docs, the doc title. Otherwise empty.
                          lastUpdatedAt:
                            type: string
                            format: date-time
                            description: when this team was last updated.
                          status:
                            type: string
                            description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                            default: PROCESSED
                            enum:
                              - PROCESSED
                              - QUEUED_FOR_CREATION
                              - QUEUED_FOR_DELETION
                          canBeDeleted:
                            type: boolean
                            description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                            default: true
                          loggingId:
                            type: string
                            description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                        required:
                          - id
                          - name
                      customEntity:
                        description: PermissionedObject object
                        type: object
                        properties:
                          id:
                            type: string
                            description: Unique identifier.
                          title:
                            type: string
                            description: Title or name of the custom entity.
                          datasource:
                            type: string
                            description: The datasource the custom entity is from.
                          objectType:
                            type: string
                            description: The type of the entity. Interpretation is specific to each datasource
                          metadata:
                            properties:
                              customData:
                                type: object
                                description: CustomData object
                            type: object
                          roles:
                            type: array
                            description: A list of user roles for the custom entity explicitly granted by the owner.
                            items:
                              type: object
                              description: UserRoleSpecification object
                      answer:
                        type: object
                        description: Answer object
                      extractedQnA:
                        properties:
                          heading:
                            type: string
                            description: Heading text that was matched to produce this result.
                          question:
                            type: string
                            description: Question text that was matched to produce this result.
                          questionResult:
                            type: object
                            description: SearchResult object
                        type: object
                      meeting:
                        properties:
                          id:
                            type: string
                          title:
                            type: string
                          description:
                            type: string
                          url:
                            type: string
                          startTime:
                            type: string
                            format: date-time
                          endTime:
                            type: string
                            format: date-time
                          attendees:
                            properties:
                              people:
                                type: array
                                description: Full details of some of the attendees of this event
                                items:
                                  required:
                                    - person
                                  properties:
                                    isOrganizer:
                                      type: boolean
                                      description: Whether or not this attendee is an organizer.
                                    isInGroup:
                                      type: boolean
                                      description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                                    person:
                                      type: object
                                      description: Person object
                                    groupAttendees:
                                      type: array
                                      description: If this attendee is a group, represents the list of individual attendees in the group.
                                      items:
                                        type: object
                                        description: CalendarAttendee object
                                    responseStatus:
                                      type: string
                                      enum:
                                        - ACCEPTED
                                        - DECLINED
                                        - NO_RESPONSE
                                        - TENTATIVE
                                  type: object
                              isLimit:
                                type: boolean
                                description: Whether the total count of the people returned is at the retrieval limit.
                              total:
                                type: integer
                                description: Total number of attendees in this event.
                              numAccepted:
                                type: integer
                                description: Total number of attendees who have accepted this event.
                              numDeclined:
                                type: integer
                                description: Total number of attendees who have declined this event.
                              numNoResponse:
                                type: integer
                                description: Total number of attendees who have not responded to this event.
                              numTentative:
                                type: integer
                                description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                            type: object
                        type: object
                      app:
                        required:
                          - datasource
                        properties:
                          datasource:
                            type: string
                            description: The app or other repository type this represents
                          docType:
                            type: string
                            description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                          mimeType:
                            type: string
                            description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                          iconUrl:
                            type: string
                            description: If there is available icon URL.
                        type: object
                      collection:
                        type: object
                        description: Flattened Collection
                        properties:
                          name:
                            type: string
                            description: The unique name of the Collection.
                          description:
                            type: string
                            description: A brief summary of the Collection's contents.
                          addedRoles:
                            type: array
                            description: A list of added user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                          removedRoles:
                            type: array
                            description: A list of removed user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                          audienceFilters:
                            type: array
                            description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                            items:
                              type: object
                              description: FacetFilter object
                          icon:
                            type: string
                            description: The emoji icon of this Collection.
                          adminLocked:
                            type: boolean
                            description: Indicates whether edits are allowed for everyone or only admins.
                          parentId:
                            type: integer
                            description: The parent of this Collection, or 0 if it's a top-level Collection.
                          thumbnail:
                            properties:
                              photoId:
                                type: string
                                description: Photo id if the thumbnail is from splash.
                              url:
                                type: string
                                description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                            type: object
                          allowedDatasource:
                            type: string
                            description: The datasource type this Collection can hold.
                          permissions:
                            type: object
                            description: Flattened ObjectPermissions
                            properties:
                              write:
                                type: object
                                description: Describes the write permissions levels that a user has for a specific feature
                                properties:
                                  scopeType:
                                    type: string
                                    description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                    enum:
                                      - GLOBAL
                                      - OWN
                                    properties: {}
                                  create:
                                    type: boolean
                                    description: True if user has create permission for this feature and scope
                                  update:
                                    type: boolean
                                    description: True if user has update permission for this feature and scope
                                  delete:
                                    type: boolean
                                    description: True if user has delete permission for this feature and scope
                          id:
                            type: integer
                            description: The unique ID of the Collection.
                          createTime:
                            type: string
                            format: date-time
                          updateTime:
                            type: string
                            format: date-time
                          creator:
                            type: object
                            description: Person object
                          updatedBy:
                            type: object
                            description: Person object
                          itemCount:
                            type: integer
                            description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                          childCount:
                            type: integer
                            description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                          items:
                            type: array
                            description: The items in this Collection.
                            items:
                              type: object
                              description: CollectionItem object
                          pinMetadata:
                            required:
                              - pinnedCategories
                              - eligibleCategoriesForPinning
                            properties:
                              existingPins:
                                type: array
                                description: List of targets this Collection is pinned to.
                                items:
                                  type: object
                                  description: CollectionPinTarget object
                              eligiblePins:
                                type: array
                                description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                                items:
                                  required:
                                    - id
                                    - target
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the Collection.
                                    target:
                                      type: object
                                      description: CollectionPinTarget object
                                  type: object
                            type: object
                          shortcuts:
                            type: array
                            description: The names of the shortcuts (Go Links) that point to this Collection.
                            items:
                              type: string
                          children:
                            type: array
                            description: The children Collections of this Collection.
                            items:
                              type: object
                              description: Collection object
                          roles:
                            type: array
                            description: A list of user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                      answerBoard:
                        type: object
                        description: PermissionedObject object
                        properties:
                          name:
                            type: string
                            description: The unique name of the Collection.
                          description:
                            type: string
                            description: A brief summary of the Collection's contents.
                          addedRoles:
                            type: array
                            description: A list of added user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                          removedRoles:
                            type: array
                            description: A list of removed user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                          audienceFilters:
                            type: array
                            description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                            items:
                              type: object
                              description: FacetFilter object
                          id:
                            type: integer
                            description: The unique ID of the Answer Board.
                          createTime:
                            type: string
                            format: date-time
                          updateTime:
                            type: string
                            format: date-time
                          creator:
                            type: object
                            description: Person object
                          updatedBy:
                            type: object
                            description: Person object
                          itemCount:
                            type: integer
                            description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                          roles:
                            type: array
                            description: A list of user roles for the Answer Board.
                            items:
                              type: object
                              description: UserRoleSpecification object
                        required:
                          - name
                          - id
                          - description
                      code:
                        example:
                          repoName: scio
                          fileName: README.md
                          matches:
                            - lineNumber: 1
                              content: Welcome to the beginning
                              ranges: []
                            - lineNumber: 2
                              content: Second line of the file
                              ranges: []
                            - lineNumber: 3
                              content: hello world hello world
                              ranges:
                                - startindex: 0
                                  endIndex: 5
                                - startIndex: 12
                                  endIndex: 17
                        properties:
                          repoName:
                            type: string
                          fileName:
                            type: string
                          fileUrl:
                            type: string
                          lines:
                            type: array
                            items:
                              properties:
                                lineNumber:
                                  type: integer
                                content:
                                  type: string
                                ranges:
                                  type: array
                                  description: Index ranges depicting matched sections of the line
                                  items:
                                    type: object
                                    description: TextRange object
                              type: object
                          isLastMatch:
                            type: boolean
                            description: Last file match for a repo
                        type: object
                      shortcut:
                        type: object
                        description: PermissionedObject object
                        properties:
                          id:
                            type: integer
                            description: The opaque id of the user generated content.
                          inputAlias:
                            type: string
                            description: Link text following go/ prefix as entered by the user.
                          destinationUrl:
                            type: string
                            description: Destination URL for the shortcut.
                          destinationDocumentId:
                            type: string
                            description: Glean Document ID for the URL, if known.
                          description:
                            type: string
                            description: A short, plain text blurb to help people understand the intent of the shortcut.
                          unlisted:
                            type: boolean
                            description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                          urlTemplate:
                            type: string
                            description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                          addedRoles:
                            type: array
                            description: A list of user roles added for the Shortcut.
                            items:
                              type: object
                              description: UserRoleSpecification object
                          removedRoles:
                            type: array
                            description: A list of user roles removed for the Shortcut.
                            items:
                              type: object
                              description: UserRoleSpecification object
                          createdBy:
                            type: object
                            description: Person object
                          createTime:
                            type: string
                            format: date-time
                            description: The time the shortcut was created in ISO format (ISO 8601).
                          updatedBy:
                            type: object
                            description: Person object
                          updateTime:
                            type: string
                            format: date-time
                            description: The time the shortcut was updated in ISO format (ISO 8601).
                          destinationDocument:
                            type: object
                            description: Document object
                          intermediateUrl:
                            type: string
                            description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                          viewPrefix:
                            type: string
                            description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                          isExternal:
                            type: boolean
                            description: Indicates whether a shortcut is native or external.
                          editUrl:
                            type: string
                            description: The URL using which the user can access the edit page of the shortcut.
                          alias:
                            type: string
                            description: canonical link text following go/ prefix where hyphen/underscore is removed.
                          title:
                            type: string
                            description: Title for the Go Link
                          roles:
                            type: array
                            description: A list of user roles for the Go Link.
                            items:
                              type: object
                              description: UserRoleSpecification object
                        required:
                          - inputAlias
                      querySuggestions:
                        type: object
                        description: QuerySuggestionList object
                      relatedDocuments:
                        type: array
                        description: A list of documents related to this structured result.
                        items:
                          type: object
                          description: RelatedDocuments object
                      relatedQuestion:
                        properties:
                          question:
                            type: string
                            description: The text of the related question
                          answer:
                            type: string
                            description: The answer for the related question
                          ranges:
                            type: array
                            description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                            items:
                              type: object
                              description: TextRange object
                        type: object
                      disambiguation:
                        type: object
                        description: A disambiguation between multiple entities with the same name
                        properties:
                          name:
                            type: string
                            description: Name of the ambiguous entity
                          id:
                            type: string
                            description: The unique id of the entity in the knowledge graph
                          type:
                            type: string
                            description: The type of entity.
                            x-include-enum-class-prefix: true
                            enum:
                              - PERSON
                              - PROJECT
                              - CUSTOMER
                      snippets:
                        description: Any snippets associated to the populated object.
                        type: array
                        items:
                          required:
                            - snippet
                          example:
                            snippet: snippet
                            mimeType: mimeType
                          properties:
                            snippet:
                              type: string
                              description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                            mimeType:
                              type: string
                              description: The mime type of the snippets, currently either text/plain or text/html.
                            text:
                              type: string
                              description: A matching snippet from the document with no highlights.
                            snippetTextOrdering:
                              type: integer
                              description: Used for sorting based off the snippet's location within all_snippetable_text
                            ranges:
                              type: array
                              description: The bolded ranges within text.
                              items:
                                type: object
                                description: TextRange object
                            url:
                              type: string
                              description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                          type: object
                      trackingToken:
                        type: string
                        description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                      prominence:
                        type: string
                        description: The level of visual distinction that should be given to a result.
                        x-enumDescriptions:
                          HERO: A high-confidence result that should feature prominently on the page.
                          PROMOTED: May not be the best result but should be given additional visual distinction.
                          STANDARD: Should not be distinct from any other results.
                        enum:
                          - HERO
                          - PROMOTED
                          - STANDARD
                      source:
                        type: string
                        description: Source context for this result. Possible values depend on the result type.
                        enum:
                          - EXPERT_DETECTION
                          - ENTITY_NLQ
                    type: object
                type: object
          required:
            - text
        likes:
          required:
            - likedBy
            - likedByUser
            - numLikes
          properties:
            likedBy:
              type: array
              items:
                properties:
                  user:
                    type: object
                    description: Person object
                  createTime:
                    type: string
                    format: date-time
                    description: The time the user liked the answer in ISO format (ISO 8601).
                type: object
            likedByUser:
              type: boolean
              description: Whether the user in context liked the answer.
            numLikes:
              type: integer
              description: The total number of likes for the answer.
          type: object
        author:
          type: object
          description: Person object
        createTime:
          type: string
          format: date-time
          description: The time the answer was created in ISO format (ISO 8601).
        updateTime:
          type: string
          format: date-time
          description: The time the answer was last updated in ISO format (ISO 8601).
        updatedBy:
          type: object
          description: Person object
        verification:
          required:
            - state
          properties:
            state:
              type: string
              enum:
                - UNVERIFIED
                - VERIFIED
                - DEPRECATED
              description: The verification state for the document.
            metadata:
              required:
                - documentId
              properties:
                lastVerifier:
                  type: object
                  description: Person object
                lastVerificationTs:
                  type: integer
                  description: The unix timestamp of the verification (in seconds since epoch UTC).
                expirationTs:
                  type: integer
                  description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
                document:
                  type: object
                  description: Document object
                reminders:
                  type: array
                  description: Info about all outstanding verification reminders for the document if exists.
                  items:
                    required:
                      - assignee
                      - remindAt
                    properties:
                      assignee:
                        type: object
                        description: Person object
                      requestor:
                        type: object
                        description: Person object
                      remindAt:
                        type: integer
                        description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                      createdAt:
                        type: integer
                        description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                      reason:
                        type: string
                        description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                    type: object
                lastReminder:
                  required:
                    - assignee
                    - remindAt
                  properties:
                    assignee:
                      type: object
                      description: Person object
                    requestor:
                      type: object
                      description: Person object
                    remindAt:
                      type: integer
                      description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                    createdAt:
                      type: integer
                      description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                    reason:
                      type: string
                      description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                  type: object
                visitorCount:
                  type: array
                  description: Number of visitors to the document during included time periods.
                  items:
                    required:
                      - count
                    properties:
                      count:
                        type: integer
                        description: The counter value
                      period:
                        properties:
                          minDaysFromNow:
                            type: integer
                            description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                            deprecated: true
                          maxDaysFromNow:
                            type: integer
                            description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                            deprecated: true
                          start:
                            properties:
                              epochSeconds:
                                type: integer
                                description: Epoch seconds. Has precedence over daysFromNow.
                              daysFromNow:
                                type: integer
                                description: The number of days from now. Specification relative to current time. Can be negative.
                            type: object
                          end:
                            properties:
                              epochSeconds:
                                type: integer
                                description: Epoch seconds. Has precedence over daysFromNow.
                              daysFromNow:
                                type: integer
                                description: The number of days from now. Specification relative to current time. Can be negative.
                            type: object
                        type: object
                      org:
                        type: string
                        description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                    type: object
                candidateVerifiers:
                  type: array
                  description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
                  items:
                    type: object
                    description: Person object
              type: object
          type: object
        board:
          type: object
          description: PermissionedObject object
          properties:
            name:
              type: string
              description: The unique name of the Collection.
            description:
              type: string
              description: A brief summary of the Collection's contents.
            addedRoles:
              type: array
              description: A list of added user roles for the Collection.
              items:
                type: object
                description: UserRoleSpecification object
            removedRoles:
              type: array
              description: A list of removed user roles for the Collection.
              items:
                type: object
                description: UserRoleSpecification object
            audienceFilters:
              type: array
              description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
              items:
                type: object
                description: FacetFilter object
            id:
              type: integer
              description: The unique ID of the Answer Board.
            createTime:
              type: string
              format: date-time
            updateTime:
              type: string
              format: date-time
            creator:
              type: object
              description: Person object
            updatedBy:
              type: object
              description: Person object
            itemCount:
              type: integer
              description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
            roles:
              type: array
              description: A list of user roles for the Answer Board.
              items:
                type: object
                description: UserRoleSpecification object
          required:
            - name
            - id
            - description
        collections:
          type: array
          description: The collections to which the answer belongs.
          items:
            type: object
            description: Flattened Collection
            properties:
              name:
                type: string
                description: The unique name of the Collection.
              description:
                type: string
                description: A brief summary of the Collection's contents.
              addedRoles:
                type: array
                description: A list of added user roles for the Collection.
                items:
                  type: object
                  description: UserRoleSpecification object
              removedRoles:
                type: array
                description: A list of removed user roles for the Collection.
                items:
                  type: object
                  description: UserRoleSpecification object
              audienceFilters:
                type: array
                description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                items:
                  type: object
                  description: FacetFilter object
              icon:
                type: string
                description: The emoji icon of this Collection.
              adminLocked:
                type: boolean
                description: Indicates whether edits are allowed for everyone or only admins.
              parentId:
                type: integer
                description: The parent of this Collection, or 0 if it's a top-level Collection.
              thumbnail:
                properties:
                  photoId:
                    type: string
                    description: Photo id if the thumbnail is from splash.
                  url:
                    type: string
                    description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                type: object
              allowedDatasource:
                type: string
                description: The datasource type this Collection can hold.
              permissions:
                type: object
                description: Flattened ObjectPermissions
                properties:
                  write:
                    type: object
                    description: Describes the write permissions levels that a user has for a specific feature
                    properties:
                      scopeType:
                        type: string
                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                        enum:
                          - GLOBAL
                          - OWN
                        properties: {}
                      create:
                        type: boolean
                        description: True if user has create permission for this feature and scope
                      update:
                        type: boolean
                        description: True if user has update permission for this feature and scope
                      delete:
                        type: boolean
                        description: True if user has delete permission for this feature and scope
              id:
                type: integer
                description: The unique ID of the Collection.
              createTime:
                type: string
                format: date-time
              updateTime:
                type: string
                format: date-time
              creator:
                type: object
                description: Person object
              updatedBy:
                type: object
                description: Person object
              itemCount:
                type: integer
                description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
              childCount:
                type: integer
                description: The number of children Collections. Separated from the actual children so we can grab the count without children.
              items:
                type: array
                description: The items in this Collection.
                items:
                  type: object
                  description: CollectionItem object
              pinMetadata:
                required:
                  - pinnedCategories
                  - eligibleCategoriesForPinning
                properties:
                  existingPins:
                    type: array
                    description: List of targets this Collection is pinned to.
                    items:
                      type: object
                      description: CollectionPinTarget object
                  eligiblePins:
                    type: array
                    description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                    items:
                      required:
                        - id
                        - target
                      properties:
                        id:
                          type: integer
                          description: The ID of the Collection.
                        target:
                          type: object
                          description: CollectionPinTarget object
                      type: object
                type: object
              shortcuts:
                type: array
                description: The names of the shortcuts (Go Links) that point to this Collection.
                items:
                  type: string
              children:
                type: array
                description: The children Collections of this Collection.
                items:
                  type: object
                  description: Collection object
              roles:
                type: array
                description: A list of user roles for the Collection.
                items:
                  type: object
                  description: UserRoleSpecification object
        documentCategory:
          type: string
          description: The document's document_category(.proto).
        sourceDocument:
          type: object
          description: Document object
      required:
        - id
    ExtractedQnA:
      properties:
        heading:
          type: string
          description: Heading text that was matched to produce this result.
        question:
          type: string
          description: Question text that was matched to produce this result.
        questionResult:
          type: object
          description: SearchResult object
      type: object
    Meeting:
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        url:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        attendees:
          properties:
            people:
              type: array
              description: Full details of some of the attendees of this event
              items:
                required:
                  - person
                properties:
                  isOrganizer:
                    type: boolean
                    description: Whether or not this attendee is an organizer.
                  isInGroup:
                    type: boolean
                    description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                  person:
                    type: object
                    description: Person object
                  groupAttendees:
                    type: array
                    description: If this attendee is a group, represents the list of individual attendees in the group.
                    items:
                      type: object
                      description: CalendarAttendee object
                  responseStatus:
                    type: string
                    enum:
                      - ACCEPTED
                      - DECLINED
                      - NO_RESPONSE
                      - TENTATIVE
                type: object
            isLimit:
              type: boolean
              description: Whether the total count of the people returned is at the retrieval limit.
            total:
              type: integer
              description: Total number of attendees in this event.
            numAccepted:
              type: integer
              description: Total number of attendees who have accepted this event.
            numDeclined:
              type: integer
              description: Total number of attendees who have declined this event.
            numNoResponse:
              type: integer
              description: Total number of attendees who have not responded to this event.
            numTentative:
              type: integer
              description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
          type: object
      type: object
    AppResult:
      required:
        - datasource
      properties:
        datasource:
          type: string
          description: The app or other repository type this represents
        docType:
          type: string
          description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
        mimeType:
          type: string
          description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
        iconUrl:
          type: string
          description: If there is available icon URL.
      type: object
    Collection:
      type: object
      description: Flattened Collection
      properties:
        name:
          type: string
          description: The unique name of the Collection.
        description:
          type: string
          description: A brief summary of the Collection's contents.
        addedRoles:
          type: array
          description: A list of added user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
        removedRoles:
          type: array
          description: A list of removed user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
        audienceFilters:
          type: array
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
        icon:
          type: string
          description: The emoji icon of this Collection.
        adminLocked:
          type: boolean
          description: Indicates whether edits are allowed for everyone or only admins.
        parentId:
          type: integer
          description: The parent of this Collection, or 0 if it's a top-level Collection.
        thumbnail:
          type: object
          description: Thumbnail object
        allowedDatasource:
          type: string
          description: The datasource type this Collection can hold.
        permissions:
          type: object
          description: Flattened ObjectPermissions
          properties:
            write:
              type: object
              description: Describes the write permissions levels that a user has for a specific feature
              properties:
                scopeType:
                  type: string
                  description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                  enum:
                    - GLOBAL
                    - OWN
                  properties: {}
                create:
                  type: boolean
                  description: True if user has create permission for this feature and scope
                update:
                  type: boolean
                  description: True if user has update permission for this feature and scope
                delete:
                  type: boolean
                  description: True if user has delete permission for this feature and scope
        id:
          type: integer
          description: The unique ID of the Collection.
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        creator:
          type: object
          description: Person object
        updatedBy:
          type: object
          description: Person object
        itemCount:
          type: integer
          description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
        childCount:
          type: integer
          description: The number of children Collections. Separated from the actual children so we can grab the count without children.
        items:
          type: array
          description: The items in this Collection.
          items:
            type: object
            description: CollectionItem object
        pinMetadata:
          required:
            - pinnedCategories
            - eligibleCategoriesForPinning
          properties:
            existingPins:
              type: array
              description: List of targets this Collection is pinned to.
              items:
                type: object
                description: CollectionPinTarget object
            eligiblePins:
              type: array
              description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
              items:
                required:
                  - id
                  - target
                properties:
                  id:
                    type: integer
                    description: The ID of the Collection.
                  target:
                    type: object
                    description: CollectionPinTarget object
                type: object
          type: object
        shortcuts:
          type: array
          description: The names of the shortcuts (Go Links) that point to this Collection.
          items:
            type: string
        children:
          type: array
          description: The children Collections of this Collection.
          items:
            type: object
            description: Collection object
        roles:
          type: array
          description: A list of user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
    AnswerBoard:
      type: object
      description: PermissionedObject object
      properties:
        name:
          type: string
          description: The unique name of the Collection.
        description:
          type: string
          description: A brief summary of the Collection's contents.
        addedRoles:
          type: array
          description: A list of added user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
        removedRoles:
          type: array
          description: A list of removed user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
        audienceFilters:
          type: array
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
        id:
          type: integer
          description: The unique ID of the Answer Board.
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        creator:
          type: object
          description: Person object
        updatedBy:
          type: object
          description: Person object
        itemCount:
          type: integer
          description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
        roles:
          type: array
          description: A list of user roles for the Answer Board.
          items:
            type: object
            description: UserRoleSpecification object
      required:
        - name
        - id
        - description
    Code:
      example:
        repoName: scio
        fileName: README.md
        matches:
          - lineNumber: 1
            content: Welcome to the beginning
            ranges: []
          - lineNumber: 2
            content: Second line of the file
            ranges: []
          - lineNumber: 3
            content: hello world hello world
            ranges:
              - startindex: 0
                endIndex: 5
              - startIndex: 12
                endIndex: 17
      properties:
        repoName:
          type: string
        fileName:
          type: string
        fileUrl:
          type: string
        lines:
          type: array
          items:
            properties:
              lineNumber:
                type: integer
              content:
                type: string
              ranges:
                type: array
                description: Index ranges depicting matched sections of the line
                items:
                  type: object
                  description: TextRange object
            type: object
        isLastMatch:
          type: boolean
          description: Last file match for a repo
      type: object
    Shortcut:
      type: object
      description: PermissionedObject object
      properties:
        id:
          type: integer
          description: The opaque id of the user generated content.
        inputAlias:
          type: string
          description: Link text following go/ prefix as entered by the user.
        destinationUrl:
          type: string
          description: Destination URL for the shortcut.
        destinationDocumentId:
          type: string
          description: Glean Document ID for the URL, if known.
        description:
          type: string
          description: A short, plain text blurb to help people understand the intent of the shortcut.
        unlisted:
          type: boolean
          description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
        urlTemplate:
          type: string
          description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
        addedRoles:
          type: array
          description: A list of user roles added for the Shortcut.
          items:
            type: object
            description: UserRoleSpecification object
        removedRoles:
          type: array
          description: A list of user roles removed for the Shortcut.
          items:
            type: object
            description: UserRoleSpecification object
        createdBy:
          type: object
          description: Person object
        createTime:
          type: string
          format: date-time
          description: The time the shortcut was created in ISO format (ISO 8601).
        updatedBy:
          type: object
          description: Person object
        updateTime:
          type: string
          format: date-time
          description: The time the shortcut was updated in ISO format (ISO 8601).
        destinationDocument:
          type: object
          description: Document object
        intermediateUrl:
          type: string
          description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
        viewPrefix:
          type: string
          description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
        isExternal:
          type: boolean
          description: Indicates whether a shortcut is native or external.
        editUrl:
          type: string
          description: The URL using which the user can access the edit page of the shortcut.
        alias:
          type: string
          description: canonical link text following go/ prefix where hyphen/underscore is removed.
        title:
          type: string
          description: Title for the Go Link
        roles:
          type: array
          description: A list of user roles for the Go Link.
          items:
            type: object
            description: UserRoleSpecification object
      required:
        - inputAlias
    RelatedQuestion:
      properties:
        question:
          type: string
          description: The text of the related question
        answer:
          type: string
          description: The answer for the related question
        ranges:
          type: array
          description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
          items:
            type: object
            description: TextRange object
      type: object
    Disambiguation:
      type: object
      description: A disambiguation between multiple entities with the same name
      properties:
        name:
          type: string
          description: Name of the ambiguous entity
        id:
          type: string
          description: The unique id of the entity in the knowledge graph
        type:
          type: string
          description: The type of entity.
          x-include-enum-class-prefix: true
          enum:
            - PERSON
            - PROJECT
            - CUSTOMER
    FollowupAction:
      description: A follow-up action that can be invoked by the user after a response. The action parameters are not included and need to be predicted/filled separately.
      properties:
        actionRunId:
          type: string
          description: Unique identifier for this actionRun recommendation event.
        actionInstanceId:
          type: string
          description: The ID of the action instance that will be invoked.
        actionId:
          type: string
          description: The ID of the associated action.
        recommendationText:
          type: string
          description: Text to be displayed to the user when recommending the action instance.
        actionLabel:
          type: string
          description: The label to be used when displaying a button to execute this action instance.
        userConfirmationRequired:
          type: boolean
          description: Whether user confirmation is needed before executing this action instance.
      type: object
    InvalidOperatorValueError:
      properties:
        key:
          description: The operator key that has an invalid value.
          type: string
        value:
          description: The invalid operator value.
          type: string
      type: object
    ErrorMessage:
      properties:
        source:
          description: The datasource this message relates to.
          type: string
        errorMessage:
          type: string
      type: object
    FacetValue:
      properties:
        stringValue:
          type: string
          example: engineering
          description: The value that should be set in the FacetFilter when applying this filter to a search request.
        integerValue:
          type: integer
          example: 5
        displayLabel:
          type: string
          example: engineering
          description: An optional user-friendly label to display in place of the facet value.
        iconConfig:
          description: Defines how to render an icon
          example:
            color: '#343CED'
            key: person_icon
            iconType: GLYPH
            name: user
          properties:
            generatedBackgroundColorKey:
              type: string
            backgroundColor:
              type: string
            color:
              type: string
            key:
              type: string
            iconType:
              enum:
                - COLLECTION
                - CUSTOM
                - DATASOURCE
                - DATASOURCE_INSTANCE
                - FAVICON
                - FILE_TYPE
                - GENERATED_BACKGROUND
                - GLYPH
                - MIME_TYPE
                - NO_ICON
                - PERSON
                - REACTIONS
                - URL
            masked:
              type: boolean
              description: Whether the icon should be masked based on current theme.
            name:
              type: string
              description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
            url:
              type: string
              description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
          type: object
      type: object
    DocumentVisibility:
      type: string
      description: The level of visibility of the document as understood by our system.
      x-enumDescriptions:
        PRIVATE: Only one person is able to see the document.
        SPECIFIC_PEOPLE_AND_GROUPS: Only specific people and/or groups can see the document.
        DOMAIN_LINK: Anyone in the domain with the link can see the document.
        DOMAIN_VISIBLE: Anyone in the domain can search for the document.
        PUBLIC_LINK: Anyone with the link can see the document.
        PUBLIC_VISIBLE: Anyone on the internet can search for the document.
      enum:
        - PRIVATE
        - SPECIFIC_PEOPLE_AND_GROUPS
        - DOMAIN_LINK
        - DOMAIN_VISIBLE
        - PUBLIC_LINK
        - PUBLIC_VISIBLE
    DocumentInteractions:
      properties:
        numComments:
          type: integer
          description: The count of comments (thread replies in the case of slack).
        numReactions:
          type: integer
          description: The count of reactions on the document.
        reactions:
          type: array
          description: To be deprecated in favor of reacts. A (potentially non-exhaustive) list of reactions for the document.
          deprecated: true
          items:
            type: string
        reacts:
          type: array
          items:
            properties:
              type:
                type: string
              count:
                type: integer
                description: The count of the reaction type on the document.
              reactors:
                type: array
                items:
                  type: object
                  description: Person object
              reactedByViewer:
                type: boolean
                description: Whether the user in context reacted with this type to the document.
            type: object
        shares:
          type: array
          description: Describes instances of someone posting a link to this document in one of our indexed datasources.
          items:
            description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
            required:
              - numDaysAgo
            properties:
              numDaysAgo:
                type: integer
                description: The number of days that has passed since the share happened
              sharer:
                type: object
                description: Person object
              sharingDocument:
                type: object
                description: Document object
            type: object
        visitorCount:
          required:
            - count
          properties:
            count:
              type: integer
              description: The counter value
            period:
              properties:
                minDaysFromNow:
                  type: integer
                  description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                  deprecated: true
                maxDaysFromNow:
                  type: integer
                  description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                  deprecated: true
                start:
                  properties:
                    epochSeconds:
                      type: integer
                      description: Epoch seconds. Has precedence over daysFromNow.
                    daysFromNow:
                      type: integer
                      description: The number of days from now. Specification relative to current time. Can be negative.
                  type: object
                end:
                  properties:
                    epochSeconds:
                      type: integer
                      description: Epoch seconds. Has precedence over daysFromNow.
                    daysFromNow:
                      type: integer
                      description: The number of days from now. Specification relative to current time. Can be negative.
                  type: object
              type: object
            org:
              type: string
              description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
          type: object
      type: object
    Verification:
      required:
        - state
      properties:
        state:
          type: string
          enum:
            - UNVERIFIED
            - VERIFIED
            - DEPRECATED
          description: The verification state for the document.
        metadata:
          required:
            - documentId
          properties:
            lastVerifier:
              type: object
              description: Person object
            lastVerificationTs:
              type: integer
              description: The unix timestamp of the verification (in seconds since epoch UTC).
            expirationTs:
              type: integer
              description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
            document:
              type: object
              description: Document object
            reminders:
              type: array
              description: Info about all outstanding verification reminders for the document if exists.
              items:
                required:
                  - assignee
                  - remindAt
                properties:
                  assignee:
                    type: object
                    description: Person object
                  requestor:
                    type: object
                    description: Person object
                  remindAt:
                    type: integer
                    description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                  createdAt:
                    type: integer
                    description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                  reason:
                    type: string
                    description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                type: object
            lastReminder:
              required:
                - assignee
                - remindAt
              properties:
                assignee:
                  type: object
                  description: Person object
                requestor:
                  type: object
                  description: Person object
                remindAt:
                  type: integer
                  description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                createdAt:
                  type: integer
                  description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                reason:
                  type: string
                  description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
              type: object
            visitorCount:
              type: array
              description: Number of visitors to the document during included time periods.
              items:
                required:
                  - count
                properties:
                  count:
                    type: integer
                    description: The counter value
                  period:
                    properties:
                      minDaysFromNow:
                        type: integer
                        description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                        deprecated: true
                      maxDaysFromNow:
                        type: integer
                        description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                        deprecated: true
                      start:
                        type: object
                        description: TimePoint object
                      end:
                        type: object
                        description: TimePoint object
                    type: object
                  org:
                    type: string
                    description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                type: object
            candidateVerifiers:
              type: array
              description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
              items:
                type: object
                description: Person object
          type: object
      type: object
    ViewerInfo:
      properties:
        role:
          type: string
          enum:
            - ANSWER_MODERATOR
            - OWNER
            - VIEWER
          description: DEPRECATED - use permissions instead. Viewer's role on the specific document.
          deprecated: true
        lastViewedTime:
          type: string
          format: date-time
      type: object
    ObjectPermissions:
      type: object
      description: ObjectPermissions object
    CountInfo:
      required:
        - count
      properties:
        count:
          type: integer
          description: The counter value
        period:
          properties:
            minDaysFromNow:
              type: integer
              description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
              deprecated: true
            maxDaysFromNow:
              type: integer
              description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
              deprecated: true
            start:
              type: object
              description: TimePoint object
            end:
              type: object
              description: TimePoint object
          type: object
        org:
          type: string
          description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
      type: object
    CustomData:
      type: object
      description: CustomData object
    Thumbnail:
      type: object
      description: Thumbnail object
    IndexStatus:
      properties:
        lastCrawledTime:
          description: When the document was last crawled
          type: string
          format: date-time
        lastIndexedTime:
          description: When the document was last indexed
          type: string
          format: date-time
      type: object
    PersonMetadata:
      example:
        department: Movies
        email: george@example.com
        location: Hollywood, CA
        phone: 6505551234
        photoUrl: https://example.com/george.jpg
        startDate: '2000-01-23'
        title: Actor
      properties:
        type:
          type: string
          x-enumDescriptions:
            FULL_TIME: The person is a current full-time employee of the company.
            CONTRACTOR: The person is a current contractor of the company.
            NON_EMPLOYEE: The person object represents a non-human actor such as a service or admin account.
            FORMER_EMPLOYEE: The person is a previous employee of the company.
          enum:
            - FULL_TIME
            - CONTRACTOR
            - NON_EMPLOYEE
            - FORMER_EMPLOYEE
          example: FULL_TIME
        firstName:
          type: string
          description: The first name of the person
        lastName:
          type: string
          description: The last name of the person
        title:
          type: string
          description: Job title.
        businessUnit:
          type: string
          description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
        department:
          type: string
          description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
        teams:
          description: Info about the employee's team(s).
          type: array
          items:
            description: Use `id` if you index teams via Glean, and use `name` and `externalLink` if you want to use your own team pages
            properties:
              id:
                type: string
                description: Unique identifier
              name:
                type: string
                description: Team name
              externalLink:
                type: string
                format: uri
                description: Link to a team page on the internet or your company's intranet
              relationship:
                type: string
                description: The team member's relationship to the team. This defaults to MEMBER if not set.
                default: MEMBER
                enum:
                  - MEMBER
                  - MANAGER
                  - LEAD
                  - POINT_OF_CONTACT
                  - OTHER
              joinDate:
                type: string
                format: date-time
                description: The team member's start date
            type: object
        departmentCount:
          type: integer
          description: The number of people in this person's department.
        email:
          type: string
          description: The user's primary email address
        aliasEmails:
          type: array
          description: Additional email addresses of this user beyond the primary, if any.
          items:
            type: string
        location:
          type: string
          description: User facing string representing the person's location.
        structuredLocation:
          type: object
          description: Detailed location with information about country, state, city etc.
          properties:
            deskLocation:
              type: string
              description: Desk number.
            timezone:
              type: string
              description: Location's timezone, e.g. UTC, PST.
            address:
              type: string
              description: Office address or name.
            city:
              type: string
              description: Name of the city.
            state:
              type: string
              description: State code.
            region:
              type: string
              description: Region information, e.g. NORAM, APAC.
            zipCode:
              type: string
              description: ZIP Code for the address.
            country:
              type: string
              description: Country name.
            countryCode:
              type: string
              description: Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA.
        externalProfileLink:
          type: string
          description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
        manager:
          type: object
          description: Person object
        managementChain:
          description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
          type: array
          items:
            type: object
            description: Person object
        phone:
          type: string
          description: Phone number as a number string.
        timezone:
          type: string
          description: The timezone of the person. E.g. "Pacific Daylight Time".
        timezoneOffset:
          type: integer
          format: int64
          description: The offset of the person's timezone in seconds from UTC.
        photoUrl:
          type: string
          format: url
          description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
        uneditedPhotoUrl:
          type: string
          format: url
          description: The original photo URL of the person's avatar before any edits they made are applied
        bannerUrl:
          type: string
          format: url
          description: The URL of the person's banner photo.
        reports:
          type: array
          items:
            type: object
            description: Person object
        startDate:
          type: string
          description: The date when the employee started.
          format: date
        endDate:
          type: string
          format: date
          description: If a former employee, the last date of employment.
        bio:
          type: string
          description: Short biography or mission statement of the employee.
        pronoun:
          type: string
          description: She/her, He/his or other pronoun.
        orgSizeCount:
          type: integer
          description: The total recursive size of the people reporting to this person, or 1
        directReportsCount:
          type: integer
          description: The total number of people who directly report to this person, or 0
        preferredName:
          type: string
          description: The preferred name of the person, or a nickname.
        socialNetwork:
          description: List of social network profiles.
          type: array
          items:
            required:
              - name
              - profileUrl
            properties:
              name:
                type: string
                description: Possible values are "twitter", "linkedin".
              profileName:
                type: string
                description: Human-readable profile name.
              profileUrl:
                type: string
                format: url
                description: Link to profile.
            type: object
        datasourceProfile:
          type: array
          description: List of profiles this user has in different datasources / tools that they use.
          items:
            required:
              - datasource
              - handle
            properties:
              datasource:
                type: string
                example: github
                description: The datasource the profile is of.
              handle:
                type: string
                description: The display name of the entity in the given datasource.
              url:
                type: string
                description: URL to view the entity's profile.
              nativeAppUrl:
                type: string
                description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
              isUserGenerated:
                type: boolean
                description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
            type: object
        querySuggestions:
          type: object
          description: QuerySuggestionList object
        peopleDistance:
          type: array
          description: List of people and distances to those people from this person. Optionally with metadata.
          items:
            required:
              - name
              - obfuscatedId
              - distance
            properties:
              name:
                type: string
                description: The display name.
              obfuscatedId:
                type: string
                description: An opaque identifier that can be used to request metadata for a Person.
              distance:
                type: number
                format: float
                description: Distance to person, refer to PeopleDistance pipeline on interpretation of the value.
            type: object
        inviteInfo:
          description: Information regarding the invite status of a person.
          properties:
            signUpTime:
              type: string
              format: date-time
              description: The time this person signed up in ISO format (ISO 8601).
            invites:
              type: array
              description: Latest invites received by the user for each channel
              items:
                description: Information regarding the invite status of a person for a particular channel.
                properties:
                  channel:
                    type: string
                    enum:
                      - COMMUNICATION_CHANNEL_EMAIL
                      - COMMUNICATION_CHANNEL_SLACK
                  isAutoInvite:
                    description: Bit that tracks if this invite was automatically sent or user-sent
                    type: boolean
                  inviter:
                    type: object
                    description: Person object
                  inviteTime:
                    type: string
                    format: date-time
                    description: The time this person was invited in ISO format (ISO 8601).
                  reminderTime:
                    type: string
                    format: date-time
                    description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
                type: object
            inviter:
              type: object
              description: Person object
            inviteTime:
              deprecated: true
              type: string
              format: date-time
              description: The time this person was invited in ISO format (ISO 8601).
            reminderTime:
              deprecated: true
              type: string
              format: date-time
              description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
          type: object
        isSignedUp:
          type: boolean
          description: Whether the user has signed into Glean at least once.
        lastExtensionUse:
          type: string
          format: date-time
          description: The last time the user has used the Glean extension in ISO 8601 format.
        permissions:
          description: |-
            Describes the permissions levels that a user has for permissioned features. When the client sends this, Permissions.read and Permissions.write are the additional permissions granted to a user on top of what they have via their roles.
            When the server sends this, Permissions.read and Permissions.write are the complete (merged) set of permissions the user has, and Permissions.roles is just for display purposes.
          properties:
            canAdminSearch:
              type: boolean
              description: TODO--deprecate in favor of the read and write properties. True if the user has access to /adminsearch
            canAdminClientApiGlobalTokens:
              type: boolean
              description: TODO--deprecate in favor of the read and write properties. True if the user can administrate client API tokens with global scope
            canDlp:
              type: boolean
              description: TODO--deprecate in favor of the read and write properties. True if the user has access to data loss prevention (DLP) features
            read:
              description: Describes the read permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
              additionalProperties:
                type: array
                description: List of read permissions (for different scopes but same feature)
                items:
                  $ref: '#/components/schemas/ReadPermission'
            write:
              description: Describes the write permissions levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
              additionalProperties:
                type: array
                description: List of write permissions (for different scopes but same feature)
                items:
                  $ref: '#/components/schemas/WritePermission'
            grant:
              description: Describes the grant permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
              additionalProperties:
                type: array
                description: List of grant permissions (for different scopes but same feature)
                items:
                  $ref: '#/components/schemas/GrantPermission'
            role:
              type: string
              description: The roleId of the canonical role a user has. The displayName is equal to the roleId.
            roles:
              type: array
              description: The roleIds of the roles a user has.
              items:
                type: string
          type: object
        customFields:
          type: array
          description: User customizable fields for additional people information.
          items:
            required:
              - label
              - values
              - displayable
            properties:
              label:
                type: string
                description: A user-facing label for this field.
              values:
                type: array
                items:
                  oneOf:
                    - properties:
                        strText:
                          type: string
                          description: Text field for string value.
                      type: object
                    - properties:
                        urlAnchor:
                          type: string
                          description: Anchor text for hyperlink.
                        urlLink:
                          type: string
                          description: Link for this URL.
                      type: object
                    - properties:
                        person:
                          type: object
                          description: Person object
                      type: object
              displayable:
                type: boolean
                description: Determines whether the client should display this custom field
                default: true
            type: object
        loggingId:
          type: string
          description: The logging id of the person used in scrubbed logs, tracking GA metrics.
        startDatePercentile:
          type: number
          format: float
          description: Percentage of the company that started strictly after this person. Between [0,100).
        busyEvents:
          type: array
          description: Intervals of busy time for this person, along with the type of event they're busy with.
          items:
            description: A generic, light-weight calendar event.
            type: object
            properties:
              time:
                required:
                  - start
                  - end
                properties:
                  start:
                    type: string
                    description: The RFC3339 timestamp formatted start time of this event.
                  end:
                    type: string
                    description: The RFC3339 timestamp formatted end time of this event.
                type: object
              eventType:
                description: The nature of the event, for example "out of office".
                type: string
                enum:
                  - DEFAULT
                  - OUT_OF_OFFICE
        profileBoolSettings:
          type: object
          additionalProperties:
            type: boolean
          description: flag settings to indicate user profile settings for certain items
        badges:
          type: array
          description: The badges that a user has earned over their lifetime.
          items:
            type: object
            description: Displays a user's accomplishment or milestone
            example:
              key: deployment_name_new_hire
              displayName: New hire
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
            properties:
              key:
                type: string
                description: An auto generated unique identifier.
              displayName:
                type: string
                description: The badge name displayed to users
              iconConfig:
                description: Defines how to render an icon
                example:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                properties:
                  generatedBackgroundColorKey:
                    type: string
                  backgroundColor:
                    type: string
                  color:
                    type: string
                  key:
                    type: string
                  iconType:
                    enum:
                      - COLLECTION
                      - CUSTOM
                      - DATASOURCE
                      - DATASOURCE_INSTANCE
                      - FAVICON
                      - FILE_TYPE
                      - GENERATED_BACKGROUND
                      - GLYPH
                      - MIME_TYPE
                      - NO_ICON
                      - PERSON
                      - REACTIONS
                      - URL
                  masked:
                    type: boolean
                    description: Whether the icon should be masked based on current theme.
                  name:
                    type: string
                    description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
                  url:
                    type: string
                    description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
                type: object
              pinned:
                type: boolean
                description: The badge should be shown on the PersonAttribution
        isOrgRoot:
          type: boolean
          description: Whether this person is a "root" node in their organization's hierarchy.
      type: object
    FacetFilterSet:
      type: object
      description: FacetFilterSet object
    FacetBucketFilter:
      type: object
      description: FacetBucketFilter object
    AuthToken:
      type: object
      description: AuthToken object
    RestrictionFilters:
      type: object
      description: RestrictionFilters object
    Company:
      required:
        - name
      properties:
        name:
          type: string
          description: User-friendly display name.
        profileUrl:
          type: string
          description: Link to internal company company profile.
        websiteUrls:
          type: array
          description: Link to company's associated websites.
          items:
            type: string
        logoUrl:
          type: string
          description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
        location:
          type: string
          description: User facing string representing the company's location.
          example: New York City
        phone:
          type: string
          description: Phone number as a number string.
        fax:
          type: string
          description: Fax number as a number string.
        industry:
          type: string
          description: User facing string representing the company's industry.
          example: Finances
        annualRevenue:
          type: number
          format: double
          description: Average company's annual revenue for reference.
        numberOfEmployees:
          type: integer
          format: int64
          description: Average company's number of employees for reference.
        stockSymbol:
          type: string
          description: Company's stock symbol if company is public.
        foundedDate:
          type: string
          format: date
          description: The date when the company was founded.
        about:
          type: string
          description: User facing description of company.
          example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
      type: object
    DocumentCounts:
      type: object
      description: A map of {string, int} pairs representing counts of each document type associated with this customer.
      additionalProperties:
        type: integer
    CustomerMetadata:
      properties:
        datasourceId:
          type: string
          description: The user visible id of the salesforce customer account.
        customData:
          type: object
          description: CustomData object
      type: object
    RelatedObjects:
      properties:
        relatedObjects:
          type: object
          description: A list of objects related to a source object.
          additionalProperties:
            $ref: '#/components/schemas/RelatedObjectEdge'
      type: object
    PermissionedObject:
      type: object
      description: PermissionedObject object
    PersonToTeamRelationship:
      required:
        - person
      type: object
      description: Metadata about the relationship of a person to a team.
      properties:
        person:
          type: object
          description: Person object
        relationship:
          type: string
          description: The team member's relationship to the team. This defaults to MEMBER if not set.
          default: MEMBER
          enum:
            - MEMBER
            - MANAGER
            - LEAD
            - POINT_OF_CONTACT
            - OTHER
        customRelationshipStr:
          type: string
          description: Displayed name for the relationship if relationship is set to `OTHER`.
        joinDate:
          type: string
          format: date-time
          description: The team member's start date
    TeamEmail:
      properties:
        email:
          type: string
          format: email
          description: An email address
        type:
          type: string
          enum:
            - PRIMARY
            - SECONDARY
            - ONCALL
            - OTHER
          default: OTHER
        isUserGenerated:
          type: boolean
          description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
      type: object
    CustomFieldData:
      required:
        - label
        - values
        - displayable
      properties:
        label:
          type: string
          description: A user-facing label for this field.
        values:
          type: array
          items:
            oneOf:
              - properties:
                  strText:
                    type: string
                    description: Text field for string value.
                type: object
              - properties:
                  urlAnchor:
                    type: string
                    description: Anchor text for hyperlink.
                  urlLink:
                    type: string
                    description: Link for this URL.
                type: object
              - properties:
                  person:
                    type: object
                    description: Person object
                type: object
        displayable:
          type: boolean
          description: Determines whether the client should display this custom field
          default: true
      type: object
    DatasourceProfile:
      required:
        - datasource
        - handle
      properties:
        datasource:
          type: string
          example: github
          description: The datasource the profile is of.
        handle:
          type: string
          description: The display name of the entity in the given datasource.
        url:
          type: string
          description: URL to view the entity's profile.
        nativeAppUrl:
          type: string
          description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
        isUserGenerated:
          type: boolean
          description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
      type: object
    CustomEntityMetadata:
      properties:
        customData:
          type: object
          description: CustomData object
      type: object
    UserRoleSpecification:
      type: object
      description: UserRoleSpecification object
    AnswerId:
      properties:
        id:
          type: integer
          description: The opaque ID of the Answer.
          example: 3
      type: object
    AnswerDocId:
      properties:
        docId:
          type: string
          description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
          example: ANSWERS_answer_3
      type: object
    AnswerMutableProperties:
      properties:
        question:
          type: string
          example: Why is the sky blue?
        questionVariations:
          type: array
          description: Additional ways of phrasing this question.
          items:
            type: string
        bodyText:
          type: string
          description: The plain text answer to the question.
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
        boardId:
          type: integer
          description: The parent board ID of this Answer, or 0 if it's a floating Answer.
        audienceFilters:
          type: array
          description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
        addedRoles:
          type: array
          description: A list of user roles for the answer added by the owner.
          items:
            type: object
            description: UserRoleSpecification object
        removedRoles:
          type: array
          description: A list of user roles for the answer removed by the owner.
          items:
            type: object
            description: UserRoleSpecification object
        roles:
          type: array
          description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
          items:
            type: object
            description: UserRoleSpecification object
        sourceDocumentSpec:
          type: object
          description: DocumentSpec object
        sourceType:
          type: string
          enum:
            - DOCUMENT
            - ASSISTANT
      type: object
    StructuredText:
      type: object
      properties:
        text:
          type: string
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
        structuredList:
          type: array
          description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
          items:
            properties:
              link:
                type: string
                example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
              document:
                type: object
                description: Document object
              text:
                type: string
                example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
              structuredResult:
                description: A single object that can support any object in the work graph. Only a single object will be populated.
                properties:
                  document:
                    type: object
                    description: Document object
                  person:
                    type: object
                    description: Person object
                  customer:
                    required:
                      - id
                      - company
                    properties:
                      id:
                        type: string
                        description: Unique identifier.
                      domains:
                        type: array
                        description: Link to company's associated website domains.
                        items:
                          type: string
                      company:
                        required:
                          - name
                        properties:
                          name:
                            type: string
                            description: User-friendly display name.
                          profileUrl:
                            type: string
                            description: Link to internal company company profile.
                          websiteUrls:
                            type: array
                            description: Link to company's associated websites.
                            items:
                              type: string
                          logoUrl:
                            type: string
                            description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                          location:
                            type: string
                            description: User facing string representing the company's location.
                            example: New York City
                          phone:
                            type: string
                            description: Phone number as a number string.
                          fax:
                            type: string
                            description: Fax number as a number string.
                          industry:
                            type: string
                            description: User facing string representing the company's industry.
                            example: Finances
                          annualRevenue:
                            type: number
                            format: double
                            description: Average company's annual revenue for reference.
                          numberOfEmployees:
                            type: integer
                            format: int64
                            description: Average company's number of employees for reference.
                          stockSymbol:
                            type: string
                            description: Company's stock symbol if company is public.
                          foundedDate:
                            type: string
                            format: date
                            description: The date when the company was founded.
                          about:
                            type: string
                            description: User facing description of company.
                            example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                        type: object
                      documentCounts:
                        type: object
                        description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                        additionalProperties:
                          type: integer
                      poc:
                        type: array
                        description: A list of POC for company.
                        items:
                          type: object
                          description: Person object
                      metadata:
                        properties:
                          datasourceId:
                            type: string
                            description: The user visible id of the salesforce customer account.
                          customData:
                            type: object
                            description: CustomData object
                        type: object
                      mergedCustomers:
                        type: array
                        description: A list of Customers.
                        items:
                          type: object
                          description: Customer object
                      startDate:
                        type: string
                        format: date
                        description: The date when the interaction with customer started.
                      contractAnnualRevenue:
                        type: number
                        format: double
                        description: Average contract annual revenue with that customer.
                      notes:
                        type: string
                        description: User facing (potentially generated) notes about company.
                        example: CIO is interested in trying out the product.
                    type: object
                  team:
                    type: object
                    description: PermissionedObject object
                    properties:
                      relatedObjects:
                        type: object
                        description: A list of objects related to a source object.
                        additionalProperties:
                          $ref: '#/components/schemas/RelatedObjectEdge'
                      id:
                        type: string
                        description: Unique identifier
                      name:
                        type: string
                        description: Team name
                      description:
                        type: string
                        description: A description of the team
                      businessUnit:
                        type: string
                        description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                      department:
                        type: string
                        description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                      photoUrl:
                        type: string
                        format: url
                        description: A link to the team's photo.
                      bannerUrl:
                        type: string
                        format: url
                        description: A link to the team's banner photo.
                      externalLink:
                        type: string
                        format: uri
                        description: Link to a team page on the internet or your company's intranet
                      members:
                        type: array
                        description: The members on this team
                        items:
                          required:
                            - person
                          type: object
                          description: Metadata about the relationship of a person to a team.
                          properties:
                            person:
                              type: object
                              description: Person object
                            relationship:
                              type: string
                              description: The team member's relationship to the team. This defaults to MEMBER if not set.
                              default: MEMBER
                              enum:
                                - MEMBER
                                - MANAGER
                                - LEAD
                                - POINT_OF_CONTACT
                                - OTHER
                            customRelationshipStr:
                              type: string
                              description: Displayed name for the relationship if relationship is set to `OTHER`.
                            joinDate:
                              type: string
                              format: date-time
                              description: The team member's start date
                      memberCount:
                        type: integer
                        description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                      emails:
                        type: array
                        description: The emails for this team
                        items:
                          properties:
                            email:
                              type: string
                              format: email
                              description: An email address
                            type:
                              type: string
                              enum:
                                - PRIMARY
                                - SECONDARY
                                - ONCALL
                                - OTHER
                              default: OTHER
                            isUserGenerated:
                              type: boolean
                              description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                          type: object
                      customFields:
                        type: array
                        description: Customizable fields for additional team information.
                        items:
                          type: object
                          description: CustomFieldData object
                      datasourceProfiles:
                        type: array
                        description: The datasource profiles of the team
                        items:
                          type: object
                          description: DatasourceProfile object
                      datasource:
                        type: string
                        description: the data source of the team, e.g. GDRIVE
                      createdFrom:
                        type: string
                        description: For teams created from docs, the doc title. Otherwise empty.
                      lastUpdatedAt:
                        type: string
                        format: date-time
                        description: when this team was last updated.
                      status:
                        type: string
                        description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                        default: PROCESSED
                        enum:
                          - PROCESSED
                          - QUEUED_FOR_CREATION
                          - QUEUED_FOR_DELETION
                      canBeDeleted:
                        type: boolean
                        description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                        default: true
                      loggingId:
                        type: string
                        description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                    required:
                      - id
                      - name
                  customEntity:
                    description: PermissionedObject object
                    type: object
                    properties:
                      id:
                        type: string
                        description: Unique identifier.
                      title:
                        type: string
                        description: Title or name of the custom entity.
                      datasource:
                        type: string
                        description: The datasource the custom entity is from.
                      objectType:
                        type: string
                        description: The type of the entity. Interpretation is specific to each datasource
                      metadata:
                        properties:
                          customData:
                            type: object
                            description: CustomData object
                        type: object
                      roles:
                        type: array
                        description: A list of user roles for the custom entity explicitly granted by the owner.
                        items:
                          type: object
                          description: UserRoleSpecification object
                  answer:
                    type: object
                    description: Answer object
                  extractedQnA:
                    properties:
                      heading:
                        type: string
                        description: Heading text that was matched to produce this result.
                      question:
                        type: string
                        description: Question text that was matched to produce this result.
                      questionResult:
                        type: object
                        description: SearchResult object
                    type: object
                  meeting:
                    properties:
                      id:
                        type: string
                      title:
                        type: string
                      description:
                        type: string
                      url:
                        type: string
                      startTime:
                        type: string
                        format: date-time
                      endTime:
                        type: string
                        format: date-time
                      attendees:
                        properties:
                          people:
                            type: array
                            description: Full details of some of the attendees of this event
                            items:
                              required:
                                - person
                              properties:
                                isOrganizer:
                                  type: boolean
                                  description: Whether or not this attendee is an organizer.
                                isInGroup:
                                  type: boolean
                                  description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                                person:
                                  type: object
                                  description: Person object
                                groupAttendees:
                                  type: array
                                  description: If this attendee is a group, represents the list of individual attendees in the group.
                                  items:
                                    type: object
                                    description: CalendarAttendee object
                                responseStatus:
                                  type: string
                                  enum:
                                    - ACCEPTED
                                    - DECLINED
                                    - NO_RESPONSE
                                    - TENTATIVE
                              type: object
                          isLimit:
                            type: boolean
                            description: Whether the total count of the people returned is at the retrieval limit.
                          total:
                            type: integer
                            description: Total number of attendees in this event.
                          numAccepted:
                            type: integer
                            description: Total number of attendees who have accepted this event.
                          numDeclined:
                            type: integer
                            description: Total number of attendees who have declined this event.
                          numNoResponse:
                            type: integer
                            description: Total number of attendees who have not responded to this event.
                          numTentative:
                            type: integer
                            description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                        type: object
                    type: object
                  app:
                    required:
                      - datasource
                    properties:
                      datasource:
                        type: string
                        description: The app or other repository type this represents
                      docType:
                        type: string
                        description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                      mimeType:
                        type: string
                        description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                      iconUrl:
                        type: string
                        description: If there is available icon URL.
                    type: object
                  collection:
                    type: object
                    description: Collection object
                  answerBoard:
                    type: object
                    description: PermissionedObject object
                    properties:
                      name:
                        type: string
                        description: The unique name of the Collection.
                      description:
                        type: string
                        description: A brief summary of the Collection's contents.
                      addedRoles:
                        type: array
                        description: A list of added user roles for the Collection.
                        items:
                          type: object
                          description: UserRoleSpecification object
                      removedRoles:
                        type: array
                        description: A list of removed user roles for the Collection.
                        items:
                          type: object
                          description: UserRoleSpecification object
                      audienceFilters:
                        type: array
                        description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                        items:
                          type: object
                          description: FacetFilter object
                      id:
                        type: integer
                        description: The unique ID of the Answer Board.
                      createTime:
                        type: string
                        format: date-time
                      updateTime:
                        type: string
                        format: date-time
                      creator:
                        type: object
                        description: Person object
                      updatedBy:
                        type: object
                        description: Person object
                      itemCount:
                        type: integer
                        description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                      roles:
                        type: array
                        description: A list of user roles for the Answer Board.
                        items:
                          type: object
                          description: UserRoleSpecification object
                    required:
                      - name
                      - id
                      - description
                  code:
                    example:
                      repoName: scio
                      fileName: README.md
                      matches:
                        - lineNumber: 1
                          content: Welcome to the beginning
                          ranges: []
                        - lineNumber: 2
                          content: Second line of the file
                          ranges: []
                        - lineNumber: 3
                          content: hello world hello world
                          ranges:
                            - startindex: 0
                              endIndex: 5
                            - startIndex: 12
                              endIndex: 17
                    properties:
                      repoName:
                        type: string
                      fileName:
                        type: string
                      fileUrl:
                        type: string
                      lines:
                        type: array
                        items:
                          properties:
                            lineNumber:
                              type: integer
                            content:
                              type: string
                            ranges:
                              type: array
                              description: Index ranges depicting matched sections of the line
                              items:
                                type: object
                                description: TextRange object
                          type: object
                      isLastMatch:
                        type: boolean
                        description: Last file match for a repo
                    type: object
                  shortcut:
                    type: object
                    description: PermissionedObject object
                    properties:
                      id:
                        type: integer
                        description: The opaque id of the user generated content.
                      inputAlias:
                        type: string
                        description: Link text following go/ prefix as entered by the user.
                      destinationUrl:
                        type: string
                        description: Destination URL for the shortcut.
                      destinationDocumentId:
                        type: string
                        description: Glean Document ID for the URL, if known.
                      description:
                        type: string
                        description: A short, plain text blurb to help people understand the intent of the shortcut.
                      unlisted:
                        type: boolean
                        description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                      urlTemplate:
                        type: string
                        description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                      addedRoles:
                        type: array
                        description: A list of user roles added for the Shortcut.
                        items:
                          type: object
                          description: UserRoleSpecification object
                      removedRoles:
                        type: array
                        description: A list of user roles removed for the Shortcut.
                        items:
                          type: object
                          description: UserRoleSpecification object
                      createdBy:
                        type: object
                        description: Person object
                      createTime:
                        type: string
                        format: date-time
                        description: The time the shortcut was created in ISO format (ISO 8601).
                      updatedBy:
                        type: object
                        description: Person object
                      updateTime:
                        type: string
                        format: date-time
                        description: The time the shortcut was updated in ISO format (ISO 8601).
                      destinationDocument:
                        type: object
                        description: Document object
                      intermediateUrl:
                        type: string
                        description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                      viewPrefix:
                        type: string
                        description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                      isExternal:
                        type: boolean
                        description: Indicates whether a shortcut is native or external.
                      editUrl:
                        type: string
                        description: The URL using which the user can access the edit page of the shortcut.
                      alias:
                        type: string
                        description: canonical link text following go/ prefix where hyphen/underscore is removed.
                      title:
                        type: string
                        description: Title for the Go Link
                      roles:
                        type: array
                        description: A list of user roles for the Go Link.
                        items:
                          type: object
                          description: UserRoleSpecification object
                    required:
                      - inputAlias
                  querySuggestions:
                    type: object
                    description: QuerySuggestionList object
                  relatedDocuments:
                    type: array
                    description: A list of documents related to this structured result.
                    items:
                      type: object
                      description: RelatedDocuments object
                  relatedQuestion:
                    properties:
                      question:
                        type: string
                        description: The text of the related question
                      answer:
                        type: string
                        description: The answer for the related question
                      ranges:
                        type: array
                        description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                        items:
                          type: object
                          description: TextRange object
                    type: object
                  disambiguation:
                    type: object
                    description: A disambiguation between multiple entities with the same name
                    properties:
                      name:
                        type: string
                        description: Name of the ambiguous entity
                      id:
                        type: string
                        description: The unique id of the entity in the knowledge graph
                      type:
                        type: string
                        description: The type of entity.
                        x-include-enum-class-prefix: true
                        enum:
                          - PERSON
                          - PROJECT
                          - CUSTOMER
                  snippets:
                    description: Any snippets associated to the populated object.
                    type: array
                    items:
                      required:
                        - snippet
                      example:
                        snippet: snippet
                        mimeType: mimeType
                      properties:
                        snippet:
                          type: string
                          description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                        mimeType:
                          type: string
                          description: The mime type of the snippets, currently either text/plain or text/html.
                        text:
                          type: string
                          description: A matching snippet from the document with no highlights.
                        snippetTextOrdering:
                          type: integer
                          description: Used for sorting based off the snippet's location within all_snippetable_text
                        ranges:
                          type: array
                          description: The bolded ranges within text.
                          items:
                            type: object
                            description: TextRange object
                        url:
                          type: string
                          description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                      type: object
                  trackingToken:
                    type: string
                    description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                  prominence:
                    type: string
                    description: The level of visual distinction that should be given to a result.
                    x-enumDescriptions:
                      HERO: A high-confidence result that should feature prominently on the page.
                      PROMOTED: May not be the best result but should be given additional visual distinction.
                      STANDARD: Should not be distinct from any other results.
                    enum:
                      - HERO
                      - PROMOTED
                      - STANDARD
                  source:
                    type: string
                    description: Source context for this result. Possible values depend on the result type.
                    enum:
                      - EXPERT_DETECTION
                      - ENTITY_NLQ
                type: object
            type: object
      required:
        - text
    AnswerLikes:
      required:
        - likedBy
        - likedByUser
        - numLikes
      properties:
        likedBy:
          type: array
          items:
            properties:
              user:
                type: object
                description: Person object
              createTime:
                type: string
                format: date-time
                description: The time the user liked the answer in ISO format (ISO 8601).
            type: object
        likedByUser:
          type: boolean
          description: Whether the user in context liked the answer.
        numLikes:
          type: integer
          description: The total number of likes for the answer.
      type: object
    CalendarAttendees:
      properties:
        people:
          type: array
          description: Full details of some of the attendees of this event
          items:
            required:
              - person
            properties:
              isOrganizer:
                type: boolean
                description: Whether or not this attendee is an organizer.
              isInGroup:
                type: boolean
                description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
              person:
                type: object
                description: Person object
              groupAttendees:
                type: array
                description: If this attendee is a group, represents the list of individual attendees in the group.
                items:
                  type: object
                  description: CalendarAttendee object
              responseStatus:
                type: string
                enum:
                  - ACCEPTED
                  - DECLINED
                  - NO_RESPONSE
                  - TENTATIVE
            type: object
        isLimit:
          type: boolean
          description: Whether the total count of the people returned is at the retrieval limit.
        total:
          type: integer
          description: Total number of attendees in this event.
        numAccepted:
          type: integer
          description: Total number of attendees who have accepted this event.
        numDeclined:
          type: integer
          description: Total number of attendees who have declined this event.
        numNoResponse:
          type: integer
          description: Total number of attendees who have not responded to this event.
        numTentative:
          type: integer
          description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
      type: object
    CollectionMutableProperties:
      description: CollectionBaseMutableProperties object
      type: object
      properties:
        icon:
          type: string
          description: The emoji icon of this Collection.
        adminLocked:
          type: boolean
          description: Indicates whether edits are allowed for everyone or only admins.
        parentId:
          type: integer
          description: The parent of this Collection, or 0 if it's a top-level Collection.
        thumbnail:
          type: object
          description: Thumbnail object
        allowedDatasource:
          type: string
          description: The datasource type this Collection can hold.
      required:
        - name
    CollectionItem:
      type: object
      properties:
        name:
          type: string
          description: The optional name of the Collection item.
        description:
          type: string
          description: A helpful description of why this CollectionItem is in the Collection that it's in.
        icon:
          type: string
          description: The emoji icon for this CollectionItem. Only used for Text type items.
        collectionId:
          type: integer
          description: The Collection ID of the Collection that this CollectionItem belongs in.
        documentId:
          type: string
          description: If this CollectionItem is indexed, the Glean Document ID of that document.
        url:
          type: string
          description: The URL of this CollectionItem.
        itemId:
          type: string
          description: Unique identifier for the item within the Collection it belongs to.
        createdBy:
          type: object
          description: Person object
        createdAt:
          type: string
          format: date-time
          description: Unix timestamp for when the item was first added (in seconds since epoch UTC).
        document:
          type: object
          description: Document object
        shortcut:
          type: object
          description: Shortcut object
        collection:
          type: object
          description: Collection object
        itemType:
          type: string
          enum:
            - DOCUMENT
            - TEXT
            - URL
            - COLLECTION
      required:
        - collectionId
        - itemType
    CollectionPinnedMetadata:
      type: object
      description: CollectionPinnedMetadata object
    AnswerBoardMutableProperties:
      type: object
      description: AnswerBoardMutableProperties object
    CodeLine:
      properties:
        lineNumber:
          type: integer
        content:
          type: string
        ranges:
          type: array
          description: Index ranges depicting matched sections of the line
          items:
            type: object
            description: TextRange object
      type: object
    UserGeneratedContentId:
      type: object
      description: UserGeneratedContentId object
    ShortcutMutableProperties:
      type: object
      description: ShortcutMutableProperties object
    ShortcutMetadata:
      type: object
      description: ShortcutMetadata object
    EntityType:
      type: string
      description: The type of entity.
      x-include-enum-class-prefix: true
      enum:
        - PERSON
        - PROJECT
        - CUSTOMER
    Reaction:
      properties:
        type:
          type: string
        count:
          type: integer
          description: The count of the reaction type on the document.
        reactors:
          type: array
          items:
            type: object
            description: Person object
        reactedByViewer:
          type: boolean
          description: Whether the user in context reacted with this type to the document.
      type: object
    Share:
      description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
      required:
        - numDaysAgo
      properties:
        numDaysAgo:
          type: integer
          description: The number of days that has passed since the share happened
        sharer:
          type: object
          description: Person object
        sharingDocument:
          type: object
          description: Document object
      type: object
    VerificationMetadata:
      required:
        - documentId
      properties:
        lastVerifier:
          type: object
          description: Person object
        lastVerificationTs:
          type: integer
          description: The unix timestamp of the verification (in seconds since epoch UTC).
        expirationTs:
          type: integer
          description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
        document:
          type: object
          description: Document object
        reminders:
          type: array
          description: Info about all outstanding verification reminders for the document if exists.
          items:
            required:
              - assignee
              - remindAt
            properties:
              assignee:
                type: object
                description: Person object
              requestor:
                type: object
                description: Person object
              remindAt:
                type: integer
                description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
              createdAt:
                type: integer
                description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
              reason:
                type: string
                description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
            type: object
        lastReminder:
          required:
            - assignee
            - remindAt
          properties:
            assignee:
              type: object
              description: Person object
            requestor:
              type: object
              description: Person object
            remindAt:
              type: integer
              description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
            createdAt:
              type: integer
              description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
            reason:
              type: string
              description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
          type: object
        visitorCount:
          type: array
          description: Number of visitors to the document during included time periods.
          items:
            required:
              - count
            properties:
              count:
                type: integer
                description: The counter value
              period:
                properties:
                  minDaysFromNow:
                    type: integer
                    description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                    deprecated: true
                  maxDaysFromNow:
                    type: integer
                    description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                    deprecated: true
                  start:
                    type: object
                    description: TimePoint object
                  end:
                    type: object
                    description: TimePoint object
                type: object
              org:
                type: string
                description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
            type: object
        candidateVerifiers:
          type: array
          description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
          items:
            type: object
            description: Person object
      type: object
    WritePermission:
      type: object
      description: WritePermission object
    Period:
      properties:
        minDaysFromNow:
          type: integer
          description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
          deprecated: true
        maxDaysFromNow:
          type: integer
          description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
          deprecated: true
        start:
          type: object
          description: TimePoint object
        end:
          type: object
          description: TimePoint object
      type: object
    CustomDataValue:
      properties:
        displayLabel:
          type: string
        stringValue:
          type: string
        stringListValue:
          type: array
          description: list of strings for multi-value properties
          items:
            type: string
        numberValue:
          type: number
        booleanValue:
          type: boolean
      type: object
    PersonTeam:
      description: Use `id` if you index teams via Glean, and use `name` and `externalLink` if you want to use your own team pages
      properties:
        id:
          type: string
          description: Unique identifier
        name:
          type: string
          description: Team name
        externalLink:
          type: string
          format: uri
          description: Link to a team page on the internet or your company's intranet
        relationship:
          type: string
          description: The team member's relationship to the team. This defaults to MEMBER if not set.
          default: MEMBER
          enum:
            - MEMBER
            - MANAGER
            - LEAD
            - POINT_OF_CONTACT
            - OTHER
        joinDate:
          type: string
          format: date-time
          description: The team member's start date
      type: object
    StructuredLocation:
      type: object
      description: Detailed location with information about country, state, city etc.
      properties:
        deskLocation:
          type: string
          description: Desk number.
        timezone:
          type: string
          description: Location's timezone, e.g. UTC, PST.
        address:
          type: string
          description: Office address or name.
        city:
          type: string
          description: Name of the city.
        state:
          type: string
          description: State code.
        region:
          type: string
          description: Region information, e.g. NORAM, APAC.
        zipCode:
          type: string
          description: ZIP Code for the address.
        country:
          type: string
          description: Country name.
        countryCode:
          type: string
          description: Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA.
    SocialNetwork:
      required:
        - name
        - profileUrl
      properties:
        name:
          type: string
          description: Possible values are "twitter", "linkedin".
        profileName:
          type: string
          description: Human-readable profile name.
        profileUrl:
          type: string
          format: url
          description: Link to profile.
      type: object
    PersonDistance:
      required:
        - name
        - obfuscatedId
        - distance
      properties:
        name:
          type: string
          description: The display name.
        obfuscatedId:
          type: string
          description: An opaque identifier that can be used to request metadata for a Person.
        distance:
          type: number
          format: float
          description: Distance to person, refer to PeopleDistance pipeline on interpretation of the value.
      type: object
    InviteInfo:
      description: Information regarding the invite status of a person.
      properties:
        signUpTime:
          type: string
          format: date-time
          description: The time this person signed up in ISO format (ISO 8601).
        invites:
          type: array
          description: Latest invites received by the user for each channel
          items:
            description: Information regarding the invite status of a person for a particular channel.
            properties:
              channel:
                type: string
                enum:
                  - COMMUNICATION_CHANNEL_EMAIL
                  - COMMUNICATION_CHANNEL_SLACK
              isAutoInvite:
                description: Bit that tracks if this invite was automatically sent or user-sent
                type: boolean
              inviter:
                type: object
                description: Person object
              inviteTime:
                type: string
                format: date-time
                description: The time this person was invited in ISO format (ISO 8601).
              reminderTime:
                type: string
                format: date-time
                description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
            type: object
        inviter:
          type: object
          description: Person object
        inviteTime:
          deprecated: true
          type: string
          format: date-time
          description: The time this person was invited in ISO format (ISO 8601).
        reminderTime:
          deprecated: true
          type: string
          format: date-time
          description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
      type: object
    Permissions:
      description: |-
        Describes the permissions levels that a user has for permissioned features. When the client sends this, Permissions.read and Permissions.write are the additional permissions granted to a user on top of what they have via their roles.
        When the server sends this, Permissions.read and Permissions.write are the complete (merged) set of permissions the user has, and Permissions.roles is just for display purposes.
      properties:
        canAdminSearch:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user has access to /adminsearch
        canAdminClientApiGlobalTokens:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user can administrate client API tokens with global scope
        canDlp:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user has access to data loss prevention (DLP) features
        read:
          description: Describes the read permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
          additionalProperties:
            type: array
            description: List of read permissions (for different scopes but same feature)
            items:
              $ref: '#/components/schemas/ReadPermission'
        write:
          description: Describes the write permissions levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
          additionalProperties:
            type: array
            description: List of write permissions (for different scopes but same feature)
            items:
              $ref: '#/components/schemas/WritePermission'
        grant:
          description: Describes the grant permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
          additionalProperties:
            type: array
            description: List of grant permissions (for different scopes but same feature)
            items:
              $ref: '#/components/schemas/GrantPermission'
        role:
          type: string
          description: The roleId of the canonical role a user has. The displayName is equal to the roleId.
        roles:
          type: array
          description: The roleIds of the roles a user has.
          items:
            type: string
      type: object
    AnonymousEvent:
      description: A generic, light-weight calendar event.
      type: object
      properties:
        time:
          required:
            - start
            - end
          properties:
            start:
              type: string
              description: The RFC3339 timestamp formatted start time of this event.
            end:
              type: string
              description: The RFC3339 timestamp formatted end time of this event.
          type: object
        eventType:
          description: The nature of the event, for example "out of office".
          type: string
          enum:
            - DEFAULT
            - OUT_OF_OFFICE
    Badge:
      type: object
      description: Displays a user's accomplishment or milestone
      example:
        key: deployment_name_new_hire
        displayName: New hire
        iconConfig:
          color: '#343CED'
          key: person_icon
          iconType: GLYPH
          name: user
      properties:
        key:
          type: string
          description: An auto generated unique identifier.
        displayName:
          type: string
          description: The badge name displayed to users
        iconConfig:
          type: object
          description: IconConfig object
        pinned:
          type: boolean
          description: The badge should be shown on the PersonAttribution
    DocumentSpec:
      type: object
      description: DocumentSpec object
    RelatedObjectEdge:
      properties:
        objects:
          type: array
          items:
            required:
              - id
            properties:
              id:
                type: string
                description: The ID of the related object
              metadata:
                type: object
                description: Some metadata of the object which can be displayed, while not having the actual object.
                properties:
                  name:
                    type: string
                    description: Placeholder name of the object, not the relationship.
            type: object
      type: object
    CustomFieldValue:
      type: object
      description: CustomFieldValue object
    Group:
      type: object
      description: Group object
    UserRole:
      type: object
      description: UserRole object
    StructuredTextMutableProperties:
      required:
        - text
      properties:
        text:
          type: string
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
      type: object
    StructuredTextItem:
      properties:
        link:
          type: string
          example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
        document:
          type: object
          description: Document object
        text:
          type: string
          example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
        structuredResult:
          description: A single object that can support any object in the work graph. Only a single object will be populated.
          properties:
            document:
              type: object
              description: Document object
            person:
              type: object
              description: Person object
            customer:
              required:
                - id
                - company
              properties:
                id:
                  type: string
                  description: Unique identifier.
                domains:
                  type: array
                  description: Link to company's associated website domains.
                  items:
                    type: string
                company:
                  type: object
                  description: Company object
                documentCounts:
                  type: object
                  description: DocumentCounts object
                poc:
                  type: array
                  description: A list of POC for company.
                  items:
                    type: object
                    description: Person object
                metadata:
                  type: object
                  description: CustomerMetadata object
                mergedCustomers:
                  type: array
                  description: A list of Customers.
                  items:
                    type: object
                    description: Customer object
                startDate:
                  type: string
                  format: date
                  description: The date when the interaction with customer started.
                contractAnnualRevenue:
                  type: number
                  format: double
                  description: Average contract annual revenue with that customer.
                notes:
                  type: string
                  description: User facing (potentially generated) notes about company.
                  example: CIO is interested in trying out the product.
              type: object
            team:
              description: RelatedObjects object
              type: object
              properties:
                id:
                  type: string
                  description: Unique identifier
                name:
                  type: string
                  description: Team name
                description:
                  type: string
                  description: A description of the team
                businessUnit:
                  type: string
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                department:
                  type: string
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                photoUrl:
                  type: string
                  format: url
                  description: A link to the team's photo.
                bannerUrl:
                  type: string
                  format: url
                  description: A link to the team's banner photo.
                externalLink:
                  type: string
                  format: uri
                  description: Link to a team page on the internet or your company's intranet
                members:
                  type: array
                  description: The members on this team
                  items:
                    type: object
                    description: PersonToTeamRelationship object
                memberCount:
                  type: integer
                  description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                emails:
                  type: array
                  description: The emails for this team
                  items:
                    type: object
                    description: TeamEmail object
                customFields:
                  type: array
                  description: Customizable fields for additional team information.
                  items:
                    type: object
                    description: CustomFieldData object
                datasourceProfiles:
                  type: array
                  description: The datasource profiles of the team
                  items:
                    type: object
                    description: DatasourceProfile object
                datasource:
                  type: string
                  description: the data source of the team, e.g. GDRIVE
                createdFrom:
                  type: string
                  description: For teams created from docs, the doc title. Otherwise empty.
                lastUpdatedAt:
                  type: string
                  format: date-time
                  description: when this team was last updated.
                status:
                  type: string
                  description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                  default: PROCESSED
                  enum:
                    - PROCESSED
                    - QUEUED_FOR_CREATION
                    - QUEUED_FOR_DELETION
                canBeDeleted:
                  type: boolean
                  description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                  default: true
                loggingId:
                  type: string
                  description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
              required:
                - id
                - name
            customEntity:
              description: PermissionedObject object
              type: object
              properties:
                id:
                  type: string
                  description: Unique identifier.
                title:
                  type: string
                  description: Title or name of the custom entity.
                datasource:
                  type: string
                  description: The datasource the custom entity is from.
                objectType:
                  type: string
                  description: The type of the entity. Interpretation is specific to each datasource
                metadata:
                  type: object
                  description: CustomEntityMetadata object
                roles:
                  type: array
                  description: A list of user roles for the custom entity explicitly granted by the owner.
                  items:
                    type: object
                    description: UserRoleSpecification object
            answer:
              type: object
              description: Answer object
            extractedQnA:
              properties:
                heading:
                  type: string
                  description: Heading text that was matched to produce this result.
                question:
                  type: string
                  description: Question text that was matched to produce this result.
                questionResult:
                  type: object
                  description: SearchResult object
              type: object
            meeting:
              properties:
                id:
                  type: string
                title:
                  type: string
                description:
                  type: string
                url:
                  type: string
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
                attendees:
                  type: object
                  description: CalendarAttendees object
              type: object
            app:
              required:
                - datasource
              properties:
                datasource:
                  type: string
                  description: The app or other repository type this represents
                docType:
                  type: string
                  description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                mimeType:
                  type: string
                  description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                iconUrl:
                  type: string
                  description: If there is available icon URL.
              type: object
            collection:
              type: object
              description: Collection object
            answerBoard:
              type: object
              description: AnswerBoard object
            code:
              example:
                repoName: scio
                fileName: README.md
                matches:
                  - lineNumber: 1
                    content: Welcome to the beginning
                    ranges: []
                  - lineNumber: 2
                    content: Second line of the file
                    ranges: []
                  - lineNumber: 3
                    content: hello world hello world
                    ranges:
                      - startindex: 0
                        endIndex: 5
                      - startIndex: 12
                        endIndex: 17
              properties:
                repoName:
                  type: string
                fileName:
                  type: string
                fileUrl:
                  type: string
                lines:
                  type: array
                  items:
                    type: object
                    description: CodeLine object
                isLastMatch:
                  type: boolean
                  description: Last file match for a repo
              type: object
            shortcut:
              type: object
              description: Shortcut object
            querySuggestions:
              type: object
              description: QuerySuggestionList object
            relatedDocuments:
              type: array
              description: A list of documents related to this structured result.
              items:
                type: object
                description: RelatedDocuments object
            relatedQuestion:
              properties:
                question:
                  type: string
                  description: The text of the related question
                answer:
                  type: string
                  description: The answer for the related question
                ranges:
                  type: array
                  description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                  items:
                    type: object
                    description: TextRange object
              type: object
            disambiguation:
              type: object
              description: A disambiguation between multiple entities with the same name
              properties:
                name:
                  type: string
                  description: Name of the ambiguous entity
                id:
                  type: string
                  description: The unique id of the entity in the knowledge graph
                type:
                  type: object
                  description: EntityType object
            snippets:
              description: Any snippets associated to the populated object.
              type: array
              items:
                type: object
                description: SearchResultSnippet object
            trackingToken:
              type: string
              description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
            prominence:
              type: string
              description: The level of visual distinction that should be given to a result.
              x-enumDescriptions:
                HERO: A high-confidence result that should feature prominently on the page.
                PROMOTED: May not be the best result but should be given additional visual distinction.
                STANDARD: Should not be distinct from any other results.
              enum:
                - HERO
                - PROMOTED
                - STANDARD
            source:
              type: string
              description: Source context for this result. Possible values depend on the result type.
              enum:
                - EXPERT_DETECTION
                - ENTITY_NLQ
          type: object
      type: object
    AnswerLike:
      properties:
        user:
          type: object
          description: Person object
        createTime:
          type: string
          format: date-time
          description: The time the user liked the answer in ISO format (ISO 8601).
      type: object
    CalendarAttendee:
      type: object
      description: CalendarAttendee object
    CollectionBaseMutableProperties:
      type: object
      description: CollectionBaseMutableProperties object
    CollectionItemMutableProperties:
      properties:
        name:
          type: string
          description: The optional name of the Collection item.
        description:
          type: string
          description: A helpful description of why this CollectionItem is in the Collection that it's in.
        icon:
          type: string
          description: The emoji icon for this CollectionItem. Only used for Text type items.
      type: object
    CollectionPinTarget:
      type: object
      description: CollectionPinTarget object
    CollectionPinMetadata:
      type: object
      description: CollectionPinMetadata object
    Reminder:
      required:
        - assignee
        - remindAt
      properties:
        assignee:
          type: object
          description: Person object
        requestor:
          type: object
          description: Person object
        remindAt:
          type: integer
          description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
        createdAt:
          type: integer
          description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
        reason:
          type: string
          description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
      type: object
    ScopeType:
      type: object
      description: ScopeType object
    TimePoint:
      type: object
      description: TimePoint object
    ChannelInviteInfo:
      description: Information regarding the invite status of a person for a particular channel.
      properties:
        channel:
          type: string
          enum:
            - COMMUNICATION_CHANNEL_EMAIL
            - COMMUNICATION_CHANNEL_SLACK
        isAutoInvite:
          description: Bit that tracks if this invite was automatically sent or user-sent
          type: boolean
        inviter:
          type: object
          description: Person object
        inviteTime:
          type: string
          format: date-time
          description: The time this person was invited in ISO format (ISO 8601).
        reminderTime:
          type: string
          format: date-time
          description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
      type: object
    ReadPermissions:
      description: Describes the read permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of read permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/ReadPermission'
    WritePermissions:
      description: Describes the write permissions levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of write permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/WritePermission'
    GrantPermissions:
      description: Describes the grant permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of grant permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/GrantPermission'
    TimeInterval:
      required:
        - start
        - end
      properties:
        start:
          type: string
          description: The RFC3339 timestamp formatted start time of this event.
        end:
          type: string
          description: The RFC3339 timestamp formatted end time of this event.
      type: object
    RelatedObject:
      required:
        - id
      properties:
        id:
          type: string
          description: The ID of the related object
        metadata:
          type: object
          description: Some metadata of the object which can be displayed, while not having the actual object.
          properties:
            name:
              type: string
              description: Placeholder name of the object, not the relationship.
      type: object
    CustomFieldValueStr:
      type: object
      description: CustomFieldValueStr object
    CustomFieldValueHyperlink:
      type: object
      description: CustomFieldValueHyperlink object
    CustomFieldValuePerson:
      type: object
      description: CustomFieldValuePerson object
    GroupType:
      type: object
      description: GroupType object
    CollectionPinnableCategories:
      type: object
      description: CollectionPinnableCategories object
    CollectionPinnableTargets:
      type: object
      description: CollectionPinnableTargets object
    CommunicationChannel:
      type: string
      enum:
        - COMMUNICATION_CHANNEL_EMAIL
        - COMMUNICATION_CHANNEL_SLACK
    ReadPermission:
      description: Describes the read permission level that a user has for a specific feature
      properties:
        scopeType:
          type: object
          description: ScopeType object
      type: object
    GrantPermission:
      description: Describes the grant permission level that a user has for a specific feature
      properties:
        scopeType:
          type: object
          description: ScopeType object
      type: object
  parameters:
    timezoneOffset:
      name: timezoneOffset
      in: query
      description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
      schema:
        type: integer
  securitySchemes:
    APIToken:
      scheme: bearer
      type: http
