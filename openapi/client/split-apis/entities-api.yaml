openapi: 3.0.0
info:
  version: 0.9.0
  title: Glean API - Entities
  description: API endpoints for Entities
  x-logo:
    url: https://app.glean.com/images/glean-text2.svg
  x-speakeasy-name: Glean API
servers:
  - url: https://{instance}-be.glean.com
    variables:
      instance:
        default: instance-name
        description: The instance name (typically the email domain without the TLD) that determines the deployment backend.
security:
  - APIToken: []
paths:
  /rest/api/v1/listentities:
    post:
      tags:
        - Entities
      summary: List entities
      description: List some set of details for all entities that fit the given criteria and return in the requested order. Does not support negation in filters, assumes relation type EQUALS. There is a limit of 10000 entities that can be retrieved via this endpoint, except when using FULL_DIRECTORY request type for people entities.
      operationId: listentities
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEntitiesRequest'
        description: List people request
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntitiesResponse'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '429':
          description: Too Many Requests
      x-speakeasy-group: client.entities
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean, models
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                res = glean.client.entities.list(filter_=[
                    {
                        "field_name": "type",
                        "values": [
                            {
                                "value": "Spreadsheet",
                                "relation_type": models.RelationType.EQUALS,
                            },
                            {
                                "value": "Presentation",
                                "relation_type": models.RelationType.EQUALS,
                            },
                        ],
                    },
                ], entity_type=models.ListEntitiesRequestEntityType.PEOPLE, page_size=100, request_type=models.RequestType.STANDARD)

                # Handle response
                print(res)
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.entities.list({
                filter: [
                  {
                    fieldName: "type",
                    values: [
                      {
                        value: "Spreadsheet",
                        relationType: "EQUALS",
                      },
                      {
                        value: "Presentation",
                        relationType: "EQUALS",
                      },
                    ],
                  },
                ],
                pageSize: 100,
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Entities.List(ctx, components.ListEntitiesRequest{\n        Filter: []components.FacetFilter{\n            components.FacetFilter{\n                FieldName: apiclientgo.String(\"type\"),\n                Values: []components.FacetFilterValue{\n                    components.FacetFilterValue{\n                        Value: apiclientgo.String(\"Spreadsheet\"),\n                        RelationType: components.RelationTypeEquals.ToPointer(),\n                    },\n                    components.FacetFilterValue{\n                        Value: apiclientgo.String(\"Presentation\"),\n                        RelationType: components.RelationTypeEquals.ToPointer(),\n                    },\n                },\n            },\n        },\n        PageSize: apiclientgo.Int64(100),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.ListEntitiesResponse != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.*;
            import org.openapis.openapi.models.operations.ListentitiesResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    ListEntitiesRequest req = ListEntitiesRequest.builder()
                            .filter(List.of(
                                FacetFilter.builder()
                                    .fieldName("type")
                                    .values(List.of(
                                        FacetFilterValue.builder()
                                            .value("Spreadsheet")
                                            .relationType(RelationType.EQUALS)
                                            .build(),
                                        FacetFilterValue.builder()
                                            .value("Presentation")
                                            .relationType(RelationType.EQUALS)
                                            .build()))
                                    .build()))
                            .pageSize(100L)
                            .build();

                    ListentitiesResponse res = sdk.client().entities().list()
                            .request(req)
                            .call();

                    if (res.listEntitiesResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/people:
    post:
      tags:
        - Entities
      summary: Read people
      description: Read people details for the given IDs.
      operationId: people
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeopleRequest'
        description: People request
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleResponse'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: readPeople
      x-speakeasy-group: client.entities
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                res = glean.client.entities.read_people(obfuscated_ids=[
                    "abc123",
                    "abc456",
                ])

                # Handle response
                print(res)
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.entities.readPeople({
                obfuscatedIds: [
                  "abc123",
                  "abc456",
                ],
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Entities.ReadPeople(ctx, components.PeopleRequest{\n        ObfuscatedIds: []string{\n            \"abc123\",\n            \"abc456\",\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.PeopleResponse != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.PeopleRequest;
            import org.openapis.openapi.models.operations.PeopleResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    PeopleRequest req = PeopleRequest.builder()
                            .obfuscatedIds(List.of(
                                "abc123",
                                "abc456"))
                            .build();

                    PeopleResponse res = sdk.client().entities().readPeople()
                            .request(req)
                            .call();

                    if (res.peopleResponse().isPresent()) {
                        // handle response
                    }
                }
            }
components:
  schemas:
    ClusterTypeEnum:
      type: string
      description: The reason for inclusion of clusteredResults.
      enum:
        - SIMILAR
        - FRESHNESS
        - TITLE
        - CONTENT
        - NONE
        - THREAD_REPLY
        - THREAD_ROOT
        - PREFIX
        - SUFFIX
    CollectionPinnableCategories:
      type: string
      description: Categories a Collection can be pinned to.
      enum:
        - COMPANY_RESOURCE
        - DEPARTMENT_RESOURCE
        - TEAM_RESOURCE
    CollectionPinnableTargets:
      type: string
      description: What targets can a Collection be pinned to.
      enum:
        - RESOURCE_CARD
        - TEAM_PROFILE_PAGE
    CommunicationChannel:
      type: string
      enum:
        - COMMUNICATION_CHANNEL_EMAIL
        - COMMUNICATION_CHANNEL_SLACK
    ConnectorType:
      type: string
      description: The source from which document content was pulled, e.g. an API crawl or browser history
      enum:
        - API_CRAWL
        - BROWSER_CRAWL
        - BROWSER_HISTORY
        - BUILTIN
        - FEDERATED_SEARCH
        - PUSH_API
        - WEB_CRAWL
        - NATIVE_HISTORY
    EntitiesSortOrder:
      type: string
      description: Different ways of sorting entities
      enum:
        - ENTITY_NAME
        - FIRST_NAME
        - LAST_NAME
        - ORG_SIZE_COUNT
        - START_DATE
        - TEAM_SIZE
        - RELEVANCE
    EntityType:
      type: string
      description: The type of entity.
      x-include-enum-class-prefix: true
      enum:
        - PERSON
        - PROJECT
        - CUSTOMER
    GroupType:
      type: string
      description: The type of user group
      enum:
        - DEPARTMENT
        - ALL
        - TEAM
        - JOB_TITLE
        - ROLE_TYPE
        - LOCATION
        - REGION
        - EXTERNAL_GROUP
    ScopeType:
      type: string
      description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
      enum:
        - GLOBAL
        - OWN
    UserRole:
      type: string
      description: A user's role with respect to a specific document.
      enum:
        - OWNER
        - VIEWER
        - ANSWER_MODERATOR
        - EDITOR
        - VERIFIER
    DocumentVisibility:
      type: string
      description: The level of visibility of the document as understood by our system.
      x-enumDescriptions:
        PRIVATE: Only one person is able to see the document.
        SPECIFIC_PEOPLE_AND_GROUPS: Only specific people and/or groups can see the document.
        DOMAIN_LINK: Anyone in the domain with the link can see the document.
        DOMAIN_VISIBLE: Anyone in the domain can search for the document.
        PUBLIC_LINK: Anyone with the link can see the document.
        PUBLIC_VISIBLE: Anyone on the internet can search for the document.
      enum:
        - PRIVATE
        - SPECIFIC_PEOPLE_AND_GROUPS
        - DOMAIN_LINK
        - DOMAIN_VISIBLE
        - PUBLIC_LINK
        - PUBLIC_VISIBLE
    SearchResultProminenceEnum:
      type: string
      description: |
        The level of visual distinction that should be given to a result.
      x-enumDescriptions:
        HERO: A high-confidence result that should feature prominently on the page.
        PROMOTED: May not be the best result but should be given additional visual distinction.
        STANDARD: Should not be distinct from any other results.
      enum:
        - HERO
        - PROMOTED
        - STANDARD
    AnswerDocId:
      properties:
        docId:
          type: string
          description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
          example: ANSWERS_answer_3
    AnswerId:
      properties:
        id:
          type: integer
          description: The opaque ID of the Answer.
          example: 3
    UserGeneratedContentId:
      properties:
        id:
          type: integer
          description: The opaque id of the user generated content.
    CustomFieldValueStr:
      properties:
        strText:
          type: string
          description: Text field for string value.
    SearchRequestInputDetails:
      properties:
        hasCopyPaste:
          type: boolean
          description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
      example:
        hasCopyPaste: true
    StructuredTextMutableProperties:
      required:
        - text
      properties:
        text:
          type: string
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
    CustomFieldValueHyperlink:
      properties:
        urlAnchor:
          type: string
          description: Anchor text for hyperlink.
        urlLink:
          type: string
          description: Link for this URL.
    FacetBucketFilter:
      properties:
        facet:
          type: string
          description: The facet whose buckets should be filtered.
        prefix:
          type: string
          description: The per-term prefix that facet buckets should be filtered on.
    IndexStatus:
      properties:
        lastCrawledTime:
          description: When the document was last crawled
          type: string
          format: date-time
        lastIndexedTime:
          description: When the document was last indexed
          type: string
          format: date-time
    SortOptions:
      type: object
      properties:
        orderBy:
          type: string
          enum:
            - ASC
            - DESC
        sortBy:
          type: string
    Thumbnail:
      properties:
        photoId:
          type: string
          description: Photo id if the thumbnail is from splash.
        url:
          type: string
          description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
    TimeInterval:
      required:
        - start
        - end
      properties:
        start:
          type: string
          description: The RFC3339 timestamp formatted start time of this event.
        end:
          type: string
          description: The RFC3339 timestamp formatted end time of this event.
    TimePoint:
      properties:
        epochSeconds:
          type: integer
          description: Epoch seconds. Has precedence over daysFromNow.
        daysFromNow:
          type: integer
          description: The number of days from now. Specification relative to current time. Can be negative.
    ViewerInfo:
      properties:
        role:
          type: string
          enum:
            - ANSWER_MODERATOR
            - OWNER
            - VIEWER
          description: DEPRECATED - use permissions instead. Viewer's role on the specific document.
          deprecated: true
        lastViewedTime:
          type: string
          format: date-time
    CollectionItemMutableProperties:
      properties:
        name:
          type: string
          description: The optional name of the Collection item.
        description:
          type: string
          description: A helpful description of why this CollectionItem is in the Collection that it's in.
        icon:
          type: string
          description: The emoji icon for this CollectionItem. Only used for Text type items.
    FacetFilterValue:
      properties:
        value:
          type: string
          example: Spreadsheet
        relationType:
          type: string
          enum:
            - EQUALS
            - ID_EQUALS
            - LT
            - GT
            - NOT_EQUALS
          example: EQUALS
        isNegated:
          type: boolean
          deprecated: true
          description: DEPRECATED - please use relationType instead
    PersonDistance:
      required:
        - name
        - obfuscatedId
        - distance
      properties:
        name:
          type: string
          description: The display name.
        obfuscatedId:
          type: string
          description: An opaque identifier that can be used to request metadata for a Person.
        distance:
          type: number
          format: float
          description: Distance to person, refer to PeopleDistance pipeline on interpretation of the value.
    SearchProviderInfo:
      properties:
        name:
          type: string
          description: Name of the search provider.
        logoUrl:
          type: string
          description: URL to the provider's logo.
        searchLinkUrlTemplate:
          type: string
          description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
      example:
        name: Google
        logo: https://app.glean.com/images/feather/globe.svg
        searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
    SocialNetwork:
      required:
        - name
        - profileUrl
      properties:
        name:
          type: string
          description: Possible values are "twitter", "linkedin".
        profileName:
          type: string
          description: Human-readable profile name.
        profileUrl:
          type: string
          format: url
          description: Link to profile.
    TeamEmail:
      properties:
        email:
          type: string
          format: email
          description: An email address
        type:
          type: string
          enum:
            - PRIMARY
            - SECONDARY
            - ONCALL
            - OTHER
          default: OTHER
        isUserGenerated:
          type: boolean
          description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
    DatasourceProfile:
      required:
        - datasource
        - handle
      properties:
        datasource:
          type: string
          example: github
          description: The datasource the profile is of.
        handle:
          type: string
          description: The display name of the entity in the given datasource.
        url:
          type: string
          description: URL to view the entity's profile.
        nativeAppUrl:
          type: string
          description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
        isUserGenerated:
          type: boolean
          description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
    PersonTeam:
      description: Use `id` if you index teams via Glean, and use `name` and `externalLink` if you want to use your own team pages
      properties:
        id:
          type: string
          description: Unique identifier
        name:
          type: string
          description: Team name
        externalLink:
          type: string
          format: uri
          description: Link to a team page on the internet or your company's intranet
        relationship:
          type: string
          description: The team member's relationship to the team. This defaults to MEMBER if not set.
          default: MEMBER
          enum:
            - MEMBER
            - MANAGER
            - LEAD
            - POINT_OF_CONTACT
            - OTHER
        joinDate:
          type: string
          format: date-time
          description: The team member's start date
    AuthToken:
      required:
        - accessToken
        - datasource
      properties:
        accessToken:
          type: string
        datasource:
          type: string
        scope:
          type: string
        tokenType:
          type: string
        authUser:
          description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
          type: string
        expiration:
          description: Unix timestamp when this token expires (in seconds since epoch UTC).
          type: integer
          format: int64
      example:
        accessToken: 123abc
        datasource: gmail
        scope: email profile https://www.googleapis.com/auth/gmail.readonly
        tokenType: Bearer
        authUser: '1'
    RelatedObject:
      required:
        - id
      properties:
        id:
          type: string
          description: The ID of the related object
        metadata:
          type: object
          description: Some metadata of the object which can be displayed, while not having the actual object.
          properties:
            name:
              type: string
              description: Placeholder name of the object, not the relationship.
    IconConfig:
      description: Defines how to render an icon
      properties:
        generatedBackgroundColorKey:
          type: string
        backgroundColor:
          type: string
        color:
          type: string
        key:
          type: string
        iconType:
          enum:
            - COLLECTION
            - CUSTOM
            - DATASOURCE
            - DATASOURCE_INSTANCE
            - FAVICON
            - FILE_TYPE
            - GENERATED_BACKGROUND
            - GLYPH
            - MIME_TYPE
            - NO_ICON
            - PERSON
            - REACTIONS
            - URL
        masked:
          type: boolean
          description: Whether the icon should be masked based on current theme.
        name:
          type: string
          description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
        url:
          type: string
          description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
      example:
        color: '#343CED'
        key: person_icon
        iconType: GLYPH
        name: user
    StructuredLocation:
      type: object
      description: Detailed location with information about country, state, city etc.
      properties:
        deskLocation:
          type: string
          description: Desk number.
        timezone:
          type: string
          description: Location's timezone, e.g. UTC, PST.
        address:
          type: string
          description: Office address or name.
        city:
          type: string
          description: Name of the city.
        state:
          type: string
          description: State code.
        region:
          type: string
          description: Region information, e.g. NORAM, APAC.
        zipCode:
          type: string
          description: ZIP Code for the address.
        country:
          type: string
          description: Country name.
        countryCode:
          type: string
          description: Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA.
    DocumentCounts:
      type: object
      description: A map of {string, int} pairs representing counts of each document type associated with this customer.
      additionalProperties:
        type: integer
    CustomDataValue:
      properties:
        displayLabel:
          type: string
        stringValue:
          type: string
        stringListValue:
          type: array
          description: list of strings for multi-value properties
          items:
            type: string
        numberValue:
          type: number
        booleanValue:
          type: boolean
    PeopleRequest:
      type: object
      properties:
        timezoneOffset:
          type: integer
          description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
        obfuscatedIds:
          type: array
          items:
            type: string
          description: The Person IDs to retrieve. If no IDs are requested, the current user's details are returned.
        emailIds:
          type: array
          items:
            type: string
          description: The email IDs to retrieve. The result is the deduplicated union of emailIds and obfuscatedIds.
        includeFields:
          description: List of PersonMetadata fields to return (that aren't returned by default)
          type: array
          items:
            type: string
            enum:
              - BADGES
              - BUSY_EVENTS
              - DOCUMENT_ACTIVITY
              - INVITE_INFO
              - PEOPLE_DISTANCE
              - PERMISSIONS
              - PEOPLE_DETAILS
              - MANAGEMENT_DETAILS
              - PEOPLE_PROFILE_SETTINGS
              - PEOPLE_WITHOUT_MANAGER
        includeTypes:
          description: The types of people entities to include in the response in addition to those returned by default.
          x-enumDescriptions:
            PEOPLE_WITHOUT_MANAGER: Returns all people without a manager apart from the requested IDs.
            INVALID_ENTITIES: Includes invalid entities in the response if any of the requested IDs are invalid.
          type: array
          items:
            type: string
            enum:
              - PEOPLE_WITHOUT_MANAGER
              - INVALID_ENTITIES
        source:
          type: string
          description: A string denoting the search surface from which the endpoint is called.
      example:
        obfuscatedIds:
          - abc123
          - abc456
    DocumentSection:
      type: object
      properties:
        title:
          type: string
          description: The title of the document section (e.g. the section header).
        url:
          type: string
          description: The permalink of the document section.
    AppResult:
      required:
        - datasource
      properties:
        datasource:
          type: string
          description: The app or other repository type this represents
        docType:
          type: string
          description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
        mimeType:
          type: string
          description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
        iconUrl:
          type: string
          description: If there is available icon URL.
    Company:
      required:
        - name
      properties:
        name:
          type: string
          description: User-friendly display name.
        profileUrl:
          type: string
          description: Link to internal company company profile.
        websiteUrls:
          type: array
          description: Link to company's associated websites.
          items:
            type: string
        logoUrl:
          type: string
          description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
        location:
          type: string
          description: User facing string representing the company's location.
          example: New York City
        phone:
          type: string
          description: Phone number as a number string.
        fax:
          type: string
          description: Fax number as a number string.
        industry:
          type: string
          description: User facing string representing the company's industry.
          example: Finances
        annualRevenue:
          type: number
          format: double
          description: Average company's annual revenue for reference.
        numberOfEmployees:
          type: integer
          format: int64
          description: Average company's number of employees for reference.
        stockSymbol:
          type: string
          description: Company's stock symbol if company is public.
        foundedDate:
          type: string
          format: date
          description: The date when the company was founded.
        about:
          type: string
          description: User facing description of company.
          example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
    DocumentContent:
      properties:
        fullTextList:
          type: array
          items:
            type: string
          description: The plaintext content of the document.
    DocumentSpec:
      oneOf:
        - type: object
          properties:
            url:
              type: string
              description: The URL of the document.
        - type: object
          properties:
            id:
              type: string
              description: The ID of the document.
        - type: object
          properties:
            ugcType:
              type: string
              enum:
                - ANNOUNCEMENTS
                - ANSWERS
                - COLLECTIONS
                - SHORTCUTS
              description: The type of the user generated content (UGC datasource).
            contentId:
              type: integer
              description: The id for user generated content.
            docType:
              type: string
              description: The specific type of the user generated content type.
    StructuredText:
      type: object
      properties:
        structuredList:
          description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
          type: array
          items:
            properties:
              document: &ref_26
                type: object
                description: Document object
              link:
                example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
                type: string
              structuredResult:
                type: object
                description: StructuredResult object
              text:
                example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
                type: string
            type: object
    CustomData:
      type: object
      description: Custom fields specific to individual datasources
      additionalProperties:
        $ref: '#/components/schemas/CustomDataValue'
    GrantPermission:
      description: Describes the grant permission level that a user has for a specific feature
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
    ObjectPermissions:
      properties:
        write:
          $ref: '#/components/schemas/WritePermission'
    PermissionedObject:
      properties:
        permissions:
          $ref: '#/components/schemas/ObjectPermissions'
          description: The permissions the current viewer has with respect to a particular object.
    ReadPermission:
      description: Describes the read permission level that a user has for a specific feature
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
    RelatedObjects:
      properties:
        relatedObjects:
          type: object
          description: A list of objects related to a source object.
          additionalProperties:
            $ref: '#/components/schemas/RelatedObjectEdge'
    AnonymousEvent:
      description: A generic, light-weight calendar event.
      type: object
      properties:
        time:
          $ref: '#/components/schemas/TimeInterval'
        eventType:
          description: The nature of the event, for example "out of office".
          type: string
          enum:
            - DEFAULT
            - OUT_OF_OFFICE
    CountInfo:
      required:
        - count
      properties:
        count:
          type: integer
          description: The counter value
        period:
          $ref: '#/components/schemas/Period'
        org:
          type: string
          description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
    Disambiguation:
      type: object
      description: A disambiguation between multiple entities with the same name
      properties:
        name:
          type: string
          description: Name of the ambiguous entity
        id:
          type: string
          description: The unique id of the entity in the knowledge graph
        type:
          $ref: '#/components/schemas/EntityType'
    Group:
      required:
        - type
        - id
      properties:
        type:
          $ref: '#/components/schemas/GroupType'
        id:
          type: string
          description: A unique identifier for the group. May be the same as name.
        name:
          type: string
          description: Name of the group.
    Badge:
      type: object
      description: Displays a user's accomplishment or milestone
      properties:
        key:
          type: string
          description: An auto generated unique identifier.
        displayName:
          type: string
          description: The badge name displayed to users
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
        pinned:
          type: boolean
          description: The badge should be shown on the PersonAttribution
      example:
        key: deployment_name_new_hire
        displayName: New hire
        iconConfig:
          color: '#343CED'
          key: person_icon
          iconType: GLYPH
          name: user
    FacetBucket:
      properties:
        count:
          type: integer
          description: Estimated number of results in this facet.
          example: 1
        datasource:
          type: string
          example: jira
          description: The datasource the value belongs to. This will be used by the all tab to show types across all datasources.
        percentage:
          type: integer
          description: Estimated percentage of results in this facet.
          example: 5
        value:
          $ref: '#/components/schemas/FacetValue'
    FacetValue:
      properties:
        stringValue:
          type: string
          example: engineering
          description: The value that should be set in the FacetFilter when applying this filter to a search request.
        integerValue:
          type: integer
          example: 5
        displayLabel:
          type: string
          example: engineering
          description: An optional user-friendly label to display in place of the facet value.
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
    Period:
      properties:
        minDaysFromNow:
          type: integer
          description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
          deprecated: true
        maxDaysFromNow:
          type: integer
          description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
          deprecated: true
        start:
          $ref: '#/components/schemas/TimePoint'
        end:
          $ref: '#/components/schemas/TimePoint'
    WritePermission:
      description: Describes the write permissions levels that a user has for a specific feature
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
        create:
          type: boolean
          description: True if user has create permission for this feature and scope
        update:
          type: boolean
          description: True if user has update permission for this feature and scope
        delete:
          type: boolean
          description: True if user has delete permission for this feature and scope
    Code:
      example: &ref_85
        repoName: scio
        fileName: README.md
        matches:
          - lineNumber: 1
            content: Welcome to the beginning
            ranges: []
          - lineNumber: 2
            content: Second line of the file
            ranges: []
          - lineNumber: 3
            content: hello world hello world
            ranges:
              - startindex: 0
                endIndex: 5
              - startIndex: 12
                endIndex: 17
      properties:
        fileName:
          type: string
        fileUrl:
          type: string
        isLastMatch:
          description: Last file match for a repo
          type: boolean
        lines:
          type: array
          items:
            properties:
              content:
                type: string
              lineNumber:
                type: integer
              ranges:
                description: Index ranges depicting matched sections of the line
                type: array
                items: &ref_71
                  type: object
                  properties:
                    TextRange:
                      type: object
                      description: TextRange object
            type: object
        repoName:
          type: string
      type: object
    GrantPermissions:
      description: Describes the grant permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of grant permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/GrantPermission'
    ReadPermissions:
      description: Describes the read permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of read permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/ReadPermission'
    WritePermissions:
      description: Describes the write permissions levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of write permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/WritePermission'
    CustomEntityMetadata:
      properties:
        customData:
          $ref: '#/components/schemas/CustomData'
    AnswerLikes:
      required: &ref_159
        - likedBy
        - likedByUser
        - numLikes
      properties:
        likedBy:
          type: array
          items:
            properties:
              createTime:
                description: The time the user liked the answer in ISO format (ISO 8601).
                format: date-time
                type: string
              user: &ref_2
                example: &ref_6
                  name: George Clooney
                  obfuscatedId: abc123
                required: &ref_7
                  - name
                  - obfuscatedId
                properties:
                  metadata: &ref_28
                    type: object
                    description: PersonMetadata object
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items: &ref_29
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object
                type: object
            type: object
        likedByUser:
          description: Whether the user in context liked the answer.
          type: boolean
        numLikes:
          description: The total number of likes for the answer.
          type: integer
      type: object
    CollectionPinMetadata:
      required:
        - id
        - target
      properties:
        id:
          type: integer
          description: The ID of the Collection.
        target:
          $ref: '#/components/schemas/CollectionPinTarget'
    CustomerMetadata:
      properties:
        datasourceId:
          type: string
          description: The user visible id of the salesforce customer account.
        customData:
          $ref: '#/components/schemas/CustomData'
    FacetFilterSet:
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FacetFilter'
      description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
    RelatedObjectEdge:
      properties:
        objects:
          type: array
          items:
            $ref: '#/components/schemas/RelatedObject'
    RestrictionFilters:
      properties:
        containerSpecs:
          description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
          type: array
          items:
            $ref: '#/components/schemas/DocumentSpec'
    CollectionPinTarget:
      required:
        - category
      properties:
        category:
          $ref: '#/components/schemas/CollectionPinnableCategories'
        value:
          type: string
          description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
        target:
          $ref: '#/components/schemas/CollectionPinnableTargets'
    FacetFilter:
      properties:
        fieldName:
          type: string
          example: owner
        values:
          type: array
          items:
            $ref: '#/components/schemas/FacetFilterValue'
          description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
        groupName:
          type: string
          example: Spreadsheet
          description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
      example:
        fieldName: type
        values:
          - value: Spreadsheet
            relationType: EQUALS
          - value: Presentation
            relationType: EQUALS
    Meeting:
      properties:
        attendees:
          properties:
            isLimit:
              description: Whether the total count of the people returned is at the retrieval limit.
              type: boolean
            numAccepted:
              description: Total number of attendees who have accepted this event.
              type: integer
            numDeclined:
              description: Total number of attendees who have declined this event.
              type: integer
            numNoResponse:
              description: Total number of attendees who have not responded to this event.
              type: integer
            numTentative:
              description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
              type: integer
            people:
              description: Full details of some of the attendees of this event
              type: array
              items:
                required: &ref_1
                  - person
                properties:
                  groupAttendees:
                    description: If this attendee is a group, represents the list of individual attendees in the group.
                    type: array
                    items:
                      type: object
                      properties:
                        CalendarAttendee:
                          type: object
                          description: CalendarAttendee object
                  isInGroup:
                    description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                    type: boolean
                  isOrganizer:
                    description: Whether or not this attendee is an organizer.
                    type: boolean
                  person: &ref_0
                    type: object
                    description: Person object
                  responseStatus:
                    enum: &ref_3
                      - ACCEPTED
                      - DECLINED
                      - NO_RESPONSE
                      - TENTATIVE
                    type: string
                type: object
            total:
              description: Total number of attendees in this event.
              type: integer
          type: object
        description:
          type: string
        endTime:
          format: date-time
          type: string
        id:
          type: string
        startTime:
          format: date-time
          type: string
        title:
          type: string
        url:
          type: string
      type: object
    CustomFieldData:
      required: &ref_15
        - label
        - values
        - displayable
      properties:
        displayable:
          default: true
          description: Determines whether the client should display this custom field
          type: boolean
        label:
          description: A user-facing label for this field.
          type: string
        values:
          type: array
          items:
            oneOf:
              - &ref_4
                $ref: '#/components/schemas/CustomFieldValueStr'
              - &ref_5
                $ref: '#/components/schemas/CustomFieldValueHyperlink'
              - properties:
                  person: *ref_0
                type: object
      type: object
    FacetResult:
      properties:
        sourceName:
          type: string
          description: The source of this facet (e.g. container_name, type, last_updated_at).
          example: container_name
        operatorName:
          type: string
          description: How to display this facet. Currently supportes 'SelectSingle' and 'SelectMultiple'.
          example: SelectMultiple
        buckets:
          type: array
          description: A list of unique buckets that exist within this result set.
          items:
            $ref: '#/components/schemas/FacetBucket'
        hasMoreBuckets:
          type: boolean
          description: Returns true if more buckets exist than those returned. Additional buckets can be retrieve by requesting again with a higher facetBucketSize.
          example: false
        groupName:
          type: string
          description: For most facets this will be the empty string, meaning the facet is high-level and applies to all documents for the datasource. When non-empty, this is used to group facets together (i.e. group facets for each doctype for a certain datasource)
          example: Service Cloud
    CalendarAttendees:
      properties:
        isLimit:
          description: Whether the total count of the people returned is at the retrieval limit.
          type: boolean
        numAccepted:
          description: Total number of attendees who have accepted this event.
          type: integer
        numDeclined:
          description: Total number of attendees who have declined this event.
          type: integer
        numNoResponse:
          description: Total number of attendees who have not responded to this event.
          type: integer
        numTentative:
          description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
          type: integer
        people:
          description: Full details of some of the attendees of this event
          type: array
          items: &ref_69
            required: *ref_1
            properties:
              groupAttendees:
                description: If this attendee is a group, represents the list of individual attendees in the group.
                type: array
                items:
                  type: object
                  properties:
                    CalendarAttendee:
                      type: object
                      description: CalendarAttendee object
              isInGroup:
                description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                type: boolean
              isOrganizer:
                description: Whether or not this attendee is an organizer.
                type: boolean
              person: *ref_2
              responseStatus:
                enum: *ref_3
                type: string
            type: object
        total:
          description: Total number of attendees in this event.
          type: integer
      type: object
    PinDocumentMutableProperties:
      properties:
        queries:
          type: array
          description: The query strings for which the pinned result will show.
          items:
            type: string
        audienceFilters:
          type: array
          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
    Permissions:
      description: |-
        Describes the permissions levels that a user has for permissioned features. When the client sends this, Permissions.read and Permissions.write are the additional permissions granted to a user on top of what they have via their roles.
        When the server sends this, Permissions.read and Permissions.write are the complete (merged) set of permissions the user has, and Permissions.roles is just for display purposes.
      properties:
        canAdminSearch:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user has access to /adminsearch
        canAdminClientApiGlobalTokens:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user can administrate client API tokens with global scope
        canDlp:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user has access to data loss prevention (DLP) features
        read:
          $ref: '#/components/schemas/ReadPermissions'
        write:
          $ref: '#/components/schemas/WritePermissions'
        grant:
          $ref: '#/components/schemas/GrantPermissions'
        role:
          type: string
          description: The roleId of the canonical role a user has. The displayName is equal to the roleId.
        roles:
          type: array
          description: The roleIds of the roles a user has.
          items:
            type: string
    CustomFieldValue:
      oneOf:
        - *ref_4
        - *ref_5
        - properties:
            person: &ref_33
              example: *ref_6
              required: *ref_7
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items: &ref_27
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object
              type: object
          type: object
    PeopleResponse:
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Person'
          description: A Person for each ID in the request, each with PersonMetadata populated.
        relatedDocuments:
          type: array
          items:
            $ref: '#/components/schemas/RelatedDocuments'
          description: A list of documents related to this people response. This is only included if DOCUMENT_ACTIVITY is requested and only 1 person is included in the request.
        errors:
          type: array
          items:
            type: string
          description: A list of IDs that could not be found.
    ListEntitiesRequest:
      type: object
      properties:
        filter:
          type: array
          items:
            $ref: '#/components/schemas/FacetFilter'
        sort:
          description: Use EntitiesSortOrder enum for SortOptions.sortBy
          type: array
          items:
            $ref: '#/components/schemas/SortOptions'
        entityType:
          type: string
          default: PEOPLE
          enum:
            - PEOPLE
            - TEAMS
            - CUSTOM_ENTITIES
        datasource:
          type: string
          description: The datasource associated with the entity type, most commonly used with CUSTOM_ENTITIES
        query:
          type: string
          description: A query string to search for entities that each entity in the response must conform to. An empty query does not filter any entities.
        includeFields:
          description: List of entity fields to return (that aren't returned by default)
          type: array
          items:
            type: string
            enum:
              - PEOPLE
              - TEAMS
              - PEOPLE_DISTANCE
              - PERMISSIONS
              - FACETS
              - INVITE_INFO
              - LAST_EXTENSION_USE
              - MANAGEMENT_DETAILS
              - UNPROCESSED_TEAMS
        pageSize:
          type: integer
          example: 100
          description: Hint to the server about how many results to send back. Server may return less.
        cursor:
          type: string
          description: Pagination cursor. A previously received opaque token representing the position in the overall results at which to start.
        source:
          type: string
          description: A string denoting the search surface from which the endpoint is called.
        requestType:
          type: string
          default: STANDARD
          description: The type of request being made.
          x-enumDescriptions:
            STANDARD: Used by default for all requests and satisfies all standard use cases for list requests. Limited to 10000 entities.
            FULL_DIRECTORY: Used exclusively to return a comprehensive list of all people entities in the organization, typically for audit like purposes. The recommended approach is to sort by FIRST_NAME or LAST_NAME, and use pagination for large organizations.
          enum:
            - STANDARD
            - FULL_DIRECTORY
    CollectionPinnedMetadata:
      required:
        - pinnedCategories
        - eligibleCategoriesForPinning
      properties:
        existingPins:
          type: array
          items:
            $ref: '#/components/schemas/CollectionPinTarget'
          description: List of targets this Collection is pinned to.
        eligiblePins:
          type: array
          items:
            $ref: '#/components/schemas/CollectionPinMetadata'
          description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
    CustomEntity:
      type: object
      properties:
        datasource:
          description: The datasource the custom entity is from.
          type: string
        id:
          description: Unique identifier.
          type: string
        metadata: &ref_88
          $ref: '#/components/schemas/CustomEntityMetadata'
        objectType:
          description: The type of the entity. Interpretation is specific to each datasource
          type: string
        roles:
          description: A list of user roles for the custom entity explicitly granted by the owner.
          type: array
          items: &ref_36
            required: &ref_10
              - role
            properties:
              group: &ref_11
                $ref: '#/components/schemas/Group'
              person: &ref_16
                type: object
                description: Person object
              role: &ref_12
                $ref: '#/components/schemas/UserRole'
              sourceDocumentSpec: &ref_13
                $ref: '#/components/schemas/DocumentSpec'
                description: The document spec of the object this role originates from. The object this role is included with will usually have the same information as this document spec, but if the role is inherited, then the document spec refers to the parent document that the role came from.
            type: object
        title:
          description: Title or name of the custom entity.
          type: string
    CodeLine:
      properties:
        content:
          type: string
        lineNumber:
          type: integer
        ranges:
          description: Index ranges depicting matched sections of the line
          type: array
          items: &ref_9
            description: A subsection of a given string to which some special formatting should be applied.
            required: &ref_63
              - startIndex
            properties:
              document: &ref_24
                properties:
                  connectorType: &ref_30
                    $ref: '#/components/schemas/ConnectorType'
                  containerDocument: &ref_8
                    type: object
                    description: Document object
                  content: &ref_31
                    $ref: '#/components/schemas/DocumentContent'
                  datasource:
                    description: The app or other repository type from which the document was extracted
                    type: string
                  docType:
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                    type: string
                  id:
                    description: The Glean Document ID.
                    type: string
                  metadata: &ref_132
                    type: object
                    description: DocumentMetadata object
                  parentDocument: *ref_8
                  sections:
                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                    type: array
                    items: &ref_32
                      $ref: '#/components/schemas/DocumentSection'
                  title:
                    description: The title of the document.
                    type: string
                  url:
                    description: A permalink for the document.
                    type: string
                type: object
              endIndex:
                description: The exclusive end index of the range.
                type: integer
              startIndex:
                description: The inclusive start index of the range.
                type: integer
              type:
                enum: &ref_65
                  - BOLD
                  - CITATION
                  - HIGHLIGHT
                  - LINK
                type: string
              url:
                description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                type: string
            type: object
      type: object
    RelatedQuestion:
      properties:
        answer:
          description: The answer for the related question
          type: string
        question:
          description: The text of the related question
          type: string
        ranges:
          description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
          type: array
          items: *ref_9
      type: object
    SearchResultSnippet:
      example: &ref_128
        snippet: snippet
        mimeType: mimeType
      required: &ref_129
        - snippet
      properties:
        mimeType:
          description: The mime type of the snippets, currently either text/plain or text/html.
          type: string
        ranges:
          description: The bolded ranges within text.
          type: array
          items: *ref_9
        snippet:
          description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
          type: string
        snippetTextOrdering:
          description: Used for sorting based off the snippet's location within all_snippetable_text
          type: integer
        text:
          description: A matching snippet from the document with no highlights.
          type: string
        url:
          description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
          type: string
      type: object
    AnswerBoardMutableProperties:
      type: object
      properties:
        addedRoles: &ref_18
          description: A list of added user roles for the Collection.
          type: array
          items: &ref_14
            required: *ref_10
            properties:
              group: *ref_11
              person: *ref_0
              role: *ref_12
              sourceDocumentSpec: *ref_13
            type: object
        audienceFilters: &ref_19
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          type: array
          items: &ref_23
            $ref: '#/components/schemas/FacetFilter'
        description: &ref_20
          description: A brief summary of the Collection's contents.
          type: string
        name: &ref_21
          description: The unique name of the Collection.
          type: string
        removedRoles: &ref_22
          description: A list of removed user roles for the Collection.
          type: array
          items: *ref_14
      required:
        - name
    Team:
      type: object
      properties:
        bannerUrl:
          description: A link to the team's banner photo.
          format: url
          type: string
        businessUnit:
          description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
          type: string
        canBeDeleted:
          default: true
          description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
          type: boolean
        createdFrom:
          description: For teams created from docs, the doc title. Otherwise empty.
          type: string
        customFields:
          description: Customizable fields for additional team information.
          type: array
          items:
            required: *ref_15
            properties:
              displayable:
                default: true
                description: Determines whether the client should display this custom field
                type: boolean
              label:
                description: A user-facing label for this field.
                type: string
              values:
                type: array
                items:
                  type: object
                  properties:
                    CustomFieldValue:
                      type: object
                      description: CustomFieldValue object
            type: object
        datasource:
          description: the data source of the team, e.g. GDRIVE
          type: string
        datasourceProfiles:
          description: The datasource profiles of the team
          type: array
          items: &ref_92
            $ref: '#/components/schemas/DatasourceProfile'
        department:
          description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
          type: string
        description:
          description: A description of the team
          type: string
        emails:
          description: The emails for this team
          type: array
          items: &ref_93
            $ref: '#/components/schemas/TeamEmail'
        externalLink:
          description: Link to a team page on the internet or your company's intranet
          format: uri
          type: string
        id:
          description: Unique identifier
          type: string
        lastUpdatedAt:
          description: when this team was last updated.
          format: date-time
          type: string
        loggingId:
          description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
          type: string
        memberCount:
          description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
          type: integer
        members:
          description: The members on this team
          type: array
          items:
            description: Metadata about the relationship of a person to a team.
            required: &ref_67
              - person
            type: object
            properties:
              customRelationshipStr:
                description: Displayed name for the relationship if relationship is set to `OTHER`.
                type: string
              joinDate:
                description: The team member's start date
                format: date-time
                type: string
              person: *ref_16
              relationship:
                default: MEMBER
                description: The team member's relationship to the team. This defaults to MEMBER if not set.
                enum: &ref_68
                  - MEMBER
                  - MANAGER
                  - LEAD
                  - POINT_OF_CONTACT
                  - OTHER
                type: string
        name:
          description: Team name
          type: string
        photoUrl:
          description: A link to the team's photo.
          format: url
          type: string
        status:
          default: PROCESSED
          description: whether this team is fully processed or there are still unprocessed operations that'll affect it
          enum: &ref_94
            - PROCESSED
            - QUEUED_FOR_CREATION
            - QUEUED_FOR_DELETION
          type: string
      required:
        - id
        - name
    ShortcutMutableProperties:
      properties:
        addedRoles:
          description: A list of user roles added for the Shortcut.
          type: array
          items: &ref_17
            required: *ref_10
            properties:
              group: *ref_11
              person: *ref_2
              role: *ref_12
              sourceDocumentSpec: *ref_13
            type: object
        description:
          description: A short, plain text blurb to help people understand the intent of the shortcut.
          type: string
        destinationDocumentId:
          description: Glean Document ID for the URL, if known.
          type: string
        destinationUrl:
          description: Destination URL for the shortcut.
          type: string
        inputAlias:
          description: Link text following go/ prefix as entered by the user.
          type: string
        removedRoles:
          description: A list of user roles removed for the Shortcut.
          type: array
          items: *ref_17
        unlisted:
          description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
          type: boolean
        urlTemplate:
          description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
          type: string
      type: object
    CollectionMutableProperties:
      type: object
      properties:
        addedRoles: *ref_18
        audienceFilters: *ref_19
        description: *ref_20
        name: *ref_21
        removedRoles: *ref_22
        adminLocked:
          description: Indicates whether edits are allowed for everyone or only admins.
          type: boolean
        allowedDatasource:
          description: The datasource type this Collection can hold.
          type: string
        icon:
          description: The emoji icon of this Collection.
          type: string
        parentId:
          description: The parent of this Collection, or 0 if it's a top-level Collection.
          type: integer
        thumbnail: &ref_113
          $ref: '#/components/schemas/Thumbnail'
      required:
        - name
    SearchRequestOptions:
      required:
        - facetBucketSize
      properties:
        datasourceFilter:
          type: string
          description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
        datasourcesFilter:
          type: array
          items:
            type: string
          description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
        queryOverridesFacetFilters:
          type: boolean
          description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
        facetFilters:
          type: array
          items:
            $ref: '#/components/schemas/FacetFilter'
          description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
        facetFilterSets:
          type: array
          items:
            $ref: '#/components/schemas/FacetFilterSet'
          description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
        facetBucketFilter:
          $ref: '#/components/schemas/FacetBucketFilter'
        facetBucketSize:
          type: integer
          description: The maximum number of FacetBuckets to return in each FacetResult.
        defaultFacets:
          type: array
          items:
            type: string
          description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
        authTokens:
          type: array
          description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
          items:
            $ref: '#/components/schemas/AuthToken'
        fetchAllDatasourceCounts:
          type: boolean
          description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
        responseHints:
          type: array
          description: Array of hints containing which fields should be populated in the response.
          items:
            type: string
            description: Hints for the response content.
            x-enumDescriptions:
              ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
              FACET_RESULTS: Return only facet results.
              QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
              RESULTS: Return search result documents.
              SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
            enum:
              - ALL_RESULT_COUNTS
              - FACET_RESULTS
              - QUERY_METADATA
              - RESULTS
              - SPELLCHECK_METADATA
        timezoneOffset:
          type: integer
          description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
        disableSpellcheck:
          type: boolean
          description: Whether or not to disable spellcheck.
        disableQueryAutocorrect:
          type: boolean
          description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
        returnLlmContentOverSnippets:
          type: boolean
          description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
        inclusions:
          $ref: '#/components/schemas/RestrictionFilters'
          description: A list of filters which restrict the search results to only the specified content.
        exclusions:
          $ref: '#/components/schemas/RestrictionFilters'
          description: A list of filters specifying content to avoid getting search results from. Exclusions take precendence over inclusions and other query parameters, such as search operators and search facets.
      example:
        datasourceFilter: JIRA
        datasourcesFilter:
          - JIRA
        queryOverridesFacetFilters: true
        facetFilters:
          - fieldName: fieldName
            values:
              - fieldValues
              - fieldValues
          - fieldName: fieldName
            values:
              - fieldValues
              - fieldValues
    QuerySuggestion:
      example: &ref_42
        query: app:github type:pull author:mortimer
        label: Mortimer's PRs
        datasource: github
      required: &ref_43
        - query
      properties:
        datasource:
          description: The datasource associated with the suggestion.
          type: string
        inputDetails: &ref_44
          $ref: '#/components/schemas/SearchRequestInputDetails'
        label:
          description: A user-facing description to display for the suggestion.
          type: string
        missingTerm:
          description: A query term missing from the original query on which this suggestion is based.
          type: string
        query:
          description: The query being suggested (e.g. enforcing the missing term from the original query).
          type: string
        ranges:
          description: The bolded ranges within the query of the QuerySuggestion.
          type: array
          items: *ref_9
        requestOptions: &ref_45
          $ref: '#/components/schemas/SearchRequestOptions'
        searchProviderInfo: &ref_46
          $ref: '#/components/schemas/SearchProviderInfo'
          description: Information about the search provider that generated this suggestion.
      type: object
    ListEntitiesResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        teamResults:
          type: array
          items:
            $ref: '#/components/schemas/Team'
        customEntityResults:
          type: array
          items:
            $ref: '#/components/schemas/CustomEntity'
        facetResults:
          type: array
          items:
            $ref: '#/components/schemas/FacetResult'
        cursor:
          type: string
          description: Pagination cursor. A previously received opaque token representing the position in the overall results at which to start.
        totalCount:
          type: integer
          description: The total number of entities available
        hasMoreResults:
          type: boolean
          description: Whether or not more entities can be fetched.
        sortOptions:
          type: array
          description: Sort options from EntitiesSortOrder supported for this response. Default is empty list.
          items:
            $ref: '#/components/schemas/EntitiesSortOrder'
        customFacetNames:
          type: array
          description: list of Person attributes that are custom setup by deployment
          items:
            type: string
    CollectionBaseMutableProperties:
      required:
        - name
      properties:
        addedRoles:
          description: A list of added user roles for the Collection.
          type: array
          items: *ref_17
        audienceFilters:
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          type: array
          items: *ref_23
        description:
          description: A brief summary of the Collection's contents.
          type: string
        name:
          description: The unique name of the Collection.
          type: string
        removedRoles:
          description: A list of removed user roles for the Collection.
          type: array
          items: *ref_17
      type: object
    DocumentInteractions:
      properties:
        numComments:
          description: The count of comments (thread replies in the case of slack).
          type: integer
        numReactions:
          description: The count of reactions on the document.
          type: integer
        reactions:
          deprecated: true
          description: To be deprecated in favor of reacts. A (potentially non-exhaustive) list of reactions for the document.
          type: array
          items:
            type: string
        reacts:
          type: array
          items:
            properties:
              count:
                description: The count of the reaction type on the document.
                type: integer
              reactedByViewer:
                description: Whether the user in context reacted with this type to the document.
                type: boolean
              reactors:
                type: array
                items: &ref_75
                  type: object
                  properties:
                    Person:
                      type: object
                      description: Person object
              type:
                type: string
            type: object
        shares:
          description: Describes instances of someone posting a link to this document in one of our indexed datasources.
          type: array
          items:
            description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
            required: &ref_106
              - numDaysAgo
            properties:
              numDaysAgo:
                description: The number of days that has passed since the share happened
                type: integer
              sharer: *ref_2
              sharingDocument: *ref_24
            type: object
        visitorCount: &ref_134
          $ref: '#/components/schemas/CountInfo'
      type: object
    ClusterGroup:
      required: &ref_144
        - visibleCountHint
      properties:
        clusterType: &ref_145
          $ref: '#/components/schemas/ClusterTypeEnum'
        clusteredResults:
          description: A list of results that should be displayed as associated with this result.
          type: array
          items: &ref_105
            example: &ref_37
              snippets:
                - snippet: snippet
                  mimeType: mimeType
              metadata:
                container: container
                createTime: '2000-01-23T04:56:07.000Z'
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: '2000-01-23T04:56:07.000Z'
                mimeType: mimeType
                objectType: objectType
              title: title
              url: https://example.com/foo/bar
              nativeAppUrl: slack://foo/bar
              mustIncludeSuggestions:
                - missingTerm: container
                  query: container
            required: &ref_38
              - url
            type: object
            properties:
              structuredResults:
                description: An array of entities in the work graph retrieved via a data request.
                type: array
                items:
                  type: object
                  properties:
                    StructuredResult:
                      type: object
                      description: StructuredResult object
              trackingToken:
                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                type: string
              allClusteredResults:
                description: A list of results that should be displayed as associated with this result.
                type: array
                items:
                  type: object
                  properties:
                    ClusterGroup:
                      type: object
                      description: ClusterGroup object
              attachmentContext:
                description: Additional context for the relationship between the result and the document it's attached to.
                type: string
              attachmentCount:
                description: The total number of attachments.
                type: integer
              attachments:
                description: A (potentially partial) list of results representing documents attached to the main result document.
                type: array
                items: &ref_25
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object
              backlinkResults:
                description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                type: array
                items: *ref_25
              clusterType: &ref_40
                $ref: '#/components/schemas/ClusterTypeEnum'
              clusteredResults:
                description: A list of results that should be displayed as associated with this result.
                type: array
                items: *ref_25
              document: *ref_26
              fullText:
                description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                type: string
              fullTextList:
                description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                type: array
                items:
                  type: string
              mustIncludeSuggestions: &ref_56
                type: object
                description: QuerySuggestionList object
              nativeAppUrl:
                description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                type: string
              pins:
                description: A list of pins associated with this search result.
                type: array
                items: &ref_64
                  type: object
                  properties:
                    PinDocument:
                      type: object
                      description: PinDocument object
              prominence: &ref_41
                $ref: '#/components/schemas/SearchResultProminenceEnum'
              querySuggestion: &ref_153
                type: object
                description: QuerySuggestion object
              relatedResults:
                description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                type: array
                items: *ref_27
              snippets:
                description: Text content from the result document which contains search query terms, if available.
                type: array
                items:
                  type: object
                  properties:
                    SearchResultSnippet:
                      type: object
                      description: SearchResultSnippet object
              title:
                type: string
              url:
                type: string
        visibleCountHint:
          description: The default number of results to display before truncating and showing a "see more" link
          type: integer
      type: object
    Verification:
      required: &ref_136
        - state
      properties:
        metadata:
          required: &ref_138
            - documentId
          properties:
            candidateVerifiers:
              description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
              type: array
              items: &ref_78
                example: *ref_6
                required: *ref_7
                properties:
                  metadata: *ref_28
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items: *ref_29
                type: object
            document: &ref_35
              properties:
                connectorType: *ref_30
                containerDocument: *ref_26
                content: *ref_31
                datasource:
                  description: The app or other repository type from which the document was extracted
                  type: string
                docType:
                  description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                id:
                  description: The Glean Document ID.
                  type: string
                metadata:
                  type: object
                  description: DocumentMetadata object
                parentDocument: *ref_26
                sections:
                  description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                  type: array
                  items: *ref_32
                title:
                  description: The title of the document.
                  type: string
                url:
                  description: A permalink for the document.
                  type: string
              type: object
            expirationTs:
              description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
              type: integer
            lastReminder:
              required: &ref_34
                - assignee
                - remindAt
              properties:
                assignee: *ref_16
                createdAt:
                  description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                  type: integer
                reason:
                  description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                  type: string
                remindAt:
                  description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                  type: integer
                requestor: *ref_16
              type: object
            lastVerificationTs:
              description: The unix timestamp of the verification (in seconds since epoch UTC).
              type: integer
            lastVerifier: *ref_33
            reminders:
              description: Info about all outstanding verification reminders for the document if exists.
              type: array
              items:
                required: *ref_34
                properties:
                  assignee: *ref_0
                  createdAt:
                    description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                    type: integer
                  reason:
                    description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                    type: string
                  remindAt:
                    description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                    type: integer
                  requestor: *ref_0
                type: object
            visitorCount:
              description: Number of visitors to the document during included time periods.
              type: array
              items: &ref_139
                $ref: '#/components/schemas/CountInfo'
          type: object
        state:
          description: The verification state for the document.
          enum: &ref_137
            - UNVERIFIED
            - VERIFIED
            - DEPRECATED
          type: string
      type: object
    AnswerMutableProperties:
      properties:
        addedRoles:
          description: A list of user roles for the answer added by the owner.
          type: array
          items: *ref_17
        audienceFilters:
          description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
          type: array
          items: &ref_155
            $ref: '#/components/schemas/FacetFilter'
        boardId:
          deprecated: true
          description: The parent board ID of this Answer, or 0 if it's a floating Answer. Adding Answers to Answer Boards is no longer permitted.
          type: integer
        bodyText:
          description: The plain text answer to the question.
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
          type: string
        question:
          example: Why is the sky blue?
          type: string
        questionVariations:
          description: Additional ways of phrasing this question.
          type: array
          items:
            type: string
        removedRoles:
          description: A list of user roles for the answer removed by the owner.
          type: array
          items: *ref_17
        roles:
          description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
          type: array
          items: *ref_17
        sourceDocumentSpec: &ref_156
          $ref: '#/components/schemas/DocumentSpec'
        sourceType:
          enum: &ref_157
            - DOCUMENT
            - ASSISTANT
          type: string
      type: object
    Shortcut:
      type: object
      properties:
        addedRoles:
          description: A list of user roles added for the Shortcut.
          type: array
          items: *ref_14
        description:
          description: A short, plain text blurb to help people understand the intent of the shortcut.
          type: string
        destinationDocumentId:
          description: Glean Document ID for the URL, if known.
          type: string
        destinationUrl:
          description: Destination URL for the shortcut.
          type: string
        inputAlias:
          description: Link text following go/ prefix as entered by the user.
          type: string
        removedRoles:
          description: A list of user roles removed for the Shortcut.
          type: array
          items: *ref_14
        unlisted:
          description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
          type: boolean
        urlTemplate:
          description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
          type: string
        createTime:
          description: The time the shortcut was created in ISO format (ISO 8601).
          format: date-time
          type: string
        createdBy: *ref_33
        destinationDocument: *ref_35
        editUrl:
          description: The URL using which the user can access the edit page of the shortcut.
          type: string
        intermediateUrl:
          description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
          type: string
        isExternal:
          description: Indicates whether a shortcut is native or external.
          type: boolean
        updateTime:
          description: The time the shortcut was updated in ISO format (ISO 8601).
          format: date-time
          type: string
        updatedBy: *ref_33
        viewPrefix:
          description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
          type: string
        alias:
          description: canonical link text following go/ prefix where hyphen/underscore is removed.
          type: string
        roles:
          description: A list of user roles for the Go Link.
          type: array
          items: *ref_36
        title:
          description: Title for the Go Link
          type: string
      required:
        - inputAlias
    ExtractedQnA:
      properties:
        heading:
          description: Heading text that was matched to produce this result.
          type: string
        question:
          description: Question text that was matched to produce this result.
          type: string
        questionResult:
          example: *ref_37
          required: *ref_38
          type: object
          properties:
            structuredResults:
              description: An array of entities in the work graph retrieved via a data request.
              type: array
              items:
                type: object
                properties:
                  StructuredResult:
                    type: object
                    description: StructuredResult object
            trackingToken:
              description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
              type: string
            allClusteredResults:
              description: A list of results that should be displayed as associated with this result.
              type: array
              items:
                type: object
                properties:
                  ClusterGroup:
                    type: object
                    description: ClusterGroup object
            attachmentContext:
              description: Additional context for the relationship between the result and the document it's attached to.
              type: string
            attachmentCount:
              description: The total number of attachments.
              type: integer
            attachments:
              description: A (potentially partial) list of results representing documents attached to the main result document.
              type: array
              items: &ref_39
                type: object
                properties:
                  SearchResult:
                    type: object
                    description: SearchResult object
            backlinkResults:
              description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
              type: array
              items: *ref_39
            clusterType: *ref_40
            clusteredResults:
              description: A list of results that should be displayed as associated with this result.
              type: array
              items: *ref_39
            document: *ref_24
            fullText:
              description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
              type: string
            fullTextList:
              description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
              type: array
              items:
                type: string
            mustIncludeSuggestions: &ref_89
              properties:
                person: *ref_0
                suggestions:
                  type: array
                  items:
                    type: object
                    properties:
                      QuerySuggestion:
                        type: object
                        description: QuerySuggestion object
              type: object
            nativeAppUrl:
              description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
              type: string
            pins:
              description: A list of pins associated with this search result.
              type: array
              items:
                type: object
                properties:
                  PinDocument:
                    type: object
                    description: PinDocument object
            prominence: *ref_41
            querySuggestion: &ref_79
              example: *ref_42
              required: *ref_43
              properties:
                datasource:
                  description: The datasource associated with the suggestion.
                  type: string
                inputDetails: *ref_44
                label:
                  description: A user-facing description to display for the suggestion.
                  type: string
                missingTerm:
                  description: A query term missing from the original query on which this suggestion is based.
                  type: string
                query:
                  description: The query being suggested (e.g. enforcing the missing term from the original query).
                  type: string
                ranges:
                  description: The bolded ranges within the query of the QuerySuggestion.
                  type: array
                  items: &ref_90
                    type: object
                    properties:
                      TextRange:
                        type: object
                        description: TextRange object
                requestOptions: *ref_45
                searchProviderInfo: *ref_46
              type: object
            relatedResults:
              description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
              type: array
              items: &ref_48
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object
            snippets:
              description: Text content from the result document which contains search query terms, if available.
              type: array
              items: &ref_91
                type: object
                properties:
                  SearchResultSnippet:
                    type: object
                    description: SearchResultSnippet object
            title:
              type: string
            url:
              type: string
      type: object
    Reaction:
      properties:
        count:
          description: The count of the reaction type on the document.
          type: integer
        reactedByViewer:
          description: Whether the user in context reacted with this type to the document.
          type: boolean
        reactors:
          type: array
          items: &ref_77
            example: *ref_6
            required: *ref_7
            properties:
              metadata: &ref_82
                example: &ref_49
                  department: Movies
                  email: george@example.com
                  location: Hollywood, CA
                  phone: 6505551234
                  photoUrl: https://example.com/george.jpg
                  startDate: '2000-01-23'
                  title: Actor
                properties:
                  aliasEmails:
                    description: Additional email addresses of this user beyond the primary, if any.
                    type: array
                    items:
                      type: string
                  badges:
                    description: The badges that a user has earned over their lifetime.
                    type: array
                    items: &ref_50
                      $ref: '#/components/schemas/Badge'
                  bannerUrl:
                    description: The URL of the person's banner photo.
                    format: url
                    type: string
                  bio:
                    description: Short biography or mission statement of the employee.
                    type: string
                  businessUnit:
                    description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                    type: string
                  busyEvents:
                    description: Intervals of busy time for this person, along with the type of event they're busy with.
                    type: array
                    items: &ref_51
                      $ref: '#/components/schemas/AnonymousEvent'
                  customFields:
                    description: User customizable fields for additional people information.
                    type: array
                    items: &ref_131
                      type: object
                      properties:
                        CustomFieldData:
                          type: object
                          description: CustomFieldData object
                  datasourceProfile:
                    description: List of profiles this user has in different datasources / tools that they use.
                    type: array
                    items: &ref_52
                      $ref: '#/components/schemas/DatasourceProfile'
                  department:
                    description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                    type: string
                  departmentCount:
                    description: The number of people in this person's department.
                    type: integer
                  directReportsCount:
                    description: The total number of people who directly report to this person, or 0
                    type: integer
                  email:
                    description: The user's primary email address
                    type: string
                  endDate:
                    description: If a former employee, the last date of employment.
                    format: date
                    type: string
                  externalProfileLink:
                    description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                    type: string
                  firstName:
                    description: The first name of the person
                    type: string
                  inviteInfo:
                    type: object
                    description: InviteInfo object
                  isOrgRoot:
                    description: Whether this person is a "root" node in their organization's hierarchy.
                    type: boolean
                  isSignedUp:
                    description: Whether the user has signed into Glean at least once.
                    type: boolean
                  lastExtensionUse:
                    description: The last time the user has used the Glean extension in ISO 8601 format.
                    format: date-time
                    type: string
                  lastName:
                    description: The last name of the person
                    type: string
                  location:
                    description: User facing string representing the person's location.
                    type: string
                  loggingId:
                    description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                    type: string
                  managementChain:
                    description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                    type: array
                    items: &ref_47
                      type: object
                      properties:
                        Person:
                          type: object
                          description: Person object
                  manager: *ref_0
                  orgSizeCount:
                    description: The total recursive size of the people reporting to this person, or 1
                    type: integer
                  peopleDistance:
                    description: List of people and distances to those people from this person. Optionally with metadata.
                    type: array
                    items: &ref_53
                      $ref: '#/components/schemas/PersonDistance'
                  permissions: &ref_54
                    $ref: '#/components/schemas/Permissions'
                  phone:
                    description: Phone number as a number string.
                    type: string
                  photoUrl:
                    description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                    format: url
                    type: string
                  preferredName:
                    description: The preferred name of the person, or a nickname.
                    type: string
                  profileBoolSettings:
                    additionalProperties: &ref_55
                      type: boolean
                    description: flag settings to indicate user profile settings for certain items
                    type: object
                  pronoun:
                    description: She/her, He/his or other pronoun.
                    type: string
                  querySuggestions: &ref_142
                    type: object
                    description: QuerySuggestionList object
                  reports:
                    type: array
                    items: *ref_47
                  socialNetwork:
                    description: List of social network profiles.
                    type: array
                    items: &ref_58
                      $ref: '#/components/schemas/SocialNetwork'
                  startDate:
                    description: The date when the employee started.
                    format: date
                    type: string
                  startDatePercentile:
                    description: Percentage of the company that started strictly after this person. Between [0,100).
                    format: float
                    type: number
                  structuredLocation: &ref_59
                    $ref: '#/components/schemas/StructuredLocation'
                  teams:
                    description: Info about the employee's team(s).
                    type: array
                    items: &ref_60
                      $ref: '#/components/schemas/PersonTeam'
                  timezone:
                    description: The timezone of the person. E.g. "Pacific Daylight Time".
                    type: string
                  timezoneOffset:
                    description: The offset of the person's timezone in seconds from UTC.
                    format: int64
                    type: integer
                  title:
                    description: Job title.
                    type: string
                  type:
                    enum: &ref_61
                      - FULL_TIME
                      - CONTRACTOR
                      - NON_EMPLOYEE
                      - FORMER_EMPLOYEE
                    example: FULL_TIME
                    type: string
                    x-enumDescriptions: &ref_62
                      FULL_TIME: The person is a current full-time employee of the company.
                      CONTRACTOR: The person is a current contractor of the company.
                      NON_EMPLOYEE: The person object represents a non-human actor such as a service or admin account.
                      FORMER_EMPLOYEE: The person is a previous employee of the company.
                  uneditedPhotoUrl:
                    description: The original photo URL of the person's avatar before any edits they made are applied
                    format: url
                    type: string
                type: object
              name:
                description: The display name.
                type: string
              obfuscatedId:
                description: An opaque identifier that can be used to request metadata for a Person.
                type: string
              relatedDocuments:
                description: A list of documents related to this person.
                type: array
                items: *ref_48
            type: object
        type:
          type: string
      type: object
    CustomFieldValuePerson:
      properties:
        person: &ref_66
          example: *ref_6
          required: *ref_7
          properties:
            metadata:
              example: *ref_49
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items: *ref_50
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items: *ref_51
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items: *ref_52
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items: &ref_57
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object
                manager: *ref_16
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items: *ref_53
                permissions: *ref_54
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_55
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions: *ref_56
                reports:
                  type: array
                  items: *ref_57
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items: *ref_58
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation: *ref_59
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items: *ref_60
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_61
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_62
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items: &ref_127
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items: &ref_97
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object
                  querySuggestion: &ref_148
                    type: object
                    description: QuerySuggestion object
                  relation:
                    description: How this document relates to the including entity.
                    enum: &ref_80
                      - ATTACHMENT
                      - CANONICAL
                      - CASE
                      - contact
                      - CONTACT
                      - CONVERSATION_MESSAGES
                      - EXPERT
                      - FROM
                      - HIGHLIGHT
                      - opportunity
                      - OPPORTUNITY
                      - RECENT
                      - SOURCE
                      - TICKET
                      - TRANSCRIPT
                      - WITH
                    type: string
                    x-enumDescriptions: &ref_81
                      CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items: &ref_146
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object
                type: object
          type: object
      type: object
    TextRange:
      description: A subsection of a given string to which some special formatting should be applied.
      required: *ref_63
      properties:
        document: &ref_107
          properties:
            connectorType: *ref_30
            containerDocument: *ref_35
            content: *ref_31
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              example: &ref_96
                container: container
                parentId: JIRA_EN-1337
                createTime: '2000-01-23T04:56:07.000Z'
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: '2000-01-23T04:56:07.000Z'
                mimeType: mimeType
                objectType: Feature Request
                components:
                  - Backend
                  - Networking
                status:
                  - Done
                customData:
                  someCustomField: someCustomValue
              properties:
                ancestors:
                  description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
                  type: array
                  items: &ref_152
                    type: object
                    properties:
                      Document:
                        type: object
                        description: Document object
                assignedTo: *ref_16
                author: *ref_16
                collections:
                  description: A list of collections that the document belongs to.
                  type: array
                  items: &ref_116
                    type: object
                    properties:
                      Collection:
                        type: object
                        description: Collection object
                components:
                  description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
                  type: array
                  items:
                    type: string
                contactPerson: *ref_16
                container:
                  description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
                  type: string
                containerId:
                  description: The Glean Document ID of the container. Uniquely identifies the container.
                  type: string
                createTime:
                  format: date-time
                  type: string
                customData: &ref_98
                  $ref: '#/components/schemas/CustomData'
                datasource:
                  type: string
                datasourceId:
                  description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
                  type: string
                datasourceInstance:
                  description: The datasource instance from which the document was extracted.
                  type: string
                documentCategory:
                  description: The document's document_category(.proto).
                  type: string
                documentId:
                  description: The index-wide unique identifier.
                  type: string
                documentIdHash:
                  description: Hash of the Glean Document ID.
                  type: string
                indexStatus: &ref_99
                  $ref: '#/components/schemas/IndexStatus'
                interactions:
                  type: object
                  description: DocumentInteractions object
                labels:
                  description: A list of tags for the document. Interpretation is datasource specific.
                  type: array
                  items:
                    type: string
                loggingId:
                  description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
                  type: string
                mentionedPeople:
                  description: A list of people mentioned in the document.
                  type: array
                  items: *ref_57
                mimeType:
                  type: string
                objectType:
                  description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                owner: *ref_16
                parentId:
                  description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
                  type: string
                path:
                  description: For file datasources like onedrive/github etc this has the path to the file
                  type: string
                permissions: &ref_100
                  $ref: '#/components/schemas/ObjectPermissions'
                pins:
                  description: A list of stars associated with this result.  "Pin" is an older name.
                  type: array
                  items: *ref_64
                priority:
                  description: The document priority. Interpretation is datasource specific.
                  type: string
                shortcuts:
                  description: A list of shortcuts of which destination URL is for the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Shortcut:
                        type: object
                        description: Shortcut object
                status:
                  description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
                  type: string
                statusCategory:
                  description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
                  type: string
                superContainerId:
                  description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
                  type: string
                thumbnail: &ref_101
                  $ref: '#/components/schemas/Thumbnail'
                  description: A thumbnail image representing this document.
                updateTime:
                  format: date-time
                  type: string
                updatedBy: *ref_16
                verification:
                  type: object
                  description: Verification object
                viewerInfo: &ref_102
                  $ref: '#/components/schemas/ViewerInfo'
                visibility: &ref_103
                  $ref: '#/components/schemas/DocumentVisibility'
                visitCount: &ref_104
                  $ref: '#/components/schemas/CountInfo'
              type: object
            parentDocument: *ref_35
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items: *ref_32
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        endIndex:
          description: The exclusive end index of the range.
          type: integer
        startIndex:
          description: The inclusive start index of the range.
          type: integer
        type:
          enum: *ref_65
          type: string
        url:
          description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
          type: string
      type: object
    AnswerLike:
      properties:
        createTime:
          description: The time the user liked the answer in ISO format (ISO 8601).
          format: date-time
          type: string
        user: *ref_66
      type: object
    PersonToTeamRelationship:
      description: Metadata about the relationship of a person to a team.
      required: *ref_67
      type: object
      properties:
        customRelationshipStr:
          description: Displayed name for the relationship if relationship is set to `OTHER`.
          type: string
        joinDate:
          description: The team member's start date
          format: date-time
          type: string
        person: *ref_66
        relationship:
          default: MEMBER
          description: The team member's relationship to the team. This defaults to MEMBER if not set.
          enum: *ref_68
          type: string
    ChannelInviteInfo:
      description: Information regarding the invite status of a person for a particular channel.
      properties:
        channel: &ref_70
          description: Channel through which the invite was sent
          $ref: '#/components/schemas/CommunicationChannel'
        inviteTime:
          description: The time this person was invited in ISO format (ISO 8601).
          format: date-time
          type: string
        inviter: *ref_66
        isAutoInvite:
          description: Bit that tracks if this invite was automatically sent or user-sent
          type: boolean
        reminderTime:
          description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
          format: date-time
          type: string
      type: object
    CalendarAttendee:
      required: *ref_1
      properties:
        groupAttendees:
          description: If this attendee is a group, represents the list of individual attendees in the group.
          type: array
          items: *ref_69
        isInGroup:
          description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
          type: boolean
        isOrganizer:
          description: Whether or not this attendee is an organizer.
          type: boolean
        person: *ref_66
        responseStatus:
          enum: *ref_3
          type: string
      type: object
    UserRoleSpecification:
      required: *ref_10
      properties:
        group: *ref_11
        person: *ref_66
        role: *ref_12
        sourceDocumentSpec: *ref_13
      type: object
    InviteInfo:
      description: Information regarding the invite status of a person.
      properties:
        inviteTime:
          deprecated: true
          description: The time this person was invited in ISO format (ISO 8601).
          format: date-time
          type: string
        inviter: *ref_66
        invites:
          description: Latest invites received by the user for each channel
          type: array
          items:
            description: Information regarding the invite status of a person for a particular channel.
            properties:
              channel: *ref_70
              inviteTime:
                description: The time this person was invited in ISO format (ISO 8601).
                format: date-time
                type: string
              inviter: *ref_2
              isAutoInvite:
                description: Bit that tracks if this invite was automatically sent or user-sent
                type: boolean
              reminderTime:
                description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
                format: date-time
                type: string
            type: object
        reminderTime:
          deprecated: true
          description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
          format: date-time
          type: string
        signUpTime:
          description: The time this person signed up in ISO format (ISO 8601).
          format: date-time
          type: string
      type: object
    QuerySuggestionList:
      properties:
        person: *ref_66
        suggestions:
          type: array
          items:
            example: *ref_42
            required: *ref_43
            properties:
              datasource:
                description: The datasource associated with the suggestion.
                type: string
              inputDetails: *ref_44
              label:
                description: A user-facing description to display for the suggestion.
                type: string
              missingTerm:
                description: A query term missing from the original query on which this suggestion is based.
                type: string
              query:
                description: The query being suggested (e.g. enforcing the missing term from the original query).
                type: string
              ranges:
                description: The bolded ranges within the query of the QuerySuggestion.
                type: array
                items: *ref_71
              requestOptions: *ref_45
              searchProviderInfo: *ref_46
            type: object
      type: object
    Customer:
      required: &ref_72
        - id
        - company
      properties:
        company: &ref_73
          $ref: '#/components/schemas/Company'
        contractAnnualRevenue:
          description: Average contract annual revenue with that customer.
          format: double
          type: number
        documentCounts: &ref_74
          $ref: '#/components/schemas/DocumentCounts'
        domains:
          description: Link to company's associated website domains.
          type: array
          items:
            type: string
        id:
          description: Unique identifier.
          type: string
        mergedCustomers:
          description: A list of Customers.
          type: array
          items:
            required: *ref_72
            properties:
              company: *ref_73
              contractAnnualRevenue:
                description: Average contract annual revenue with that customer.
                format: double
                type: number
              documentCounts: *ref_74
              domains:
                description: Link to company's associated website domains.
                type: array
                items:
                  type: string
              id:
                description: Unique identifier.
                type: string
              mergedCustomers:
                description: A list of Customers.
                type: array
                items:
                  type: object
                  properties:
                    Customer:
                      type: object
                      description: Customer object
              metadata: &ref_76
                $ref: '#/components/schemas/CustomerMetadata'
              notes:
                description: User facing (potentially generated) notes about company.
                example: CIO is interested in trying out the product.
                type: string
              poc:
                description: A list of POC for company.
                type: array
                items: *ref_75
              startDate:
                description: The date when the interaction with customer started.
                format: date
                type: string
            type: object
        metadata: *ref_76
        notes:
          description: User facing (potentially generated) notes about company.
          example: CIO is interested in trying out the product.
          type: string
        poc:
          description: A list of POC for company.
          type: array
          items: *ref_77
        startDate:
          description: The date when the interaction with customer started.
          format: date
          type: string
      type: object
    Person:
      example: *ref_6
      required: *ref_7
      properties:
        metadata:
          example: *ref_49
          properties:
            aliasEmails:
              description: Additional email addresses of this user beyond the primary, if any.
              type: array
              items:
                type: string
            badges:
              description: The badges that a user has earned over their lifetime.
              type: array
              items: *ref_50
            bannerUrl:
              description: The URL of the person's banner photo.
              format: url
              type: string
            bio:
              description: Short biography or mission statement of the employee.
              type: string
            businessUnit:
              description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
              type: string
            busyEvents:
              description: Intervals of busy time for this person, along with the type of event they're busy with.
              type: array
              items: *ref_51
            customFields:
              description: User customizable fields for additional people information.
              type: array
              items:
                required: *ref_15
                properties:
                  displayable:
                    default: true
                    description: Determines whether the client should display this custom field
                    type: boolean
                  label:
                    description: A user-facing label for this field.
                    type: string
                  values:
                    type: array
                    items:
                      type: object
                      properties:
                        CustomFieldValue:
                          type: object
                          description: CustomFieldValue object
                type: object
            datasourceProfile:
              description: List of profiles this user has in different datasources / tools that they use.
              type: array
              items: *ref_52
            department:
              description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
              type: string
            departmentCount:
              description: The number of people in this person's department.
              type: integer
            directReportsCount:
              description: The total number of people who directly report to this person, or 0
              type: integer
            email:
              description: The user's primary email address
              type: string
            endDate:
              description: If a former employee, the last date of employment.
              format: date
              type: string
            externalProfileLink:
              description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
              type: string
            firstName:
              description: The first name of the person
              type: string
            inviteInfo:
              description: Information regarding the invite status of a person.
              properties:
                inviteTime:
                  deprecated: true
                  description: The time this person was invited in ISO format (ISO 8601).
                  format: date-time
                  type: string
                inviter: *ref_16
                invites:
                  description: Latest invites received by the user for each channel
                  type: array
                  items:
                    type: object
                    properties:
                      ChannelInviteInfo:
                        type: object
                        description: ChannelInviteInfo object
                reminderTime:
                  deprecated: true
                  description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
                  format: date-time
                  type: string
                signUpTime:
                  description: The time this person signed up in ISO format (ISO 8601).
                  format: date-time
                  type: string
              type: object
            isOrgRoot:
              description: Whether this person is a "root" node in their organization's hierarchy.
              type: boolean
            isSignedUp:
              description: Whether the user has signed into Glean at least once.
              type: boolean
            lastExtensionUse:
              description: The last time the user has used the Glean extension in ISO 8601 format.
              format: date-time
              type: string
            lastName:
              description: The last name of the person
              type: string
            location:
              description: User facing string representing the person's location.
              type: string
            loggingId:
              description: The logging id of the person used in scrubbed logs, tracking GA metrics.
              type: string
            managementChain:
              description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
              type: array
              items: *ref_78
            manager: *ref_33
            orgSizeCount:
              description: The total recursive size of the people reporting to this person, or 1
              type: integer
            peopleDistance:
              description: List of people and distances to those people from this person. Optionally with metadata.
              type: array
              items: *ref_53
            permissions: *ref_54
            phone:
              description: Phone number as a number string.
              type: string
            photoUrl:
              description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
              format: url
              type: string
            preferredName:
              description: The preferred name of the person, or a nickname.
              type: string
            profileBoolSettings:
              additionalProperties: *ref_55
              description: flag settings to indicate user profile settings for certain items
              type: object
            pronoun:
              description: She/her, He/his or other pronoun.
              type: string
            querySuggestions: &ref_126
              properties:
                person: *ref_16
                suggestions:
                  type: array
                  items:
                    type: object
                    properties:
                      QuerySuggestion:
                        type: object
                        description: QuerySuggestion object
              type: object
            reports:
              type: array
              items: *ref_78
            socialNetwork:
              description: List of social network profiles.
              type: array
              items: *ref_58
            startDate:
              description: The date when the employee started.
              format: date
              type: string
            startDatePercentile:
              description: Percentage of the company that started strictly after this person. Between [0,100).
              format: float
              type: number
            structuredLocation: *ref_59
            teams:
              description: Info about the employee's team(s).
              type: array
              items: *ref_60
            timezone:
              description: The timezone of the person. E.g. "Pacific Daylight Time".
              type: string
            timezoneOffset:
              description: The offset of the person's timezone in seconds from UTC.
              format: int64
              type: integer
            title:
              description: Job title.
              type: string
            type:
              enum: *ref_61
              example: FULL_TIME
              type: string
              x-enumDescriptions: *ref_62
            uneditedPhotoUrl:
              description: The original photo URL of the person's avatar before any edits they made are applied
              format: url
              type: string
          type: object
        name:
          description: The display name.
          type: string
        obfuscatedId:
          description: An opaque identifier that can be used to request metadata for a Person.
          type: string
        relatedDocuments:
          description: A list of documents related to this person.
          type: array
          items: &ref_166
            properties:
              associatedEntityId:
                description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                type: string
              documents:
                deprecated: true
                description: A truncated list of documents with this relation. TO BE DEPRECATED.
                type: array
                items:
                  type: object
                  properties:
                    Document:
                      type: object
                      description: Document object
              querySuggestion: *ref_79
              relation:
                description: How this document relates to the including entity.
                enum: *ref_80
                type: string
                x-enumDescriptions: *ref_81
              results:
                description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                type: array
                items: *ref_39
            type: object
      type: object
    PinDocument:
      type: object
      properties:
        attribution: &ref_83
          example: *ref_6
          required: *ref_7
          properties:
            metadata: *ref_82
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items: *ref_48
          type: object
        audienceFilters:
          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
          type: array
          items: &ref_135
            $ref: '#/components/schemas/FacetFilter'
        createTime:
          format: date-time
          type: string
        documentId:
          description: The document which should be a pinned result.
          type: string
        id:
          description: The opaque id of the pin.
          type: string
        updateTime:
          format: date-time
          type: string
        updatedBy: *ref_83
      required:
        - documentId
    Reminder:
      required: *ref_34
      properties:
        assignee: *ref_66
        createdAt:
          description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
          type: integer
        reason:
          description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
          type: string
        remindAt:
          description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
          type: integer
        requestor: *ref_66
      type: object
    Result:
      properties:
        structuredResults:
          description: An array of entities in the work graph retrieved via a data request.
          type: array
          items:
            description: A single object that can support any object in the work graph. Only a single object will be populated.
            properties:
              answer:
                description: AnswerMutableProperties object
                type: object
                properties:
                  author: &ref_84
                    type: object
                    description: Person object
                  board:
                    type: object
                    description: AnswerBoard object
                  collections:
                    description: The collections to which the answer belongs.
                    type: array
                    items: &ref_86
                      type: object
                      properties:
                        Collection:
                          type: object
                          description: Collection object
                  combinedAnswerText:
                    type: object
                    description: StructuredText object
                  createTime:
                    description: The time the answer was created in ISO format (ISO 8601).
                    format: date-time
                    type: string
                  documentCategory:
                    description: The document's document_category(.proto).
                    type: string
                  likes:
                    type: object
                    description: AnswerLikes object
                  sourceDocument:
                    type: object
                    description: Document object
                  updateTime:
                    description: The time the answer was last updated in ISO format (ISO 8601).
                    format: date-time
                    type: string
                  updatedBy: *ref_84
                  verification:
                    type: object
                    description: Verification object
                required:
                  - id
              answerBoard: &ref_160
                description: AnswerBoardMutableProperties object
                type: object
                properties:
                  createTime:
                    format: date-time
                    type: string
                  creator: *ref_84
                  id:
                    description: The unique ID of the Answer Board.
                    type: integer
                  itemCount:
                    description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                    type: integer
                  roles:
                    description: A list of user roles for the Answer Board.
                    type: array
                    items: &ref_87
                      type: object
                      properties:
                        UserRoleSpecification:
                          type: object
                          description: UserRoleSpecification object
                  updateTime:
                    format: date-time
                    type: string
                  updatedBy: *ref_84
                required:
                  - id
                  - description
              app: &ref_121
                $ref: '#/components/schemas/AppResult'
              code:
                example: *ref_85
                properties:
                  fileName:
                    type: string
                  fileUrl:
                    type: string
                  isLastMatch:
                    description: Last file match for a repo
                    type: boolean
                  lines:
                    type: array
                    items:
                      type: object
                      properties:
                        CodeLine:
                          type: object
                          description: CodeLine object
                  repoName:
                    type: string
                type: object
              collection:
                description: CollectionMutableProperties object
                type: object
                properties:
                  childCount:
                    description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                    type: integer
                  children:
                    description: The children Collections of this Collection.
                    type: array
                    items: *ref_86
                  createTime:
                    format: date-time
                    type: string
                  creator: *ref_84
                  id:
                    description: The unique ID of the Collection.
                    type: integer
                  itemCount:
                    description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                    type: integer
                  items:
                    description: The items in this Collection.
                    type: array
                    items: &ref_133
                      type: object
                      properties:
                        CollectionItem:
                          type: object
                          description: CollectionItem object
                  pinMetadata: &ref_115
                    $ref: '#/components/schemas/CollectionPinnedMetadata'
                    description: Metadata having what categories this Collection is pinned to and the eligible categories to pin to
                  roles:
                    description: A list of user roles for the Collection.
                    type: array
                    items: *ref_87
                  shortcuts:
                    description: The names of the shortcuts (Go Links) that point to this Collection.
                    type: array
                    items:
                      type: string
                  updateTime:
                    format: date-time
                    type: string
                  updatedBy: *ref_84
                required:
                  - id
                  - description
              customEntity:
                type: object
                properties:
                  datasource:
                    description: The datasource the custom entity is from.
                    type: string
                  id:
                    description: Unique identifier.
                    type: string
                  metadata: *ref_88
                  objectType:
                    description: The type of the entity. Interpretation is specific to each datasource
                    type: string
                  roles:
                    description: A list of user roles for the custom entity explicitly granted by the owner.
                    type: array
                    items: *ref_87
                  title:
                    description: Title or name of the custom entity.
                    type: string
              customer:
                required: *ref_72
                properties:
                  company: *ref_73
                  contractAnnualRevenue:
                    description: Average contract annual revenue with that customer.
                    format: double
                    type: number
                  documentCounts: *ref_74
                  domains:
                    description: Link to company's associated website domains.
                    type: array
                    items:
                      type: string
                  id:
                    description: Unique identifier.
                    type: string
                  mergedCustomers:
                    description: A list of Customers.
                    type: array
                    items: &ref_163
                      type: object
                      properties:
                        Customer:
                          type: object
                          description: Customer object
                  metadata: *ref_76
                  notes:
                    description: User facing (potentially generated) notes about company.
                    example: CIO is interested in trying out the product.
                    type: string
                  poc:
                    description: A list of POC for company.
                    type: array
                    items: *ref_47
                  startDate:
                    description: The date when the interaction with customer started.
                    format: date
                    type: string
                type: object
              disambiguation: &ref_123
                $ref: '#/components/schemas/Disambiguation'
              document: *ref_24
              extractedQnA:
                properties:
                  heading:
                    description: Heading text that was matched to produce this result.
                    type: string
                  question:
                    description: Question text that was matched to produce this result.
                    type: string
                  questionResult:
                    type: object
                    description: SearchResult object
                type: object
              meeting:
                properties:
                  attendees:
                    type: object
                    description: CalendarAttendees object
                  description:
                    type: string
                  endTime:
                    format: date-time
                    type: string
                  id:
                    type: string
                  startTime:
                    format: date-time
                    type: string
                  title:
                    type: string
                  url:
                    type: string
                type: object
              person: *ref_2
              prominence:
                description: The level of visual distinction that should be given to a result.
                enum: &ref_124
                  - HERO
                  - PROMOTED
                  - STANDARD
                type: string
                x-enumDescriptions: &ref_125
                  HERO: A high-confidence result that should feature prominently on the page.
                  PROMOTED: May not be the best result but should be given additional visual distinction.
                  STANDARD: Should not be distinct from any other results.
              querySuggestions: *ref_89
              relatedDocuments:
                description: A list of documents related to this structured result.
                type: array
                items: *ref_48
              relatedQuestion:
                properties:
                  answer:
                    description: The answer for the related question
                    type: string
                  question:
                    description: The text of the related question
                    type: string
                  ranges:
                    description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                    type: array
                    items: *ref_90
                type: object
              shortcut:
                description: ShortcutMutableProperties object
                type: object
                properties:
                  alias:
                    description: canonical link text following go/ prefix where hyphen/underscore is removed.
                    type: string
                  roles:
                    description: A list of user roles for the Go Link.
                    type: array
                    items: *ref_87
                  title:
                    description: Title for the Go Link
                    type: string
                required:
                  - inputAlias
              snippets:
                description: Any snippets associated to the populated object.
                type: array
                items: *ref_91
              source:
                description: Source context for this result. Possible values depend on the result type.
                enum: &ref_130
                  - EXPERT_DETECTION
                  - ENTITY_NLQ
                type: string
              team:
                type: object
                properties:
                  bannerUrl:
                    description: A link to the team's banner photo.
                    format: url
                    type: string
                  businessUnit:
                    description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                    type: string
                  canBeDeleted:
                    default: true
                    description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                    type: boolean
                  createdFrom:
                    description: For teams created from docs, the doc title. Otherwise empty.
                    type: string
                  customFields:
                    description: Customizable fields for additional team information.
                    type: array
                    items:
                      type: object
                      properties:
                        CustomFieldData:
                          type: object
                          description: CustomFieldData object
                  datasource:
                    description: the data source of the team, e.g. GDRIVE
                    type: string
                  datasourceProfiles:
                    description: The datasource profiles of the team
                    type: array
                    items: *ref_92
                  department:
                    description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                    type: string
                  description:
                    description: A description of the team
                    type: string
                  emails:
                    description: The emails for this team
                    type: array
                    items: *ref_93
                  externalLink:
                    description: Link to a team page on the internet or your company's intranet
                    format: uri
                    type: string
                  id:
                    description: Unique identifier
                    type: string
                  lastUpdatedAt:
                    description: when this team was last updated.
                    format: date-time
                    type: string
                  loggingId:
                    description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                    type: string
                  memberCount:
                    description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                    type: integer
                  members:
                    description: The members on this team
                    type: array
                    items:
                      type: object
                      properties:
                        PersonToTeamRelationship:
                          type: object
                          description: PersonToTeamRelationship object
                  name:
                    description: Team name
                    type: string
                  photoUrl:
                    description: A link to the team's photo.
                    format: url
                    type: string
                  status:
                    default: PROCESSED
                    description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                    enum: *ref_94
                    type: string
                required:
                  - id
                  - name
              trackingToken:
                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                type: string
            type: object
        trackingToken:
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
          type: string
      type: object
    AnswerBoard:
      type: object
      properties:
        addedRoles: &ref_108
          description: A list of added user roles for the Collection.
          type: array
          items: &ref_95
            type: object
            properties:
              UserRoleSpecification:
                type: object
                description: UserRoleSpecification object
        audienceFilters: &ref_109
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          type: array
          items: *ref_23
        description: &ref_110
          description: A brief summary of the Collection's contents.
          type: string
        name: &ref_111
          description: The unique name of the Collection.
          type: string
        removedRoles: &ref_112
          description: A list of removed user roles for the Collection.
          type: array
          items: *ref_95
        createTime:
          format: date-time
          type: string
        creator: *ref_83
        id:
          description: The unique ID of the Answer Board.
          type: integer
        itemCount:
          description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
          type: integer
        roles:
          description: A list of user roles for the Answer Board.
          type: array
          items: *ref_36
        updateTime:
          format: date-time
          type: string
        updatedBy: *ref_83
      required:
        - name
        - id
        - description
    RelatedDocuments:
      properties:
        associatedEntityId:
          description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
          type: string
        documents:
          deprecated: true
          description: A truncated list of documents with this relation. TO BE DEPRECATED.
          type: array
          items: &ref_168
            properties:
              connectorType: *ref_30
              containerDocument: *ref_24
              content: *ref_31
              datasource:
                description: The app or other repository type from which the document was extracted
                type: string
              docType:
                description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                type: string
              id:
                description: The Glean Document ID.
                type: string
              metadata: &ref_117
                example: *ref_96
                properties:
                  ancestors:
                    description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
                    type: array
                    items: *ref_97
                  assignedTo: *ref_0
                  author: *ref_0
                  collections:
                    description: A list of collections that the document belongs to.
                    type: array
                    items: &ref_114
                      type: object
                      properties:
                        Collection:
                          type: object
                          description: Collection object
                  components:
                    description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
                    type: array
                    items:
                      type: string
                  contactPerson: *ref_0
                  container:
                    description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
                    type: string
                  containerId:
                    description: The Glean Document ID of the container. Uniquely identifies the container.
                    type: string
                  createTime:
                    format: date-time
                    type: string
                  customData: *ref_98
                  datasource:
                    type: string
                  datasourceId:
                    description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
                    type: string
                  datasourceInstance:
                    description: The datasource instance from which the document was extracted.
                    type: string
                  documentCategory:
                    description: The document's document_category(.proto).
                    type: string
                  documentId:
                    description: The index-wide unique identifier.
                    type: string
                  documentIdHash:
                    description: Hash of the Glean Document ID.
                    type: string
                  indexStatus: *ref_99
                  interactions:
                    type: object
                    description: DocumentInteractions object
                  labels:
                    description: A list of tags for the document. Interpretation is datasource specific.
                    type: array
                    items:
                      type: string
                  loggingId:
                    description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
                    type: string
                  mentionedPeople:
                    description: A list of people mentioned in the document.
                    type: array
                    items: *ref_47
                  mimeType:
                    type: string
                  objectType:
                    description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                    type: string
                  owner: *ref_0
                  parentId:
                    description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
                    type: string
                  path:
                    description: For file datasources like onedrive/github etc this has the path to the file
                    type: string
                  permissions: *ref_100
                  pins:
                    description: A list of stars associated with this result.  "Pin" is an older name.
                    type: array
                    items: &ref_147
                      type: object
                      properties:
                        PinDocument:
                          type: object
                          description: PinDocument object
                  priority:
                    description: The document priority. Interpretation is datasource specific.
                    type: string
                  shortcuts:
                    description: A list of shortcuts of which destination URL is for the document.
                    type: array
                    items:
                      type: object
                      properties:
                        Shortcut:
                          type: object
                          description: Shortcut object
                  status:
                    description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
                    type: string
                  statusCategory:
                    description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
                    type: string
                  superContainerId:
                    description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
                    type: string
                  thumbnail: *ref_101
                  updateTime:
                    format: date-time
                    type: string
                  updatedBy: *ref_0
                  verification: &ref_120
                    type: object
                    description: Verification object
                  viewerInfo: *ref_102
                  visibility: *ref_103
                  visitCount: *ref_104
                type: object
              parentDocument: *ref_24
              sections:
                description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                type: array
                items: *ref_32
              title:
                description: The title of the document.
                type: string
              url:
                description: A permalink for the document.
                type: string
            type: object
        querySuggestion:
          example: *ref_42
          required: *ref_43
          properties:
            datasource:
              description: The datasource associated with the suggestion.
              type: string
            inputDetails: *ref_44
            label:
              description: A user-facing description to display for the suggestion.
              type: string
            missingTerm:
              description: A query term missing from the original query on which this suggestion is based.
              type: string
            query:
              description: The query being suggested (e.g. enforcing the missing term from the original query).
              type: string
            ranges:
              description: The bolded ranges within the query of the QuerySuggestion.
              type: array
              items: &ref_167
                description: A subsection of a given string to which some special formatting should be applied.
                required: *ref_63
                properties:
                  document: *ref_8
                  endIndex:
                    description: The exclusive end index of the range.
                    type: integer
                  startIndex:
                    description: The inclusive start index of the range.
                    type: integer
                  type:
                    enum: *ref_65
                    type: string
                  url:
                    description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                    type: string
                type: object
            requestOptions: *ref_45
            searchProviderInfo: *ref_46
          type: object
        relation:
          description: How this document relates to the including entity.
          enum: *ref_80
          type: string
          x-enumDescriptions: *ref_81
        results:
          description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
          type: array
          items: *ref_105
      type: object
    Share:
      description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
      required: *ref_106
      properties:
        numDaysAgo:
          description: The number of days that has passed since the share happened
          type: integer
        sharer: *ref_66
        sharingDocument: *ref_107
      type: object
    Collection:
      type: object
      properties:
        addedRoles: *ref_108
        audienceFilters: *ref_109
        description: *ref_110
        name: *ref_111
        removedRoles: *ref_112
        adminLocked:
          description: Indicates whether edits are allowed for everyone or only admins.
          type: boolean
        allowedDatasource:
          description: The datasource type this Collection can hold.
          type: string
        icon:
          description: The emoji icon of this Collection.
          type: string
        parentId:
          description: The parent of this Collection, or 0 if it's a top-level Collection.
          type: integer
        thumbnail: *ref_113
        childCount:
          description: The number of children Collections. Separated from the actual children so we can grab the count without children.
          type: integer
        children:
          description: The children Collections of this Collection.
          type: array
          items: &ref_158
            description: CollectionMutableProperties object
            type: object
            properties:
              childCount:
                description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                type: integer
              children:
                description: The children Collections of this Collection.
                type: array
                items: *ref_114
              createTime:
                format: date-time
                type: string
              creator: *ref_0
              id:
                description: The unique ID of the Collection.
                type: integer
              itemCount:
                description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                type: integer
              items:
                description: The items in this Collection.
                type: array
                items: &ref_122
                  type: object
                  properties:
                    CollectionItem:
                      type: object
                      description: CollectionItem object
              pinMetadata: *ref_115
              roles:
                description: A list of user roles for the Collection.
                type: array
                items: &ref_119
                  type: object
                  properties:
                    UserRoleSpecification:
                      type: object
                      description: UserRoleSpecification object
              shortcuts:
                description: The names of the shortcuts (Go Links) that point to this Collection.
                type: array
                items:
                  type: string
              updateTime:
                format: date-time
                type: string
              updatedBy: *ref_0
            required:
              - id
              - description
        createTime:
          format: date-time
          type: string
        creator: *ref_83
        id:
          description: The unique ID of the Collection.
          type: integer
        itemCount:
          description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
          type: integer
        items:
          description: The items in this Collection.
          type: array
          items:
            type: object
            properties:
              collection: &ref_141
                type: object
                description: Collection object
              collectionId:
                description: The Collection ID of the Collection that this CollectionItem belongs in.
                type: integer
              createdAt:
                description: Unix timestamp for when the item was first added (in seconds since epoch UTC).
                format: date-time
                type: string
              createdBy: *ref_0
              document: *ref_8
              documentId:
                description: If this CollectionItem is indexed, the Glean Document ID of that document.
                type: string
              itemId:
                description: Unique identifier for the item within the Collection it belongs to.
                type: string
              itemType:
                enum: &ref_118
                  - DOCUMENT
                  - TEXT
                  - URL
                  - COLLECTION
                type: string
              shortcut: &ref_143
                type: object
                description: Shortcut object
              url:
                description: The URL of this CollectionItem.
                type: string
            required:
              - collectionId
              - itemType
        pinMetadata: *ref_115
        roles:
          description: A list of user roles for the Collection.
          type: array
          items: *ref_36
        shortcuts:
          description: The names of the shortcuts (Go Links) that point to this Collection.
          type: array
          items:
            type: string
        updateTime:
          format: date-time
          type: string
        updatedBy: *ref_83
      required:
        - name
        - id
        - description
    CollectionItem:
      type: object
      properties:
        collection:
          description: CollectionBaseMutableProperties object
          type: object
          properties:
            adminLocked: &ref_169
              description: Indicates whether edits are allowed for everyone or only admins.
              type: boolean
            allowedDatasource: &ref_170
              description: The datasource type this Collection can hold.
              type: string
            icon: &ref_171
              description: The emoji icon of this Collection.
              type: string
            parentId: &ref_172
              description: The parent of this Collection, or 0 if it's a top-level Collection.
              type: integer
            thumbnail: *ref_113
            childCount:
              description: The number of children Collections. Separated from the actual children so we can grab the count without children.
              type: integer
            children:
              description: The children Collections of this Collection.
              type: array
              items: *ref_116
            createTime:
              format: date-time
              type: string
            creator: *ref_16
            id:
              description: The unique ID of the Collection.
              type: integer
            itemCount:
              description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
              type: integer
            items:
              description: The items in this Collection.
              type: array
              items: &ref_173
                type: object
                properties:
                  CollectionItem:
                    type: object
                    description: CollectionItem object
            pinMetadata: *ref_115
            roles:
              description: A list of user roles for the Collection.
              type: array
              items: *ref_95
            shortcuts:
              description: The names of the shortcuts (Go Links) that point to this Collection.
              type: array
              items:
                type: string
            updateTime:
              format: date-time
              type: string
            updatedBy: *ref_16
          required:
            - name
            - id
            - description
        collectionId:
          description: The Collection ID of the Collection that this CollectionItem belongs in.
          type: integer
        createdAt:
          description: Unix timestamp for when the item was first added (in seconds since epoch UTC).
          format: date-time
          type: string
        createdBy: *ref_83
        document: &ref_151
          properties:
            connectorType: *ref_30
            containerDocument: *ref_24
            content: *ref_31
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata: *ref_117
            parentDocument: *ref_24
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items: *ref_32
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        documentId:
          description: If this CollectionItem is indexed, the Glean Document ID of that document.
          type: string
        itemId:
          description: Unique identifier for the item within the Collection it belongs to.
          type: string
        itemType:
          enum: *ref_118
          type: string
        shortcut:
          type: object
          properties:
            addedRoles: &ref_174
              description: A list of user roles added for the Shortcut.
              type: array
              items: *ref_119
            description: &ref_175
              description: A short, plain text blurb to help people understand the intent of the shortcut.
              type: string
            destinationDocumentId: &ref_176
              description: Glean Document ID for the URL, if known.
              type: string
            destinationUrl: &ref_177
              description: Destination URL for the shortcut.
              type: string
            inputAlias: &ref_178
              description: Link text following go/ prefix as entered by the user.
              type: string
            removedRoles: &ref_179
              description: A list of user roles removed for the Shortcut.
              type: array
              items: *ref_119
            unlisted: &ref_180
              description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
              type: boolean
            urlTemplate: &ref_181
              description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
              type: string
            createTime: &ref_182
              description: The time the shortcut was created in ISO format (ISO 8601).
              format: date-time
              type: string
            createdBy: *ref_0
            destinationDocument: *ref_8
            editUrl: &ref_183
              description: The URL using which the user can access the edit page of the shortcut.
              type: string
            intermediateUrl: &ref_184
              description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
              type: string
            isExternal: &ref_185
              description: Indicates whether a shortcut is native or external.
              type: boolean
            updateTime: &ref_186
              description: The time the shortcut was updated in ISO format (ISO 8601).
              format: date-time
              type: string
            updatedBy: *ref_0
            viewPrefix: &ref_187
              description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
              type: string
            alias:
              description: canonical link text following go/ prefix where hyphen/underscore is removed.
              type: string
            roles:
              description: A list of user roles for the Go Link.
              type: array
              items: *ref_95
            title:
              description: Title for the Go Link
              type: string
          required:
            - inputAlias
        url:
          description: The URL of this CollectionItem.
          type: string
      required:
        - collectionId
        - itemType
    ShortcutMetadata:
      properties:
        createTime:
          description: The time the shortcut was created in ISO format (ISO 8601).
          format: date-time
          type: string
        createdBy: *ref_66
        destinationDocument: *ref_107
        editUrl:
          description: The URL using which the user can access the edit page of the shortcut.
          type: string
        intermediateUrl:
          description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
          type: string
        isExternal:
          description: Indicates whether a shortcut is native or external.
          type: boolean
        updateTime:
          description: The time the shortcut was updated in ISO format (ISO 8601).
          format: date-time
          type: string
        updatedBy: *ref_66
        viewPrefix:
          description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
          type: string
      type: object
    StructuredTextItem:
      properties:
        document: *ref_107
        link:
          example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
          type: string
        structuredResult:
          description: A single object that can support any object in the work graph. Only a single object will be populated.
          properties:
            answer:
              description: AnswerMutableProperties object
              type: object
              properties:
                author: *ref_0
                board: &ref_140
                  type: object
                  description: AnswerBoard object
                collections:
                  description: The collections to which the answer belongs.
                  type: array
                  items: *ref_114
                combinedAnswerText:
                  type: object
                  description: StructuredText object
                createTime:
                  description: The time the answer was created in ISO format (ISO 8601).
                  format: date-time
                  type: string
                documentCategory:
                  description: The document's document_category(.proto).
                  type: string
                likes:
                  type: object
                  description: AnswerLikes object
                sourceDocument: *ref_8
                updateTime:
                  description: The time the answer was last updated in ISO format (ISO 8601).
                  format: date-time
                  type: string
                updatedBy: *ref_0
                verification: *ref_120
              required:
                - id
            answerBoard:
              description: AnswerBoardMutableProperties object
              type: object
              properties:
                createTime:
                  format: date-time
                  type: string
                creator: *ref_0
                id:
                  description: The unique ID of the Answer Board.
                  type: integer
                itemCount:
                  description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                  type: integer
                roles:
                  description: A list of user roles for the Answer Board.
                  type: array
                  items: *ref_119
                updateTime:
                  format: date-time
                  type: string
                updatedBy: *ref_0
              required:
                - id
                - description
            app: *ref_121
            code:
              example: *ref_85
              properties:
                fileName:
                  type: string
                fileUrl:
                  type: string
                isLastMatch:
                  description: Last file match for a repo
                  type: boolean
                lines:
                  type: array
                  items:
                    type: object
                    properties:
                      CodeLine:
                        type: object
                        description: CodeLine object
                repoName:
                  type: string
              type: object
            collection:
              description: CollectionMutableProperties object
              type: object
              properties:
                childCount:
                  description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                  type: integer
                children:
                  description: The children Collections of this Collection.
                  type: array
                  items: *ref_114
                createTime:
                  format: date-time
                  type: string
                creator: *ref_0
                id:
                  description: The unique ID of the Collection.
                  type: integer
                itemCount:
                  description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                  type: integer
                items:
                  description: The items in this Collection.
                  type: array
                  items: *ref_122
                pinMetadata: *ref_115
                roles:
                  description: A list of user roles for the Collection.
                  type: array
                  items: *ref_119
                shortcuts:
                  description: The names of the shortcuts (Go Links) that point to this Collection.
                  type: array
                  items:
                    type: string
                updateTime:
                  format: date-time
                  type: string
                updatedBy: *ref_0
              required:
                - id
                - description
            customEntity:
              type: object
              properties:
                datasource:
                  description: The datasource the custom entity is from.
                  type: string
                id:
                  description: Unique identifier.
                  type: string
                metadata: *ref_88
                objectType:
                  description: The type of the entity. Interpretation is specific to each datasource
                  type: string
                roles:
                  description: A list of user roles for the custom entity explicitly granted by the owner.
                  type: array
                  items: *ref_119
                title:
                  description: Title or name of the custom entity.
                  type: string
            customer:
              required: *ref_72
              properties:
                company: *ref_73
                contractAnnualRevenue:
                  description: Average contract annual revenue with that customer.
                  format: double
                  type: number
                documentCounts: *ref_74
                domains:
                  description: Link to company's associated website domains.
                  type: array
                  items:
                    type: string
                id:
                  description: Unique identifier.
                  type: string
                mergedCustomers:
                  description: A list of Customers.
                  type: array
                  items:
                    type: object
                    properties:
                      Customer:
                        type: object
                        description: Customer object
                metadata: *ref_76
                notes:
                  description: User facing (potentially generated) notes about company.
                  example: CIO is interested in trying out the product.
                  type: string
                poc:
                  description: A list of POC for company.
                  type: array
                  items: *ref_57
                startDate:
                  description: The date when the interaction with customer started.
                  format: date
                  type: string
              type: object
            disambiguation: *ref_123
            document: *ref_35
            extractedQnA:
              properties:
                heading:
                  description: Heading text that was matched to produce this result.
                  type: string
                question:
                  description: Question text that was matched to produce this result.
                  type: string
                questionResult:
                  type: object
                  description: SearchResult object
              type: object
            meeting:
              properties:
                attendees:
                  type: object
                  description: CalendarAttendees object
                description:
                  type: string
                endTime:
                  format: date-time
                  type: string
                id:
                  type: string
                startTime:
                  format: date-time
                  type: string
                title:
                  type: string
                url:
                  type: string
              type: object
            person: *ref_33
            prominence:
              description: The level of visual distinction that should be given to a result.
              enum: *ref_124
              type: string
              x-enumDescriptions: *ref_125
            querySuggestions: *ref_126
            relatedDocuments:
              description: A list of documents related to this structured result.
              type: array
              items: *ref_127
            relatedQuestion:
              properties:
                answer:
                  description: The answer for the related question
                  type: string
                question:
                  description: The text of the related question
                  type: string
                ranges:
                  description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                  type: array
                  items: &ref_154
                    type: object
                    properties:
                      TextRange:
                        type: object
                        description: TextRange object
              type: object
            shortcut:
              description: ShortcutMutableProperties object
              type: object
              properties:
                alias:
                  description: canonical link text following go/ prefix where hyphen/underscore is removed.
                  type: string
                roles:
                  description: A list of user roles for the Go Link.
                  type: array
                  items: *ref_119
                title:
                  description: Title for the Go Link
                  type: string
              required:
                - inputAlias
            snippets:
              description: Any snippets associated to the populated object.
              type: array
              items:
                example: *ref_128
                required: *ref_129
                properties:
                  mimeType:
                    description: The mime type of the snippets, currently either text/plain or text/html.
                    type: string
                  ranges:
                    description: The bolded ranges within text.
                    type: array
                    items: *ref_90
                  snippet:
                    description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                    type: string
                  snippetTextOrdering:
                    description: Used for sorting based off the snippet's location within all_snippetable_text
                    type: integer
                  text:
                    description: A matching snippet from the document with no highlights.
                    type: string
                  url:
                    description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                    type: string
                type: object
            source:
              description: Source context for this result. Possible values depend on the result type.
              enum: *ref_130
              type: string
            team:
              type: object
              properties:
                bannerUrl:
                  description: A link to the team's banner photo.
                  format: url
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                canBeDeleted:
                  default: true
                  description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                  type: boolean
                createdFrom:
                  description: For teams created from docs, the doc title. Otherwise empty.
                  type: string
                customFields:
                  description: Customizable fields for additional team information.
                  type: array
                  items: *ref_131
                datasource:
                  description: the data source of the team, e.g. GDRIVE
                  type: string
                datasourceProfiles:
                  description: The datasource profiles of the team
                  type: array
                  items: *ref_92
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                description:
                  description: A description of the team
                  type: string
                emails:
                  description: The emails for this team
                  type: array
                  items: *ref_93
                externalLink:
                  description: Link to a team page on the internet or your company's intranet
                  format: uri
                  type: string
                id:
                  description: Unique identifier
                  type: string
                lastUpdatedAt:
                  description: when this team was last updated.
                  format: date-time
                  type: string
                loggingId:
                  description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                  type: string
                memberCount:
                  description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                  type: integer
                members:
                  description: The members on this team
                  type: array
                  items:
                    type: object
                    properties:
                      PersonToTeamRelationship:
                        type: object
                        description: PersonToTeamRelationship object
                name:
                  description: Team name
                  type: string
                photoUrl:
                  description: A link to the team's photo.
                  format: url
                  type: string
                status:
                  default: PROCESSED
                  description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                  enum: *ref_94
                  type: string
              required:
                - id
                - name
            trackingToken:
              description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
              type: string
          type: object
        text:
          example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
          type: string
      type: object
    Document:
      properties:
        connectorType: *ref_30
        containerDocument: *ref_107
        content: *ref_31
        datasource:
          description: The app or other repository type from which the document was extracted
          type: string
        docType:
          description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
          type: string
        id:
          description: The Glean Document ID.
          type: string
        metadata:
          example: *ref_96
          properties:
            ancestors:
              description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
              type: array
              items:
                properties:
                  connectorType: *ref_30
                  containerDocument: *ref_8
                  content: *ref_31
                  datasource:
                    description: The app or other repository type from which the document was extracted
                    type: string
                  docType:
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                    type: string
                  id:
                    description: The Glean Document ID.
                    type: string
                  metadata: *ref_132
                  parentDocument: *ref_8
                  sections:
                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                    type: array
                    items: *ref_32
                  title:
                    description: The title of the document.
                    type: string
                  url:
                    description: A permalink for the document.
                    type: string
                type: object
            assignedTo: *ref_33
            author: *ref_33
            collections:
              description: A list of collections that the document belongs to.
              type: array
              items:
                description: CollectionMutableProperties object
                type: object
                properties:
                  childCount:
                    description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                    type: integer
                  children:
                    description: The children Collections of this Collection.
                    type: array
                    items: *ref_86
                  createTime:
                    format: date-time
                    type: string
                  creator: *ref_84
                  id:
                    description: The unique ID of the Collection.
                    type: integer
                  itemCount:
                    description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                    type: integer
                  items:
                    description: The items in this Collection.
                    type: array
                    items: *ref_133
                  pinMetadata: *ref_115
                  roles:
                    description: A list of user roles for the Collection.
                    type: array
                    items: *ref_87
                  shortcuts:
                    description: The names of the shortcuts (Go Links) that point to this Collection.
                    type: array
                    items:
                      type: string
                  updateTime:
                    format: date-time
                    type: string
                  updatedBy: *ref_84
                required:
                  - id
                  - description
            components:
              description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
              type: array
              items:
                type: string
            contactPerson: *ref_33
            container:
              description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
              type: string
            containerId:
              description: The Glean Document ID of the container. Uniquely identifies the container.
              type: string
            createTime:
              format: date-time
              type: string
            customData: *ref_98
            datasource:
              type: string
            datasourceId:
              description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
              type: string
            datasourceInstance:
              description: The datasource instance from which the document was extracted.
              type: string
            documentCategory:
              description: The document's document_category(.proto).
              type: string
            documentId:
              description: The index-wide unique identifier.
              type: string
            documentIdHash:
              description: Hash of the Glean Document ID.
              type: string
            indexStatus: *ref_99
            interactions:
              properties:
                numComments:
                  description: The count of comments (thread replies in the case of slack).
                  type: integer
                numReactions:
                  description: The count of reactions on the document.
                  type: integer
                reactions:
                  deprecated: true
                  description: To be deprecated in favor of reacts. A (potentially non-exhaustive) list of reactions for the document.
                  type: array
                  items:
                    type: string
                reacts:
                  type: array
                  items:
                    type: object
                    properties:
                      Reaction:
                        type: object
                        description: Reaction object
                shares:
                  description: Describes instances of someone posting a link to this document in one of our indexed datasources.
                  type: array
                  items:
                    type: object
                    properties:
                      Share:
                        type: object
                        description: Share object
                visitorCount: *ref_134
              type: object
            labels:
              description: A list of tags for the document. Interpretation is datasource specific.
              type: array
              items:
                type: string
            loggingId:
              description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
              type: string
            mentionedPeople:
              description: A list of people mentioned in the document.
              type: array
              items: *ref_78
            mimeType:
              type: string
            objectType:
              description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            owner: *ref_33
            parentId:
              description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
              type: string
            path:
              description: For file datasources like onedrive/github etc this has the path to the file
              type: string
            permissions: *ref_100
            pins:
              description: A list of stars associated with this result.  "Pin" is an older name.
              type: array
              items:
                type: object
                properties:
                  attribution: *ref_84
                  audienceFilters:
                    description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                    type: array
                    items: *ref_135
                  createTime:
                    format: date-time
                    type: string
                  documentId:
                    description: The document which should be a pinned result.
                    type: string
                  id:
                    description: The opaque id of the pin.
                    type: string
                  updateTime:
                    format: date-time
                    type: string
                  updatedBy: *ref_84
                required:
                  - documentId
            priority:
              description: The document priority. Interpretation is datasource specific.
              type: string
            shortcuts:
              description: A list of shortcuts of which destination URL is for the document.
              type: array
              items:
                description: ShortcutMutableProperties object
                type: object
                properties:
                  alias:
                    description: canonical link text following go/ prefix where hyphen/underscore is removed.
                    type: string
                  roles:
                    description: A list of user roles for the Go Link.
                    type: array
                    items: *ref_87
                  title:
                    description: Title for the Go Link
                    type: string
                required:
                  - inputAlias
            status:
              description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
              type: string
            statusCategory:
              description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
              type: string
            superContainerId:
              description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
              type: string
            thumbnail: *ref_101
            updateTime:
              format: date-time
              type: string
            updatedBy: *ref_33
            verification:
              required: *ref_136
              properties:
                metadata:
                  type: object
                  description: VerificationMetadata object
                state:
                  description: The verification state for the document.
                  enum: *ref_137
                  type: string
              type: object
            viewerInfo: *ref_102
            visibility: *ref_103
            visitCount: *ref_104
          type: object
        parentDocument: *ref_107
        sections:
          description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
          type: array
          items: *ref_32
        title:
          description: The title of the document.
          type: string
        url:
          description: A permalink for the document.
          type: string
      type: object
    VerificationMetadata:
      required: *ref_138
      properties:
        candidateVerifiers:
          description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
          type: array
          items: *ref_77
        document: *ref_107
        expirationTs:
          description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
          type: integer
        lastReminder:
          required: *ref_34
          properties:
            assignee: *ref_33
            createdAt:
              description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
              type: integer
            reason:
              description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
              type: string
            remindAt:
              description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
              type: integer
            requestor: *ref_33
          type: object
        lastVerificationTs:
          description: The unix timestamp of the verification (in seconds since epoch UTC).
          type: integer
        lastVerifier: *ref_66
        reminders:
          description: Info about all outstanding verification reminders for the document if exists.
          type: array
          items:
            required: *ref_34
            properties:
              assignee: *ref_2
              createdAt:
                description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                type: integer
              reason:
                description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                type: string
              remindAt:
                description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                type: integer
              requestor: *ref_2
            type: object
        visitorCount:
          description: Number of visitors to the document during included time periods.
          type: array
          items: *ref_139
      type: object
    PersonMetadata:
      example: *ref_49
      properties:
        aliasEmails:
          description: Additional email addresses of this user beyond the primary, if any.
          type: array
          items:
            type: string
        badges:
          description: The badges that a user has earned over their lifetime.
          type: array
          items: *ref_50
        bannerUrl:
          description: The URL of the person's banner photo.
          format: url
          type: string
        bio:
          description: Short biography or mission statement of the employee.
          type: string
        businessUnit:
          description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
          type: string
        busyEvents:
          description: Intervals of busy time for this person, along with the type of event they're busy with.
          type: array
          items: *ref_51
        customFields:
          description: User customizable fields for additional people information.
          type: array
          items:
            required: *ref_15
            properties:
              displayable:
                default: true
                description: Determines whether the client should display this custom field
                type: boolean
              label:
                description: A user-facing label for this field.
                type: string
              values:
                type: array
                items:
                  type: object
                  properties:
                    CustomFieldValue:
                      type: object
                      description: CustomFieldValue object
            type: object
        datasourceProfile:
          description: List of profiles this user has in different datasources / tools that they use.
          type: array
          items: *ref_52
        department:
          description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
          type: string
        departmentCount:
          description: The number of people in this person's department.
          type: integer
        directReportsCount:
          description: The total number of people who directly report to this person, or 0
          type: integer
        email:
          description: The user's primary email address
          type: string
        endDate:
          description: If a former employee, the last date of employment.
          format: date
          type: string
        externalProfileLink:
          description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
          type: string
        firstName:
          description: The first name of the person
          type: string
        inviteInfo:
          description: Information regarding the invite status of a person.
          properties:
            inviteTime:
              deprecated: true
              description: The time this person was invited in ISO format (ISO 8601).
              format: date-time
              type: string
            inviter: *ref_33
            invites:
              description: Latest invites received by the user for each channel
              type: array
              items:
                description: Information regarding the invite status of a person for a particular channel.
                properties:
                  channel: *ref_70
                  inviteTime:
                    description: The time this person was invited in ISO format (ISO 8601).
                    format: date-time
                    type: string
                  inviter: *ref_0
                  isAutoInvite:
                    description: Bit that tracks if this invite was automatically sent or user-sent
                    type: boolean
                  reminderTime:
                    description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
                    format: date-time
                    type: string
                type: object
            reminderTime:
              deprecated: true
              description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
              format: date-time
              type: string
            signUpTime:
              description: The time this person signed up in ISO format (ISO 8601).
              format: date-time
              type: string
          type: object
        isOrgRoot:
          description: Whether this person is a "root" node in their organization's hierarchy.
          type: boolean
        isSignedUp:
          description: Whether the user has signed into Glean at least once.
          type: boolean
        lastExtensionUse:
          description: The last time the user has used the Glean extension in ISO 8601 format.
          format: date-time
          type: string
        lastName:
          description: The last name of the person
          type: string
        location:
          description: User facing string representing the person's location.
          type: string
        loggingId:
          description: The logging id of the person used in scrubbed logs, tracking GA metrics.
          type: string
        managementChain:
          description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
          type: array
          items: *ref_77
        manager: *ref_66
        orgSizeCount:
          description: The total recursive size of the people reporting to this person, or 1
          type: integer
        peopleDistance:
          description: List of people and distances to those people from this person. Optionally with metadata.
          type: array
          items: *ref_53
        permissions: *ref_54
        phone:
          description: Phone number as a number string.
          type: string
        photoUrl:
          description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
          format: url
          type: string
        preferredName:
          description: The preferred name of the person, or a nickname.
          type: string
        profileBoolSettings:
          additionalProperties: *ref_55
          description: flag settings to indicate user profile settings for certain items
          type: object
        pronoun:
          description: She/her, He/his or other pronoun.
          type: string
        querySuggestions: &ref_165
          properties:
            person: *ref_33
            suggestions:
              type: array
              items:
                example: *ref_42
                required: *ref_43
                properties:
                  datasource:
                    description: The datasource associated with the suggestion.
                    type: string
                  inputDetails: *ref_44
                  label:
                    description: A user-facing description to display for the suggestion.
                    type: string
                  missingTerm:
                    description: A query term missing from the original query on which this suggestion is based.
                    type: string
                  query:
                    description: The query being suggested (e.g. enforcing the missing term from the original query).
                    type: string
                  ranges:
                    description: The bolded ranges within the query of the QuerySuggestion.
                    type: array
                    items: *ref_90
                  requestOptions: *ref_45
                  searchProviderInfo: *ref_46
                type: object
          type: object
        reports:
          type: array
          items: *ref_77
        socialNetwork:
          description: List of social network profiles.
          type: array
          items: *ref_58
        startDate:
          description: The date when the employee started.
          format: date
          type: string
        startDatePercentile:
          description: Percentage of the company that started strictly after this person. Between [0,100).
          format: float
          type: number
        structuredLocation: *ref_59
        teams:
          description: Info about the employee's team(s).
          type: array
          items: *ref_60
        timezone:
          description: The timezone of the person. E.g. "Pacific Daylight Time".
          type: string
        timezoneOffset:
          description: The offset of the person's timezone in seconds from UTC.
          format: int64
          type: integer
        title:
          description: Job title.
          type: string
        type:
          enum: *ref_61
          example: FULL_TIME
          type: string
          x-enumDescriptions: *ref_62
        uneditedPhotoUrl:
          description: The original photo URL of the person's avatar before any edits they made are applied
          format: url
          type: string
      type: object
    SearchResult:
      example: *ref_37
      required: *ref_38
      type: object
      properties:
        structuredResults:
          description: An array of entities in the work graph retrieved via a data request.
          type: array
          items:
            description: A single object that can support any object in the work graph. Only a single object will be populated.
            properties:
              answer:
                type: object
                description: Answer object
              answerBoard: *ref_140
              app: *ref_121
              code:
                type: object
                description: Code object
              collection: *ref_141
              customEntity:
                type: object
                description: CustomEntity object
              customer:
                type: object
                description: Customer object
              disambiguation: *ref_123
              document: *ref_8
              extractedQnA:
                type: object
                description: ExtractedQnA object
              meeting:
                type: object
                description: Meeting object
              person: *ref_0
              prominence:
                description: The level of visual distinction that should be given to a result.
                enum: *ref_124
                type: string
                x-enumDescriptions: *ref_125
              querySuggestions: *ref_142
              relatedDocuments:
                description: A list of documents related to this structured result.
                type: array
                items: *ref_29
              relatedQuestion:
                type: object
                description: RelatedQuestion object
              shortcut: *ref_143
              snippets:
                description: Any snippets associated to the populated object.
                type: array
                items: &ref_149
                  type: object
                  properties:
                    SearchResultSnippet:
                      type: object
                      description: SearchResultSnippet object
              source:
                description: Source context for this result. Possible values depend on the result type.
                enum: *ref_130
                type: string
              team:
                type: object
                description: Team object
              trackingToken:
                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                type: string
            type: object
        trackingToken:
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
          type: string
        allClusteredResults:
          description: A list of results that should be displayed as associated with this result.
          type: array
          items:
            required: *ref_144
            properties:
              clusterType: *ref_145
              clusteredResults:
                description: A list of results that should be displayed as associated with this result.
                type: array
                items: *ref_25
              visibleCountHint:
                description: The default number of results to display before truncating and showing a "see more" link
                type: integer
            type: object
        attachmentContext:
          description: Additional context for the relationship between the result and the document it's attached to.
          type: string
        attachmentCount:
          description: The total number of attachments.
          type: integer
        attachments:
          description: A (potentially partial) list of results representing documents attached to the main result document.
          type: array
          items: &ref_150
            example: *ref_37
            required: *ref_38
            description: Result object
            type: object
            properties:
              allClusteredResults:
                description: A list of results that should be displayed as associated with this result.
                type: array
                items: &ref_164
                  type: object
                  properties:
                    ClusterGroup:
                      type: object
                      description: ClusterGroup object
              attachmentContext:
                description: Additional context for the relationship between the result and the document it's attached to.
                type: string
              attachmentCount:
                description: The total number of attachments.
                type: integer
              attachments:
                description: A (potentially partial) list of results representing documents attached to the main result document.
                type: array
                items: *ref_146
              backlinkResults:
                description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                type: array
                items: *ref_146
              clusterType: *ref_40
              clusteredResults:
                description: A list of results that should be displayed as associated with this result.
                type: array
                items: *ref_146
              document: *ref_8
              fullText:
                description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                type: string
              fullTextList:
                description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                type: array
                items:
                  type: string
              mustIncludeSuggestions: *ref_142
              nativeAppUrl:
                description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                type: string
              pins:
                description: A list of pins associated with this search result.
                type: array
                items: *ref_147
              prominence: *ref_41
              querySuggestion: *ref_148
              relatedResults:
                description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                type: array
                items: *ref_29
              snippets:
                description: Text content from the result document which contains search query terms, if available.
                type: array
                items: *ref_149
              title:
                type: string
              url:
                type: string
        backlinkResults:
          description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
          type: array
          items: *ref_150
        clusterType: *ref_40
        clusteredResults:
          description: A list of results that should be displayed as associated with this result.
          type: array
          items: *ref_150
        document: *ref_151
        fullText:
          description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
          type: string
        fullTextList:
          description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
          type: array
          items:
            type: string
        mustIncludeSuggestions:
          properties:
            person: *ref_2
            suggestions:
              type: array
              items:
                type: object
                properties:
                  QuerySuggestion:
                    type: object
                    description: QuerySuggestion object
          type: object
        nativeAppUrl:
          description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
          type: string
        pins:
          description: A list of pins associated with this search result.
          type: array
          items:
            type: object
            properties:
              attribution: *ref_0
              audienceFilters:
                description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                type: array
                items: *ref_135
              createTime:
                format: date-time
                type: string
              documentId:
                description: The document which should be a pinned result.
                type: string
              id:
                description: The opaque id of the pin.
                type: string
              updateTime:
                format: date-time
                type: string
              updatedBy: *ref_0
            required:
              - documentId
        prominence: *ref_41
        querySuggestion:
          example: *ref_42
          required: *ref_43
          properties:
            datasource:
              description: The datasource associated with the suggestion.
              type: string
            inputDetails: *ref_44
            label:
              description: A user-facing description to display for the suggestion.
              type: string
            missingTerm:
              description: A query term missing from the original query on which this suggestion is based.
              type: string
            query:
              description: The query being suggested (e.g. enforcing the missing term from the original query).
              type: string
            ranges:
              description: The bolded ranges within the query of the QuerySuggestion.
              type: array
              items: *ref_71
            requestOptions: *ref_45
            searchProviderInfo: *ref_46
          type: object
        relatedResults:
          description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
          type: array
          items:
            properties:
              associatedEntityId:
                description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                type: string
              documents:
                deprecated: true
                description: A truncated list of documents with this relation. TO BE DEPRECATED.
                type: array
                items: *ref_152
              querySuggestion: *ref_153
              relation:
                description: How this document relates to the including entity.
                enum: *ref_80
                type: string
                x-enumDescriptions: *ref_81
              results:
                description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                type: array
                items: *ref_25
            type: object
        snippets:
          description: Text content from the result document which contains search query terms, if available.
          type: array
          items:
            example: *ref_128
            required: *ref_129
            properties:
              mimeType:
                description: The mime type of the snippets, currently either text/plain or text/html.
                type: string
              ranges:
                description: The bolded ranges within text.
                type: array
                items: *ref_154
              snippet:
                description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                type: string
              snippetTextOrdering:
                description: Used for sorting based off the snippet's location within all_snippetable_text
                type: integer
              text:
                description: A matching snippet from the document with no highlights.
                type: string
              url:
                description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                type: string
            type: object
        title:
          type: string
        url:
          type: string
    Answer:
      type: object
      properties:
        addedRoles:
          description: A list of user roles for the answer added by the owner.
          type: array
          items: *ref_14
        audienceFilters:
          description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
          type: array
          items: *ref_155
        boardId:
          deprecated: true
          description: The parent board ID of this Answer, or 0 if it's a floating Answer. Adding Answers to Answer Boards is no longer permitted.
          type: integer
        bodyText:
          description: The plain text answer to the question.
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
          type: string
        question:
          example: Why is the sky blue?
          type: string
        questionVariations:
          description: Additional ways of phrasing this question.
          type: array
          items:
            type: string
        removedRoles:
          description: A list of user roles for the answer removed by the owner.
          type: array
          items: *ref_14
        roles:
          description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
          type: array
          items: *ref_14
        sourceDocumentSpec: *ref_156
        sourceType:
          enum: *ref_157
          type: string
        author: *ref_83
        board:
          description: CollectionBaseMutableProperties object
          type: object
          properties:
            createTime:
              format: date-time
              type: string
            creator: *ref_16
            id:
              description: The unique ID of the Answer Board.
              type: integer
            itemCount:
              description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
              type: integer
            roles:
              description: A list of user roles for the Answer Board.
              type: array
              items: *ref_95
            updateTime:
              format: date-time
              type: string
            updatedBy: *ref_16
          required:
            - id
            - description
        collections:
          description: The collections to which the answer belongs.
          type: array
          items: *ref_158
        combinedAnswerText:
          type: object
          properties:
            structuredList:
              description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
              type: array
              items:
                type: object
                properties:
                  StructuredTextItem:
                    type: object
                    description: StructuredTextItem object
        createTime:
          description: The time the answer was created in ISO format (ISO 8601).
          format: date-time
          type: string
        documentCategory:
          description: The document's document_category(.proto).
          type: string
        likes:
          required: *ref_159
          properties:
            likedBy:
              type: array
              items:
                type: object
                properties:
                  AnswerLike:
                    type: object
                    description: AnswerLike object
            likedByUser:
              description: Whether the user in context liked the answer.
              type: boolean
            numLikes:
              description: The total number of likes for the answer.
              type: integer
          type: object
        sourceDocument: *ref_151
        updateTime:
          description: The time the answer was last updated in ISO format (ISO 8601).
          format: date-time
          type: string
        updatedBy: *ref_83
        verification:
          required: *ref_136
          properties:
            metadata:
              required: *ref_138
              properties:
                candidateVerifiers:
                  description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
                  type: array
                  items: *ref_47
                document: *ref_8
                expirationTs:
                  description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
                  type: integer
                lastReminder:
                  type: object
                  description: Reminder object
                lastVerificationTs:
                  description: The unix timestamp of the verification (in seconds since epoch UTC).
                  type: integer
                lastVerifier: *ref_0
                reminders:
                  description: Info about all outstanding verification reminders for the document if exists.
                  type: array
                  items:
                    type: object
                    properties:
                      Reminder:
                        type: object
                        description: Reminder object
                visitorCount:
                  description: Number of visitors to the document during included time periods.
                  type: array
                  items: *ref_139
              type: object
            state:
              description: The verification state for the document.
              enum: *ref_137
              type: string
          type: object
      required:
        - id
    StructuredResult:
      description: A single object that can support any object in the work graph. Only a single object will be populated.
      properties:
        answer:
          type: object
          properties:
            addedRoles:
              description: A list of user roles for the answer added by the owner.
              type: array
              items: *ref_95
            audienceFilters:
              description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
              type: array
              items: *ref_155
            boardId:
              deprecated: true
              description: The parent board ID of this Answer, or 0 if it's a floating Answer. Adding Answers to Answer Boards is no longer permitted.
              type: integer
            bodyText:
              description: The plain text answer to the question.
              example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
              type: string
            question:
              example: Why is the sky blue?
              type: string
            questionVariations:
              description: Additional ways of phrasing this question.
              type: array
              items:
                type: string
            removedRoles:
              description: A list of user roles for the answer removed by the owner.
              type: array
              items: *ref_95
            roles:
              description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
              type: array
              items: *ref_95
            sourceDocumentSpec: *ref_156
            sourceType:
              enum: *ref_157
              type: string
            author: *ref_2
            board: *ref_160
            collections:
              description: The collections to which the answer belongs.
              type: array
              items: &ref_161
                type: object
                properties:
                  Collection:
                    type: object
                    description: Collection object
            combinedAnswerText:
              type: object
              properties:
                structuredList:
                  description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
                  type: array
                  items:
                    type: object
                    properties:
                      StructuredTextItem:
                        type: object
                        description: StructuredTextItem object
            createTime:
              description: The time the answer was created in ISO format (ISO 8601).
              format: date-time
              type: string
            documentCategory:
              description: The document's document_category(.proto).
              type: string
            likes:
              required: *ref_159
              properties:
                likedBy:
                  type: array
                  items:
                    type: object
                    properties:
                      AnswerLike:
                        type: object
                        description: AnswerLike object
                likedByUser:
                  description: Whether the user in context liked the answer.
                  type: boolean
                numLikes:
                  description: The total number of likes for the answer.
                  type: integer
              type: object
            sourceDocument: *ref_24
            updateTime:
              description: The time the answer was last updated in ISO format (ISO 8601).
              format: date-time
              type: string
            updatedBy: *ref_2
            verification:
              required: *ref_136
              properties:
                metadata:
                  type: object
                  description: VerificationMetadata object
                state:
                  description: The verification state for the document.
                  enum: *ref_137
                  type: string
              type: object
          required:
            - id
        answerBoard:
          description: CollectionBaseMutableProperties object
          type: object
          properties:
            createTime:
              format: date-time
              type: string
            creator: *ref_2
            id:
              description: The unique ID of the Answer Board.
              type: integer
            itemCount:
              description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
              type: integer
            roles:
              description: A list of user roles for the Answer Board.
              type: array
              items: &ref_162
                type: object
                properties:
                  UserRoleSpecification:
                    type: object
                    description: UserRoleSpecification object
            updateTime:
              format: date-time
              type: string
            updatedBy: *ref_2
          required:
            - id
            - description
        app: *ref_121
        code:
          example: *ref_85
          properties:
            fileName:
              type: string
            fileUrl:
              type: string
            isLastMatch:
              description: Last file match for a repo
              type: boolean
            lines:
              type: array
              items:
                properties:
                  content:
                    type: string
                  lineNumber:
                    type: integer
                  ranges:
                    description: Index ranges depicting matched sections of the line
                    type: array
                    items: *ref_90
                type: object
            repoName:
              type: string
          type: object
        collection:
          description: CollectionBaseMutableProperties object
          type: object
          properties:
            adminLocked:
              description: Indicates whether edits are allowed for everyone or only admins.
              type: boolean
            allowedDatasource:
              description: The datasource type this Collection can hold.
              type: string
            icon:
              description: The emoji icon of this Collection.
              type: string
            parentId:
              description: The parent of this Collection, or 0 if it's a top-level Collection.
              type: integer
            thumbnail: *ref_113
            childCount:
              description: The number of children Collections. Separated from the actual children so we can grab the count without children.
              type: integer
            children:
              description: The children Collections of this Collection.
              type: array
              items: *ref_161
            createTime:
              format: date-time
              type: string
            creator: *ref_2
            id:
              description: The unique ID of the Collection.
              type: integer
            itemCount:
              description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
              type: integer
            items:
              description: The items in this Collection.
              type: array
              items:
                type: object
                properties:
                  CollectionItem:
                    type: object
                    description: CollectionItem object
            pinMetadata: *ref_115
            roles:
              description: A list of user roles for the Collection.
              type: array
              items: *ref_162
            shortcuts:
              description: The names of the shortcuts (Go Links) that point to this Collection.
              type: array
              items:
                type: string
            updateTime:
              format: date-time
              type: string
            updatedBy: *ref_2
          required:
            - name
            - id
            - description
        customEntity:
          type: object
          properties:
            datasource:
              description: The datasource the custom entity is from.
              type: string
            id:
              description: Unique identifier.
              type: string
            metadata: *ref_88
            objectType:
              description: The type of the entity. Interpretation is specific to each datasource
              type: string
            roles:
              description: A list of user roles for the custom entity explicitly granted by the owner.
              type: array
              items: *ref_162
            title:
              description: Title or name of the custom entity.
              type: string
        customer:
          required: *ref_72
          properties:
            company: *ref_73
            contractAnnualRevenue:
              description: Average contract annual revenue with that customer.
              format: double
              type: number
            documentCounts: *ref_74
            domains:
              description: Link to company's associated website domains.
              type: array
              items:
                type: string
            id:
              description: Unique identifier.
              type: string
            mergedCustomers:
              description: A list of Customers.
              type: array
              items:
                required: *ref_72
                properties:
                  company: *ref_73
                  contractAnnualRevenue:
                    description: Average contract annual revenue with that customer.
                    format: double
                    type: number
                  documentCounts: *ref_74
                  domains:
                    description: Link to company's associated website domains.
                    type: array
                    items:
                      type: string
                  id:
                    description: Unique identifier.
                    type: string
                  mergedCustomers:
                    description: A list of Customers.
                    type: array
                    items: *ref_163
                  metadata: *ref_76
                  notes:
                    description: User facing (potentially generated) notes about company.
                    example: CIO is interested in trying out the product.
                    type: string
                  poc:
                    description: A list of POC for company.
                    type: array
                    items: *ref_47
                  startDate:
                    description: The date when the interaction with customer started.
                    format: date
                    type: string
                type: object
            metadata: *ref_76
            notes:
              description: User facing (potentially generated) notes about company.
              example: CIO is interested in trying out the product.
              type: string
            poc:
              description: A list of POC for company.
              type: array
              items: *ref_78
            startDate:
              description: The date when the interaction with customer started.
              format: date
              type: string
          type: object
        disambiguation: *ref_123
        document: *ref_107
        extractedQnA:
          properties:
            heading:
              description: Heading text that was matched to produce this result.
              type: string
            question:
              description: Question text that was matched to produce this result.
              type: string
            questionResult:
              example: *ref_37
              required: *ref_38
              description: Result object
              type: object
              properties:
                allClusteredResults:
                  description: A list of results that should be displayed as associated with this result.
                  type: array
                  items: *ref_164
                attachmentContext:
                  description: Additional context for the relationship between the result and the document it's attached to.
                  type: string
                attachmentCount:
                  description: The total number of attachments.
                  type: integer
                attachments:
                  description: A (potentially partial) list of results representing documents attached to the main result document.
                  type: array
                  items: *ref_146
                backlinkResults:
                  description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                  type: array
                  items: *ref_146
                clusterType: *ref_40
                clusteredResults:
                  description: A list of results that should be displayed as associated with this result.
                  type: array
                  items: *ref_146
                document: *ref_8
                fullText:
                  description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                  type: string
                fullTextList:
                  description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                  type: array
                  items:
                    type: string
                mustIncludeSuggestions: *ref_142
                nativeAppUrl:
                  description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                  type: string
                pins:
                  description: A list of pins associated with this search result.
                  type: array
                  items: *ref_147
                prominence: *ref_41
                querySuggestion: *ref_148
                relatedResults:
                  description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                  type: array
                  items: *ref_29
                snippets:
                  description: Text content from the result document which contains search query terms, if available.
                  type: array
                  items: *ref_149
                title:
                  type: string
                url:
                  type: string
          type: object
        meeting:
          properties:
            attendees:
              properties:
                isLimit:
                  description: Whether the total count of the people returned is at the retrieval limit.
                  type: boolean
                numAccepted:
                  description: Total number of attendees who have accepted this event.
                  type: integer
                numDeclined:
                  description: Total number of attendees who have declined this event.
                  type: integer
                numNoResponse:
                  description: Total number of attendees who have not responded to this event.
                  type: integer
                numTentative:
                  description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                  type: integer
                people:
                  description: Full details of some of the attendees of this event
                  type: array
                  items:
                    type: object
                    properties:
                      CalendarAttendee:
                        type: object
                        description: CalendarAttendee object
                total:
                  description: Total number of attendees in this event.
                  type: integer
              type: object
            description:
              type: string
            endTime:
              format: date-time
              type: string
            id:
              type: string
            startTime:
              format: date-time
              type: string
            title:
              type: string
            url:
              type: string
          type: object
        person: *ref_66
        prominence:
          description: The level of visual distinction that should be given to a result.
          enum: *ref_124
          type: string
          x-enumDescriptions: *ref_125
        querySuggestions: *ref_165
        relatedDocuments:
          description: A list of documents related to this structured result.
          type: array
          items: *ref_166
        relatedQuestion:
          properties:
            answer:
              description: The answer for the related question
              type: string
            question:
              description: The text of the related question
              type: string
            ranges:
              description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
              type: array
              items: *ref_167
          type: object
        shortcut:
          type: object
          properties:
            addedRoles:
              description: A list of user roles added for the Shortcut.
              type: array
              items: *ref_95
            description:
              description: A short, plain text blurb to help people understand the intent of the shortcut.
              type: string
            destinationDocumentId:
              description: Glean Document ID for the URL, if known.
              type: string
            destinationUrl:
              description: Destination URL for the shortcut.
              type: string
            inputAlias:
              description: Link text following go/ prefix as entered by the user.
              type: string
            removedRoles:
              description: A list of user roles removed for the Shortcut.
              type: array
              items: *ref_95
            unlisted:
              description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
              type: boolean
            urlTemplate:
              description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
              type: string
            createTime:
              description: The time the shortcut was created in ISO format (ISO 8601).
              format: date-time
              type: string
            createdBy: *ref_16
            destinationDocument: *ref_26
            editUrl:
              description: The URL using which the user can access the edit page of the shortcut.
              type: string
            intermediateUrl:
              description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
              type: string
            isExternal:
              description: Indicates whether a shortcut is native or external.
              type: boolean
            updateTime:
              description: The time the shortcut was updated in ISO format (ISO 8601).
              format: date-time
              type: string
            updatedBy: *ref_16
            viewPrefix:
              description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
              type: string
            alias:
              description: canonical link text following go/ prefix where hyphen/underscore is removed.
              type: string
            roles:
              description: A list of user roles for the Go Link.
              type: array
              items: *ref_162
            title:
              description: Title for the Go Link
              type: string
          required:
            - inputAlias
        snippets:
          description: Any snippets associated to the populated object.
          type: array
          items:
            example: *ref_128
            required: *ref_129
            properties:
              mimeType:
                description: The mime type of the snippets, currently either text/plain or text/html.
                type: string
              ranges:
                description: The bolded ranges within text.
                type: array
                items: *ref_71
              snippet:
                description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                type: string
              snippetTextOrdering:
                description: Used for sorting based off the snippet's location within all_snippetable_text
                type: integer
              text:
                description: A matching snippet from the document with no highlights.
                type: string
              url:
                description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                type: string
            type: object
        source:
          description: Source context for this result. Possible values depend on the result type.
          enum: *ref_130
          type: string
        team:
          type: object
          properties:
            bannerUrl:
              description: A link to the team's banner photo.
              format: url
              type: string
            businessUnit:
              description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
              type: string
            canBeDeleted:
              default: true
              description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
              type: boolean
            createdFrom:
              description: For teams created from docs, the doc title. Otherwise empty.
              type: string
            customFields:
              description: Customizable fields for additional team information.
              type: array
              items:
                type: object
                properties:
                  CustomFieldData:
                    type: object
                    description: CustomFieldData object
            datasource:
              description: the data source of the team, e.g. GDRIVE
              type: string
            datasourceProfiles:
              description: The datasource profiles of the team
              type: array
              items: *ref_92
            department:
              description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
              type: string
            description:
              description: A description of the team
              type: string
            emails:
              description: The emails for this team
              type: array
              items: *ref_93
            externalLink:
              description: Link to a team page on the internet or your company's intranet
              format: uri
              type: string
            id:
              description: Unique identifier
              type: string
            lastUpdatedAt:
              description: when this team was last updated.
              format: date-time
              type: string
            loggingId:
              description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
              type: string
            memberCount:
              description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
              type: integer
            members:
              description: The members on this team
              type: array
              items:
                type: object
                properties:
                  PersonToTeamRelationship:
                    type: object
                    description: PersonToTeamRelationship object
            name:
              description: Team name
              type: string
            photoUrl:
              description: A link to the team's photo.
              format: url
              type: string
            status:
              default: PROCESSED
              description: whether this team is fully processed or there are still unprocessed operations that'll affect it
              enum: *ref_94
              type: string
          required:
            - id
            - name
        trackingToken:
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
          type: string
      type: object
    DocumentMetadata:
      example: *ref_96
      properties:
        ancestors:
          description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
          type: array
          items: *ref_168
        assignedTo: *ref_66
        author: *ref_66
        collections:
          description: A list of collections that the document belongs to.
          type: array
          items:
            description: CollectionBaseMutableProperties object
            type: object
            properties:
              adminLocked: *ref_169
              allowedDatasource: *ref_170
              icon: *ref_171
              parentId: *ref_172
              thumbnail: *ref_113
              childCount:
                description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                type: integer
              children:
                description: The children Collections of this Collection.
                type: array
                items: *ref_116
              createTime:
                format: date-time
                type: string
              creator: *ref_16
              id:
                description: The unique ID of the Collection.
                type: integer
              itemCount:
                description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                type: integer
              items:
                description: The items in this Collection.
                type: array
                items: *ref_173
              pinMetadata: *ref_115
              roles:
                description: A list of user roles for the Collection.
                type: array
                items: *ref_95
              shortcuts:
                description: The names of the shortcuts (Go Links) that point to this Collection.
                type: array
                items:
                  type: string
              updateTime:
                format: date-time
                type: string
              updatedBy: *ref_16
            required:
              - name
              - id
              - description
        components:
          description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
          type: array
          items:
            type: string
        contactPerson: *ref_66
        container:
          description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
          type: string
        containerId:
          description: The Glean Document ID of the container. Uniquely identifies the container.
          type: string
        createTime:
          format: date-time
          type: string
        customData: *ref_98
        datasource:
          type: string
        datasourceId:
          description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
          type: string
        datasourceInstance:
          description: The datasource instance from which the document was extracted.
          type: string
        documentCategory:
          description: The document's document_category(.proto).
          type: string
        documentId:
          description: The index-wide unique identifier.
          type: string
        documentIdHash:
          description: Hash of the Glean Document ID.
          type: string
        indexStatus: *ref_99
        interactions:
          properties:
            numComments:
              description: The count of comments (thread replies in the case of slack).
              type: integer
            numReactions:
              description: The count of reactions on the document.
              type: integer
            reactions:
              deprecated: true
              description: To be deprecated in favor of reacts. A (potentially non-exhaustive) list of reactions for the document.
              type: array
              items:
                type: string
            reacts:
              type: array
              items:
                properties:
                  count:
                    description: The count of the reaction type on the document.
                    type: integer
                  reactedByViewer:
                    description: Whether the user in context reacted with this type to the document.
                    type: boolean
                  reactors:
                    type: array
                    items: *ref_47
                  type:
                    type: string
                type: object
            shares:
              description: Describes instances of someone posting a link to this document in one of our indexed datasources.
              type: array
              items:
                description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
                required: *ref_106
                properties:
                  numDaysAgo:
                    description: The number of days that has passed since the share happened
                    type: integer
                  sharer: *ref_0
                  sharingDocument: *ref_8
                type: object
            visitorCount: *ref_134
          type: object
        labels:
          description: A list of tags for the document. Interpretation is datasource specific.
          type: array
          items:
            type: string
        loggingId:
          description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
          type: string
        mentionedPeople:
          description: A list of people mentioned in the document.
          type: array
          items: *ref_77
        mimeType:
          type: string
        objectType:
          description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
          type: string
        owner: *ref_66
        parentId:
          description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
          type: string
        path:
          description: For file datasources like onedrive/github etc this has the path to the file
          type: string
        permissions: *ref_100
        pins:
          description: A list of stars associated with this result.  "Pin" is an older name.
          type: array
          items:
            type: object
            properties:
              attribution: *ref_16
              audienceFilters:
                description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                type: array
                items: *ref_135
              createTime:
                format: date-time
                type: string
              documentId:
                description: The document which should be a pinned result.
                type: string
              id:
                description: The opaque id of the pin.
                type: string
              updateTime:
                format: date-time
                type: string
              updatedBy: *ref_16
            required:
              - documentId
        priority:
          description: The document priority. Interpretation is datasource specific.
          type: string
        shortcuts:
          description: A list of shortcuts of which destination URL is for the document.
          type: array
          items:
            type: object
            properties:
              addedRoles: *ref_174
              description: *ref_175
              destinationDocumentId: *ref_176
              destinationUrl: *ref_177
              inputAlias: *ref_178
              removedRoles: *ref_179
              unlisted: *ref_180
              urlTemplate: *ref_181
              createTime: *ref_182
              createdBy: *ref_0
              destinationDocument: *ref_8
              editUrl: *ref_183
              intermediateUrl: *ref_184
              isExternal: *ref_185
              updateTime: *ref_186
              updatedBy: *ref_0
              viewPrefix: *ref_187
              alias:
                description: canonical link text following go/ prefix where hyphen/underscore is removed.
                type: string
              roles:
                description: A list of user roles for the Go Link.
                type: array
                items: *ref_95
              title:
                description: Title for the Go Link
                type: string
            required:
              - inputAlias
        status:
          description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
          type: string
        statusCategory:
          description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
          type: string
        superContainerId:
          description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
          type: string
        thumbnail: *ref_101
        updateTime:
          format: date-time
          type: string
        updatedBy: *ref_66
        verification:
          required: *ref_136
          properties:
            metadata:
              required: *ref_138
              properties:
                candidateVerifiers:
                  description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
                  type: array
                  items: *ref_57
                document: *ref_26
                expirationTs:
                  description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
                  type: integer
                lastReminder:
                  type: object
                  description: Reminder object
                lastVerificationTs:
                  description: The unix timestamp of the verification (in seconds since epoch UTC).
                  type: integer
                lastVerifier: *ref_16
                reminders:
                  description: Info about all outstanding verification reminders for the document if exists.
                  type: array
                  items:
                    type: object
                    properties:
                      Reminder:
                        type: object
                        description: Reminder object
                visitorCount:
                  description: Number of visitors to the document during included time periods.
                  type: array
                  items: *ref_139
              type: object
            state:
              description: The verification state for the document.
              enum: *ref_137
              type: string
          type: object
        viewerInfo: *ref_102
        visibility: *ref_103
        visitCount: *ref_104
      type: object
  securitySchemes:
    APIToken:
      scheme: bearer
      type: http
