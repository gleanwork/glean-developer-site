openapi: 3.0.0
info:
  version: 0.9.0
  title: Glean API - Search
  description: API endpoints for Search
  x-logo:
    url: https://app.glean.com/images/glean-text2.svg
  x-speakeasy-name: Glean API
servers:
  - url: https://{instance}-be.glean.com
    variables:
      instance:
        default: instance-name
        description: The instance name (typically the email domain without the TLD) that determines the deployment backend.
security:
  - APIToken: []
paths:
  /rest/api/v1/adminsearch:
    post:
      tags:
        - Search
      summary: Search the index (admin)
      description: Retrieves results for search query without respect for permissions. This is available only to privileged users.
      operationId: adminsearch
      x-visibility: Preview
      x-codegen-request-body-name: payload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        description: Admin search request
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '422':
          description: Invalid Query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '429':
          description: Too Many Requests
      x-speakeasy-group: client.search
      x-speakeasy-name-override: queryAsAdmin
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean, models
            from glean.api_client.utils import parse_datetime
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                res = glean.client.search.query_as_admin(query="vacation policy", tracking_token="trackingToken", source_document=models.Document(
                    container_document=models.Document(
                        metadata=models.DocumentMetadata(
                            datasource="datasource",
                            object_type="Feature Request",
                            container="container",
                            parent_id="JIRA_EN-1337",
                            mime_type="mimeType",
                            document_id="documentId",
                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                            author=models.Person(
                                name="name",
                                obfuscated_id="<id>",
                            ),
                            components=[
                                "Backend",
                                "Networking",
                            ],
                            status="[\"Done\"]",
                            custom_data={
                                "someCustomField": models.CustomDataValue(),
                            },
                        ),
                    ),
                    parent_document=models.Document(
                        metadata=models.DocumentMetadata(
                            datasource="datasource",
                            object_type="Feature Request",
                            container="container",
                            parent_id="JIRA_EN-1337",
                            mime_type="mimeType",
                            document_id="documentId",
                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                            author=models.Person(
                                name="name",
                                obfuscated_id="<id>",
                            ),
                            components=[
                                "Backend",
                                "Networking",
                            ],
                            status="[\"Done\"]",
                            custom_data={
                                "someCustomField": models.CustomDataValue(),
                            },
                        ),
                    ),
                    metadata=models.DocumentMetadata(
                        datasource="datasource",
                        object_type="Feature Request",
                        container="container",
                        parent_id="JIRA_EN-1337",
                        mime_type="mimeType",
                        document_id="documentId",
                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                        author=models.Person(
                            name="name",
                            obfuscated_id="<id>",
                        ),
                        components=[
                            "Backend",
                            "Networking",
                        ],
                        status="[\"Done\"]",
                        custom_data={
                            "someCustomField": models.CustomDataValue(),
                        },
                    ),
                ), page_size=10, max_snippet_size=400, input_details={
                    "has_copy_paste": True,
                }, request_options=models.SearchRequestOptions(
                    facet_filters=[
                        models.FacetFilter(
                            field_name="type",
                            values=[
                                models.FacetFilterValue(
                                    value="article",
                                    relation_type=models.RelationType.EQUALS,
                                ),
                                models.FacetFilterValue(
                                    value="document",
                                    relation_type=models.RelationType.EQUALS,
                                ),
                            ],
                        ),
                        models.FacetFilter(
                            field_name="department",
                            values=[
                                models.FacetFilterValue(
                                    value="engineering",
                                    relation_type=models.RelationType.EQUALS,
                                ),
                            ],
                        ),
                    ],
                    facet_bucket_size=723824,
                ), timeout_millis=5000, people=[
                    models.Person(
                        name="George Clooney",
                        obfuscated_id="abc123",
                    ),
                ])

                # Handle response
                print(res)
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.search.queryAsAdmin({
                trackingToken: "trackingToken",
                pageSize: 10,
                query: "vacation policy",
                requestOptions: {
                  facetFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "article",
                          relationType: "EQUALS",
                        },
                        {
                          value: "document",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                    {
                      fieldName: "department",
                      values: [
                        {
                          value: "engineering",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  facetBucketSize: 723824,
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Search.QueryAsAdmin(ctx, components.SearchRequest{\n        TrackingToken: apiclientgo.String(\"trackingToken\"),\n        PageSize: apiclientgo.Int64(10),\n        Query: \"vacation policy\",\n        RequestOptions: &components.SearchRequestOptions{\n            FacetFilters: []components.FacetFilter{\n                components.FacetFilter{\n                    FieldName: apiclientgo.String(\"type\"),\n                    Values: []components.FacetFilterValue{\n                        components.FacetFilterValue{\n                            Value: apiclientgo.String(\"article\"),\n                            RelationType: components.RelationTypeEquals.ToPointer(),\n                        },\n                        components.FacetFilterValue{\n                            Value: apiclientgo.String(\"document\"),\n                            RelationType: components.RelationTypeEquals.ToPointer(),\n                        },\n                    },\n                },\n                components.FacetFilter{\n                    FieldName: apiclientgo.String(\"department\"),\n                    Values: []components.FacetFilterValue{\n                        components.FacetFilterValue{\n                            Value: apiclientgo.String(\"engineering\"),\n                            RelationType: components.RelationTypeEquals.ToPointer(),\n                        },\n                    },\n                },\n            },\n            FacetBucketSize: 723824,\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.SearchResponse != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.*;
            import org.openapis.openapi.models.errors.GleanDataError;
            import org.openapis.openapi.models.operations.AdminsearchResponse;

            public class Application {

                public static void main(String[] args) throws GleanDataError, Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    SearchRequest req = SearchRequest.builder()
                            .query("vacation policy")
                            .trackingToken("trackingToken")
                            .pageSize(10L)
                            .requestOptions(SearchRequestOptions.builder()
                                .facetBucketSize(723824L)
                                .facetFilters(List.of(
                                    FacetFilter.builder()
                                        .fieldName("type")
                                        .values(List.of(
                                            FacetFilterValue.builder()
                                                .value("article")
                                                .relationType(RelationType.EQUALS)
                                                .build(),
                                            FacetFilterValue.builder()
                                                .value("document")
                                                .relationType(RelationType.EQUALS)
                                                .build()))
                                        .build(),
                                    FacetFilter.builder()
                                        .fieldName("department")
                                        .values(List.of(
                                            FacetFilterValue.builder()
                                                .value("engineering")
                                                .relationType(RelationType.EQUALS)
                                                .build()))
                                        .build()))
                                .build())
                            .build();

                    AdminsearchResponse res = sdk.client().search().queryAsAdmin()
                            .request(req)
                            .call();

                    if (res.searchResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/autocomplete:
    post:
      tags:
        - Search
      summary: Autocomplete
      description: Retrieve query suggestions, operators and documents for the given partially typed query.
      operationId: autocomplete
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutocompleteRequest'
        description: Autocomplete request
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutocompleteResponse'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '429':
          description: Too Many Requests
      x-speakeasy-group: client.search
      x-speakeasy-name-override: autocomplete
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                res = glean.client.search.autocomplete(tracking_token="trackingToken", query="what is a que", datasource="GDRIVE", result_size=10, auth_tokens=[
                    {
                        "access_token": "123abc",
                        "datasource": "gmail",
                        "scope": "email profile https://www.googleapis.com/auth/gmail.readonly",
                        "token_type": "Bearer",
                        "auth_user": "1",
                    },
                ])

                # Handle response
                print(res)
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.search.autocomplete({
                trackingToken: "trackingToken",
                query: "what is a que",
                datasource: "GDRIVE",
                resultSize: 10,
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Search.Autocomplete(ctx, components.AutocompleteRequest{\n        TrackingToken: apiclientgo.String(\"trackingToken\"),\n        Query: apiclientgo.String(\"what is a que\"),\n        Datasource: apiclientgo.String(\"GDRIVE\"),\n        ResultSize: apiclientgo.Int64(10),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.AutocompleteResponse != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.AutocompleteRequest;
            import org.openapis.openapi.models.operations.AutocompleteResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    AutocompleteRequest req = AutocompleteRequest.builder()
                            .trackingToken("trackingToken")
                            .query("what is a que")
                            .datasource("GDRIVE")
                            .resultSize(10L)
                            .build();

                    AutocompleteResponse res = sdk.client().search().autocomplete()
                            .request(req)
                            .call();

                    if (res.autocompleteResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/feed:
    post:
      tags:
        - Search
      summary: Feed of documents and events
      description: The personalized feed/home includes different types of contents including suggestions, recents, calendar events and many more.
      operationId: feed
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedRequest'
        description: Includes request params, client data and more for making user's feed.
        required: true
        x-exportParamName: FeedRequest
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '408':
          description: Request Timeout
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: retrieveFeed
      x-speakeasy-group: client.search
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                res = glean.client.search.retrieve_feed(timeout_millis=5000)

                # Handle response
                print(res)
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.search.retrieveFeed({
                timeoutMillis: 5000,
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Search.RetrieveFeed(ctx, components.FeedRequest{\n        TimeoutMillis: apiclientgo.Int64(5000),\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.FeedResponse != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.FeedRequest;
            import org.openapis.openapi.models.operations.FeedResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    FeedRequest req = FeedRequest.builder()
                            .timeoutMillis(5000L)
                            .build();

                    FeedResponse res = sdk.client().search().retrieveFeed()
                            .request(req)
                            .call();

                    if (res.feedResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/recommendations:
    post:
      tags:
        - Search
      summary: Recommend documents
      description: Retrieve recommended documents for the given URL or Glean Document ID.
      operationId: recommendations
      x-visibility: Preview
      x-codegen-request-body-name: payload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecommendationsRequest'
        description: Recommendations request
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationsResponse'
        '202':
          description: Accepted. The Retry-After header has a hint about when the response will be available
        '204':
          description: There are no recommendations for this URL
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Document does not exist or user cannot access document
        '429':
          description: Too Many Requests
      x-speakeasy-group: client.search
      x-speakeasy-name-override: recommendations
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean, models
            from glean.api_client.utils import parse_datetime
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                res = glean.client.search.recommendations(source_document=models.Document(
                    container_document=models.Document(
                        metadata=models.DocumentMetadata(
                            datasource="datasource",
                            object_type="Feature Request",
                            container="container",
                            parent_id="JIRA_EN-1337",
                            mime_type="mimeType",
                            document_id="documentId",
                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                            author=models.Person(
                                name="name",
                                obfuscated_id="<id>",
                            ),
                            components=[
                                "Backend",
                                "Networking",
                            ],
                            status="[\"Done\"]",
                            custom_data={
                                "someCustomField": models.CustomDataValue(),
                            },
                        ),
                    ),
                    parent_document=models.Document(
                        metadata=models.DocumentMetadata(
                            datasource="datasource",
                            object_type="Feature Request",
                            container="container",
                            parent_id="JIRA_EN-1337",
                            mime_type="mimeType",
                            document_id="documentId",
                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                            author=models.Person(
                                name="name",
                                obfuscated_id="<id>",
                            ),
                            components=[
                                "Backend",
                                "Networking",
                            ],
                            status="[\"Done\"]",
                            custom_data={
                                "someCustomField": models.CustomDataValue(),
                            },
                        ),
                    ),
                    metadata=models.DocumentMetadata(
                        datasource="datasource",
                        object_type="Feature Request",
                        container="container",
                        parent_id="JIRA_EN-1337",
                        mime_type="mimeType",
                        document_id="documentId",
                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                        author=models.Person(
                            name="name",
                            obfuscated_id="<id>",
                        ),
                        components=[
                            "Backend",
                            "Networking",
                        ],
                        status="[\"Done\"]",
                        custom_data={
                            "someCustomField": models.CustomDataValue(),
                        },
                    ),
                ), page_size=100, max_snippet_size=400, request_options=models.RecommendationsRequestOptions(
                    facet_filter_sets=[
                        models.FacetFilterSet(
                            filters=[
                                models.FacetFilter(
                                    field_name="type",
                                    values=[
                                        models.FacetFilterValue(
                                            value="Spreadsheet",
                                            relation_type=models.RelationType.EQUALS,
                                        ),
                                        models.FacetFilterValue(
                                            value="Presentation",
                                            relation_type=models.RelationType.EQUALS,
                                        ),
                                    ],
                                ),
                            ],
                        ),
                    ],
                    context=models.Document(
                        container_document=models.Document(
                            metadata=models.DocumentMetadata(
                                datasource="datasource",
                                object_type="Feature Request",
                                container="container",
                                parent_id="JIRA_EN-1337",
                                mime_type="mimeType",
                                document_id="documentId",
                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                author=models.Person(
                                    name="name",
                                    obfuscated_id="<id>",
                                ),
                                components=[
                                    "Backend",
                                    "Networking",
                                ],
                                status="[\"Done\"]",
                                custom_data={
                                    "someCustomField": models.CustomDataValue(),
                                },
                            ),
                        ),
                        parent_document=models.Document(
                            metadata=models.DocumentMetadata(
                                datasource="datasource",
                                object_type="Feature Request",
                                container="container",
                                parent_id="JIRA_EN-1337",
                                mime_type="mimeType",
                                document_id="documentId",
                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                author=models.Person(
                                    name="name",
                                    obfuscated_id="<id>",
                                ),
                                components=[
                                    "Backend",
                                    "Networking",
                                ],
                                status="[\"Done\"]",
                                custom_data={
                                    "someCustomField": models.CustomDataValue(),
                                },
                            ),
                        ),
                        metadata=models.DocumentMetadata(
                            datasource="datasource",
                            object_type="Feature Request",
                            container="container",
                            parent_id="JIRA_EN-1337",
                            mime_type="mimeType",
                            document_id="documentId",
                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                            author=models.Person(
                                name="name",
                                obfuscated_id="<id>",
                            ),
                            components=[
                                "Backend",
                                "Networking",
                            ],
                            status="[\"Done\"]",
                            custom_data={
                                "someCustomField": models.CustomDataValue(),
                            },
                        ),
                    ),
                ))

                assert res is not None

                # Handle response
                print(res)
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.search.recommendations({
                sourceDocument: {
                  metadata: {
                    datasource: "datasource",
                    objectType: "Feature Request",
                    container: "container",
                    parentId: "JIRA_EN-1337",
                    mimeType: "mimeType",
                    documentId: "documentId",
                    createTime: new Date("2000-01-23T04:56:07.000Z"),
                    updateTime: new Date("2000-01-23T04:56:07.000Z"),
                    author: {
                      name: "name",
                      obfuscatedId: "<id>",
                    },
                    components: [
                      "Backend",
                      "Networking",
                    ],
                    status: "[\"Done\"]",
                    customData: {
                      "someCustomField": {},
                    },
                  },
                },
                pageSize: 100,
                maxSnippetSize: 400,
                requestOptions: {
                  facetFilterSets: [
                    {
                      filters: [
                        {
                          fieldName: "type",
                          values: [
                            {
                              value: "Spreadsheet",
                              relationType: "EQUALS",
                            },
                            {
                              value: "Presentation",
                              relationType: "EQUALS",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                  context: {
                    metadata: {
                      datasource: "datasource",
                      objectType: "Feature Request",
                      container: "container",
                      parentId: "JIRA_EN-1337",
                      mimeType: "mimeType",
                      documentId: "documentId",
                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                      author: {
                        name: "name",
                        obfuscatedId: "<id>",
                      },
                      components: [
                        "Backend",
                        "Networking",
                      ],
                      status: "[\"Done\"]",
                      customData: {
                        "someCustomField": {},
                      },
                    },
                  },
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/types\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Search.Recommendations(ctx, components.RecommendationsRequest{\n        SourceDocument: &components.Document{\n            ContainerDocument: &components.Document{\n                Metadata: &components.DocumentMetadata{\n                    Datasource: apiclientgo.String(\"datasource\"),\n                    ObjectType: apiclientgo.String(\"Feature Request\"),\n                    Container: apiclientgo.String(\"container\"),\n                    ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                    MimeType: apiclientgo.String(\"mimeType\"),\n                    DocumentID: apiclientgo.String(\"documentId\"),\n                    CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                    UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                    Author: &components.Person{\n                        Name: \"name\",\n                        ObfuscatedID: \"<id>\",\n                    },\n                    Components: []string{\n                        \"Backend\",\n                        \"Networking\",\n                    },\n                    Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                    CustomData: map[string]components.CustomDataValue{\n                        \"someCustomField\": components.CustomDataValue{},\n                    },\n                },\n            },\n            ParentDocument: &components.Document{\n                Metadata: &components.DocumentMetadata{\n                    Datasource: apiclientgo.String(\"datasource\"),\n                    ObjectType: apiclientgo.String(\"Feature Request\"),\n                    Container: apiclientgo.String(\"container\"),\n                    ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                    MimeType: apiclientgo.String(\"mimeType\"),\n                    DocumentID: apiclientgo.String(\"documentId\"),\n                    CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                    UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                    Author: &components.Person{\n                        Name: \"name\",\n                        ObfuscatedID: \"<id>\",\n                    },\n                    Components: []string{\n                        \"Backend\",\n                        \"Networking\",\n                    },\n                    Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                    CustomData: map[string]components.CustomDataValue{\n                        \"someCustomField\": components.CustomDataValue{},\n                    },\n                },\n            },\n            Metadata: &components.DocumentMetadata{\n                Datasource: apiclientgo.String(\"datasource\"),\n                ObjectType: apiclientgo.String(\"Feature Request\"),\n                Container: apiclientgo.String(\"container\"),\n                ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                MimeType: apiclientgo.String(\"mimeType\"),\n                DocumentID: apiclientgo.String(\"documentId\"),\n                CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                Author: &components.Person{\n                    Name: \"name\",\n                    ObfuscatedID: \"<id>\",\n                },\n                Components: []string{\n                    \"Backend\",\n                    \"Networking\",\n                },\n                Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                CustomData: map[string]components.CustomDataValue{\n                    \"someCustomField\": components.CustomDataValue{},\n                },\n            },\n        },\n        PageSize: apiclientgo.Int64(100),\n        MaxSnippetSize: apiclientgo.Int64(400),\n        RequestOptions: &components.RecommendationsRequestOptions{\n            FacetFilterSets: []components.FacetFilterSet{\n                components.FacetFilterSet{\n                    Filters: []components.FacetFilter{\n                        components.FacetFilter{\n                            FieldName: apiclientgo.String(\"type\"),\n                            Values: []components.FacetFilterValue{\n                                components.FacetFilterValue{\n                                    Value: apiclientgo.String(\"Spreadsheet\"),\n                                    RelationType: components.RelationTypeEquals.ToPointer(),\n                                },\n                                components.FacetFilterValue{\n                                    Value: apiclientgo.String(\"Presentation\"),\n                                    RelationType: components.RelationTypeEquals.ToPointer(),\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n            Context: &components.Document{\n                ContainerDocument: &components.Document{\n                    Metadata: &components.DocumentMetadata{\n                        Datasource: apiclientgo.String(\"datasource\"),\n                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                        Container: apiclientgo.String(\"container\"),\n                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                        MimeType: apiclientgo.String(\"mimeType\"),\n                        DocumentID: apiclientgo.String(\"documentId\"),\n                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                        Author: &components.Person{\n                            Name: \"name\",\n                            ObfuscatedID: \"<id>\",\n                        },\n                        Components: []string{\n                            \"Backend\",\n                            \"Networking\",\n                        },\n                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                        CustomData: map[string]components.CustomDataValue{\n                            \"someCustomField\": components.CustomDataValue{},\n                        },\n                    },\n                },\n                ParentDocument: &components.Document{\n                    Metadata: &components.DocumentMetadata{\n                        Datasource: apiclientgo.String(\"datasource\"),\n                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                        Container: apiclientgo.String(\"container\"),\n                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                        MimeType: apiclientgo.String(\"mimeType\"),\n                        DocumentID: apiclientgo.String(\"documentId\"),\n                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                        Author: &components.Person{\n                            Name: \"name\",\n                            ObfuscatedID: \"<id>\",\n                        },\n                        Components: []string{\n                            \"Backend\",\n                            \"Networking\",\n                        },\n                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                        CustomData: map[string]components.CustomDataValue{\n                            \"someCustomField\": components.CustomDataValue{},\n                        },\n                    },\n                },\n                Metadata: &components.DocumentMetadata{\n                    Datasource: apiclientgo.String(\"datasource\"),\n                    ObjectType: apiclientgo.String(\"Feature Request\"),\n                    Container: apiclientgo.String(\"container\"),\n                    ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                    MimeType: apiclientgo.String(\"mimeType\"),\n                    DocumentID: apiclientgo.String(\"documentId\"),\n                    CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                    UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                    Author: &components.Person{\n                        Name: \"name\",\n                        ObfuscatedID: \"<id>\",\n                    },\n                    Components: []string{\n                        \"Backend\",\n                        \"Networking\",\n                    },\n                    Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                    CustomData: map[string]components.CustomDataValue{\n                        \"someCustomField\": components.CustomDataValue{},\n                    },\n                },\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.ResultsResponse != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.time.OffsetDateTime;
            import java.util.List;
            import java.util.Map;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.*;
            import org.openapis.openapi.models.operations.RecommendationsResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    RecommendationsRequest req = RecommendationsRequest.builder()
                            .sourceDocument(Document.builder()
                                .containerDocument(Document.builder()
                                    .metadata(DocumentMetadata.builder()
                                        .datasource("datasource")
                                        .objectType("Feature Request")
                                        .container("container")
                                        .parentId("JIRA_EN-1337")
                                        .mimeType("mimeType")
                                        .documentId("documentId")
                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                        .author(Person.builder()
                                            .name("name")
                                            .obfuscatedId("<id>")
                                            .build())
                                        .components(List.of(
                                            "Backend",
                                            "Networking"))
                                        .status("[\"Done\"]")
                                        .customData(Map.ofEntries(
                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                .build())))
                                        .build())
                                    .build())
                                .parentDocument(Document.builder()
                                    .metadata(DocumentMetadata.builder()
                                        .datasource("datasource")
                                        .objectType("Feature Request")
                                        .container("container")
                                        .parentId("JIRA_EN-1337")
                                        .mimeType("mimeType")
                                        .documentId("documentId")
                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                        .author(Person.builder()
                                            .name("name")
                                            .obfuscatedId("<id>")
                                            .build())
                                        .components(List.of(
                                            "Backend",
                                            "Networking"))
                                        .status("[\"Done\"]")
                                        .customData(Map.ofEntries(
                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                .build())))
                                        .build())
                                    .build())
                                .metadata(DocumentMetadata.builder()
                                    .datasource("datasource")
                                    .objectType("Feature Request")
                                    .container("container")
                                    .parentId("JIRA_EN-1337")
                                    .mimeType("mimeType")
                                    .documentId("documentId")
                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                    .author(Person.builder()
                                        .name("name")
                                        .obfuscatedId("<id>")
                                        .build())
                                    .components(List.of(
                                        "Backend",
                                        "Networking"))
                                    .status("[\"Done\"]")
                                    .customData(Map.ofEntries(
                                        Map.entry("someCustomField", CustomDataValue.builder()
                                            .build())))
                                    .build())
                                .build())
                            .pageSize(100L)
                            .maxSnippetSize(400L)
                            .requestOptions(RecommendationsRequestOptions.builder()
                                .facetFilterSets(List.of(
                                    FacetFilterSet.builder()
                                        .filters(List.of(
                                            FacetFilter.builder()
                                                .fieldName("type")
                                                .values(List.of(
                                                    FacetFilterValue.builder()
                                                        .value("Spreadsheet")
                                                        .relationType(RelationType.EQUALS)
                                                        .build(),
                                                    FacetFilterValue.builder()
                                                        .value("Presentation")
                                                        .relationType(RelationType.EQUALS)
                                                        .build()))
                                                .build()))
                                        .build()))
                                .context(Document.builder()
                                    .containerDocument(Document.builder()
                                        .metadata(DocumentMetadata.builder()
                                            .datasource("datasource")
                                            .objectType("Feature Request")
                                            .container("container")
                                            .parentId("JIRA_EN-1337")
                                            .mimeType("mimeType")
                                            .documentId("documentId")
                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .author(Person.builder()
                                                .name("name")
                                                .obfuscatedId("<id>")
                                                .build())
                                            .components(List.of(
                                                "Backend",
                                                "Networking"))
                                            .status("[\"Done\"]")
                                            .customData(Map.ofEntries(
                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                    .build())))
                                            .build())
                                        .build())
                                    .parentDocument(Document.builder()
                                        .metadata(DocumentMetadata.builder()
                                            .datasource("datasource")
                                            .objectType("Feature Request")
                                            .container("container")
                                            .parentId("JIRA_EN-1337")
                                            .mimeType("mimeType")
                                            .documentId("documentId")
                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .author(Person.builder()
                                                .name("name")
                                                .obfuscatedId("<id>")
                                                .build())
                                            .components(List.of(
                                                "Backend",
                                                "Networking"))
                                            .status("[\"Done\"]")
                                            .customData(Map.ofEntries(
                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                    .build())))
                                            .build())
                                        .build())
                                    .metadata(DocumentMetadata.builder()
                                        .datasource("datasource")
                                        .objectType("Feature Request")
                                        .container("container")
                                        .parentId("JIRA_EN-1337")
                                        .mimeType("mimeType")
                                        .documentId("documentId")
                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                        .author(Person.builder()
                                            .name("name")
                                            .obfuscatedId("<id>")
                                            .build())
                                        .components(List.of(
                                            "Backend",
                                            "Networking"))
                                        .status("[\"Done\"]")
                                        .customData(Map.ofEntries(
                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                .build())))
                                        .build())
                                    .build())
                                .build())
                            .build();

                    RecommendationsResponse res = sdk.client().search().recommendations()
                            .request(req)
                            .call();

                    if (res.resultsResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/search:
    post:
      tags:
        - Search
      summary: Search
      description: Retrieve results from the index for the given query and filters.
      operationId: search
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        description: Search request
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '408':
          description: Request Timeout
        '422':
          description: Invalid Query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '429':
          description: Too Many Requests
      x-speakeasy-group: client.search
      x-speakeasy-name-override: query
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean, models
            from glean.api_client.utils import parse_datetime
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                res = glean.client.search.query(query="vacation policy", tracking_token="trackingToken", source_document=models.Document(
                    container_document=models.Document(
                        metadata=models.DocumentMetadata(
                            datasource="datasource",
                            object_type="Feature Request",
                            container="container",
                            parent_id="JIRA_EN-1337",
                            mime_type="mimeType",
                            document_id="documentId",
                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                            author=models.Person(
                                name="name",
                                obfuscated_id="<id>",
                            ),
                            components=[
                                "Backend",
                                "Networking",
                            ],
                            status="[\"Done\"]",
                            custom_data={
                                "someCustomField": models.CustomDataValue(),
                            },
                        ),
                    ),
                    parent_document=models.Document(
                        metadata=models.DocumentMetadata(
                            datasource="datasource",
                            object_type="Feature Request",
                            container="container",
                            parent_id="JIRA_EN-1337",
                            mime_type="mimeType",
                            document_id="documentId",
                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                            author=models.Person(
                                name="name",
                                obfuscated_id="<id>",
                            ),
                            components=[
                                "Backend",
                                "Networking",
                            ],
                            status="[\"Done\"]",
                            custom_data={
                                "someCustomField": models.CustomDataValue(),
                            },
                        ),
                    ),
                    metadata=models.DocumentMetadata(
                        datasource="datasource",
                        object_type="Feature Request",
                        container="container",
                        parent_id="JIRA_EN-1337",
                        mime_type="mimeType",
                        document_id="documentId",
                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                        author=models.Person(
                            name="name",
                            obfuscated_id="<id>",
                        ),
                        components=[
                            "Backend",
                            "Networking",
                        ],
                        status="[\"Done\"]",
                        custom_data={
                            "someCustomField": models.CustomDataValue(),
                        },
                    ),
                ), page_size=10, max_snippet_size=400, input_details={
                    "has_copy_paste": True,
                }, request_options=models.SearchRequestOptions(
                    facet_filters=[
                        models.FacetFilter(
                            field_name="type",
                            values=[
                                models.FacetFilterValue(
                                    value="article",
                                    relation_type=models.RelationType.EQUALS,
                                ),
                                models.FacetFilterValue(
                                    value="document",
                                    relation_type=models.RelationType.EQUALS,
                                ),
                            ],
                        ),
                        models.FacetFilter(
                            field_name="department",
                            values=[
                                models.FacetFilterValue(
                                    value="engineering",
                                    relation_type=models.RelationType.EQUALS,
                                ),
                            ],
                        ),
                    ],
                    facet_bucket_size=939520,
                ), timeout_millis=5000, people=[
                    models.Person(
                        name="George Clooney",
                        obfuscated_id="abc123",
                    ),
                ])

                # Handle response
                print(res)
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.search.query({
                trackingToken: "trackingToken",
                pageSize: 10,
                query: "vacation policy",
                requestOptions: {
                  facetFilters: [
                    {
                      fieldName: "type",
                      values: [
                        {
                          value: "article",
                          relationType: "EQUALS",
                        },
                        {
                          value: "document",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                    {
                      fieldName: "department",
                      values: [
                        {
                          value: "engineering",
                          relationType: "EQUALS",
                        },
                      ],
                    },
                  ],
                  facetBucketSize: 939520,
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Search.Query(ctx, components.SearchRequest{\n        TrackingToken: apiclientgo.String(\"trackingToken\"),\n        PageSize: apiclientgo.Int64(10),\n        Query: \"vacation policy\",\n        RequestOptions: &components.SearchRequestOptions{\n            FacetFilters: []components.FacetFilter{\n                components.FacetFilter{\n                    FieldName: apiclientgo.String(\"type\"),\n                    Values: []components.FacetFilterValue{\n                        components.FacetFilterValue{\n                            Value: apiclientgo.String(\"article\"),\n                            RelationType: components.RelationTypeEquals.ToPointer(),\n                        },\n                        components.FacetFilterValue{\n                            Value: apiclientgo.String(\"document\"),\n                            RelationType: components.RelationTypeEquals.ToPointer(),\n                        },\n                    },\n                },\n                components.FacetFilter{\n                    FieldName: apiclientgo.String(\"department\"),\n                    Values: []components.FacetFilterValue{\n                        components.FacetFilterValue{\n                            Value: apiclientgo.String(\"engineering\"),\n                            RelationType: components.RelationTypeEquals.ToPointer(),\n                        },\n                    },\n                },\n            },\n            FacetBucketSize: 939520,\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.SearchResponse != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.*;
            import org.openapis.openapi.models.errors.GleanDataError;
            import org.openapis.openapi.models.operations.SearchResponse;

            public class Application {

                public static void main(String[] args) throws GleanDataError, Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    SearchRequest req = SearchRequest.builder()
                            .query("vacation policy")
                            .trackingToken("trackingToken")
                            .pageSize(10L)
                            .requestOptions(SearchRequestOptions.builder()
                                .facetBucketSize(939520L)
                                .facetFilters(List.of(
                                    FacetFilter.builder()
                                        .fieldName("type")
                                        .values(List.of(
                                            FacetFilterValue.builder()
                                                .value("article")
                                                .relationType(RelationType.EQUALS)
                                                .build(),
                                            FacetFilterValue.builder()
                                                .value("document")
                                                .relationType(RelationType.EQUALS)
                                                .build()))
                                        .build(),
                                    FacetFilter.builder()
                                        .fieldName("department")
                                        .values(List.of(
                                            FacetFilterValue.builder()
                                                .value("engineering")
                                                .relationType(RelationType.EQUALS)
                                                .build()))
                                        .build()))
                                .build())
                            .build();

                    SearchResponse res = sdk.client().search().query()
                            .request(req)
                            .call();

                    if (res.searchResponse().isPresent()) {
                        // handle response
                    }
                }
            }
components:
  schemas:
    ClusterTypeEnum:
      type: string
      description: The reason for inclusion of clusteredResults.
      enum:
        - SIMILAR
        - FRESHNESS
        - TITLE
        - CONTENT
        - NONE
        - THREAD_REPLY
        - THREAD_ROOT
        - PREFIX
        - SUFFIX
    CollectionPinnableCategories:
      type: string
      description: Categories a Collection can be pinned to.
      enum:
        - COMPANY_RESOURCE
        - DEPARTMENT_RESOURCE
        - TEAM_RESOURCE
    CollectionPinnableTargets:
      type: string
      description: What targets can a Collection be pinned to.
      enum:
        - RESOURCE_CARD
        - TEAM_PROFILE_PAGE
    CommunicationChannel:
      type: string
      enum:
        - COMMUNICATION_CHANNEL_EMAIL
        - COMMUNICATION_CHANNEL_SLACK
    ConnectorType:
      type: string
      description: The source from which document content was pulled, e.g. an API crawl or browser history
      enum:
        - API_CRAWL
        - BROWSER_CRAWL
        - BROWSER_HISTORY
        - BUILTIN
        - FEDERATED_SEARCH
        - PUSH_API
        - WEB_CRAWL
        - NATIVE_HISTORY
    EntityType:
      type: string
      description: The type of entity.
      x-include-enum-class-prefix: true
      enum:
        - PERSON
        - PROJECT
        - CUSTOMER
    EventClassificationName:
      description: The name for a generated classification of an event.
      type: string
      enum:
        - External Event
    EventStrategyName:
      type: string
      description: The name of method used to surface relevant data for a given calendar event.
      enum:
        - customerCard
        - news
        - call
        - email
        - meetingNotes
        - linkedIn
        - relevantDocuments
        - chatFollowUps
        - conversations
    GroupType:
      type: string
      description: The type of user group
      enum:
        - DEPARTMENT
        - ALL
        - TEAM
        - JOB_TITLE
        - ROLE_TYPE
        - LOCATION
        - REGION
        - EXTERNAL_GROUP
    ScopeType:
      type: string
      description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
      enum:
        - GLOBAL
        - OWN
    UserRole:
      type: string
      description: A user's role with respect to a specific document.
      enum:
        - OWNER
        - VIEWER
        - ANSWER_MODERATOR
        - EDITOR
        - VERIFIER
    DocumentVisibility:
      type: string
      description: The level of visibility of the document as understood by our system.
      x-enumDescriptions:
        PRIVATE: Only one person is able to see the document.
        SPECIFIC_PEOPLE_AND_GROUPS: Only specific people and/or groups can see the document.
        DOMAIN_LINK: Anyone in the domain with the link can see the document.
        DOMAIN_VISIBLE: Anyone in the domain can search for the document.
        PUBLIC_LINK: Anyone with the link can see the document.
        PUBLIC_VISIBLE: Anyone on the internet can search for the document.
      enum:
        - PRIVATE
        - SPECIFIC_PEOPLE_AND_GROUPS
        - DOMAIN_LINK
        - DOMAIN_VISIBLE
        - PUBLIC_LINK
        - PUBLIC_VISIBLE
    SearchResultProminenceEnum:
      type: string
      description: |
        The level of visual distinction that should be given to a result.
      x-enumDescriptions:
        HERO: A high-confidence result that should feature prominently on the page.
        PROMOTED: May not be the best result but should be given additional visual distinction.
        STANDARD: Should not be distinct from any other results.
      enum:
        - HERO
        - PROMOTED
        - STANDARD
    AnswerDocId:
      properties:
        docId:
          type: string
          description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
          example: ANSWERS_answer_3
    AnswerId:
      properties:
        id:
          type: integer
          description: The opaque ID of the Answer.
          example: 3
    UserGeneratedContentId:
      properties:
        id:
          type: integer
          description: The opaque id of the user generated content.
    AttributionProperties: {}
    UgcType:
      enum:
        - ANNOUNCEMENTS_TYPE
        - ANSWERS_TYPE
        - COLLECTIONS_TYPE
        - SHORTCUTS_TYPE
        - WORKFLOWS_TYPE
        - PROMPT_TEMPLATES_TYPE
    ChatZeroStateSuggestionOptions:
      properties:
        applicationId:
          type: string
          description: The Chat Application ID this feed request should be scoped to. Empty means there is no Chat Application ID..
    CustomFieldValueStr:
      properties:
        strText:
          type: string
          description: Text field for string value.
    DisplayableListFormat:
      properties:
        format:
          type: string
          enum:
            - LIST
          description: defines how to render this particular displayable list card
    DisplayableListItemUIConfig:
      type: object
      description: UI configurations for each item of the list
      properties:
        showNewIndicator:
          type: boolean
          description: show a "New" pill next to the item
    DraftProperties:
      properties:
        draftId:
          type: integer
          description: The opaque id of the associated draft.
      example:
        draftId: 342
    SearchRequestInputDetails:
      properties:
        hasCopyPaste:
          type: boolean
          description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
      example:
        hasCopyPaste: true
    StructuredTextMutableProperties:
      required:
        - text
      properties:
        text:
          type: string
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
    WorkflowDraftableProperties:
      properties:
        name:
          type: string
          description: The name of the workflow.
    CustomFieldValueHyperlink:
      properties:
        urlAnchor:
          type: string
          description: Anchor text for hyperlink.
        urlLink:
          type: string
          description: Link for this URL.
    ErrorMessage:
      properties:
        source:
          description: The datasource this message relates to.
          type: string
        errorMessage:
          type: string
    FacetBucketFilter:
      properties:
        facet:
          type: string
          description: The facet whose buckets should be filtered.
        prefix:
          type: string
          description: The per-term prefix that facet buckets should be filtered on.
    GeneratedAttachmentContent:
      description: Content that has been generated or extrapolated from the documents present in the document field.
      properties:
        displayHeader:
          description: The header describing the generated content.
          type: string
        text:
          description: The content that has been generated.
          type: string
      example:
        displayHeader: Action Items
        content: You said you'd send over the design document after the meeting.
    IndexStatus:
      properties:
        lastCrawledTime:
          description: When the document was last crawled
          type: string
          format: date-time
        lastIndexedTime:
          description: When the document was last indexed
          type: string
          format: date-time
    InvalidOperatorValueError:
      properties:
        key:
          description: The operator key that has an invalid value.
          type: string
        value:
          description: The invalid operator value.
          type: string
    OperatorScope:
      properties:
        datasource:
          type: string
        docType:
          type: string
    Thumbnail:
      properties:
        photoId:
          type: string
          description: Photo id if the thumbnail is from splash.
        url:
          type: string
          description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
    TimeInterval:
      required:
        - start
        - end
      properties:
        start:
          type: string
          description: The RFC3339 timestamp formatted start time of this event.
        end:
          type: string
          description: The RFC3339 timestamp formatted end time of this event.
    TimePoint:
      properties:
        epochSeconds:
          type: integer
          description: Epoch seconds. Has precedence over daysFromNow.
        daysFromNow:
          type: integer
          description: The number of days from now. Specification relative to current time. Can be negative.
    ViewerInfo:
      properties:
        role:
          type: string
          enum:
            - ANSWER_MODERATOR
            - OWNER
            - VIEWER
          description: DEPRECATED - use permissions instead. Viewer's role on the specific document.
          deprecated: true
        lastViewedTime:
          type: string
          format: date-time
    CollectionItemMutableProperties:
      properties:
        name:
          type: string
          description: The optional name of the Collection item.
        description:
          type: string
          description: A helpful description of why this CollectionItem is in the Collection that it's in.
        icon:
          type: string
          description: The emoji icon for this CollectionItem. Only used for Text type items.
    ConferenceData:
      required:
        - provider
        - uri
      properties:
        provider:
          type: string
          enum:
            - ZOOM
            - HANGOUTS
        uri:
          type: string
          description: A permalink for the conference.
        source:
          type: string
          enum:
            - NATIVE_CONFERENCE
            - LOCATION
            - DESCRIPTION
    FacetFilterValue:
      properties:
        value:
          type: string
          example: Spreadsheet
        relationType:
          type: string
          enum:
            - EQUALS
            - ID_EQUALS
            - LT
            - GT
            - NOT_EQUALS
          example: EQUALS
        isNegated:
          type: boolean
          deprecated: true
          description: DEPRECATED - please use relationType instead
    PersonDistance:
      required:
        - name
        - obfuscatedId
        - distance
      properties:
        name:
          type: string
          description: The display name.
        obfuscatedId:
          type: string
          description: An opaque identifier that can be used to request metadata for a Person.
        distance:
          type: number
          format: float
          description: Distance to person, refer to PeopleDistance pipeline on interpretation of the value.
    SearchProviderInfo:
      properties:
        name:
          type: string
          description: Name of the search provider.
        logoUrl:
          type: string
          description: URL to the provider's logo.
        searchLinkUrlTemplate:
          type: string
          description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
      example:
        name: Google
        logo: https://app.glean.com/images/feather/globe.svg
        searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
    SocialNetwork:
      required:
        - name
        - profileUrl
      properties:
        name:
          type: string
          description: Possible values are "twitter", "linkedin".
        profileName:
          type: string
          description: Human-readable profile name.
        profileUrl:
          type: string
          format: url
          description: Link to profile.
    TeamEmail:
      properties:
        email:
          type: string
          format: email
          description: An email address
        type:
          type: string
          enum:
            - PRIMARY
            - SECONDARY
            - ONCALL
            - OTHER
          default: OTHER
        isUserGenerated:
          type: boolean
          description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
    SessionInfo:
      properties:
        sessionTrackingToken:
          type: string
          description: A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab.
        tabId:
          type: string
          description: A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab.
        lastSeen:
          type: string
          format: date-time
          description: The last time the server saw this token.
        lastQuery:
          type: string
          description: The last query seen by the server.
    DatasourceProfile:
      required:
        - datasource
        - handle
      properties:
        datasource:
          type: string
          example: github
          description: The datasource the profile is of.
        handle:
          type: string
          description: The display name of the entity in the given datasource.
        url:
          type: string
          description: URL to view the entity's profile.
        nativeAppUrl:
          type: string
          description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
        isUserGenerated:
          type: boolean
          description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
    PersonTeam:
      description: Use `id` if you index teams via Glean, and use `name` and `externalLink` if you want to use your own team pages
      properties:
        id:
          type: string
          description: Unique identifier
        name:
          type: string
          description: Team name
        externalLink:
          type: string
          format: uri
          description: Link to a team page on the internet or your company's intranet
        relationship:
          type: string
          description: The team member's relationship to the team. This defaults to MEMBER if not set.
          default: MEMBER
          enum:
            - MEMBER
            - MANAGER
            - LEAD
            - POINT_OF_CONTACT
            - OTHER
        joinDate:
          type: string
          format: date-time
          description: The team member's start date
    AuthToken:
      required:
        - accessToken
        - datasource
      properties:
        accessToken:
          type: string
        datasource:
          type: string
        scope:
          type: string
        tokenType:
          type: string
        authUser:
          description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
          type: string
        expiration:
          description: Unix timestamp when this token expires (in seconds since epoch UTC).
          type: integer
          format: int64
      example:
        accessToken: 123abc
        datasource: gmail
        scope: email profile https://www.googleapis.com/auth/gmail.readonly
        tokenType: Bearer
        authUser: '1'
    FollowupAction:
      description: A follow-up action that can be invoked by the user after a response. The action parameters are not included and need to be predicted/filled separately.
      properties:
        actionRunId:
          type: string
          description: Unique identifier for this actionRun recommendation event.
        actionInstanceId:
          type: string
          description: The ID of the action instance that will be invoked.
        actionId:
          type: string
          description: The ID of the associated action.
        recommendationText:
          type: string
          description: Text to be displayed to the user when recommending the action instance.
        actionLabel:
          type: string
          description: The label to be used when displaying a button to execute this action instance.
        userConfirmationRequired:
          type: boolean
          description: Whether user confirmation is needed before executing this action instance.
    RelatedObject:
      required:
        - id
      properties:
        id:
          type: string
          description: The ID of the related object
        metadata:
          type: object
          description: Some metadata of the object which can be displayed, while not having the actual object.
          properties:
            name:
              type: string
              description: Placeholder name of the object, not the relationship.
    CustomFieldValue:
      oneOf:
        - properties:
            strText:
              description: Text field for string value.
              type: string
          type: object
        - properties:
            urlAnchor:
              description: Anchor text for hyperlink.
              type: string
            urlLink:
              description: Link for this URL.
              type: string
          type: object
        - properties:
            person:
              type: object
              description: Person object (max depth)
          type: object
    IconConfig:
      description: Defines how to render an icon
      properties:
        generatedBackgroundColorKey:
          type: string
        backgroundColor:
          type: string
        color:
          type: string
        key:
          type: string
        iconType:
          enum:
            - COLLECTION
            - CUSTOM
            - DATASOURCE
            - DATASOURCE_INSTANCE
            - FAVICON
            - FILE_TYPE
            - GENERATED_BACKGROUND
            - GLYPH
            - MIME_TYPE
            - NO_ICON
            - PERSON
            - REACTIONS
            - URL
        masked:
          type: boolean
          description: Whether the icon should be masked based on current theme.
        name:
          type: string
          description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
        url:
          type: string
          description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
      example:
        color: '#343CED'
        key: person_icon
        iconType: GLYPH
        name: user
    BackendExperimentsContext:
      properties:
        experimentIds:
          type: array
          items:
            type: integer
            format: int64
          description: List of experiment ids for the corresponding request.
    StructuredLocation:
      type: object
      description: Detailed location with information about country, state, city etc.
      properties:
        deskLocation:
          type: string
          description: Desk number.
        timezone:
          type: string
          description: Location's timezone, e.g. UTC, PST.
        address:
          type: string
          description: Office address or name.
        city:
          type: string
          description: Name of the city.
        state:
          type: string
          description: State code.
        region:
          type: string
          description: Region information, e.g. NORAM, APAC.
        zipCode:
          type: string
          description: ZIP Code for the address.
        country:
          type: string
          description: Country name.
        countryCode:
          type: string
          description: Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA.
    DocumentCounts:
      type: object
      description: A map of {string, int} pairs representing counts of each document type associated with this customer.
      additionalProperties:
        type: integer
    SearchWarning:
      required:
        - warningType
      properties:
        warningType:
          type: string
          enum:
            - LONG_QUERY
            - QUOTED_PUNCTUATION
            - PUNCTUATION_ONLY
            - COPYPASTED_QUOTES
            - INVALID_OPERATOR
            - MAYBE_INVALID_FACET_QUERY
            - TOO_MANY_DATASOURCE_GROUPS
          description: The type of the warning.
        lastUsedTerm:
          type: string
          description: The last term we considered in the user's long query.
        quotesIgnoredQuery:
          type: string
          description: The query after ignoring/removing quotes.
        ignoredTerms:
          type: array
          items:
            type: string
          description: A list of query terms that were ignored when generating search results, if any. For example, terms containing invalid filters such as "updated:invalid_date" will be ignored.
    CustomDataValue:
      properties:
        displayLabel:
          type: string
        stringValue:
          type: string
        stringListValue:
          type: array
          description: list of strings for multi-value properties
          items:
            type: string
        numberValue:
          type: number
        booleanValue:
          type: boolean
    CustomFieldData:
      required: &ref_21
        - label
        - values
        - displayable
      properties:
        displayable:
          default: true
          description: Determines whether the client should display this custom field
          type: boolean
        label:
          description: A user-facing label for this field.
          type: string
        values:
          type: array
          items:
            oneOf:
              - type: object
                description: CustomFieldValueStr object (max depth)
              - type: object
                description: CustomFieldValueHyperlink object (max depth)
              - type: object
                description: CustomFieldValuePerson object (max depth)
      type: object
    DocumentSection:
      type: object
      properties:
        title:
          type: string
          description: The title of the document section (e.g. the section header).
        url:
          type: string
          description: The permalink of the document section.
    AutocompleteResultGroup:
      description: A subsection of the results list from which distinct sections should be created.
      properties:
        startIndex:
          type: integer
          description: The inclusive start index of the range.
        endIndex:
          type: integer
          description: The exclusive end index of the range.
        title:
          type: string
          description: The title of the result group to be displayed. Empty means no title.
    AppResult:
      required:
        - datasource
      properties:
        datasource:
          type: string
          description: The app or other repository type this represents
        docType:
          type: string
          description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
        mimeType:
          type: string
          description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
        iconUrl:
          type: string
          description: If there is available icon URL.
    ResultTab:
      properties:
        id:
          type: string
          description: The unique ID of the tab. Can be passed in a search request to get results for that tab.
        count:
          type: integer
          description: The number of results in this tab for the current query.
        datasource:
          type: string
          description: The datasource associated with the tab, if any.
        datasourceInstance:
          type: string
          description: The datasource instance associated with the tab, if any.
    Company:
      required:
        - name
      properties:
        name:
          type: string
          description: User-friendly display name.
        profileUrl:
          type: string
          description: Link to internal company company profile.
        websiteUrls:
          type: array
          description: Link to company's associated websites.
          items:
            type: string
        logoUrl:
          type: string
          description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
        location:
          type: string
          description: User facing string representing the company's location.
          example: New York City
        phone:
          type: string
          description: Phone number as a number string.
        fax:
          type: string
          description: Fax number as a number string.
        industry:
          type: string
          description: User facing string representing the company's industry.
          example: Finances
        annualRevenue:
          type: number
          format: double
          description: Average company's annual revenue for reference.
        numberOfEmployees:
          type: integer
          format: int64
          description: Average company's number of employees for reference.
        stockSymbol:
          type: string
          description: Company's stock symbol if company is public.
        foundedDate:
          type: string
          format: date
          description: The date when the company was founded.
        about:
          type: string
          description: User facing description of company.
          example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
    DocumentContent:
      properties:
        fullTextList:
          type: array
          items:
            type: string
          description: The plaintext content of the document.
    DocumentSpec:
      oneOf:
        - type: object
          properties:
            url:
              type: string
              description: The URL of the document.
        - type: object
          properties:
            id:
              type: string
              description: The ID of the document.
        - type: object
          properties:
            ugcType:
              type: string
              enum:
                - ANNOUNCEMENTS
                - ANSWERS
                - COLLECTIONS
                - SHORTCUTS
              description: The type of the user generated content (UGC datasource).
            contentId:
              type: integer
              description: The id for user generated content.
            docType:
              type: string
              description: The specific type of the user generated content type.
    AnswerLikes:
      required: &ref_27
        - likedBy
        - likedByUser
        - numLikes
      properties:
        likedBy:
          type: array
          items:
            properties:
              createTime:
                description: The time the user liked the answer in ISO format (ISO 8601).
                format: date-time
                type: string
              user:
                type: object
                description: Person object (max depth)
            type: object
        likedByUser:
          description: Whether the user in context liked the answer.
          type: boolean
        numLikes:
          description: The total number of likes for the answer.
          type: integer
      type: object
    StructuredText:
      type: object
      properties:
        text:
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
          type: string
        structuredList:
          description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
          type: array
          items:
            properties:
              document:
                type: object
                description: Document object (max depth)
              link:
                example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
                type: string
              structuredResult:
                type: object
                description: StructuredResult object (max depth)
              text:
                example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
                type: string
            type: object
      required:
        - text
    CodeLine:
      properties:
        content:
          type: string
        lineNumber:
          type: integer
        ranges:
          description: Index ranges depicting matched sections of the line
          type: array
          items:
            description: A subsection of a given string to which some special formatting should be applied.
            required: &ref_0
              - startIndex
            properties:
              document:
                type: object
                description: Document object (max depth)
              endIndex:
                description: The exclusive end index of the range.
                type: integer
              startIndex:
                description: The inclusive start index of the range.
                type: integer
              type:
                enum: &ref_1
                  - BOLD
                  - CITATION
                  - HIGHLIGHT
                  - LINK
                type: string
              url:
                description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                type: string
            type: object
      type: object
    RelatedQuestion:
      properties:
        answer:
          description: The answer for the related question
          type: string
        question:
          description: The text of the related question
          type: string
        ranges:
          description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
          type: array
          items:
            description: A subsection of a given string to which some special formatting should be applied.
            required: *ref_0
            properties:
              document:
                type: object
                description: Document object (max depth)
              endIndex:
                description: The exclusive end index of the range.
                type: integer
              startIndex:
                description: The inclusive start index of the range.
                type: integer
              type:
                enum: *ref_1
                type: string
              url:
                description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                type: string
            type: object
      type: object
    CustomFieldValuePerson:
      properties:
        person:
          example: &ref_2
            name: George Clooney
            obfuscatedId: abc123
          required: &ref_3
            - name
            - obfuscatedId
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
      type: object
    AnswerLike:
      properties:
        createTime:
          description: The time the user liked the answer in ISO format (ISO 8601).
          format: date-time
          type: string
        user:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
      type: object
    CustomEntity:
      type: object
      properties:
        permissions:
          type: object
          description: ObjectPermissions object (max depth)
        datasource:
          description: The datasource the custom entity is from.
          type: string
        id:
          description: Unique identifier.
          type: string
        metadata:
          properties:
            customData:
              type: object
              description: CustomData object (max depth)
          type: object
        objectType:
          description: The type of the entity. Interpretation is specific to each datasource
          type: string
        roles:
          description: A list of user roles for the custom entity explicitly granted by the owner.
          type: array
          items:
            required: &ref_4
              - role
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        title:
          description: Title or name of the custom entity.
          type: string
    PersonToTeamRelationship:
      description: Metadata about the relationship of a person to a team.
      required: &ref_22
        - person
      type: object
      properties:
        customRelationshipStr:
          description: Displayed name for the relationship if relationship is set to `OTHER`.
          type: string
        joinDate:
          description: The team member's start date
          format: date-time
          type: string
        person:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        relationship:
          default: MEMBER
          description: The team member's relationship to the team. This defaults to MEMBER if not set.
          enum: &ref_23
            - MEMBER
            - MANAGER
            - LEAD
            - POINT_OF_CONTACT
            - OTHER
          type: string
    ChannelInviteInfo:
      description: Information regarding the invite status of a person for a particular channel.
      properties:
        channel:
          enum:
            - COMMUNICATION_CHANNEL_EMAIL
            - COMMUNICATION_CHANNEL_SLACK
          type: string
        inviteTime:
          description: The time this person was invited in ISO format (ISO 8601).
          format: date-time
          type: string
        inviter:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        isAutoInvite:
          description: Bit that tracks if this invite was automatically sent or user-sent
          type: boolean
        reminderTime:
          description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
          format: date-time
          type: string
      type: object
    CustomData:
      type: object
      description: Custom fields specific to individual datasources
      additionalProperties:
        $ref: '#/components/schemas/CustomDataValue'
    Meeting:
      properties:
        attendees:
          properties:
            isLimit:
              description: Whether the total count of the people returned is at the retrieval limit.
              type: boolean
            numAccepted:
              description: Total number of attendees who have accepted this event.
              type: integer
            numDeclined:
              description: Total number of attendees who have declined this event.
              type: integer
            numNoResponse:
              description: Total number of attendees who have not responded to this event.
              type: integer
            numTentative:
              description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
              type: integer
            people:
              description: Full details of some of the attendees of this event
              type: array
              items:
                type: object
                properties:
                  CalendarAttendee:
                    type: object
                    description: CalendarAttendee object (max depth)
            total:
              description: Total number of attendees in this event.
              type: integer
          type: object
        description:
          type: string
        endTime:
          format: date-time
          type: string
        id:
          type: string
        startTime:
          format: date-time
          type: string
        title:
          type: string
        url:
          type: string
      type: object
    RecommendationsResponse:
      allOf:
        - $ref: '#/components/schemas/ResultsResponse'
    WorkflowMutableProperties:
      type: object
      allOf:
        - $ref: '#/components/schemas/WorkflowDraftableProperties'
        - type: object
    GrantPermission:
      description: Describes the grant permission level that a user has for a specific feature
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
    ObjectPermissions:
      properties:
        write:
          $ref: '#/components/schemas/WritePermission'
    PermissionedObject:
      properties:
        permissions:
          $ref: '#/components/schemas/ObjectPermissions'
          description: The permissions the current viewer has with respect to a particular object.
    ReadPermission:
      description: Describes the read permission level that a user has for a specific feature
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
    RelatedObjects:
      properties:
        relatedObjects:
          type: object
          description: A list of objects related to a source object.
          additionalProperties:
            $ref: '#/components/schemas/RelatedObjectEdge'
    TextRange:
      description: A subsection of a given string to which some special formatting should be applied.
      required: *ref_0
      properties:
        document:
          properties:
            connectorType:
              type: object
              description: ConnectorType object (max depth)
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              type: object
              description: DocumentContent object (max depth)
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              type: object
              description: DocumentMetadata object (max depth)
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  DocumentSection:
                    type: object
                    description: DocumentSection object (max depth)
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        endIndex:
          description: The exclusive end index of the range.
          type: integer
        startIndex:
          description: The inclusive start index of the range.
          type: integer
        type:
          enum: *ref_1
          type: string
        url:
          description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
          type: string
      type: object
    UserRoleSpecification:
      required: *ref_4
      properties:
        group:
          required:
            - type
            - id
          properties:
            id:
              description: A unique identifier for the group. May be the same as name.
              type: string
            name:
              description: Name of the group.
              type: string
            type:
              type: object
              description: GroupType object (max depth)
          type: object
        person:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        role:
          description: A user's role with respect to a specific document.
          enum:
            - OWNER
            - VIEWER
            - ANSWER_MODERATOR
            - EDITOR
            - VERIFIER
          type: string
        sourceDocumentSpec:
          oneOf:
            - type: object
              properties:
                url:
                  description: The URL of the document.
                  type: string
            - type: object
              properties:
                id:
                  description: The ID of the document.
                  type: string
            - type: object
              properties:
                contentId:
                  description: The id for user generated content.
                  type: integer
                docType:
                  description: The specific type of the user generated content type.
                  type: string
                ugcType:
                  description: The type of the user generated content (UGC datasource).
                  enum: &ref_14
                    - ANNOUNCEMENTS
                    - ANSWERS
                    - COLLECTIONS
                    - SHORTCUTS
                  type: string
      type: object
    AnonymousEvent:
      description: A generic, light-weight calendar event.
      type: object
      properties:
        time:
          $ref: '#/components/schemas/TimeInterval'
        eventType:
          description: The nature of the event, for example "out of office".
          type: string
          enum:
            - DEFAULT
            - OUT_OF_OFFICE
    CountInfo:
      required:
        - count
      properties:
        count:
          type: integer
          description: The counter value
        period:
          $ref: '#/components/schemas/Period'
        org:
          type: string
          description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
    Disambiguation:
      type: object
      description: A disambiguation between multiple entities with the same name
      properties:
        name:
          type: string
          description: Name of the ambiguous entity
        id:
          type: string
          description: The unique id of the entity in the knowledge graph
        type:
          $ref: '#/components/schemas/EntityType'
    Group:
      required:
        - type
        - id
      properties:
        type:
          $ref: '#/components/schemas/GroupType'
        id:
          type: string
          description: A unique identifier for the group. May be the same as name.
        name:
          type: string
          description: Name of the group.
    StructuredLink:
      description: The display configuration for a link.
      properties:
        name:
          type: string
          description: The display name for the link
        url:
          type: string
          description: The URL for the link.
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
    Badge:
      type: object
      description: Displays a user's accomplishment or milestone
      properties:
        key:
          type: string
          description: An auto generated unique identifier.
        displayName:
          type: string
          description: The badge name displayed to users
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
        pinned:
          type: boolean
          description: The badge should be shown on the PersonAttribution
      example:
        key: deployment_name_new_hire
        displayName: New hire
        iconConfig:
          color: '#343CED'
          key: person_icon
          iconType: GLYPH
          name: user
    FacetBucket:
      properties:
        count:
          type: integer
          description: Estimated number of results in this facet.
          example: 1
        datasource:
          type: string
          example: jira
          description: The datasource the value belongs to. This will be used by the all tab to show types across all datasources.
        percentage:
          type: integer
          description: Estimated percentage of results in this facet.
          example: 5
        value:
          $ref: '#/components/schemas/FacetValue'
    FacetValue:
      properties:
        stringValue:
          type: string
          example: engineering
          description: The value that should be set in the FacetFilter when applying this filter to a search request.
        integerValue:
          type: integer
          example: 5
        displayLabel:
          type: string
          example: engineering
          description: An optional user-friendly label to display in place of the facet value.
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
    FavoriteInfo:
      type: object
      properties:
        ugcType:
          $ref: '#/components/schemas/UgcType'
        id:
          type: string
          description: Opaque id of the UGC.
        count:
          type: integer
          x-includeEmpty: true
          description: Number of users this object has been favorited by.
        favoritedByUser:
          type: boolean
          x-includeEmpty: true
          description: If the requesting user has favorited this object.
    Period:
      properties:
        minDaysFromNow:
          type: integer
          description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
          deprecated: true
        maxDaysFromNow:
          type: integer
          description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
          deprecated: true
        start:
          $ref: '#/components/schemas/TimePoint'
        end:
          $ref: '#/components/schemas/TimePoint'
    WritePermission:
      description: Describes the write permissions levels that a user has for a specific feature
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
        create:
          type: boolean
          description: True if user has create permission for this feature and scope
        update:
          type: boolean
          description: True if user has update permission for this feature and scope
        delete:
          type: boolean
          description: True if user has delete permission for this feature and scope
    SearchResultSnippet:
      example: &ref_32
        snippet: snippet
        mimeType: mimeType
      required: &ref_33
        - snippet
      properties:
        mimeType:
          description: The mime type of the snippets, currently either text/plain or text/html.
          type: string
        ranges:
          description: The bolded ranges within text.
          type: array
          items:
            description: A subsection of a given string to which some special formatting should be applied.
            required: *ref_0
            properties:
              document:
                type: object
                description: Document object (max depth)
              endIndex:
                description: The exclusive end index of the range.
                type: integer
              startIndex:
                description: The inclusive start index of the range.
                type: integer
              type:
                enum: *ref_1
                type: string
              url:
                description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                type: string
            type: object
        snippet:
          description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
          type: string
        snippetTextOrdering:
          description: Used for sorting based off the snippet's location within all_snippetable_text
          type: integer
        text:
          description: A matching snippet from the document with no highlights.
          type: string
        url:
          description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
          type: string
      type: object
    CalendarAttendee:
      required: &ref_5
        - person
      properties:
        groupAttendees:
          description: If this attendee is a group, represents the list of individual attendees in the group.
          type: array
          items:
            type: object
            properties:
              CalendarAttendee:
                type: object
                description: CalendarAttendee object (circular reference)
        isInGroup:
          description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
          type: boolean
        isOrganizer:
          description: Whether or not this attendee is an organizer.
          type: boolean
        person:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        responseStatus:
          enum: &ref_6
            - ACCEPTED
            - DECLINED
            - NO_RESPONSE
            - TENTATIVE
          type: string
      type: object
    ShortcutMutableProperties:
      properties:
        addedRoles:
          description: A list of user roles added for the Shortcut.
          type: array
          items:
            required: *ref_4
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        description:
          description: A short, plain text blurb to help people understand the intent of the shortcut.
          type: string
        destinationDocumentId:
          description: Glean Document ID for the URL, if known.
          type: string
        destinationUrl:
          description: Destination URL for the shortcut.
          type: string
        inputAlias:
          description: Link text following go/ prefix as entered by the user.
          type: string
        removedRoles:
          description: A list of user roles removed for the Shortcut.
          type: array
          items:
            required: *ref_4
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        unlisted:
          description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
          type: boolean
        urlTemplate:
          description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
          type: string
      type: object
    Code:
      example: &ref_40
        repoName: scio
        fileName: README.md
        matches:
          - lineNumber: 1
            content: Welcome to the beginning
            ranges: []
          - lineNumber: 2
            content: Second line of the file
            ranges: []
          - lineNumber: 3
            content: hello world hello world
            ranges:
              - startindex: 0
                endIndex: 5
              - startIndex: 12
                endIndex: 17
      properties:
        fileName:
          type: string
        fileUrl:
          type: string
        isLastMatch:
          description: Last file match for a repo
          type: boolean
        lines:
          type: array
          items:
            properties:
              content:
                type: string
              lineNumber:
                type: integer
              ranges:
                description: Index ranges depicting matched sections of the line
                type: array
                items:
                  type: object
                  properties:
                    TextRange:
                      type: object
                      description: TextRange object (max depth)
            type: object
        repoName:
          type: string
      type: object
    Reaction:
      properties:
        count:
          description: The count of the reaction type on the document.
          type: integer
        reactedByViewer:
          description: Whether the user in context reacted with this type to the document.
          type: boolean
        reactors:
          type: array
          items:
            example: *ref_2
            required: *ref_3
            properties:
              metadata:
                type: object
                description: PersonMetadata object (max depth)
              name:
                description: The display name.
                type: string
              obfuscatedId:
                description: An opaque identifier that can be used to request metadata for a Person.
                type: string
              relatedDocuments:
                description: A list of documents related to this person.
                type: array
                items:
                  type: object
                  properties:
                    RelatedDocuments:
                      type: object
                      description: RelatedDocuments object (max depth)
            type: object
        type:
          type: string
      type: object
    FeedRequestOptions:
      required:
        - resultSize
      properties:
        resultSize:
          type: integer
          description: Number of results asked in response. If a result is a collection, counts as one.
        timezoneOffset:
          type: integer
          description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
        categoryToResultSize:
          type: object
          additionalProperties:
            type: object
            properties:
              resultSize:
                type: integer
          description: Mapping from category to number of results asked for the category.
        datasourceFilter:
          type: array
          items:
            type: string
          description: Datasources for which content should be included. Empty is for all.
        chatZeroStateSuggestionOptions:
          $ref: '#/components/schemas/ChatZeroStateSuggestionOptions'
    Quicklink:
      description: An action for a specific datasource that will show up in autocomplete and app card, e.g. "Create new issue" for jira.
      properties:
        name:
          type: string
          description: Full action name. Used in autocomplete.
        shortName:
          type: string
          description: Shortened name. Used in app cards.
        url:
          type: string
          description: The URL of the action.
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
          description: The config for the icon for this quicklink
        id:
          type: string
          description: Unique identifier of this quicklink
        scopes:
          type: array
          description: The scopes for which this quicklink is applicable
          items:
            type: string
            enum:
              - APP_CARD
              - AUTOCOMPLETE_EXACT_MATCH
              - AUTOCOMPLETE_FUZZY_MATCH
              - AUTOCOMPLETE_ZERO_QUERY
              - NEW_TAB_PAGE
    InviteInfo:
      description: Information regarding the invite status of a person.
      properties:
        inviteTime:
          deprecated: true
          description: The time this person was invited in ISO format (ISO 8601).
          format: date-time
          type: string
        inviter:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        invites:
          description: Latest invites received by the user for each channel
          type: array
          items:
            description: Information regarding the invite status of a person for a particular channel.
            properties:
              channel:
                type: object
                description: CommunicationChannel object (max depth)
              inviteTime:
                description: The time this person was invited in ISO format (ISO 8601).
                format: date-time
                type: string
              inviter:
                type: object
                description: Person object (max depth)
              isAutoInvite:
                description: Bit that tracks if this invite was automatically sent or user-sent
                type: boolean
              reminderTime:
                description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
                format: date-time
                type: string
            type: object
        reminderTime:
          deprecated: true
          description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
          format: date-time
          type: string
        signUpTime:
          description: The time this person signed up in ISO format (ISO 8601).
          format: date-time
          type: string
      type: object
    Reminder:
      required: &ref_16
        - assignee
        - remindAt
      properties:
        assignee:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        createdAt:
          description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
          type: integer
        reason:
          description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
          type: string
        remindAt:
          description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
          type: integer
        requestor:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
      type: object
    GrantPermissions:
      description: Describes the grant permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of grant permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/GrantPermission'
    ReadPermissions:
      description: Describes the read permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of read permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/ReadPermission'
    WritePermissions:
      description: Describes the write permissions levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of write permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/WritePermission'
    CalendarAttendees:
      properties:
        isLimit:
          description: Whether the total count of the people returned is at the retrieval limit.
          type: boolean
        numAccepted:
          description: Total number of attendees who have accepted this event.
          type: integer
        numDeclined:
          description: Total number of attendees who have declined this event.
          type: integer
        numNoResponse:
          description: Total number of attendees who have not responded to this event.
          type: integer
        numTentative:
          description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
          type: integer
        people:
          description: Full details of some of the attendees of this event
          type: array
          items:
            required: *ref_5
            properties:
              groupAttendees:
                description: If this attendee is a group, represents the list of individual attendees in the group.
                type: array
                items:
                  type: object
                  properties:
                    CalendarAttendee:
                      type: object
                      description: CalendarAttendee object (circular reference)
              isInGroup:
                description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                type: boolean
              isOrganizer:
                description: Whether or not this attendee is an organizer.
                type: boolean
              person:
                type: object
                description: Person object (max depth)
              responseStatus:
                enum: *ref_6
                type: string
            type: object
        total:
          description: Total number of attendees in this event.
          type: integer
      type: object
    CustomEntityMetadata:
      properties:
        customData:
          $ref: '#/components/schemas/CustomData'
    WorkflowResult:
      type: object
      required:
        - workflow
      properties:
        workflow:
          $ref: '#/components/schemas/Workflow'
    CollectionPinMetadata:
      required:
        - id
        - target
      properties:
        id:
          type: integer
          description: The ID of the Collection.
        target:
          $ref: '#/components/schemas/CollectionPinTarget'
    CustomerMetadata:
      properties:
        datasourceId:
          type: string
          description: The user visible id of the salesforce customer account.
        customData:
          $ref: '#/components/schemas/CustomData'
    ResultsDescription:
      properties:
        text:
          type: string
          description: Textual description of the results. Can be shown at the top of SERP, e.g. 'People who write about this topic' for experts in people tab.
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
          description: The config for the icon that's displayed with this description
    AnswerBoardMutableProperties:
      type: object
      properties:
        addedRoles:
          description: A list of added user roles for the Collection.
          type: array
          items:
            type: object
            properties:
              UserRoleSpecification:
                type: object
                description: UserRoleSpecification object (max depth)
        audienceFilters:
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          type: array
          items:
            type: object
            properties:
              FacetFilter:
                type: object
                description: FacetFilter object (max depth)
        description:
          description: A brief summary of the Collection's contents.
          type: string
        name:
          description: The unique name of the Collection.
          type: string
        removedRoles:
          description: A list of removed user roles for the Collection.
          type: array
          items:
            type: object
            properties:
              UserRoleSpecification:
                type: object
                description: UserRoleSpecification object (max depth)
      required:
        - name
    Share:
      description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
      required: &ref_7
        - numDaysAgo
      properties:
        numDaysAgo:
          description: The number of days that has passed since the share happened
          type: integer
        sharer:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        sharingDocument:
          properties:
            connectorType:
              type: object
              description: ConnectorType object (max depth)
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              type: object
              description: DocumentContent object (max depth)
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              type: object
              description: DocumentMetadata object (max depth)
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  DocumentSection:
                    type: object
                    description: DocumentSection object (max depth)
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
      type: object
    FacetFilterSet:
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FacetFilter'
      description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
    RelatedObjectEdge:
      properties:
        objects:
          type: array
          items:
            $ref: '#/components/schemas/RelatedObject'
    RestrictionFilters:
      properties:
        containerSpecs:
          description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
          type: array
          items:
            $ref: '#/components/schemas/DocumentSpec'
    CollectionPinTarget:
      required:
        - category
      properties:
        category:
          $ref: '#/components/schemas/CollectionPinnableCategories'
        value:
          type: string
          description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
        target:
          $ref: '#/components/schemas/CollectionPinnableTargets'
    FacetFilter:
      properties:
        fieldName:
          type: string
          example: owner
        values:
          type: array
          items:
            $ref: '#/components/schemas/FacetFilterValue'
          description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
        groupName:
          type: string
          example: Spreadsheet
          description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
      example:
        fieldName: type
        values:
          - value: Spreadsheet
            relationType: EQUALS
          - value: Presentation
            relationType: EQUALS
    UserActivity:
      properties:
        actor:
          $ref: '#/components/schemas/Person'
        timestamp:
          type: integer
          description: Unix timestamp of the activity (in seconds since epoch UTC).
        action:
          type: string
          enum:
            - ADD
            - ADD_REMINDER
            - CLICK
            - COMMENT
            - DELETE
            - DISMISS
            - EDIT
            - MENTION
            - MOVE
            - OTHER
            - RESTORE
            - UNKNOWN
            - VERIFY
            - VIEW
          description: The action for the activity
        aggregateVisitCount:
          $ref: '#/components/schemas/CountInfo'
    WorkflowMetadata:
      allOf:
        - type: object
          properties:
            author:
              $ref: '#/components/schemas/Person'
            createTimestamp:
              type: integer
              description: Server Unix timestamp of the creation time.
            lastUpdateTimestamp:
              type: integer
              description: Server Unix timestamp of the last update time.
            lastUpdatedBy:
              $ref: '#/components/schemas/Person'
    CollectionMutableProperties:
      type: object
      properties:
        addedRoles:
          description: A list of added user roles for the Collection.
          type: array
          items:
            type: object
            properties:
              UserRoleSpecification:
                type: object
                description: UserRoleSpecification object (max depth)
        audienceFilters:
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          type: array
          items:
            type: object
            properties:
              FacetFilter:
                type: object
                description: FacetFilter object (max depth)
        description:
          description: A brief summary of the Collection's contents.
          type: string
        name:
          description: The unique name of the Collection.
          type: string
        removedRoles:
          description: A list of removed user roles for the Collection.
          type: array
          items:
            type: object
            properties:
              UserRoleSpecification:
                type: object
                description: UserRoleSpecification object (max depth)
        adminLocked:
          description: Indicates whether edits are allowed for everyone or only admins.
          type: boolean
        allowedDatasource:
          description: The datasource type this Collection can hold.
          type: string
        icon:
          description: The emoji icon of this Collection.
          type: string
        parentId:
          description: The parent of this Collection, or 0 if it's a top-level Collection.
          type: integer
        thumbnail:
          properties:
            photoId:
              description: Photo id if the thumbnail is from splash.
              type: string
            url:
              description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
              type: string
          type: object
      required:
        - name
    Verification:
      required: &ref_28
        - state
      properties:
        metadata:
          required: &ref_15
            - documentId
          properties:
            candidateVerifiers:
              description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
              type: array
              items:
                type: object
                properties:
                  Person:
                    type: object
                    description: Person object (max depth)
            document:
              type: object
              description: Document object (max depth)
            expirationTs:
              description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
              type: integer
            lastReminder:
              type: object
              description: Reminder object (max depth)
            lastVerificationTs:
              description: The unix timestamp of the verification (in seconds since epoch UTC).
              type: integer
            lastVerifier:
              type: object
              description: Person object (max depth)
            reminders:
              description: Info about all outstanding verification reminders for the document if exists.
              type: array
              items:
                type: object
                properties:
                  Reminder:
                    type: object
                    description: Reminder object (max depth)
            visitorCount:
              description: Number of visitors to the document during included time periods.
              type: array
              items:
                type: object
                properties:
                  CountInfo:
                    type: object
                    description: CountInfo object (max depth)
          type: object
        state:
          description: The verification state for the document.
          enum: &ref_29
            - UNVERIFIED
            - VERIFIED
            - DEPRECATED
          type: string
      type: object
    FeedRequest:
      required:
        - refreshType
      properties:
        categories:
          type: array
          items:
            type: string
            enum:
              - DOCUMENT_SUGGESTION
              - DOCUMENT_SUGGESTION_SCENARIO
              - TRENDING_DOCUMENT
              - VERIFICATION_REMINDER
              - EVENT
              - ANNOUNCEMENT
              - MENTION
              - DATASOURCE_AFFINITY
              - RECENT
              - COMPANY_RESOURCE
              - EXPERIMENTAL
              - PEOPLE_CELEBRATIONS
              - DISPLAYABLE_LIST
              - SOCIAL_LINK
              - EXTERNAL_TASKS
              - WORKFLOW_COLLECTIONS
              - ZERO_STATE_CHAT_SUGGESTION
              - ZERO_STATE_CHAT_TOOL_SUGGESTION
              - ZERO_STATE_WORKFLOW_CREATED_BY_ME
              - ZERO_STATE_WORKFLOW_FAVORITES
              - ZERO_STATE_WORKFLOW_POPULAR
              - ZERO_STATE_WORKFLOW_SUGGESTION
          description: Categories of content requested. An allowlist gives flexibility to request content separately or together.
        requestOptions:
          $ref: '#/components/schemas/FeedRequestOptions'
        timeoutMillis:
          type: integer
          description: Timeout in milliseconds for the request. A `408` error will be returned if handling the request takes longer.
          example: 5000
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
    QuerySuggestionList:
      properties:
        person:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        suggestions:
          type: array
          items:
            example: &ref_12
              query: app:github type:pull author:mortimer
              label: Mortimer's PRs
              datasource: github
            required: &ref_13
              - query
            properties:
              datasource:
                description: The datasource associated with the suggestion.
                type: string
              inputDetails:
                type: object
                description: SearchRequestInputDetails object (max depth)
              label:
                description: A user-facing description to display for the suggestion.
                type: string
              missingTerm:
                description: A query term missing from the original query on which this suggestion is based.
                type: string
              query:
                description: The query being suggested (e.g. enforcing the missing term from the original query).
                type: string
              ranges:
                description: The bolded ranges within the query of the QuerySuggestion.
                type: array
                items:
                  type: object
                  properties:
                    TextRange:
                      type: object
                      description: TextRange object (max depth)
              requestOptions:
                type: object
                description: SearchRequestOptions object (max depth)
              searchProviderInfo:
                type: object
                description: SearchProviderInfo object (max depth)
            type: object
      type: object
    AnswerBoard:
      description: CollectionBaseMutableProperties object (max depth)
      type: object
      properties:
        permissions:
          type: object
          description: ObjectPermissions object (max depth)
        createTime:
          format: date-time
          type: string
        creator:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        id:
          description: The unique ID of the Answer Board.
          type: integer
        itemCount:
          description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
          type: integer
        roles:
          description: A list of user roles for the Answer Board.
          type: array
          items:
            required: *ref_4
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        updateTime:
          format: date-time
          type: string
        updatedBy:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
      required:
        - id
        - description
    FeedResult:
      required:
        - category
        - primaryEntry
      properties:
        category:
          type: string
          enum:
            - DOCUMENT_SUGGESTION
            - DOCUMENT_SUGGESTION_SCENARIO
            - TRENDING_DOCUMENT
            - USE_CASE
            - VERIFICATION_REMINDER
            - EVENT
            - ANNOUNCEMENT
            - MENTION
            - DATASOURCE_AFFINITY
            - RECENT
            - COMPANY_RESOURCE
            - EXPERIMENTAL
            - PEOPLE_CELEBRATIONS
            - SOCIAL_LINK
            - EXTERNAL_TASKS
            - DISPLAYABLE_LIST
            - ZERO_STATE_CHAT_SUGGESTION
            - ZERO_STATE_CHAT_TOOL_SUGGESTION
            - ZERO_STATE_WORKFLOW_CREATED_BY_ME
            - ZERO_STATE_WORKFLOW_FAVORITES
            - ZERO_STATE_WORKFLOW_POPULAR
            - ZERO_STATE_WORKFLOW_SUGGESTION
          description: Category of the result, one of the requested categories in incoming request.
        primaryEntry:
          $ref: '#/components/schemas/FeedEntry'
        secondaryEntries:
          type: array
          items:
            $ref: '#/components/schemas/FeedEntry'
          description: Secondary entries for the result e.g. suggested docs for the calendar, carousel.
        rank:
          type: integer
          description: Rank of the result. Rank is suggested by server. Client side rank may differ.
    Shortcut:
      type: object
      properties:
        id:
          description: The opaque id of the user generated content.
          type: integer
        addedRoles:
          description: A list of user roles added for the Shortcut.
          type: array
          items:
            type: object
            properties:
              UserRoleSpecification:
                type: object
                description: UserRoleSpecification object (max depth)
        description:
          description: A short, plain text blurb to help people understand the intent of the shortcut.
          type: string
        destinationDocumentId:
          description: Glean Document ID for the URL, if known.
          type: string
        destinationUrl:
          description: Destination URL for the shortcut.
          type: string
        inputAlias:
          description: Link text following go/ prefix as entered by the user.
          type: string
        removedRoles:
          description: A list of user roles removed for the Shortcut.
          type: array
          items:
            type: object
            properties:
              UserRoleSpecification:
                type: object
                description: UserRoleSpecification object (max depth)
        unlisted:
          description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
          type: boolean
        urlTemplate:
          description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
          type: string
        permissions:
          type: object
          description: ObjectPermissions object (max depth)
        createTime:
          description: The time the shortcut was created in ISO format (ISO 8601).
          format: date-time
          type: string
        createdBy:
          type: object
          description: Person object (max depth)
        destinationDocument:
          type: object
          description: Document object (max depth)
        editUrl:
          description: The URL using which the user can access the edit page of the shortcut.
          type: string
        intermediateUrl:
          description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
          type: string
        isExternal:
          description: Indicates whether a shortcut is native or external.
          type: boolean
        updateTime:
          description: The time the shortcut was updated in ISO format (ISO 8601).
          format: date-time
          type: string
        updatedBy:
          type: object
          description: Person object (max depth)
        viewPrefix:
          description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
          type: string
        alias:
          description: canonical link text following go/ prefix where hyphen/underscore is removed.
          type: string
        roles:
          description: A list of user roles for the Go Link.
          type: array
          items:
            required: *ref_4
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        title:
          description: Title for the Go Link
          type: string
      required:
        - inputAlias
    FacetResult:
      properties:
        sourceName:
          type: string
          description: The source of this facet (e.g. container_name, type, last_updated_at).
          example: container_name
        operatorName:
          type: string
          description: How to display this facet. Currently supportes 'SelectSingle' and 'SelectMultiple'.
          example: SelectMultiple
        buckets:
          type: array
          description: A list of unique buckets that exist within this result set.
          items:
            $ref: '#/components/schemas/FacetBucket'
        hasMoreBuckets:
          type: boolean
          description: Returns true if more buckets exist than those returned. Additional buckets can be retrieve by requesting again with a higher facetBucketSize.
          example: false
        groupName:
          type: string
          description: For most facets this will be the empty string, meaning the facet is high-level and applies to all documents for the datasource. When non-empty, this is used to group facets together (i.e. group facets for each doctype for a certain datasource)
          example: Service Cloud
    EventClassification:
      description: A generated classification of a given event.
      properties:
        name:
          $ref: '#/components/schemas/EventClassificationName'
        strategies:
          type: array
          items:
            $ref: '#/components/schemas/EventStrategyName'
    PinDocumentMutableProperties:
      properties:
        queries:
          type: array
          description: The query strings for which the pinned result will show.
          items:
            type: string
        audienceFilters:
          type: array
          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
    ResultsRequest:
      properties:
        timestamp:
          type: string
          description: The ISO 8601 timestamp associated with the client request.
          format: date-time
        trackingToken:
          type: string
          description: A previously received trackingToken for a search associated with the same query. Useful for more requests and requests for other tabs.
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
        sourceDocument:
          $ref: '#/components/schemas/Document'
          description: The document from which the ResultsRequest is issued, if any.
        pageSize:
          type: integer
          example: 100
          description: Hint to the server about how many results to send back. Server may return less or more. Structured results and clustered results don't count towards pageSize.
        maxSnippetSize:
          type: integer
          description: Hint to the server about how many characters long a snippet may be. Server may return less or more.
          example: 400
    OperatorMetadata:
      required:
        - name
      properties:
        name:
          type: string
        isCustom:
          type: boolean
          description: Whether this operator is supported by default or something that was created within a workplace app (e.g. custom jira field).
        operatorType:
          type: string
          enum:
            - TEXT
            - DOUBLE
            - DATE
            - USER
        helpText:
          type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/OperatorScope'
        value:
          type: string
          description: Raw/canonical value of the operator. Only applies when result is an operator value.
        displayValue:
          type: string
          description: Human readable value of the operator that can be shown to the user. Only applies when result is an operator value.
      example:
        name: Last Updated
        operatorType: DATE
        scopes:
          - datasource: GDRIVE
            docType: Document
          - datasource: ZENDESK
    RecommendationsRequest:
      allOf:
        - $ref: '#/components/schemas/ResultsRequest'
        - type: object
          properties:
            recommendationDocumentSpec:
              $ref: '#/components/schemas/DocumentSpec'
              description: Retrieve recommendations for this document. Glean Document ID is preferred over URL.
            requestOptions:
              $ref: '#/components/schemas/RecommendationsRequestOptions'
              description: Options for adjusting the request for recommendations.
    ChatRestrictionFilters:
      allOf:
        - $ref: '#/components/schemas/RestrictionFilters'
        - type: object
          properties:
            documentSpecs:
              type: array
              items:
                $ref: '#/components/schemas/DocumentSpec'
            datasourceInstances:
              type: array
              items:
                type: string
    CollectionBaseMutableProperties:
      required:
        - name
      properties:
        addedRoles:
          description: A list of added user roles for the Collection.
          type: array
          items:
            required: *ref_4
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        audienceFilters:
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          type: array
          items:
            example: &ref_11
              fieldName: type
              values:
                - value: Spreadsheet
                  relationType: EQUALS
                - value: Presentation
                  relationType: EQUALS
            properties:
              fieldName:
                example: owner
                type: string
              groupName:
                description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                example: Spreadsheet
                type: string
              values:
                description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                type: array
                items:
                  type: object
                  properties:
                    FacetFilterValue:
                      type: object
                      description: FacetFilterValue object (max depth)
            type: object
        description:
          description: A brief summary of the Collection's contents.
          type: string
        name:
          description: The unique name of the Collection.
          type: string
        removedRoles:
          description: A list of removed user roles for the Collection.
          type: array
          items:
            required: *ref_4
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
      type: object
    StructuredTextItem:
      properties:
        document:
          properties:
            connectorType:
              type: object
              description: ConnectorType object (max depth)
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              type: object
              description: DocumentContent object (max depth)
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              type: object
              description: DocumentMetadata object (max depth)
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  DocumentSection:
                    type: object
                    description: DocumentSection object (max depth)
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        link:
          example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
          type: string
        structuredResult:
          description: A single object that can support any object in the work graph. Only a single object will be populated.
          properties:
            answer:
              type: object
              description: Answer object (max depth)
            answerBoard:
              type: object
              description: AnswerBoard object (max depth)
            app:
              type: object
              description: AppResult object (max depth)
            code:
              type: object
              description: Code object (max depth)
            collection:
              type: object
              description: Collection object (max depth)
            customEntity:
              type: object
              description: CustomEntity object (max depth)
            customer:
              type: object
              description: Customer object (max depth)
            disambiguation:
              type: object
              description: Disambiguation object (max depth)
            document:
              type: object
              description: Document object (max depth)
            extractedQnA:
              type: object
              description: ExtractedQnA object (max depth)
            meeting:
              type: object
              description: Meeting object (max depth)
            person:
              type: object
              description: Person object (max depth)
            prominence:
              description: The level of visual distinction that should be given to a result.
              enum: &ref_8
                - HERO
                - PROMOTED
                - STANDARD
              type: string
              x-enumDescriptions: &ref_9
                HERO: A high-confidence result that should feature prominently on the page.
                PROMOTED: May not be the best result but should be given additional visual distinction.
                STANDARD: Should not be distinct from any other results.
            querySuggestions:
              type: object
              description: QuerySuggestionList object (max depth)
            relatedDocuments:
              description: A list of documents related to this structured result.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
            relatedQuestion:
              type: object
              description: RelatedQuestion object (max depth)
            shortcut:
              type: object
              description: Shortcut object (max depth)
            snippets:
              description: Any snippets associated to the populated object.
              type: array
              items:
                type: object
                properties:
                  SearchResultSnippet:
                    type: object
                    description: SearchResultSnippet object (max depth)
            source:
              description: Source context for this result. Possible values depend on the result type.
              enum: &ref_10
                - EXPERT_DETECTION
                - ENTITY_NLQ
              type: string
            team:
              type: object
              description: Team object (max depth)
            trackingToken:
              description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
              type: string
          type: object
        text:
          example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
          type: string
      type: object
    AutocompleteRequest:
      type: object
      properties:
        trackingToken:
          type: string
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
        query:
          type: string
          description: Partially typed query.
          example: San Fra
        datasourcesFilter:
          type: array
          items:
            type: string
          description: Filter results to only those relevant to one or more datasources (e.g. jira, gdrive). Results are unfiltered if missing.
        datasource:
          type: string
          description: Filter to only return results relevant to the given datasource.
        resultTypes:
          type: array
          description: Filter to only return results of the given type(s). All types may be returned if omitted.
          items:
            type: string
            enum:
              - ADDITIONAL_DOCUMENT
              - APP
              - BROWSER_HISTORY
              - DATASOURCE
              - DOCUMENT
              - ENTITY
              - GOLINK
              - HISTORY
              - NEW_CHAT
              - OPERATOR
              - OPERATOR_VALUE
              - QUICKLINK
              - SUGGESTION
        resultSize:
          type: integer
          description: |
            Maximum number of results to be returned. If no value is provided, the backend will cap at 200.
          example: 10
        authTokens:
          type: array
          description: Auth tokens which may be used for federated results.
          items:
            $ref: '#/components/schemas/AuthToken'
      example:
        trackingToken: trackingToken
        query: what is a que
        datasource: GDRIVE
        resultSize: 10
    Permissions:
      description: |-
        Describes the permissions levels that a user has for permissioned features. When the client sends this, Permissions.read and Permissions.write are the additional permissions granted to a user on top of what they have via their roles.
        When the server sends this, Permissions.read and Permissions.write are the complete (merged) set of permissions the user has, and Permissions.roles is just for display purposes.
      properties:
        canAdminSearch:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user has access to /adminsearch
        canAdminClientApiGlobalTokens:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user can administrate client API tokens with global scope
        canDlp:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user has access to data loss prevention (DLP) features
        read:
          $ref: '#/components/schemas/ReadPermissions'
        write:
          $ref: '#/components/schemas/WritePermissions'
        grant:
          $ref: '#/components/schemas/GrantPermissions'
        role:
          type: string
          description: The roleId of the canonical role a user has. The displayName is equal to the roleId.
        roles:
          type: array
          description: The roleIds of the roles a user has.
          items:
            type: string
    DocumentInteractions:
      properties:
        numComments:
          description: The count of comments (thread replies in the case of slack).
          type: integer
        numReactions:
          description: The count of reactions on the document.
          type: integer
        reactions:
          deprecated: true
          description: To be deprecated in favor of reacts. A (potentially non-exhaustive) list of reactions for the document.
          type: array
          items:
            type: string
        reacts:
          type: array
          items:
            properties:
              count:
                description: The count of the reaction type on the document.
                type: integer
              reactedByViewer:
                description: Whether the user in context reacted with this type to the document.
                type: boolean
              reactors:
                type: array
                items:
                  type: object
                  properties:
                    Person:
                      type: object
                      description: Person object (max depth)
              type:
                type: string
            type: object
        shares:
          description: Describes instances of someone posting a link to this document in one of our indexed datasources.
          type: array
          items:
            description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
            required: *ref_7
            properties:
              numDaysAgo:
                description: The number of days that has passed since the share happened
                type: integer
              sharer:
                type: object
                description: Person object (max depth)
              sharingDocument:
                type: object
                description: Document object (max depth)
            type: object
        visitorCount:
          required: &ref_17
            - count
          properties:
            count:
              description: The counter value
              type: integer
            org:
              description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
              type: string
            period:
              type: object
              description: Period object (max depth)
          type: object
      type: object
    Customer:
      required: &ref_41
        - id
        - company
      properties:
        company:
          required:
            - name
          properties:
            about:
              description: User facing description of company.
              example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
              type: string
            annualRevenue:
              description: Average company's annual revenue for reference.
              format: double
              type: number
            fax:
              description: Fax number as a number string.
              type: string
            foundedDate:
              description: The date when the company was founded.
              format: date
              type: string
            industry:
              description: User facing string representing the company's industry.
              example: Finances
              type: string
            location:
              description: User facing string representing the company's location.
              example: New York City
              type: string
            logoUrl:
              description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
              type: string
            name:
              description: User-friendly display name.
              type: string
            numberOfEmployees:
              description: Average company's number of employees for reference.
              format: int64
              type: integer
            phone:
              description: Phone number as a number string.
              type: string
            profileUrl:
              description: Link to internal company company profile.
              type: string
            stockSymbol:
              description: Company's stock symbol if company is public.
              type: string
            websiteUrls:
              description: Link to company's associated websites.
              type: array
              items:
                type: string
          type: object
        contractAnnualRevenue:
          description: Average contract annual revenue with that customer.
          format: double
          type: number
        documentCounts:
          additionalProperties:
            type: integer
          description: A map of {string, int} pairs representing counts of each document type associated with this customer.
          type: object
        domains:
          description: Link to company's associated website domains.
          type: array
          items:
            type: string
        id:
          description: Unique identifier.
          type: string
        mergedCustomers:
          description: A list of Customers.
          type: array
          items:
            type: object
            properties:
              Customer:
                type: object
                description: Customer object (circular reference)
        metadata:
          properties:
            customData:
              type: object
              description: CustomData object (max depth)
            datasourceId:
              description: The user visible id of the salesforce customer account.
              type: string
          type: object
        notes:
          description: User facing (potentially generated) notes about company.
          example: CIO is interested in trying out the product.
          type: string
        poc:
          description: A list of POC for company.
          type: array
          items:
            example: *ref_2
            required: *ref_3
            properties:
              metadata:
                type: object
                description: PersonMetadata object (max depth)
              name:
                description: The display name.
                type: string
              obfuscatedId:
                description: An opaque identifier that can be used to request metadata for a Person.
                type: string
              relatedDocuments:
                description: A list of documents related to this person.
                type: array
                items:
                  type: object
                  properties:
                    RelatedDocuments:
                      type: object
                      description: RelatedDocuments object (max depth)
            type: object
        startDate:
          description: The date when the interaction with customer started.
          format: date
          type: string
      type: object
    ErrorInfo:
      properties:
        badGmailToken:
          type: boolean
          description: Indicates the gmail results could not be fetched due to bad token.
        badOutlookToken:
          type: boolean
          description: Indicates the outlook results could not be fetched due to bad token.
        invalidOperators:
          type: array
          description: Indicates results could not be fetched due to invalid operators in the query.
          items:
            $ref: '#/components/schemas/InvalidOperatorValueError'
        errorMessages:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
      x-speakeasy-name-override: GleanDataError
    PromptTemplateResult:
      properties:
        promptTemplate:
          $ref: '#/components/schemas/PromptTemplate'
        trackingToken:
          type: string
          description: An opaque token that represents this prompt template
        favoriteInfo:
          $ref: '#/components/schemas/FavoriteInfo'
        runCount:
          $ref: '#/components/schemas/CountInfo'
          description: This tracks how many times this prompt template was run. If user runs a prompt template after modifying the original one, it still counts as a run for the original template.
    Result:
      properties:
        structuredResults:
          description: An array of entities in the work graph retrieved via a data request.
          type: array
          items:
            description: A single object that can support any object in the work graph. Only a single object will be populated.
            properties:
              answer:
                type: object
                description: Answer object (max depth)
              answerBoard:
                type: object
                description: AnswerBoard object (max depth)
              app:
                type: object
                description: AppResult object (max depth)
              code:
                type: object
                description: Code object (max depth)
              collection:
                type: object
                description: Collection object (max depth)
              customEntity:
                type: object
                description: CustomEntity object (max depth)
              customer:
                type: object
                description: Customer object (max depth)
              disambiguation:
                type: object
                description: Disambiguation object (max depth)
              document:
                type: object
                description: Document object (max depth)
              extractedQnA:
                type: object
                description: ExtractedQnA object (max depth)
              meeting:
                type: object
                description: Meeting object (max depth)
              person:
                type: object
                description: Person object (max depth)
              prominence:
                description: The level of visual distinction that should be given to a result.
                enum: *ref_8
                type: string
                x-enumDescriptions: *ref_9
              querySuggestions:
                type: object
                description: QuerySuggestionList object (max depth)
              relatedDocuments:
                description: A list of documents related to this structured result.
                type: array
                items:
                  type: object
                  properties:
                    RelatedDocuments:
                      type: object
                      description: RelatedDocuments object (max depth)
              relatedQuestion:
                type: object
                description: RelatedQuestion object (max depth)
              shortcut:
                type: object
                description: Shortcut object (max depth)
              snippets:
                description: Any snippets associated to the populated object.
                type: array
                items:
                  type: object
                  properties:
                    SearchResultSnippet:
                      type: object
                      description: SearchResultSnippet object (max depth)
              source:
                description: Source context for this result. Possible values depend on the result type.
                enum: *ref_10
                type: string
              team:
                type: object
                description: Team object (max depth)
              trackingToken:
                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                type: string
            type: object
        trackingToken:
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
          type: string
      type: object
    PromptTemplateMutableProperties:
      required:
        - template
      properties:
        name:
          type: string
          description: The user-given identifier for this prompt template.
        template:
          type: string
          description: The actual template string.
        applicationId:
          type: string
          description: The Application Id the prompt template should be created under. Empty for default assistant.
        inclusions:
          $ref: '#/components/schemas/ChatRestrictionFilters'
          description: A list of filters which only allows the prompt template to access certain content.
        addedRoles:
          type: array
          description: A list of added user roles for the Workflow.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
        removedRoles:
          type: array
          description: A list of removed user roles for the Workflow.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
    ShortcutMetadata:
      properties:
        createTime:
          description: The time the shortcut was created in ISO format (ISO 8601).
          format: date-time
          type: string
        createdBy:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        destinationDocument:
          properties:
            connectorType:
              type: object
              description: ConnectorType object (max depth)
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              type: object
              description: DocumentContent object (max depth)
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              type: object
              description: DocumentMetadata object (max depth)
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  DocumentSection:
                    type: object
                    description: DocumentSection object (max depth)
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        editUrl:
          description: The URL using which the user can access the edit page of the shortcut.
          type: string
        intermediateUrl:
          description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
          type: string
        isExternal:
          description: Indicates whether a shortcut is native or external.
          type: boolean
        updateTime:
          description: The time the shortcut was updated in ISO format (ISO 8601).
          format: date-time
          type: string
        updatedBy:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        viewPrefix:
          description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
          type: string
      type: object
    Workflow:
      allOf:
        - $ref: '#/components/schemas/PermissionedObject'
        - $ref: '#/components/schemas/WorkflowMutableProperties'
        - $ref: '#/components/schemas/WorkflowMetadata'
        - $ref: '#/components/schemas/AttributionProperties'
        - type: object
          properties:
            id:
              type: string
              description: The ID of the workflow.
    GeneratedQna:
      properties:
        question:
          type: string
          description: Search query rephrased into a question.
        answer:
          type: string
          description: Answer generated for the given query or the generated question.
        followUpPrompts:
          type: array
          items:
            type: string
          description: List of all follow-up prompts generated for the given query or the generated question.
        followupActions:
          description: List of follow-up actions generated for the given query or the generated question.
          type: array
          items:
            $ref: '#/components/schemas/FollowupAction'
        ranges:
          type: array
          items:
            $ref: '#/components/schemas/TextRange'
          description: Answer subsections to mark with special formatting (citations, bolding etc)
        status:
          type: string
          enum:
            - COMPUTING
            - DISABLED
            - FAILED
            - NO_ANSWER
            - SKIPPED
            - STREAMING
            - SUCCEEDED
            - TIMEOUT
          description: Status of backend generating the answer
        cursor:
          type: string
          description: An opaque cursor representing the search request
        trackingToken:
          type: string
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
    AnnouncementMutableProperties:
      properties:
        startTime:
          type: string
          format: date-time
          description: The date and time at which the announcement becomes active.
        endTime:
          type: string
          format: date-time
          description: The date and time at which the announcement expires.
        title:
          type: string
          description: The headline of the announcement.
        body:
          $ref: '#/components/schemas/StructuredText'
        emoji:
          type: string
          description: An emoji used to indicate the nature of the announcement.
        thumbnail:
          $ref: '#/components/schemas/Thumbnail'
        banner:
          $ref: '#/components/schemas/Thumbnail'
          description: Optional variant of thumbnail cropped for header background.
        audienceFilters:
          type: array
          description: Filters which restrict who should see the announcement. Values are taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
        sourceDocumentId:
          type: string
          description: The Glean Document ID of the source document this Announcement was created from (e.g. Slack thread).
        hideAttribution:
          type: boolean
          description: Whether or not to hide an author attribution.
        channel:
          type: string
          enum:
            - MAIN
            - SOCIAL_FEED
          description: This determines whether this is a Social Feed post or a regular announcement.
        postType:
          type: string
          enum:
            - TEXT
            - LINK
          description: This determines whether this is an external-link post or a regular announcement post. TEXT - Regular announcement that can contain rich text. LINK - Announcement that is linked to an external site.
        isPrioritized:
          type: boolean
          description: Used by the Social Feed to pin posts to the front of the feed.
        viewUrl:
          type: string
          description: URL for viewing the announcement. It will be set to document URL for announcements from other datasources e.g. simpplr. Can only be written when channel="SOCIAL_FEED".
    CollectionPinnedMetadata:
      required:
        - pinnedCategories
        - eligibleCategoriesForPinning
      properties:
        existingPins:
          type: array
          items:
            $ref: '#/components/schemas/CollectionPinTarget'
          description: List of targets this Collection is pinned to.
        eligiblePins:
          type: array
          items:
            $ref: '#/components/schemas/CollectionPinMetadata'
          description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
    PinDocument:
      type: object
      properties:
        audienceFilters:
          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
          type: array
          items:
            example: *ref_11
            properties:
              fieldName:
                example: owner
                type: string
              groupName:
                description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                example: Spreadsheet
                type: string
              values:
                description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                type: array
                items:
                  type: object
                  properties:
                    FacetFilterValue:
                      type: object
                      description: FacetFilterValue object (max depth)
            type: object
        queries:
          description: The query strings for which the pinned result will show.
          type: array
          items:
            type: string
        attribution:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        createTime:
          format: date-time
          type: string
        documentId:
          description: The document which should be a pinned result.
          type: string
        id:
          description: The opaque id of the pin.
          type: string
        updateTime:
          format: date-time
          type: string
        updatedBy:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
      required:
        - documentId
    QuerySuggestion:
      example: *ref_12
      required: *ref_13
      properties:
        datasource:
          description: The datasource associated with the suggestion.
          type: string
        inputDetails:
          example:
            hasCopyPaste: true
          properties:
            hasCopyPaste:
              description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
              type: boolean
          type: object
        label:
          description: A user-facing description to display for the suggestion.
          type: string
        missingTerm:
          description: A query term missing from the original query on which this suggestion is based.
          type: string
        query:
          description: The query being suggested (e.g. enforcing the missing term from the original query).
          type: string
        ranges:
          description: The bolded ranges within the query of the QuerySuggestion.
          type: array
          items:
            description: A subsection of a given string to which some special formatting should be applied.
            required: *ref_0
            properties:
              document:
                type: object
                description: Document object (max depth)
              endIndex:
                description: The exclusive end index of the range.
                type: integer
              startIndex:
                description: The inclusive start index of the range.
                type: integer
              type:
                enum: *ref_1
                type: string
              url:
                description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                type: string
            type: object
        requestOptions:
          example:
            datasourceFilter: JIRA
            datasourcesFilter:
              - JIRA
            queryOverridesFacetFilters: true
            facetFilters:
              - fieldName: fieldName
                values:
                  - fieldValues
                  - fieldValues
              - fieldName: fieldName
                values:
                  - fieldValues
                  - fieldValues
          required:
            - facetBucketSize
          properties:
            authTokens:
              description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
              type: array
              items:
                type: object
                properties:
                  AuthToken:
                    type: object
                    description: AuthToken object (max depth)
            datasourceFilter:
              description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
              type: string
            datasourcesFilter:
              description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
              type: array
              items:
                type: string
            defaultFacets:
              description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
              type: array
              items:
                type: string
            disableQueryAutocorrect:
              description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
              type: boolean
            disableSpellcheck:
              description: Whether or not to disable spellcheck.
              type: boolean
            exclusions:
              type: object
              description: RestrictionFilters object (max depth)
            facetBucketFilter:
              type: object
              description: FacetBucketFilter object (max depth)
            facetBucketSize:
              description: The maximum number of FacetBuckets to return in each FacetResult.
              type: integer
            facetFilterSets:
              description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
              type: array
              items:
                type: object
                properties:
                  FacetFilterSet:
                    type: object
                    description: FacetFilterSet object (max depth)
            facetFilters:
              description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
              type: array
              items:
                type: object
                properties:
                  FacetFilter:
                    type: object
                    description: FacetFilter object (max depth)
            fetchAllDatasourceCounts:
              description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
              type: boolean
            inclusions:
              type: object
              description: RestrictionFilters object (max depth)
            queryOverridesFacetFilters:
              description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
              type: boolean
            responseHints:
              description: Array of hints containing which fields should be populated in the response.
              type: array
              items:
                description: Hints for the response content.
                enum:
                  - ALL_RESULT_COUNTS
                  - FACET_RESULTS
                  - QUERY_METADATA
                  - RESULTS
                  - SPELLCHECK_METADATA
                type: string
                x-enumDescriptions:
                  ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                  FACET_RESULTS: Return only facet results.
                  QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                  RESULTS: Return search result documents.
                  SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
            returnLlmContentOverSnippets:
              description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
              type: boolean
            timezoneOffset:
              description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
              type: integer
          type: object
        searchProviderInfo:
          example:
            name: Google
            logo: https://app.glean.com/images/feather/globe.svg
            searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
          properties:
            logoUrl:
              description: URL to the provider's logo.
              type: string
            name:
              description: Name of the search provider.
              type: string
            searchLinkUrlTemplate:
              description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
              type: string
          type: object
      type: object
    FeedResponse:
      required:
        - serverTimestamp
      allOf:
        - $ref: '#/components/schemas/BackendExperimentsContext'
        - type: object
          properties:
            trackingToken:
              type: string
              description: An opaque token that represents this particular feed response.
            serverTimestamp:
              type: integer
              description: Server unix timestamp (in seconds since epoch UTC).
            results:
              type: array
              items:
                $ref: '#/components/schemas/FeedResult'
            facetResults:
              type: object
              additionalProperties:
                type: array
                items:
                  $ref: '#/components/schemas/FacetResult'
              description: Map from category to the list of facets that can be used to filter the entry's content.
            mentionsTimeWindowInHours:
              type: integer
              description: The time window (in hours) used for generating user mentions.
    RecommendationsRequestOptions:
      properties:
        datasourceFilter:
          type: string
          description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
        datasourcesFilter:
          type: array
          items:
            type: string
          description: Filter results to only those relevant to one or more datasources (e.g. jira, gdrive). All results are returned if missing.
        facetFilterSets:
          type: array
          items:
            $ref: '#/components/schemas/FacetFilterSet'
          description: A list of facet filter sets that will be OR'ed together.
        context:
          $ref: '#/components/schemas/Document'
          description: Content for either a new or unindexed document, or additional content for an indexed document, which may be used to generate recommendations.
        resultProminence:
          description: The types of prominence wanted in results returned. Default is any type.
          type: array
          items:
            $ref: '#/components/schemas/SearchResultProminenceEnum'
    AnswerMutableProperties:
      properties:
        addedRoles:
          description: A list of user roles for the answer added by the owner.
          type: array
          items:
            required: *ref_4
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        audienceFilters:
          description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
          type: array
          items:
            example: *ref_11
            properties:
              fieldName:
                example: owner
                type: string
              groupName:
                description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                example: Spreadsheet
                type: string
              values:
                description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                type: array
                items:
                  type: object
                  properties:
                    FacetFilterValue:
                      type: object
                      description: FacetFilterValue object (max depth)
            type: object
        boardId:
          deprecated: true
          description: The parent board ID of this Answer, or 0 if it's a floating Answer. Adding Answers to Answer Boards is no longer permitted.
          type: integer
        bodyText:
          description: The plain text answer to the question.
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
          type: string
        question:
          example: Why is the sky blue?
          type: string
        questionVariations:
          description: Additional ways of phrasing this question.
          type: array
          items:
            type: string
        removedRoles:
          description: A list of user roles for the answer removed by the owner.
          type: array
          items:
            required: *ref_4
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        roles:
          description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
          type: array
          items:
            required: *ref_4
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        sourceDocumentSpec:
          oneOf:
            - type: object
              properties:
                url:
                  description: The URL of the document.
                  type: string
            - type: object
              properties:
                id:
                  description: The ID of the document.
                  type: string
            - type: object
              properties:
                contentId:
                  description: The id for user generated content.
                  type: integer
                docType:
                  description: The specific type of the user generated content type.
                  type: string
                ugcType:
                  description: The type of the user generated content (UGC datasource).
                  enum: *ref_14
                  type: string
        sourceType:
          enum: &ref_26
            - DOCUMENT
            - ASSISTANT
          type: string
      type: object
    SearchRequest:
      required:
        - query
      allOf:
        - $ref: '#/components/schemas/ResultsRequest'
        - type: object
          properties:
            query:
              type: string
              description: The search terms.
              example: vacation policy
            cursor:
              type: string
              description: Pagination cursor. A previously received opaque token representing the position in the overall results at which to start.
            resultTabIds:
              type: array
              items:
                type: string
              description: The unique IDs of the result tabs for which to fetch results. This will have precedence over datasource filters if both are specified and in conflict.
            inputDetails:
              $ref: '#/components/schemas/SearchRequestInputDetails'
            requestOptions:
              $ref: '#/components/schemas/SearchRequestOptions'
            timeoutMillis:
              type: integer
              description: Timeout in milliseconds for the request. A `408` error will be returned if handling the request takes longer.
              example: 5000
            people:
              type: array
              description: People associated with the search request. Hints to the server to fetch additional information for these people. Note that in this request, an email may be used as a person's obfuscatedId value.
              items:
                $ref: '#/components/schemas/Person'
            disableSpellcheck:
              type: boolean
              description: Whether or not to disable spellcheck.
      example:
        trackingToken: trackingToken
        query: vacation policy
        pageSize: 10
        requestOptions:
          facetFilters:
            - fieldName: type
              values:
                - value: article
                  relationType: EQUALS
                - value: document
                  relationType: EQUALS
            - fieldName: department
              values:
                - value: engineering
                  relationType: EQUALS
    Announcement:
      allOf:
        - $ref: '#/components/schemas/AnnouncementMutableProperties'
        - $ref: '#/components/schemas/DraftProperties'
        - $ref: '#/components/schemas/PermissionedObject'
        - type: object
          properties:
            id:
              type: integer
              description: The opaque id of the announcement.
            author:
              $ref: '#/components/schemas/Person'
            createTimestamp:
              type: integer
              description: Server Unix timestamp of the creation time (in seconds since epoch UTC).
            lastUpdateTimestamp:
              type: integer
              description: Server Unix timestamp of the last update time (in seconds since epoch UTC).
            updatedBy:
              $ref: '#/components/schemas/Person'
            viewerInfo:
              type: object
              properties:
                isDismissed:
                  type: boolean
                  description: Whether the viewer has dismissed the announcement.
                isRead:
                  type: boolean
                  description: Whether the viewer has read the announcement.
            sourceDocument:
              $ref: '#/components/schemas/Document'
              description: The source document if the announcement is created from one.
            isPublished:
              type: boolean
              description: Whether or not the announcement is published.
    PromptTemplate:
      allOf:
        - $ref: '#/components/schemas/PromptTemplateMutableProperties'
        - $ref: '#/components/schemas/PermissionedObject'
        - $ref: '#/components/schemas/AttributionProperties'
        - type: object
          properties:
            id:
              type: string
              description: Opaque id for this prompt template
            author:
              $ref: '#/components/schemas/Person'
            createTimestamp:
              type: integer
              description: Server Unix timestamp of the creation time.
            lastUpdateTimestamp:
              type: integer
              description: Server Unix timestamp of the last update time.
            lastUpdatedBy:
              $ref: '#/components/schemas/Person'
            roles:
              type: array
              description: A list of roles for this prompt template explicitly granted.
              items:
                $ref: '#/components/schemas/UserRoleSpecification'
    SearchResponseMetadata:
      properties:
        rewrittenQuery:
          type: string
          description: A cleaned up or updated version of the query to be displayed in the query box. Useful for mapping visual facets to search operators.
        searchedQuery:
          type: string
          description: The actual query used to perform search and return results.
        searchedQueryRanges:
          type: array
          items:
            $ref: '#/components/schemas/TextRange'
          description: The bolded ranges within the searched query.
        originalQuery:
          type: string
          description: The query text sent by the client in the request.
        querySuggestion:
          $ref: '#/components/schemas/QuerySuggestion'
          description: An alternative query to the one provided that may give better results, e.g. a spelling suggestion.
        additionalQuerySuggestions:
          $ref: '#/components/schemas/QuerySuggestionList'
          description: Other alternative queries that may provide better or more specific results than the original query.
        negatedTerms:
          type: array
          items:
            type: string
          description: A list of terms that were negated when processing the query.
        modifiedQueryWasUsed:
          type: boolean
          description: A different query was performed than the one requested.
        originalQueryHadNoResults:
          type: boolean
          description: No results were found for the original query. The usage of this bit in conjunction with modifiedQueryWasUsed will dictate whether the full page replacement is 0-result or few-result based.
        searchWarning:
          $ref: '#/components/schemas/SearchWarning'
        triggeredExpertDetection:
          type: boolean
          description: Whether the query triggered expert detection results in the People tab.
        isNoQuotesSuggestion:
          type: boolean
          description: Whether the query was modified to remove quotes
    ExtractedQnA:
      properties:
        heading:
          description: Heading text that was matched to produce this result.
          type: string
        question:
          description: Question text that was matched to produce this result.
          type: string
        questionResult:
          example: &ref_19
            snippets:
              - snippet: snippet
                mimeType: mimeType
            metadata:
              container: container
              createTime: '2000-01-23T04:56:07.000Z'
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: '2000-01-23T04:56:07.000Z'
              mimeType: mimeType
              objectType: objectType
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
              - missingTerm: container
                query: container
          required: &ref_20
            - url
          description: Result object (max depth)
          type: object
          properties:
            allClusteredResults:
              description: A list of results that should be displayed as associated with this result.
              type: array
              items:
                type: object
                properties:
                  ClusterGroup:
                    type: object
                    description: ClusterGroup object (max depth)
            attachmentContext:
              description: Additional context for the relationship between the result and the document it's attached to.
              type: string
            attachmentCount:
              description: The total number of attachments.
              type: integer
            attachments:
              description: A (potentially partial) list of results representing documents attached to the main result document.
              type: array
              items:
                type: object
                properties:
                  SearchResult:
                    type: object
                    description: SearchResult object (circular reference)
            backlinkResults:
              description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
              type: array
              items:
                type: object
                properties:
                  SearchResult:
                    type: object
                    description: SearchResult object (circular reference)
            clusterType:
              type: object
              description: ClusterTypeEnum object (max depth)
            clusteredResults:
              description: A list of results that should be displayed as associated with this result.
              type: array
              items:
                type: object
                properties:
                  SearchResult:
                    type: object
                    description: SearchResult object (circular reference)
            document:
              type: object
              description: Document object (max depth)
            fullText:
              description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
              type: string
            fullTextList:
              description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
              type: array
              items:
                type: string
            mustIncludeSuggestions:
              type: object
              description: QuerySuggestionList object (max depth)
            nativeAppUrl:
              description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
              type: string
            pins:
              description: A list of pins associated with this search result.
              type: array
              items:
                type: object
                properties:
                  PinDocument:
                    type: object
                    description: PinDocument object (max depth)
            prominence:
              type: object
              description: SearchResultProminenceEnum object (max depth)
            querySuggestion:
              type: object
              description: QuerySuggestion object (max depth)
            relatedResults:
              description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
            snippets:
              description: Text content from the result document which contains search query terms, if available.
              type: array
              items:
                type: object
                properties:
                  SearchResultSnippet:
                    type: object
                    description: SearchResultSnippet object (max depth)
            title:
              type: string
            url:
              type: string
      type: object
    CollectionItem:
      type: object
      properties:
        description:
          description: A helpful description of why this CollectionItem is in the Collection that it's in.
          type: string
        icon:
          description: The emoji icon for this CollectionItem. Only used for Text type items.
          type: string
        name:
          description: The optional name of the Collection item.
          type: string
        collection:
          description: CollectionMutableProperties object (max depth)
          type: object
          properties:
            childCount:
              description: The number of children Collections. Separated from the actual children so we can grab the count without children.
              type: integer
            children:
              description: The children Collections of this Collection.
              type: array
              items:
                type: object
                properties:
                  Collection:
                    type: object
                    description: Collection object (circular reference)
            createTime:
              format: date-time
              type: string
            creator:
              type: object
              description: Person object (max depth)
            id:
              description: The unique ID of the Collection.
              type: integer
            itemCount:
              description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
              type: integer
            items:
              description: The items in this Collection.
              type: array
              items:
                type: object
                properties:
                  CollectionItem:
                    type: object
                    description: CollectionItem object (circular reference)
            pinMetadata:
              type: object
              description: CollectionPinnedMetadata object (max depth)
            roles:
              description: A list of user roles for the Collection.
              type: array
              items:
                type: object
                properties:
                  UserRoleSpecification:
                    type: object
                    description: UserRoleSpecification object (max depth)
            shortcuts:
              description: The names of the shortcuts (Go Links) that point to this Collection.
              type: array
              items:
                type: string
            updateTime:
              format: date-time
              type: string
            updatedBy:
              type: object
              description: Person object (max depth)
          required:
            - id
            - description
        collectionId:
          description: The Collection ID of the Collection that this CollectionItem belongs in.
          type: integer
        createdAt:
          description: Unix timestamp for when the item was first added (in seconds since epoch UTC).
          format: date-time
          type: string
        createdBy:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        document:
          properties:
            connectorType:
              type: object
              description: ConnectorType object (max depth)
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              type: object
              description: DocumentContent object (max depth)
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              type: object
              description: DocumentMetadata object (max depth)
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  DocumentSection:
                    type: object
                    description: DocumentSection object (max depth)
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        documentId:
          description: If this CollectionItem is indexed, the Glean Document ID of that document.
          type: string
        itemId:
          description: Unique identifier for the item within the Collection it belongs to.
          type: string
        itemType:
          enum: &ref_18
            - DOCUMENT
            - TEXT
            - URL
            - COLLECTION
          type: string
        shortcut:
          description: UserGeneratedContentId object (max depth)
          type: object
          properties:
            alias:
              description: canonical link text following go/ prefix where hyphen/underscore is removed.
              type: string
            roles:
              description: A list of user roles for the Go Link.
              type: array
              items:
                type: object
                properties:
                  UserRoleSpecification:
                    type: object
                    description: UserRoleSpecification object (max depth)
            title:
              description: Title for the Go Link
              type: string
          required:
            - inputAlias
        url:
          description: The URL of this CollectionItem.
          type: string
      required:
        - collectionId
        - itemType
    AutocompleteResponse:
      allOf:
        - $ref: '#/components/schemas/BackendExperimentsContext'
        - type: object
          properties:
            trackingToken:
              type: string
              description: An opaque token that represents this particular set of autocomplete results. To be used for /feedback reporting.
            sessionInfo:
              $ref: '#/components/schemas/SessionInfo'
            results:
              type: array
              items:
                $ref: '#/components/schemas/AutocompleteResult'
            groups:
              type: array
              items:
                $ref: '#/components/schemas/AutocompleteResultGroup'
              description: Subsections of the results list from which distinct sections should be created.
            errorInfo:
              $ref: '#/components/schemas/ErrorInfo'
            backendTimeMillis:
              type: integer
              format: int64
              description: Time in milliseconds the backend took to respond to the request.
              example: 1100
          example:
            trackingToken: trackingToken
    VerificationMetadata:
      required: *ref_15
      properties:
        candidateVerifiers:
          description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
          type: array
          items:
            example: *ref_2
            required: *ref_3
            properties:
              metadata:
                type: object
                description: PersonMetadata object (max depth)
              name:
                description: The display name.
                type: string
              obfuscatedId:
                description: An opaque identifier that can be used to request metadata for a Person.
                type: string
              relatedDocuments:
                description: A list of documents related to this person.
                type: array
                items:
                  type: object
                  properties:
                    RelatedDocuments:
                      type: object
                      description: RelatedDocuments object (max depth)
            type: object
        document:
          properties:
            connectorType:
              type: object
              description: ConnectorType object (max depth)
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              type: object
              description: DocumentContent object (max depth)
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              type: object
              description: DocumentMetadata object (max depth)
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  DocumentSection:
                    type: object
                    description: DocumentSection object (max depth)
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        expirationTs:
          description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
          type: integer
        lastReminder:
          required: *ref_16
          properties:
            assignee:
              type: object
              description: Person object (max depth)
            createdAt:
              description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
              type: integer
            reason:
              description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
              type: string
            remindAt:
              description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
              type: integer
            requestor:
              type: object
              description: Person object (max depth)
          type: object
        lastVerificationTs:
          description: The unix timestamp of the verification (in seconds since epoch UTC).
          type: integer
        lastVerifier:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        reminders:
          description: Info about all outstanding verification reminders for the document if exists.
          type: array
          items:
            required: *ref_16
            properties:
              assignee:
                type: object
                description: Person object (max depth)
              createdAt:
                description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                type: integer
              reason:
                description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                type: string
              remindAt:
                description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                type: integer
              requestor:
                type: object
                description: Person object (max depth)
            type: object
        visitorCount:
          description: Number of visitors to the document during included time periods.
          type: array
          items:
            required: *ref_17
            properties:
              count:
                description: The counter value
                type: integer
              org:
                description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                type: string
              period:
                type: object
                description: Period object (max depth)
            type: object
      type: object
    AutocompleteResult:
      required:
        - result
        - result_type
      properties:
        result:
          type: string
        keywords:
          type: array
          items:
            type: string
          description: A list of all possible keywords for given result.
        resultType:
          type: string
          enum:
            - ADDITIONAL_DOCUMENT
            - APP
            - BROWSER_HISTORY
            - DATASOURCE
            - DOCUMENT
            - ENTITY
            - GOLINK
            - HISTORY
            - NEW_CHAT
            - OPERATOR
            - OPERATOR_VALUE
            - QUICKLINK
            - SUGGESTION
        score:
          type: number
          description: Higher indicates a more confident match.
        operatorMetadata:
          $ref: '#/components/schemas/OperatorMetadata'
        quicklink:
          $ref: '#/components/schemas/Quicklink'
        document:
          $ref: '#/components/schemas/Document'
        url:
          type: string
        structuredResult:
          $ref: '#/components/schemas/StructuredResult'
        trackingToken:
          type: string
          description: A token to be passed in /feedback events associated with this autocomplete result.
        ranges:
          type: array
          items:
            $ref: '#/components/schemas/TextRange'
          description: Subsections of the result string to which some special formatting should be applied (eg. bold)
      example:
        result: sample result
        resultType: DOCUMENT
        score: 4.56
        url: https://www.example.com/
        trackingToken: abcd
        metadata:
          - datasource: confluence
          - objectType: page
    CalendarEvent:
      required:
        - id
        - url
      allOf:
        - $ref: '#/components/schemas/AnonymousEvent'
        - type: object
          properties:
            id:
              type: string
              description: The calendar event id
            url:
              type: string
              description: A permalink for this calendar event
            attendees:
              $ref: '#/components/schemas/CalendarAttendees'
            location:
              type: string
              description: The location that this event is taking place at.
            conferenceData:
              $ref: '#/components/schemas/ConferenceData'
            description:
              type: string
              description: The HTML description of the event.
            datasource:
              type: string
              description: The app or other repository type from which the event was extracted
            hasTranscript:
              type: boolean
              description: The event has a transcript associated with it enabling features like summarization
            transcriptUrl:
              type: string
              description: A link to the transcript of the event
            classifications:
              type: array
              items:
                $ref: '#/components/schemas/EventClassification'
            generatedAttachments:
              type: array
              items:
                $ref: '#/components/schemas/GeneratedAttachment'
    Collection:
      description: CollectionBaseMutableProperties object (max depth)
      type: object
      properties:
        adminLocked:
          description: Indicates whether edits are allowed for everyone or only admins.
          type: boolean
        allowedDatasource:
          description: The datasource type this Collection can hold.
          type: string
        icon:
          description: The emoji icon of this Collection.
          type: string
        parentId:
          description: The parent of this Collection, or 0 if it's a top-level Collection.
          type: integer
        thumbnail:
          type: object
          description: Thumbnail object (max depth)
        permissions:
          type: object
          description: ObjectPermissions object (max depth)
        childCount:
          description: The number of children Collections. Separated from the actual children so we can grab the count without children.
          type: integer
        children:
          description: The children Collections of this Collection.
          type: array
          items:
            type: object
            properties:
              Collection:
                type: object
                description: Collection object (circular reference)
        createTime:
          format: date-time
          type: string
        creator:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        id:
          description: The unique ID of the Collection.
          type: integer
        itemCount:
          description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
          type: integer
        items:
          description: The items in this Collection.
          type: array
          items:
            description: CollectionItemMutableProperties object (max depth)
            type: object
            properties:
              collection:
                type: object
                description: Collection object (circular reference)
              collectionId:
                description: The Collection ID of the Collection that this CollectionItem belongs in.
                type: integer
              createdAt:
                description: Unix timestamp for when the item was first added (in seconds since epoch UTC).
                format: date-time
                type: string
              createdBy:
                type: object
                description: Person object (max depth)
              document:
                type: object
                description: Document object (max depth)
              documentId:
                description: If this CollectionItem is indexed, the Glean Document ID of that document.
                type: string
              itemId:
                description: Unique identifier for the item within the Collection it belongs to.
                type: string
              itemType:
                enum: *ref_18
                type: string
              shortcut:
                type: object
                description: Shortcut object (max depth)
              url:
                description: The URL of this CollectionItem.
                type: string
            required:
              - collectionId
              - itemType
        pinMetadata:
          required:
            - pinnedCategories
            - eligibleCategoriesForPinning
          properties:
            eligiblePins:
              description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
              type: array
              items:
                type: object
                properties:
                  CollectionPinMetadata:
                    type: object
                    description: CollectionPinMetadata object (max depth)
            existingPins:
              description: List of targets this Collection is pinned to.
              type: array
              items:
                type: object
                properties:
                  CollectionPinTarget:
                    type: object
                    description: CollectionPinTarget object (max depth)
          type: object
        roles:
          description: A list of user roles for the Collection.
          type: array
          items:
            required: *ref_4
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        shortcuts:
          description: The names of the shortcuts (Go Links) that point to this Collection.
          type: array
          items:
            type: string
        updateTime:
          format: date-time
          type: string
        updatedBy:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
      required:
        - name
        - id
        - description
    ClusterGroup:
      required: &ref_30
        - visibleCountHint
      properties:
        clusterType:
          description: The reason for inclusion of clusteredResults.
          enum: &ref_31
            - SIMILAR
            - FRESHNESS
            - TITLE
            - CONTENT
            - NONE
            - THREAD_REPLY
            - THREAD_ROOT
            - PREFIX
            - SUFFIX
          type: string
        clusteredResults:
          description: A list of results that should be displayed as associated with this result.
          type: array
          items:
            example: *ref_19
            required: *ref_20
            description: Result object (max depth)
            type: object
            properties:
              allClusteredResults:
                description: A list of results that should be displayed as associated with this result.
                type: array
                items:
                  type: object
                  properties:
                    ClusterGroup:
                      type: object
                      description: ClusterGroup object (circular reference)
              attachmentContext:
                description: Additional context for the relationship between the result and the document it's attached to.
                type: string
              attachmentCount:
                description: The total number of attachments.
                type: integer
              attachments:
                description: A (potentially partial) list of results representing documents attached to the main result document.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
              backlinkResults:
                description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
              clusterType:
                type: object
                description: ClusterTypeEnum object (max depth)
              clusteredResults:
                description: A list of results that should be displayed as associated with this result.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
              document:
                type: object
                description: Document object (max depth)
              fullText:
                description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                type: string
              fullTextList:
                description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                type: array
                items:
                  type: string
              mustIncludeSuggestions:
                type: object
                description: QuerySuggestionList object (max depth)
              nativeAppUrl:
                description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                type: string
              pins:
                description: A list of pins associated with this search result.
                type: array
                items:
                  type: object
                  properties:
                    PinDocument:
                      type: object
                      description: PinDocument object (max depth)
              prominence:
                type: object
                description: SearchResultProminenceEnum object (max depth)
              querySuggestion:
                type: object
                description: QuerySuggestion object (max depth)
              relatedResults:
                description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                type: array
                items:
                  type: object
                  properties:
                    RelatedDocuments:
                      type: object
                      description: RelatedDocuments object (max depth)
              snippets:
                description: Text content from the result document which contains search query terms, if available.
                type: array
                items:
                  type: object
                  properties:
                    SearchResultSnippet:
                      type: object
                      description: SearchResultSnippet object (max depth)
              title:
                type: string
              url:
                type: string
        visibleCountHint:
          description: The default number of results to display before truncating and showing a "see more" link
          type: integer
      type: object
    Team:
      type: object
      properties:
        relatedObjects:
          additionalProperties:
            $ref: '#/components/schemas/RelatedObjectEdge'
          description: A list of objects related to a source object.
          type: object
        permissions:
          type: object
          description: ObjectPermissions object (max depth)
        bannerUrl:
          description: A link to the team's banner photo.
          format: url
          type: string
        businessUnit:
          description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
          type: string
        canBeDeleted:
          default: true
          description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
          type: boolean
        createdFrom:
          description: For teams created from docs, the doc title. Otherwise empty.
          type: string
        customFields:
          description: Customizable fields for additional team information.
          type: array
          items:
            required: *ref_21
            properties:
              displayable:
                default: true
                description: Determines whether the client should display this custom field
                type: boolean
              label:
                description: A user-facing label for this field.
                type: string
              values:
                type: array
                items:
                  type: object
                  properties:
                    CustomFieldValue:
                      type: object
                      description: CustomFieldValue object (max depth)
            type: object
        datasource:
          description: the data source of the team, e.g. GDRIVE
          type: string
        datasourceProfiles:
          description: The datasource profiles of the team
          type: array
          items:
            required: &ref_35
              - datasource
              - handle
            properties:
              datasource:
                description: The datasource the profile is of.
                example: github
                type: string
              handle:
                description: The display name of the entity in the given datasource.
                type: string
              isUserGenerated:
                description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                type: boolean
              nativeAppUrl:
                description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                type: string
              url:
                description: URL to view the entity's profile.
                type: string
            type: object
        department:
          description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
          type: string
        description:
          description: A description of the team
          type: string
        emails:
          description: The emails for this team
          type: array
          items:
            properties:
              email:
                description: An email address
                format: email
                type: string
              isUserGenerated:
                description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                type: boolean
              type:
                default: OTHER
                enum:
                  - PRIMARY
                  - SECONDARY
                  - ONCALL
                  - OTHER
                type: string
            type: object
        externalLink:
          description: Link to a team page on the internet or your company's intranet
          format: uri
          type: string
        id:
          description: Unique identifier
          type: string
        lastUpdatedAt:
          description: when this team was last updated.
          format: date-time
          type: string
        loggingId:
          description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
          type: string
        memberCount:
          description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
          type: integer
        members:
          description: The members on this team
          type: array
          items:
            description: Metadata about the relationship of a person to a team.
            required: *ref_22
            type: object
            properties:
              customRelationshipStr:
                description: Displayed name for the relationship if relationship is set to `OTHER`.
                type: string
              joinDate:
                description: The team member's start date
                format: date-time
                type: string
              person:
                type: object
                description: Person object (max depth)
              relationship:
                default: MEMBER
                description: The team member's relationship to the team. This defaults to MEMBER if not set.
                enum: *ref_23
                type: string
        name:
          description: Team name
          type: string
        photoUrl:
          description: A link to the team's photo.
          format: url
          type: string
        status:
          default: PROCESSED
          description: whether this team is fully processed or there are still unprocessed operations that'll affect it
          enum: &ref_42
            - PROCESSED
            - QUEUED_FOR_CREATION
            - QUEUED_FOR_DELETION
          type: string
      required:
        - id
        - name
    ResultsResponse:
      properties:
        trackingToken:
          type: string
          description: A token that should be passed for additional requests related to this request (such as more results requests).
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        structuredResults:
          type: array
          items:
            $ref: '#/components/schemas/StructuredResult'
        generatedQnaResult:
          $ref: '#/components/schemas/GeneratedQna'
        errorInfo:
          $ref: '#/components/schemas/ErrorInfo'
        requestID:
          type: string
          description: A platform-generated request ID to correlate backend logs.
        backendTimeMillis:
          type: integer
          format: int64
          description: Time in milliseconds the backend took to respond to the request.
          example: 1100
    Document:
      properties:
        connectorType:
          description: The source from which document content was pulled, e.g. an API crawl or browser history
          enum:
            - API_CRAWL
            - BROWSER_CRAWL
            - BROWSER_HISTORY
            - BUILTIN
            - FEDERATED_SEARCH
            - PUSH_API
            - WEB_CRAWL
            - NATIVE_HISTORY
          type: string
        containerDocument:
          type: object
          description: Document object (circular reference)
        content:
          properties:
            fullTextList:
              description: The plaintext content of the document.
              type: array
              items:
                type: string
          type: object
        datasource:
          description: The app or other repository type from which the document was extracted
          type: string
        docType:
          description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
          type: string
        id:
          description: The Glean Document ID.
          type: string
        metadata:
          example: &ref_39
            container: container
            parentId: JIRA_EN-1337
            createTime: '2000-01-23T04:56:07.000Z'
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: '2000-01-23T04:56:07.000Z'
            mimeType: mimeType
            objectType: Feature Request
            components:
              - Backend
              - Networking
            status:
              - Done
            customData:
              someCustomField: someCustomValue
          properties:
            ancestors:
              description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
              type: array
              items:
                type: object
                properties:
                  Document:
                    type: object
                    description: Document object (circular reference)
            assignedTo:
              type: object
              description: Person object (max depth)
            author:
              type: object
              description: Person object (max depth)
            collections:
              description: A list of collections that the document belongs to.
              type: array
              items:
                type: object
                properties:
                  Collection:
                    type: object
                    description: Collection object (max depth)
            components:
              description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
              type: array
              items:
                type: string
            contactPerson:
              type: object
              description: Person object (max depth)
            container:
              description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
              type: string
            containerId:
              description: The Glean Document ID of the container. Uniquely identifies the container.
              type: string
            createTime:
              format: date-time
              type: string
            customData:
              type: object
              description: CustomData object (max depth)
            datasource:
              type: string
            datasourceId:
              description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
              type: string
            datasourceInstance:
              description: The datasource instance from which the document was extracted.
              type: string
            documentCategory:
              description: The document's document_category(.proto).
              type: string
            documentId:
              description: The index-wide unique identifier.
              type: string
            documentIdHash:
              description: Hash of the Glean Document ID.
              type: string
            indexStatus:
              type: object
              description: IndexStatus object (max depth)
            interactions:
              type: object
              description: DocumentInteractions object (max depth)
            labels:
              description: A list of tags for the document. Interpretation is datasource specific.
              type: array
              items:
                type: string
            loggingId:
              description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
              type: string
            mentionedPeople:
              description: A list of people mentioned in the document.
              type: array
              items:
                type: object
                properties:
                  Person:
                    type: object
                    description: Person object (max depth)
            mimeType:
              type: string
            objectType:
              description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            owner:
              type: object
              description: Person object (max depth)
            parentId:
              description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
              type: string
            path:
              description: For file datasources like onedrive/github etc this has the path to the file
              type: string
            permissions:
              type: object
              description: ObjectPermissions object (max depth)
            pins:
              description: A list of stars associated with this result.  "Pin" is an older name.
              type: array
              items:
                type: object
                properties:
                  PinDocument:
                    type: object
                    description: PinDocument object (max depth)
            priority:
              description: The document priority. Interpretation is datasource specific.
              type: string
            shortcuts:
              description: A list of shortcuts of which destination URL is for the document.
              type: array
              items:
                type: object
                properties:
                  Shortcut:
                    type: object
                    description: Shortcut object (max depth)
            status:
              description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
              type: string
            statusCategory:
              description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
              type: string
            superContainerId:
              description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
              type: string
            thumbnail:
              type: object
              description: Thumbnail object (max depth)
            updateTime:
              format: date-time
              type: string
            updatedBy:
              type: object
              description: Person object (max depth)
            verification:
              type: object
              description: Verification object (max depth)
            viewerInfo:
              type: object
              description: ViewerInfo object (max depth)
            visibility:
              type: object
              description: DocumentVisibility object (max depth)
            visitCount:
              type: object
              description: CountInfo object (max depth)
          type: object
        parentDocument:
          type: object
          description: Document object (circular reference)
        sections:
          description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
          type: array
          items:
            type: object
            properties:
              title:
                description: The title of the document section (e.g. the section header).
                type: string
              url:
                description: The permalink of the document section.
                type: string
        title:
          description: The title of the document.
          type: string
        url:
          description: A permalink for the document.
          type: string
      type: object
    GeneratedAttachment:
      description: These are attachments that aren't natively present on the event, and have been smartly suggested.
      properties:
        strategyName:
          $ref: '#/components/schemas/EventStrategyName'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        person:
          $ref: '#/components/schemas/Person'
        customer:
          $ref: '#/components/schemas/Customer'
        externalLinks:
          description: A list of links to external sources outside of Glean.
          type: array
          items:
            $ref: '#/components/schemas/StructuredLink'
        content:
          type: array
          items:
            $ref: '#/components/schemas/GeneratedAttachmentContent'
    SearchRequestOptions:
      required:
        - facetBucketSize
      properties:
        datasourceFilter:
          type: string
          description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
        datasourcesFilter:
          type: array
          items:
            type: string
          description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
        queryOverridesFacetFilters:
          type: boolean
          description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
        facetFilters:
          type: array
          items:
            $ref: '#/components/schemas/FacetFilter'
          description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
        facetFilterSets:
          type: array
          items:
            $ref: '#/components/schemas/FacetFilterSet'
          description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
        facetBucketFilter:
          $ref: '#/components/schemas/FacetBucketFilter'
        facetBucketSize:
          type: integer
          description: The maximum number of FacetBuckets to return in each FacetResult.
        defaultFacets:
          type: array
          items:
            type: string
          description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
        authTokens:
          type: array
          description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
          items:
            $ref: '#/components/schemas/AuthToken'
        fetchAllDatasourceCounts:
          type: boolean
          description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
        responseHints:
          type: array
          description: Array of hints containing which fields should be populated in the response.
          items:
            type: string
            description: Hints for the response content.
            x-enumDescriptions:
              ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
              FACET_RESULTS: Return only facet results.
              QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
              RESULTS: Return search result documents.
              SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
            enum:
              - ALL_RESULT_COUNTS
              - FACET_RESULTS
              - QUERY_METADATA
              - RESULTS
              - SPELLCHECK_METADATA
        timezoneOffset:
          type: integer
          description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
        disableSpellcheck:
          type: boolean
          description: Whether or not to disable spellcheck.
        disableQueryAutocorrect:
          type: boolean
          description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
        returnLlmContentOverSnippets:
          type: boolean
          description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
        inclusions:
          $ref: '#/components/schemas/RestrictionFilters'
          description: A list of filters which restrict the search results to only the specified content.
        exclusions:
          $ref: '#/components/schemas/RestrictionFilters'
          description: A list of filters specifying content to avoid getting search results from. Exclusions take precendence over inclusions and other query parameters, such as search operators and search facets.
      example:
        datasourceFilter: JIRA
        datasourcesFilter:
          - JIRA
        queryOverridesFacetFilters: true
        facetFilters:
          - fieldName: fieldName
            values:
              - fieldValues
              - fieldValues
          - fieldName: fieldName
            values:
              - fieldValues
              - fieldValues
    SearchResponse:
      allOf:
        - $ref: '#/components/schemas/ResultsResponse'
        - $ref: '#/components/schemas/BackendExperimentsContext'
        - type: object
          properties:
            metadata:
              $ref: '#/components/schemas/SearchResponseMetadata'
            facetResults:
              type: array
              items:
                $ref: '#/components/schemas/FacetResult'
            resultTabs:
              type: array
              items:
                $ref: '#/components/schemas/ResultTab'
              description: All result tabs available for the current query. Populated if QUERY_METADATA is specified in the request.
            resultTabIds:
              type: array
              items:
                type: string
              description: The unique IDs of the result tabs to which this response belongs.
            resultsDescription:
              $ref: '#/components/schemas/ResultsDescription'
            rewrittenFacetFilters:
              type: array
              items:
                $ref: '#/components/schemas/FacetFilter'
              description: The actual applied facet filters based on the operators and facetFilters in the query. Useful for mapping typed operators to visual facets.
            cursor:
              type: string
              description: Cursor that indicates the start of the next page of results. To be passed in "more" requests for this query.
            hasMoreResults:
              type: boolean
              description: Whether more results are available. Use cursor to retrieve them.
      example:
        trackingToken: trackingToken
        suggestedSpellCorrectedQuery: suggestedSpellCorrectedQuery
        hasMoreResults: true
        errorInfo:
          errorMessages:
            - source: gmail
              errorMessage: invalid token
            - source: slack
              errorMessage: expired token
        requestID: 5e345ae500ff0befa2b9d1a3ba0001737e7363696f312d323535323137000171756572792d656e64706f696e743a323032303031333074313830343032000100
        results:
          - snippets:
              - snippet: snippet
                mimeType: mimeType
            metadata:
              container: container
              createTime: '2000-01-23T04:56:07.000Z'
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: '2000-01-23T04:56:07.000Z'
              mimeType: mimeType
              objectType: objectType
            title: title
            url: https://www.example.com/
          - snippets:
              - snippet: snippet
                mimeType: mimeType
            metadata:
              container: container
              createTime: '2000-01-23T04:56:07.000Z'
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: '2000-01-23T04:56:07.000Z'
              mimeType: mimeType
              objectType: objectType
            title: title
            url: https://www.example.com/
        facetResults:
          - buckets:
              - percentage: 5
                count: 1
                value:
                  stringValue: stringValue
                  integerValue: 5
              - percentage: 5
                count: 1
                value:
                  stringValue: stringValue
                  integerValue: 5
            sourceName: sourceName
            operatorName: operatorName
            objectType: objectType
          - buckets:
              - percentage: 5
                count: 1
                value:
                  stringValue: stringValue
                  integerValue: 5
              - percentage: 5
                count: 1
                value:
                  stringValue: stringValue
                  integerValue: 5
            sourceName: sourceName
            operatorName: operatorName
            objectType: objectType
        rewrittenQuery: rewrittenQuery
        rewrittenFacetFilters:
          - fieldName: fieldName
            values:
              - fieldValues
              - fieldValues
          - fieldName: fieldName
            values:
              - fieldValues
              - fieldValues
    RelatedDocuments:
      properties:
        associatedEntityId:
          description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
          type: string
        documents:
          deprecated: true
          description: A truncated list of documents with this relation. TO BE DEPRECATED.
          type: array
          items:
            properties:
              connectorType:
                type: object
                description: ConnectorType object (max depth)
              containerDocument:
                type: object
                description: Document object (circular reference)
              content:
                type: object
                description: DocumentContent object (max depth)
              datasource:
                description: The app or other repository type from which the document was extracted
                type: string
              docType:
                description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                type: string
              id:
                description: The Glean Document ID.
                type: string
              metadata:
                type: object
                description: DocumentMetadata object (max depth)
              parentDocument:
                type: object
                description: Document object (circular reference)
              sections:
                description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                type: array
                items:
                  type: object
                  properties:
                    DocumentSection:
                      type: object
                      description: DocumentSection object (max depth)
              title:
                description: The title of the document.
                type: string
              url:
                description: A permalink for the document.
                type: string
            type: object
        querySuggestion:
          example: *ref_12
          required: *ref_13
          properties:
            datasource:
              description: The datasource associated with the suggestion.
              type: string
            inputDetails:
              type: object
              description: SearchRequestInputDetails object (max depth)
            label:
              description: A user-facing description to display for the suggestion.
              type: string
            missingTerm:
              description: A query term missing from the original query on which this suggestion is based.
              type: string
            query:
              description: The query being suggested (e.g. enforcing the missing term from the original query).
              type: string
            ranges:
              description: The bolded ranges within the query of the QuerySuggestion.
              type: array
              items:
                type: object
                properties:
                  TextRange:
                    type: object
                    description: TextRange object (max depth)
            requestOptions:
              type: object
              description: SearchRequestOptions object (max depth)
            searchProviderInfo:
              type: object
              description: SearchProviderInfo object (max depth)
          type: object
        relation:
          description: How this document relates to the including entity.
          enum: &ref_24
            - ATTACHMENT
            - CANONICAL
            - CASE
            - contact
            - CONTACT
            - CONVERSATION_MESSAGES
            - EXPERT
            - FROM
            - HIGHLIGHT
            - opportunity
            - OPPORTUNITY
            - RECENT
            - SOURCE
            - TICKET
            - TRANSCRIPT
            - WITH
          type: string
          x-enumDescriptions: &ref_25
            CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
        results:
          description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
          type: array
          items:
            example: *ref_19
            required: *ref_20
            description: Result object (max depth)
            type: object
            properties:
              allClusteredResults:
                description: A list of results that should be displayed as associated with this result.
                type: array
                items:
                  type: object
                  properties:
                    ClusterGroup:
                      type: object
                      description: ClusterGroup object (max depth)
              attachmentContext:
                description: Additional context for the relationship between the result and the document it's attached to.
                type: string
              attachmentCount:
                description: The total number of attachments.
                type: integer
              attachments:
                description: A (potentially partial) list of results representing documents attached to the main result document.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
              backlinkResults:
                description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
              clusterType:
                type: object
                description: ClusterTypeEnum object (max depth)
              clusteredResults:
                description: A list of results that should be displayed as associated with this result.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
              document:
                type: object
                description: Document object (max depth)
              fullText:
                description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                type: string
              fullTextList:
                description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                type: array
                items:
                  type: string
              mustIncludeSuggestions:
                type: object
                description: QuerySuggestionList object (max depth)
              nativeAppUrl:
                description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                type: string
              pins:
                description: A list of pins associated with this search result.
                type: array
                items:
                  type: object
                  properties:
                    PinDocument:
                      type: object
                      description: PinDocument object (max depth)
              prominence:
                type: object
                description: SearchResultProminenceEnum object (max depth)
              querySuggestion:
                type: object
                description: QuerySuggestion object (max depth)
              relatedResults:
                description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                type: array
                items:
                  type: object
                  properties:
                    RelatedDocuments:
                      type: object
                      description: RelatedDocuments object (circular reference)
              snippets:
                description: Text content from the result document which contains search query terms, if available.
                type: array
                items:
                  type: object
                  properties:
                    SearchResultSnippet:
                      type: object
                      description: SearchResultSnippet object (max depth)
              title:
                type: string
              url:
                type: string
      type: object
    Person:
      example: *ref_2
      required: *ref_3
      properties:
        metadata:
          example: &ref_34
            department: Movies
            email: george@example.com
            location: Hollywood, CA
            phone: 6505551234
            photoUrl: https://example.com/george.jpg
            startDate: '2000-01-23'
            title: Actor
          properties:
            aliasEmails:
              description: Additional email addresses of this user beyond the primary, if any.
              type: array
              items:
                type: string
            badges:
              description: The badges that a user has earned over their lifetime.
              type: array
              items:
                type: object
                properties:
                  Badge:
                    type: object
                    description: Badge object (max depth)
            bannerUrl:
              description: The URL of the person's banner photo.
              format: url
              type: string
            bio:
              description: Short biography or mission statement of the employee.
              type: string
            businessUnit:
              description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
              type: string
            busyEvents:
              description: Intervals of busy time for this person, along with the type of event they're busy with.
              type: array
              items:
                type: object
                properties:
                  AnonymousEvent:
                    type: object
                    description: AnonymousEvent object (max depth)
            customFields:
              description: User customizable fields for additional people information.
              type: array
              items:
                type: object
                properties:
                  CustomFieldData:
                    type: object
                    description: CustomFieldData object (max depth)
            datasourceProfile:
              description: List of profiles this user has in different datasources / tools that they use.
              type: array
              items:
                type: object
                properties:
                  DatasourceProfile:
                    type: object
                    description: DatasourceProfile object (max depth)
            department:
              description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
              type: string
            departmentCount:
              description: The number of people in this person's department.
              type: integer
            directReportsCount:
              description: The total number of people who directly report to this person, or 0
              type: integer
            email:
              description: The user's primary email address
              type: string
            endDate:
              description: If a former employee, the last date of employment.
              format: date
              type: string
            externalProfileLink:
              description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
              type: string
            firstName:
              description: The first name of the person
              type: string
            inviteInfo:
              type: object
              description: InviteInfo object (max depth)
            isOrgRoot:
              description: Whether this person is a "root" node in their organization's hierarchy.
              type: boolean
            isSignedUp:
              description: Whether the user has signed into Glean at least once.
              type: boolean
            lastExtensionUse:
              description: The last time the user has used the Glean extension in ISO 8601 format.
              format: date-time
              type: string
            lastName:
              description: The last name of the person
              type: string
            location:
              description: User facing string representing the person's location.
              type: string
            loggingId:
              description: The logging id of the person used in scrubbed logs, tracking GA metrics.
              type: string
            managementChain:
              description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
              type: array
              items:
                type: object
                properties:
                  Person:
                    type: object
                    description: Person object (circular reference)
            manager:
              type: object
              description: Person object (circular reference)
            orgSizeCount:
              description: The total recursive size of the people reporting to this person, or 1
              type: integer
            peopleDistance:
              description: List of people and distances to those people from this person. Optionally with metadata.
              type: array
              items:
                type: object
                properties:
                  PersonDistance:
                    type: object
                    description: PersonDistance object (max depth)
            permissions:
              type: object
              description: Permissions object (max depth)
            phone:
              description: Phone number as a number string.
              type: string
            photoUrl:
              description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
              format: url
              type: string
            preferredName:
              description: The preferred name of the person, or a nickname.
              type: string
            profileBoolSettings:
              additionalProperties: &ref_36
                type: boolean
              description: flag settings to indicate user profile settings for certain items
              type: object
            pronoun:
              description: She/her, He/his or other pronoun.
              type: string
            querySuggestions:
              type: object
              description: QuerySuggestionList object (max depth)
            reports:
              type: array
              items:
                type: object
                properties:
                  Person:
                    type: object
                    description: Person object (circular reference)
            socialNetwork:
              description: List of social network profiles.
              type: array
              items:
                type: object
                properties:
                  SocialNetwork:
                    type: object
                    description: SocialNetwork object (max depth)
            startDate:
              description: The date when the employee started.
              format: date
              type: string
            startDatePercentile:
              description: Percentage of the company that started strictly after this person. Between [0,100).
              format: float
              type: number
            structuredLocation:
              type: object
              description: StructuredLocation object (max depth)
            teams:
              description: Info about the employee's team(s).
              type: array
              items:
                type: object
                properties:
                  PersonTeam:
                    type: object
                    description: PersonTeam object (max depth)
            timezone:
              description: The timezone of the person. E.g. "Pacific Daylight Time".
              type: string
            timezoneOffset:
              description: The offset of the person's timezone in seconds from UTC.
              format: int64
              type: integer
            title:
              description: Job title.
              type: string
            type:
              enum: &ref_37
                - FULL_TIME
                - CONTRACTOR
                - NON_EMPLOYEE
                - FORMER_EMPLOYEE
              example: FULL_TIME
              type: string
              x-enumDescriptions: &ref_38
                FULL_TIME: The person is a current full-time employee of the company.
                CONTRACTOR: The person is a current contractor of the company.
                NON_EMPLOYEE: The person object represents a non-human actor such as a service or admin account.
                FORMER_EMPLOYEE: The person is a previous employee of the company.
            uneditedPhotoUrl:
              description: The original photo URL of the person's avatar before any edits they made are applied
              format: url
              type: string
          type: object
        name:
          description: The display name.
          type: string
        obfuscatedId:
          description: An opaque identifier that can be used to request metadata for a Person.
          type: string
        relatedDocuments:
          description: A list of documents related to this person.
          type: array
          items:
            properties:
              associatedEntityId:
                description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                type: string
              documents:
                deprecated: true
                description: A truncated list of documents with this relation. TO BE DEPRECATED.
                type: array
                items:
                  type: object
                  properties:
                    Document:
                      type: object
                      description: Document object (max depth)
              querySuggestion:
                type: object
                description: QuerySuggestion object (max depth)
              relation:
                description: How this document relates to the including entity.
                enum: *ref_24
                type: string
                x-enumDescriptions: *ref_25
              results:
                description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (max depth)
            type: object
      type: object
    Answer:
      type: object
      properties:
        id:
          description: The opaque ID of the Answer.
          example: 3
          type: integer
        docId:
          description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
          example: ANSWERS_answer_3
          type: string
        addedRoles:
          description: A list of user roles for the answer added by the owner.
          type: array
          items:
            type: object
            properties:
              UserRoleSpecification:
                type: object
                description: UserRoleSpecification object (max depth)
        audienceFilters:
          description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
          type: array
          items:
            type: object
            properties:
              FacetFilter:
                type: object
                description: FacetFilter object (max depth)
        boardId:
          deprecated: true
          description: The parent board ID of this Answer, or 0 if it's a floating Answer. Adding Answers to Answer Boards is no longer permitted.
          type: integer
        bodyText:
          description: The plain text answer to the question.
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
          type: string
        question:
          example: Why is the sky blue?
          type: string
        questionVariations:
          description: Additional ways of phrasing this question.
          type: array
          items:
            type: string
        removedRoles:
          description: A list of user roles for the answer removed by the owner.
          type: array
          items:
            type: object
            properties:
              UserRoleSpecification:
                type: object
                description: UserRoleSpecification object (max depth)
        roles:
          description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
          type: array
          items:
            type: object
            properties:
              UserRoleSpecification:
                type: object
                description: UserRoleSpecification object (max depth)
        sourceDocumentSpec:
          type: object
          description: DocumentSpec object (max depth)
        sourceType:
          enum: *ref_26
          type: string
        permissions:
          type: object
          description: ObjectPermissions object (max depth)
        author:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        board:
          description: AnswerBoardMutableProperties object (max depth)
          type: object
          properties:
            createTime:
              format: date-time
              type: string
            creator:
              type: object
              description: Person object (max depth)
            id:
              description: The unique ID of the Answer Board.
              type: integer
            itemCount:
              description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
              type: integer
            roles:
              description: A list of user roles for the Answer Board.
              type: array
              items:
                type: object
                properties:
                  UserRoleSpecification:
                    type: object
                    description: UserRoleSpecification object (max depth)
            updateTime:
              format: date-time
              type: string
            updatedBy:
              type: object
              description: Person object (max depth)
          required:
            - id
            - description
        collections:
          description: The collections to which the answer belongs.
          type: array
          items:
            description: CollectionMutableProperties object (max depth)
            type: object
            properties:
              childCount:
                description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                type: integer
              children:
                description: The children Collections of this Collection.
                type: array
                items:
                  type: object
                  properties:
                    Collection:
                      type: object
                      description: Collection object (circular reference)
              createTime:
                format: date-time
                type: string
              creator:
                type: object
                description: Person object (max depth)
              id:
                description: The unique ID of the Collection.
                type: integer
              itemCount:
                description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                type: integer
              items:
                description: The items in this Collection.
                type: array
                items:
                  type: object
                  properties:
                    CollectionItem:
                      type: object
                      description: CollectionItem object (max depth)
              pinMetadata:
                type: object
                description: CollectionPinnedMetadata object (max depth)
              roles:
                description: A list of user roles for the Collection.
                type: array
                items:
                  type: object
                  properties:
                    UserRoleSpecification:
                      type: object
                      description: UserRoleSpecification object (max depth)
              shortcuts:
                description: The names of the shortcuts (Go Links) that point to this Collection.
                type: array
                items:
                  type: string
              updateTime:
                format: date-time
                type: string
              updatedBy:
                type: object
                description: Person object (max depth)
            required:
              - id
              - description
        combinedAnswerText:
          description: StructuredTextMutableProperties object (max depth)
          type: object
          properties:
            structuredList:
              description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
              type: array
              items:
                type: object
                properties:
                  StructuredTextItem:
                    type: object
                    description: StructuredTextItem object (max depth)
        createTime:
          description: The time the answer was created in ISO format (ISO 8601).
          format: date-time
          type: string
        documentCategory:
          description: The document's document_category(.proto).
          type: string
        likes:
          required: *ref_27
          properties:
            likedBy:
              type: array
              items:
                type: object
                properties:
                  AnswerLike:
                    type: object
                    description: AnswerLike object (max depth)
            likedByUser:
              description: Whether the user in context liked the answer.
              type: boolean
            numLikes:
              description: The total number of likes for the answer.
              type: integer
          type: object
        sourceDocument:
          properties:
            connectorType:
              type: object
              description: ConnectorType object (max depth)
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              type: object
              description: DocumentContent object (max depth)
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              type: object
              description: DocumentMetadata object (max depth)
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  DocumentSection:
                    type: object
                    description: DocumentSection object (max depth)
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        updateTime:
          description: The time the answer was last updated in ISO format (ISO 8601).
          format: date-time
          type: string
        updatedBy:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        verification:
          required: *ref_28
          properties:
            metadata:
              type: object
              description: VerificationMetadata object (max depth)
            state:
              description: The verification state for the document.
              enum: *ref_29
              type: string
          type: object
      required:
        - id
    FeedEntry:
      required:
        - title
      properties:
        entryId:
          type: string
          description: optional ID associated with a single feed entry (displayable_list_id)
        title:
          type: string
          description: Title for the result. Can be document title, event title and so on.
        thumbnail:
          $ref: '#/components/schemas/Thumbnail'
        createdBy:
          $ref: '#/components/schemas/Person'
        uiConfig:
          allOf:
            - $ref: '#/components/schemas/DisplayableListFormat'
            - type: object
              properties:
                additionalFlags:
                  $ref: '#/components/schemas/DisplayableListItemUIConfig'
        justificationType:
          type: string
          enum:
            - FREQUENTLY_ACCESSED
            - RECENTLY_ACCESSED
            - TRENDING_DOCUMENT
            - VERIFICATION_REMINDER
            - SUGGESTED_DOCUMENT
            - EMPTY_STATE_SUGGESTION
            - FRECENCY_SCORED
            - SERVER_GENERATED
            - USE_CASE
            - UPDATE_SINCE_LAST_VIEW
            - RECENTLY_STARTED
            - EVENT
            - USER_MENTION
            - ANNOUNCEMENT
            - EXTERNAL_ANNOUNCEMENT
            - POPULARITY_BASED_TRENDING
            - COMPANY_RESOURCE
            - EVENT_DOCUMENT_FROM_CONTENT
            - EVENT_DOCUMENT_FROM_SEARCH
            - VISIT_AFFINITY_SCORED
            - SUGGESTED_APP
            - SUGGESTED_PERSON
            - ACTIVITY_HIGHLIGHT
            - SAVED_SEARCH
            - SUGGESTED_CHANNEL
            - PEOPLE_CELEBRATIONS
            - SOCIAL_LINK
            - ZERO_STATE_CHAT_SUGGESTION
            - ZERO_STATE_CHAT_TOOL_SUGGESTION
            - ZERO_STATE_PROMPT_TEMPLATE_SUGGESTION
            - ZERO_STATE_STATIC_WORKFLOW_SUGGESTION
            - ZERO_STATE_AGENT_SUGGESTION
          description: Type of the justification.
        justification:
          type: string
          description: Server side generated justification string if server provides one.
        trackingToken:
          type: string
          description: An opaque token that represents this particular feed entry in this particular response. To be used for /feedback reporting.
        viewUrl:
          type: string
          description: View URL for the entry if based on links that are not documents in Glean.
        document:
          $ref: '#/components/schemas/Document'
        event:
          $ref: '#/components/schemas/CalendarEvent'
        announcement:
          $ref: '#/components/schemas/Announcement'
        collection:
          $ref: '#/components/schemas/Collection'
        collectionItem:
          $ref: '#/components/schemas/CollectionItem'
        person:
          $ref: '#/components/schemas/Person'
        app:
          $ref: '#/components/schemas/AppResult'
        promptTemplate:
          $ref: '#/components/schemas/PromptTemplateResult'
        workflow:
          $ref: '#/components/schemas/WorkflowResult'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/UserActivity'
          description: List of activity where each activity has user, action, timestamp.
        documentVisitorCount:
          $ref: '#/components/schemas/CountInfo'
    SearchResult:
      example: *ref_19
      required: *ref_20
      type: object
      properties:
        structuredResults:
          description: An array of entities in the work graph retrieved via a data request.
          type: array
          items:
            type: object
            properties:
              StructuredResult:
                type: object
                description: StructuredResult object (max depth)
        trackingToken:
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
          type: string
        allClusteredResults:
          description: A list of results that should be displayed as associated with this result.
          type: array
          items:
            required: *ref_30
            properties:
              clusterType:
                type: object
                description: ClusterTypeEnum object (max depth)
              clusteredResults:
                description: A list of results that should be displayed as associated with this result.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
              visibleCountHint:
                description: The default number of results to display before truncating and showing a "see more" link
                type: integer
            type: object
        attachmentContext:
          description: Additional context for the relationship between the result and the document it's attached to.
          type: string
        attachmentCount:
          description: The total number of attachments.
          type: integer
        attachments:
          description: A (potentially partial) list of results representing documents attached to the main result document.
          type: array
          items:
            type: object
            properties:
              SearchResult:
                type: object
                description: SearchResult object (circular reference)
        backlinkResults:
          description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
          type: array
          items:
            type: object
            properties:
              SearchResult:
                type: object
                description: SearchResult object (circular reference)
        clusterType:
          description: The reason for inclusion of clusteredResults.
          enum: *ref_31
          type: string
        clusteredResults:
          description: A list of results that should be displayed as associated with this result.
          type: array
          items:
            type: object
            properties:
              SearchResult:
                type: object
                description: SearchResult object (circular reference)
        document:
          properties:
            connectorType:
              type: object
              description: ConnectorType object (max depth)
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              type: object
              description: DocumentContent object (max depth)
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              type: object
              description: DocumentMetadata object (max depth)
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  DocumentSection:
                    type: object
                    description: DocumentSection object (max depth)
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        fullText:
          description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
          type: string
        fullTextList:
          description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
          type: array
          items:
            type: string
        mustIncludeSuggestions:
          properties:
            person:
              type: object
              description: Person object (max depth)
            suggestions:
              type: array
              items:
                type: object
                properties:
                  QuerySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
          type: object
        nativeAppUrl:
          description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
          type: string
        pins:
          description: A list of pins associated with this search result.
          type: array
          items:
            description: PinDocumentMutableProperties object (max depth)
            type: object
            properties:
              attribution:
                type: object
                description: Person object (max depth)
              audienceFilters:
                description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                type: array
                items:
                  type: object
                  properties:
                    FacetFilter:
                      type: object
                      description: FacetFilter object (max depth)
              createTime:
                format: date-time
                type: string
              documentId:
                description: The document which should be a pinned result.
                type: string
              id:
                description: The opaque id of the pin.
                type: string
              updateTime:
                format: date-time
                type: string
              updatedBy:
                type: object
                description: Person object (max depth)
            required:
              - documentId
        prominence:
          description: |
            The level of visual distinction that should be given to a result.
          enum:
            - HERO
            - PROMOTED
            - STANDARD
          type: string
          x-enumDescriptions:
            HERO: A high-confidence result that should feature prominently on the page.
            PROMOTED: May not be the best result but should be given additional visual distinction.
            STANDARD: Should not be distinct from any other results.
        querySuggestion:
          example: *ref_12
          required: *ref_13
          properties:
            datasource:
              description: The datasource associated with the suggestion.
              type: string
            inputDetails:
              type: object
              description: SearchRequestInputDetails object (max depth)
            label:
              description: A user-facing description to display for the suggestion.
              type: string
            missingTerm:
              description: A query term missing from the original query on which this suggestion is based.
              type: string
            query:
              description: The query being suggested (e.g. enforcing the missing term from the original query).
              type: string
            ranges:
              description: The bolded ranges within the query of the QuerySuggestion.
              type: array
              items:
                type: object
                properties:
                  TextRange:
                    type: object
                    description: TextRange object (max depth)
            requestOptions:
              type: object
              description: SearchRequestOptions object (max depth)
            searchProviderInfo:
              type: object
              description: SearchProviderInfo object (max depth)
          type: object
        relatedResults:
          description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
          type: array
          items:
            properties:
              associatedEntityId:
                description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                type: string
              documents:
                deprecated: true
                description: A truncated list of documents with this relation. TO BE DEPRECATED.
                type: array
                items:
                  type: object
                  properties:
                    Document:
                      type: object
                      description: Document object (max depth)
              querySuggestion:
                type: object
                description: QuerySuggestion object (max depth)
              relation:
                description: How this document relates to the including entity.
                enum: *ref_24
                type: string
                x-enumDescriptions: *ref_25
              results:
                description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
            type: object
        snippets:
          description: Text content from the result document which contains search query terms, if available.
          type: array
          items:
            example: *ref_32
            required: *ref_33
            properties:
              mimeType:
                description: The mime type of the snippets, currently either text/plain or text/html.
                type: string
              ranges:
                description: The bolded ranges within text.
                type: array
                items:
                  type: object
                  properties:
                    TextRange:
                      type: object
                      description: TextRange object (max depth)
              snippet:
                description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                type: string
              snippetTextOrdering:
                description: Used for sorting based off the snippet's location within all_snippetable_text
                type: integer
              text:
                description: A matching snippet from the document with no highlights.
                type: string
              url:
                description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                type: string
            type: object
        title:
          type: string
        url:
          type: string
    PersonMetadata:
      example: *ref_34
      properties:
        aliasEmails:
          description: Additional email addresses of this user beyond the primary, if any.
          type: array
          items:
            type: string
        badges:
          description: The badges that a user has earned over their lifetime.
          type: array
          items:
            description: Displays a user's accomplishment or milestone
            example:
              key: deployment_name_new_hire
              displayName: New hire
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
            type: object
            properties:
              displayName:
                description: The badge name displayed to users
                type: string
              iconConfig:
                type: object
                description: IconConfig object (max depth)
              key:
                description: An auto generated unique identifier.
                type: string
              pinned:
                description: The badge should be shown on the PersonAttribution
                type: boolean
        bannerUrl:
          description: The URL of the person's banner photo.
          format: url
          type: string
        bio:
          description: Short biography or mission statement of the employee.
          type: string
        businessUnit:
          description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
          type: string
        busyEvents:
          description: Intervals of busy time for this person, along with the type of event they're busy with.
          type: array
          items:
            description: A generic, light-weight calendar event.
            type: object
            properties:
              eventType:
                description: The nature of the event, for example "out of office".
                enum:
                  - DEFAULT
                  - OUT_OF_OFFICE
                type: string
              time:
                type: object
                description: TimeInterval object (max depth)
        customFields:
          description: User customizable fields for additional people information.
          type: array
          items:
            required: *ref_21
            properties:
              displayable:
                default: true
                description: Determines whether the client should display this custom field
                type: boolean
              label:
                description: A user-facing label for this field.
                type: string
              values:
                type: array
                items:
                  type: object
                  properties:
                    CustomFieldValue:
                      type: object
                      description: CustomFieldValue object (max depth)
            type: object
        datasourceProfile:
          description: List of profiles this user has in different datasources / tools that they use.
          type: array
          items:
            required: *ref_35
            properties:
              datasource:
                description: The datasource the profile is of.
                example: github
                type: string
              handle:
                description: The display name of the entity in the given datasource.
                type: string
              isUserGenerated:
                description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                type: boolean
              nativeAppUrl:
                description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                type: string
              url:
                description: URL to view the entity's profile.
                type: string
            type: object
        department:
          description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
          type: string
        departmentCount:
          description: The number of people in this person's department.
          type: integer
        directReportsCount:
          description: The total number of people who directly report to this person, or 0
          type: integer
        email:
          description: The user's primary email address
          type: string
        endDate:
          description: If a former employee, the last date of employment.
          format: date
          type: string
        externalProfileLink:
          description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
          type: string
        firstName:
          description: The first name of the person
          type: string
        inviteInfo:
          description: Information regarding the invite status of a person.
          properties:
            inviteTime:
              deprecated: true
              description: The time this person was invited in ISO format (ISO 8601).
              format: date-time
              type: string
            inviter:
              type: object
              description: Person object (max depth)
            invites:
              description: Latest invites received by the user for each channel
              type: array
              items:
                type: object
                properties:
                  ChannelInviteInfo:
                    type: object
                    description: ChannelInviteInfo object (max depth)
            reminderTime:
              deprecated: true
              description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
              format: date-time
              type: string
            signUpTime:
              description: The time this person signed up in ISO format (ISO 8601).
              format: date-time
              type: string
          type: object
        isOrgRoot:
          description: Whether this person is a "root" node in their organization's hierarchy.
          type: boolean
        isSignedUp:
          description: Whether the user has signed into Glean at least once.
          type: boolean
        lastExtensionUse:
          description: The last time the user has used the Glean extension in ISO 8601 format.
          format: date-time
          type: string
        lastName:
          description: The last name of the person
          type: string
        location:
          description: User facing string representing the person's location.
          type: string
        loggingId:
          description: The logging id of the person used in scrubbed logs, tracking GA metrics.
          type: string
        managementChain:
          description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
          type: array
          items:
            example: *ref_2
            required: *ref_3
            properties:
              metadata:
                type: object
                description: PersonMetadata object (circular reference)
              name:
                description: The display name.
                type: string
              obfuscatedId:
                description: An opaque identifier that can be used to request metadata for a Person.
                type: string
              relatedDocuments:
                description: A list of documents related to this person.
                type: array
                items:
                  type: object
                  properties:
                    RelatedDocuments:
                      type: object
                      description: RelatedDocuments object (max depth)
            type: object
        manager:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (circular reference)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        orgSizeCount:
          description: The total recursive size of the people reporting to this person, or 1
          type: integer
        peopleDistance:
          description: List of people and distances to those people from this person. Optionally with metadata.
          type: array
          items:
            required:
              - name
              - obfuscatedId
              - distance
            properties:
              distance:
                description: Distance to person, refer to PeopleDistance pipeline on interpretation of the value.
                format: float
                type: number
              name:
                description: The display name.
                type: string
              obfuscatedId:
                description: An opaque identifier that can be used to request metadata for a Person.
                type: string
            type: object
        permissions:
          description: |-
            Describes the permissions levels that a user has for permissioned features. When the client sends this, Permissions.read and Permissions.write are the additional permissions granted to a user on top of what they have via their roles.
            When the server sends this, Permissions.read and Permissions.write are the complete (merged) set of permissions the user has, and Permissions.roles is just for display purposes.
          properties:
            canAdminClientApiGlobalTokens:
              description: TODO--deprecate in favor of the read and write properties. True if the user can administrate client API tokens with global scope
              type: boolean
            canAdminSearch:
              description: TODO--deprecate in favor of the read and write properties. True if the user has access to /adminsearch
              type: boolean
            canDlp:
              description: TODO--deprecate in favor of the read and write properties. True if the user has access to data loss prevention (DLP) features
              type: boolean
            grant:
              type: object
              description: GrantPermissions object (max depth)
            read:
              type: object
              description: ReadPermissions object (max depth)
            role:
              description: The roleId of the canonical role a user has. The displayName is equal to the roleId.
              type: string
            roles:
              description: The roleIds of the roles a user has.
              type: array
              items:
                type: string
            write:
              type: object
              description: WritePermissions object (max depth)
          type: object
        phone:
          description: Phone number as a number string.
          type: string
        photoUrl:
          description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
          format: url
          type: string
        preferredName:
          description: The preferred name of the person, or a nickname.
          type: string
        profileBoolSettings:
          additionalProperties: *ref_36
          description: flag settings to indicate user profile settings for certain items
          type: object
        pronoun:
          description: She/her, He/his or other pronoun.
          type: string
        querySuggestions:
          properties:
            person:
              type: object
              description: Person object (max depth)
            suggestions:
              type: array
              items:
                type: object
                properties:
                  QuerySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
          type: object
        reports:
          type: array
          items:
            example: *ref_2
            required: *ref_3
            properties:
              metadata:
                type: object
                description: PersonMetadata object (circular reference)
              name:
                description: The display name.
                type: string
              obfuscatedId:
                description: An opaque identifier that can be used to request metadata for a Person.
                type: string
              relatedDocuments:
                description: A list of documents related to this person.
                type: array
                items:
                  type: object
                  properties:
                    RelatedDocuments:
                      type: object
                      description: RelatedDocuments object (max depth)
            type: object
        socialNetwork:
          description: List of social network profiles.
          type: array
          items:
            required:
              - name
              - profileUrl
            properties:
              name:
                description: Possible values are "twitter", "linkedin".
                type: string
              profileName:
                description: Human-readable profile name.
                type: string
              profileUrl:
                description: Link to profile.
                format: url
                type: string
            type: object
        startDate:
          description: The date when the employee started.
          format: date
          type: string
        startDatePercentile:
          description: Percentage of the company that started strictly after this person. Between [0,100).
          format: float
          type: number
        structuredLocation:
          description: Detailed location with information about country, state, city etc.
          type: object
          properties:
            address:
              description: Office address or name.
              type: string
            city:
              description: Name of the city.
              type: string
            country:
              description: Country name.
              type: string
            countryCode:
              description: Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA.
              type: string
            deskLocation:
              description: Desk number.
              type: string
            region:
              description: Region information, e.g. NORAM, APAC.
              type: string
            state:
              description: State code.
              type: string
            timezone:
              description: Location's timezone, e.g. UTC, PST.
              type: string
            zipCode:
              description: ZIP Code for the address.
              type: string
        teams:
          description: Info about the employee's team(s).
          type: array
          items:
            description: Use `id` if you index teams via Glean, and use `name` and `externalLink` if you want to use your own team pages
            properties:
              externalLink:
                description: Link to a team page on the internet or your company's intranet
                format: uri
                type: string
              id:
                description: Unique identifier
                type: string
              joinDate:
                description: The team member's start date
                format: date-time
                type: string
              name:
                description: Team name
                type: string
              relationship:
                default: MEMBER
                description: The team member's relationship to the team. This defaults to MEMBER if not set.
                enum:
                  - MEMBER
                  - MANAGER
                  - LEAD
                  - POINT_OF_CONTACT
                  - OTHER
                type: string
            type: object
        timezone:
          description: The timezone of the person. E.g. "Pacific Daylight Time".
          type: string
        timezoneOffset:
          description: The offset of the person's timezone in seconds from UTC.
          format: int64
          type: integer
        title:
          description: Job title.
          type: string
        type:
          enum: *ref_37
          example: FULL_TIME
          type: string
          x-enumDescriptions: *ref_38
        uneditedPhotoUrl:
          description: The original photo URL of the person's avatar before any edits they made are applied
          format: url
          type: string
      type: object
    DocumentMetadata:
      example: *ref_39
      properties:
        ancestors:
          description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
          type: array
          items:
            properties:
              connectorType:
                type: object
                description: ConnectorType object (max depth)
              containerDocument:
                type: object
                description: Document object (circular reference)
              content:
                type: object
                description: DocumentContent object (max depth)
              datasource:
                description: The app or other repository type from which the document was extracted
                type: string
              docType:
                description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                type: string
              id:
                description: The Glean Document ID.
                type: string
              metadata:
                type: object
                description: DocumentMetadata object (circular reference)
              parentDocument:
                type: object
                description: Document object (circular reference)
              sections:
                description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                type: array
                items:
                  type: object
                  properties:
                    DocumentSection:
                      type: object
                      description: DocumentSection object (max depth)
              title:
                description: The title of the document.
                type: string
              url:
                description: A permalink for the document.
                type: string
            type: object
        assignedTo:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        author:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        collections:
          description: A list of collections that the document belongs to.
          type: array
          items:
            description: CollectionMutableProperties object (max depth)
            type: object
            properties:
              childCount:
                description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                type: integer
              children:
                description: The children Collections of this Collection.
                type: array
                items:
                  type: object
                  properties:
                    Collection:
                      type: object
                      description: Collection object (circular reference)
              createTime:
                format: date-time
                type: string
              creator:
                type: object
                description: Person object (max depth)
              id:
                description: The unique ID of the Collection.
                type: integer
              itemCount:
                description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                type: integer
              items:
                description: The items in this Collection.
                type: array
                items:
                  type: object
                  properties:
                    CollectionItem:
                      type: object
                      description: CollectionItem object (max depth)
              pinMetadata:
                type: object
                description: CollectionPinnedMetadata object (max depth)
              roles:
                description: A list of user roles for the Collection.
                type: array
                items:
                  type: object
                  properties:
                    UserRoleSpecification:
                      type: object
                      description: UserRoleSpecification object (max depth)
              shortcuts:
                description: The names of the shortcuts (Go Links) that point to this Collection.
                type: array
                items:
                  type: string
              updateTime:
                format: date-time
                type: string
              updatedBy:
                type: object
                description: Person object (max depth)
            required:
              - id
              - description
        components:
          description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
          type: array
          items:
            type: string
        contactPerson:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        container:
          description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
          type: string
        containerId:
          description: The Glean Document ID of the container. Uniquely identifies the container.
          type: string
        createTime:
          format: date-time
          type: string
        customData:
          additionalProperties:
            $ref: '#/components/schemas/CustomDataValue'
          description: Custom fields specific to individual datasources
          type: object
        datasource:
          type: string
        datasourceId:
          description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
          type: string
        datasourceInstance:
          description: The datasource instance from which the document was extracted.
          type: string
        documentCategory:
          description: The document's document_category(.proto).
          type: string
        documentId:
          description: The index-wide unique identifier.
          type: string
        documentIdHash:
          description: Hash of the Glean Document ID.
          type: string
        indexStatus:
          properties:
            lastCrawledTime:
              description: When the document was last crawled
              format: date-time
              type: string
            lastIndexedTime:
              description: When the document was last indexed
              format: date-time
              type: string
          type: object
        interactions:
          properties:
            numComments:
              description: The count of comments (thread replies in the case of slack).
              type: integer
            numReactions:
              description: The count of reactions on the document.
              type: integer
            reactions:
              deprecated: true
              description: To be deprecated in favor of reacts. A (potentially non-exhaustive) list of reactions for the document.
              type: array
              items:
                type: string
            reacts:
              type: array
              items:
                type: object
                properties:
                  Reaction:
                    type: object
                    description: Reaction object (max depth)
            shares:
              description: Describes instances of someone posting a link to this document in one of our indexed datasources.
              type: array
              items:
                type: object
                properties:
                  Share:
                    type: object
                    description: Share object (max depth)
            visitorCount:
              type: object
              description: CountInfo object (max depth)
          type: object
        labels:
          description: A list of tags for the document. Interpretation is datasource specific.
          type: array
          items:
            type: string
        loggingId:
          description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
          type: string
        mentionedPeople:
          description: A list of people mentioned in the document.
          type: array
          items:
            example: *ref_2
            required: *ref_3
            properties:
              metadata:
                type: object
                description: PersonMetadata object (max depth)
              name:
                description: The display name.
                type: string
              obfuscatedId:
                description: An opaque identifier that can be used to request metadata for a Person.
                type: string
              relatedDocuments:
                description: A list of documents related to this person.
                type: array
                items:
                  type: object
                  properties:
                    RelatedDocuments:
                      type: object
                      description: RelatedDocuments object (max depth)
            type: object
        mimeType:
          type: string
        objectType:
          description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
          type: string
        owner:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        parentId:
          description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
          type: string
        path:
          description: For file datasources like onedrive/github etc this has the path to the file
          type: string
        permissions:
          properties:
            write:
              type: object
              description: WritePermission object (max depth)
          type: object
        pins:
          description: A list of stars associated with this result.  "Pin" is an older name.
          type: array
          items:
            description: PinDocumentMutableProperties object (max depth)
            type: object
            properties:
              attribution:
                type: object
                description: Person object (max depth)
              audienceFilters:
                description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                type: array
                items:
                  type: object
                  properties:
                    FacetFilter:
                      type: object
                      description: FacetFilter object (max depth)
              createTime:
                format: date-time
                type: string
              documentId:
                description: The document which should be a pinned result.
                type: string
              id:
                description: The opaque id of the pin.
                type: string
              updateTime:
                format: date-time
                type: string
              updatedBy:
                type: object
                description: Person object (max depth)
            required:
              - documentId
        priority:
          description: The document priority. Interpretation is datasource specific.
          type: string
        shortcuts:
          description: A list of shortcuts of which destination URL is for the document.
          type: array
          items:
            description: UserGeneratedContentId object (max depth)
            type: object
            properties:
              alias:
                description: canonical link text following go/ prefix where hyphen/underscore is removed.
                type: string
              roles:
                description: A list of user roles for the Go Link.
                type: array
                items:
                  type: object
                  properties:
                    UserRoleSpecification:
                      type: object
                      description: UserRoleSpecification object (max depth)
              title:
                description: Title for the Go Link
                type: string
            required:
              - inputAlias
        status:
          description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
          type: string
        statusCategory:
          description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
          type: string
        superContainerId:
          description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
          type: string
        thumbnail:
          properties:
            photoId:
              description: Photo id if the thumbnail is from splash.
              type: string
            url:
              description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
              type: string
          type: object
        updateTime:
          format: date-time
          type: string
        updatedBy:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        verification:
          required: *ref_28
          properties:
            metadata:
              type: object
              description: VerificationMetadata object (max depth)
            state:
              description: The verification state for the document.
              enum: *ref_29
              type: string
          type: object
        viewerInfo:
          properties:
            lastViewedTime:
              format: date-time
              type: string
            role:
              deprecated: true
              description: DEPRECATED - use permissions instead. Viewer's role on the specific document.
              enum:
                - ANSWER_MODERATOR
                - OWNER
                - VIEWER
              type: string
          type: object
        visibility:
          description: The level of visibility of the document as understood by our system.
          enum:
            - PRIVATE
            - SPECIFIC_PEOPLE_AND_GROUPS
            - DOMAIN_LINK
            - DOMAIN_VISIBLE
            - PUBLIC_LINK
            - PUBLIC_VISIBLE
          type: string
          x-enumDescriptions:
            PRIVATE: Only one person is able to see the document.
            SPECIFIC_PEOPLE_AND_GROUPS: Only specific people and/or groups can see the document.
            DOMAIN_LINK: Anyone in the domain with the link can see the document.
            DOMAIN_VISIBLE: Anyone in the domain can search for the document.
            PUBLIC_LINK: Anyone with the link can see the document.
            PUBLIC_VISIBLE: Anyone on the internet can search for the document.
        visitCount:
          required: *ref_17
          properties:
            count:
              description: The counter value
              type: integer
            org:
              description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
              type: string
            period:
              type: object
              description: Period object (max depth)
          type: object
      type: object
    StructuredResult:
      description: A single object that can support any object in the work graph. Only a single object will be populated.
      properties:
        answer:
          description: AnswerId object (max depth)
          type: object
          properties:
            author:
              type: object
              description: Person object (max depth)
            board:
              type: object
              description: AnswerBoard object (max depth)
            collections:
              description: The collections to which the answer belongs.
              type: array
              items:
                type: object
                properties:
                  Collection:
                    type: object
                    description: Collection object (max depth)
            combinedAnswerText:
              type: object
              description: StructuredText object (max depth)
            createTime:
              description: The time the answer was created in ISO format (ISO 8601).
              format: date-time
              type: string
            documentCategory:
              description: The document's document_category(.proto).
              type: string
            likes:
              type: object
              description: AnswerLikes object (max depth)
            sourceDocument:
              type: object
              description: Document object (max depth)
            updateTime:
              description: The time the answer was last updated in ISO format (ISO 8601).
              format: date-time
              type: string
            updatedBy:
              type: object
              description: Person object (max depth)
            verification:
              type: object
              description: Verification object (max depth)
          required:
            - id
        answerBoard:
          description: AnswerBoardMutableProperties object (max depth)
          type: object
          properties:
            createTime:
              format: date-time
              type: string
            creator:
              type: object
              description: Person object (max depth)
            id:
              description: The unique ID of the Answer Board.
              type: integer
            itemCount:
              description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
              type: integer
            roles:
              description: A list of user roles for the Answer Board.
              type: array
              items:
                type: object
                properties:
                  UserRoleSpecification:
                    type: object
                    description: UserRoleSpecification object (max depth)
            updateTime:
              format: date-time
              type: string
            updatedBy:
              type: object
              description: Person object (max depth)
          required:
            - id
            - description
        app:
          required:
            - datasource
          properties:
            datasource:
              description: The app or other repository type this represents
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            iconUrl:
              description: If there is available icon URL.
              type: string
            mimeType:
              description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
              type: string
          type: object
        code:
          example: *ref_40
          properties:
            fileName:
              type: string
            fileUrl:
              type: string
            isLastMatch:
              description: Last file match for a repo
              type: boolean
            lines:
              type: array
              items:
                type: object
                properties:
                  CodeLine:
                    type: object
                    description: CodeLine object (max depth)
            repoName:
              type: string
          type: object
        collection:
          description: CollectionMutableProperties object (max depth)
          type: object
          properties:
            childCount:
              description: The number of children Collections. Separated from the actual children so we can grab the count without children.
              type: integer
            children:
              description: The children Collections of this Collection.
              type: array
              items:
                type: object
                properties:
                  Collection:
                    type: object
                    description: Collection object (circular reference)
            createTime:
              format: date-time
              type: string
            creator:
              type: object
              description: Person object (max depth)
            id:
              description: The unique ID of the Collection.
              type: integer
            itemCount:
              description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
              type: integer
            items:
              description: The items in this Collection.
              type: array
              items:
                type: object
                properties:
                  CollectionItem:
                    type: object
                    description: CollectionItem object (max depth)
            pinMetadata:
              type: object
              description: CollectionPinnedMetadata object (max depth)
            roles:
              description: A list of user roles for the Collection.
              type: array
              items:
                type: object
                properties:
                  UserRoleSpecification:
                    type: object
                    description: UserRoleSpecification object (max depth)
            shortcuts:
              description: The names of the shortcuts (Go Links) that point to this Collection.
              type: array
              items:
                type: string
            updateTime:
              format: date-time
              type: string
            updatedBy:
              type: object
              description: Person object (max depth)
          required:
            - id
            - description
        customEntity:
          description: PermissionedObject object (max depth)
          type: object
          properties:
            datasource:
              description: The datasource the custom entity is from.
              type: string
            id:
              description: Unique identifier.
              type: string
            metadata:
              type: object
              description: CustomEntityMetadata object (max depth)
            objectType:
              description: The type of the entity. Interpretation is specific to each datasource
              type: string
            roles:
              description: A list of user roles for the custom entity explicitly granted by the owner.
              type: array
              items:
                type: object
                properties:
                  UserRoleSpecification:
                    type: object
                    description: UserRoleSpecification object (max depth)
            title:
              description: Title or name of the custom entity.
              type: string
        customer:
          required: *ref_41
          properties:
            company:
              type: object
              description: Company object (max depth)
            contractAnnualRevenue:
              description: Average contract annual revenue with that customer.
              format: double
              type: number
            documentCounts:
              type: object
              description: DocumentCounts object (max depth)
            domains:
              description: Link to company's associated website domains.
              type: array
              items:
                type: string
            id:
              description: Unique identifier.
              type: string
            mergedCustomers:
              description: A list of Customers.
              type: array
              items:
                type: object
                properties:
                  Customer:
                    type: object
                    description: Customer object (circular reference)
            metadata:
              type: object
              description: CustomerMetadata object (max depth)
            notes:
              description: User facing (potentially generated) notes about company.
              example: CIO is interested in trying out the product.
              type: string
            poc:
              description: A list of POC for company.
              type: array
              items:
                type: object
                properties:
                  Person:
                    type: object
                    description: Person object (max depth)
            startDate:
              description: The date when the interaction with customer started.
              format: date
              type: string
          type: object
        disambiguation:
          description: A disambiguation between multiple entities with the same name
          type: object
          properties:
            id:
              description: The unique id of the entity in the knowledge graph
              type: string
            name:
              description: Name of the ambiguous entity
              type: string
            type:
              type: object
              description: EntityType object (max depth)
        document:
          properties:
            connectorType:
              type: object
              description: ConnectorType object (max depth)
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              type: object
              description: DocumentContent object (max depth)
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              type: object
              description: DocumentMetadata object (max depth)
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  DocumentSection:
                    type: object
                    description: DocumentSection object (max depth)
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        extractedQnA:
          properties:
            heading:
              description: Heading text that was matched to produce this result.
              type: string
            question:
              description: Question text that was matched to produce this result.
              type: string
            questionResult:
              type: object
              description: SearchResult object (max depth)
          type: object
        meeting:
          properties:
            attendees:
              type: object
              description: CalendarAttendees object (max depth)
            description:
              type: string
            endTime:
              format: date-time
              type: string
            id:
              type: string
            startTime:
              format: date-time
              type: string
            title:
              type: string
            url:
              type: string
          type: object
        person:
          example: *ref_2
          required: *ref_3
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        prominence:
          description: The level of visual distinction that should be given to a result.
          enum: *ref_8
          type: string
          x-enumDescriptions: *ref_9
        querySuggestions:
          properties:
            person:
              type: object
              description: Person object (max depth)
            suggestions:
              type: array
              items:
                type: object
                properties:
                  QuerySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
          type: object
        relatedDocuments:
          description: A list of documents related to this structured result.
          type: array
          items:
            properties:
              associatedEntityId:
                description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                type: string
              documents:
                deprecated: true
                description: A truncated list of documents with this relation. TO BE DEPRECATED.
                type: array
                items:
                  type: object
                  properties:
                    Document:
                      type: object
                      description: Document object (max depth)
              querySuggestion:
                type: object
                description: QuerySuggestion object (max depth)
              relation:
                description: How this document relates to the including entity.
                enum: *ref_24
                type: string
                x-enumDescriptions: *ref_25
              results:
                description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (max depth)
            type: object
        relatedQuestion:
          properties:
            answer:
              description: The answer for the related question
              type: string
            question:
              description: The text of the related question
              type: string
            ranges:
              description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
              type: array
              items:
                type: object
                properties:
                  TextRange:
                    type: object
                    description: TextRange object (max depth)
          type: object
        shortcut:
          description: UserGeneratedContentId object (max depth)
          type: object
          properties:
            alias:
              description: canonical link text following go/ prefix where hyphen/underscore is removed.
              type: string
            roles:
              description: A list of user roles for the Go Link.
              type: array
              items:
                type: object
                properties:
                  UserRoleSpecification:
                    type: object
                    description: UserRoleSpecification object (max depth)
            title:
              description: Title for the Go Link
              type: string
          required:
            - inputAlias
        snippets:
          description: Any snippets associated to the populated object.
          type: array
          items:
            example: *ref_32
            required: *ref_33
            properties:
              mimeType:
                description: The mime type of the snippets, currently either text/plain or text/html.
                type: string
              ranges:
                description: The bolded ranges within text.
                type: array
                items:
                  type: object
                  properties:
                    TextRange:
                      type: object
                      description: TextRange object (max depth)
              snippet:
                description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                type: string
              snippetTextOrdering:
                description: Used for sorting based off the snippet's location within all_snippetable_text
                type: integer
              text:
                description: A matching snippet from the document with no highlights.
                type: string
              url:
                description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                type: string
            type: object
        source:
          description: Source context for this result. Possible values depend on the result type.
          enum: *ref_10
          type: string
        team:
          description: RelatedObjects object (max depth)
          type: object
          properties:
            bannerUrl:
              description: A link to the team's banner photo.
              format: url
              type: string
            businessUnit:
              description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
              type: string
            canBeDeleted:
              default: true
              description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
              type: boolean
            createdFrom:
              description: For teams created from docs, the doc title. Otherwise empty.
              type: string
            customFields:
              description: Customizable fields for additional team information.
              type: array
              items:
                type: object
                properties:
                  CustomFieldData:
                    type: object
                    description: CustomFieldData object (max depth)
            datasource:
              description: the data source of the team, e.g. GDRIVE
              type: string
            datasourceProfiles:
              description: The datasource profiles of the team
              type: array
              items:
                type: object
                properties:
                  DatasourceProfile:
                    type: object
                    description: DatasourceProfile object (max depth)
            department:
              description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
              type: string
            description:
              description: A description of the team
              type: string
            emails:
              description: The emails for this team
              type: array
              items:
                type: object
                properties:
                  TeamEmail:
                    type: object
                    description: TeamEmail object (max depth)
            externalLink:
              description: Link to a team page on the internet or your company's intranet
              format: uri
              type: string
            id:
              description: Unique identifier
              type: string
            lastUpdatedAt:
              description: when this team was last updated.
              format: date-time
              type: string
            loggingId:
              description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
              type: string
            memberCount:
              description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
              type: integer
            members:
              description: The members on this team
              type: array
              items:
                type: object
                properties:
                  PersonToTeamRelationship:
                    type: object
                    description: PersonToTeamRelationship object (max depth)
            name:
              description: Team name
              type: string
            photoUrl:
              description: A link to the team's photo.
              format: url
              type: string
            status:
              default: PROCESSED
              description: whether this team is fully processed or there are still unprocessed operations that'll affect it
              enum: *ref_42
              type: string
          required:
            - id
            - name
        trackingToken:
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
          type: string
      type: object
  securitySchemes:
    APIToken:
      scheme: bearer
      type: http
