openapi: 3.0.0
info:
  version: 0.9.0
  title: Glean API - Chat
  description: API endpoints for Chat
  x-logo:
    url: https://app.glean.com/images/glean-text2.svg
  x-speakeasy-name: Glean API
servers:
  - url: https://{instance}-be.glean.com
    variables:
      instance:
        default: instance-name
        description: The instance name (typically the email domain without the TLD) that determines the deployment backend.
security:
  - APIToken: []
paths:
  /rest/api/v1/chat:
    post:
      tags:
        - Chat
      summary: Chat
      description: Have a conversation with Glean AI.
      operationId: chat
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
            examples:
              defaultExample:
                value:
                  messages:
                    - author: USER
                      messageType: CONTENT
                      fragments:
                        - text: What are the company holidays this year?
              gptAgentExample:
                value:
                  agentConfig:
                    agent: GPT
                  messages:
                    - author: USER
                      messageType: CONTENT
                      fragments:
                        - text: Who was the first person to land on the moon?
        description: Includes chat history for Glean AI to respond to.
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
              examples:
                defaultExample:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: CONTENT
                        hasMoreFragments: false
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                        fragments:
                          - text: There are no holidays!
                streamingExample:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments: null
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments: null
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments:
                          - text: e are
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments:
                          - text: no hol
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: false
                        fragments:
                          - text: idays!
                updateResponse:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: UPDATE
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                        fragments:
                          - text: '**Reading:**'
                          - structuredResults:
                              - document:
                                  id: '123'
                                  title: Company Handbook
                citationResponse:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                        citations:
                          - sourceDocument:
                              id: '123'
                              title: Company Handbook
                              referenceRanges:
                                - textRange:
                                    startIndex: 0
                                    endIndex: 12
                                    type: CITATION
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '408':
          description: Request Timeout
        '429':
          description: Too Many Requests
      x-speakeasy-group: client.chat
      x-speakeasy-name-override: create
      x-speakeasy-usage-example: true
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean, models
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                res = glean.client.chat.create(messages=[
                    {
                        "fragments": [
                            models.ChatMessageFragment(
                                text="What are the company holidays this year?",
                            ),
                        ],
                    },
                ], timeout_millis=30000)

                # Handle response
                print(res)
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.chat.create({
                messages: [
                  {
                    fragments: [
                      {
                        text: "What are the company holidays this year?",
                      },
                    ],
                  },
                ],
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.Create(ctx, components.ChatRequest{\n        Messages: []components.ChatMessage{\n            components.ChatMessage{\n                Fragments: []components.ChatMessageFragment{\n                    components.ChatMessageFragment{\n                        Text: apiclientgo.String(\"What are the company holidays this year?\"),\n                    },\n                },\n            },\n        },\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.ChatResponse != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.*;
            import org.openapis.openapi.models.operations.ChatResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    ChatResponse res = sdk.client().chat().create()
                            .chatRequest(ChatRequest.builder()
                                .messages(List.of(
                                    ChatMessage.builder()
                                        .fragments(List.of(
                                            ChatMessageFragment.builder()
                                                .text("What are the company holidays this year?")
                                                .build()))
                                        .build()))
                                .build())
                            .call();

                    if (res.chatResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/deleteallchats:
    post:
      tags:
        - Chat
      summary: Deletes all saved Chats owned by a user
      description: Deletes all saved Chats a user has had and all their contained conversational content.
      operationId: deleteallchats
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
      x-speakeasy-name-override: deleteAll
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                glean.client.chat.delete_all()

                # Use the SDK ...
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              await glean.client.chat.deleteAll();


            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.DeleteAll(ctx, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.operations.DeleteallchatsResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    DeleteallchatsResponse res = sdk.client().chat().deleteAll()
                            .call();

                    // handle response
                }
            }
  /rest/api/v1/deletechats:
    post:
      tags:
        - Chat
      summary: Deletes saved Chats
      description: Deletes saved Chats and all their contained conversational content.
      operationId: deletechats
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteChatsRequest'
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: delete
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                glean.client.chat.delete(ids=[])

                # Use the SDK ...
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              await glean.client.chat.delete({
                ids: [],
              });


            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.Delete(ctx, components.DeleteChatsRequest{\n        Ids: []string{},\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.DeleteChatsRequest;
            import org.openapis.openapi.models.operations.DeletechatsResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    DeletechatsResponse res = sdk.client().chat().delete()
                            .deleteChatsRequest(DeleteChatsRequest.builder()
                                .ids(List.of())
                                .build())
                            .call();

                    // handle response
                }
            }
  /rest/api/v1/getchat:
    post:
      tags:
        - Chat
      summary: Retrieves a Chat
      description: Retrieves the chat history between Glean Assistant and the user for a given Chat.
      operationId: getchat
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChatRequest'
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChatResponse'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: retrieve
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                res = glean.client.chat.retrieve(id="<id>")

                # Handle response
                print(res)
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.chat.retrieve({
                id: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.Retrieve(ctx, components.GetChatRequest{\n        ID: \"<id>\",\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.GetChatResponse != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.GetChatRequest;
            import org.openapis.openapi.models.operations.GetchatResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    GetchatResponse res = sdk.client().chat().retrieve()
                            .getChatRequest(GetChatRequest.builder()
                                .id("<id>")
                                .build())
                            .call();

                    if (res.getChatResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/listchats:
    post:
      tags:
        - Chat
      summary: Retrieves all saved Chats
      description: Retrieves all the saved Chats between Glean Assistant and the user. The returned Chats contain only metadata and no conversational content.
      operationId: listchats
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChatsResponse'
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: list
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                res = glean.client.chat.list()

                # Handle response
                print(res)
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.chat.list();

              // Handle the result
              console.log(result);
            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.List(ctx, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.ListChatsResponse != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.operations.ListchatsResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    ListchatsResponse res = sdk.client().chat().list()
                            .call();

                    if (res.listChatsResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/getchatapplication:
    post:
      tags:
        - Chat
      summary: Gets the metadata for a custom Chat application
      description: Gets the Chat application details for the specified application ID.
      operationId: getchatapplication
      x-visibility: Preview
      x-codegen-request-body-name: payload
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChatApplicationRequest'
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChatApplicationResponse'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
      x-speakeasy-name-override: retrieveApplication
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                res = glean.client.chat.retrieve_application(id="<id>")

                # Handle response
                print(res)
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.chat.retrieveApplication({
                id: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.RetrieveApplication(ctx, components.GetChatApplicationRequest{\n        ID: \"<id>\",\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.GetChatApplicationResponse != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.GetChatApplicationRequest;
            import org.openapis.openapi.models.operations.GetchatapplicationResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    GetchatapplicationResponse res = sdk.client().chat().retrieveApplication()
                            .getChatApplicationRequest(GetChatApplicationRequest.builder()
                                .id("<id>")
                                .build())
                            .call();

                    if (res.getChatApplicationResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/uploadchatfiles:
    post:
      tags:
        - Chat
      summary: Upload files for Chat.
      description: Upload files for Chat.
      operationId: uploadchatfiles
      x-visibility: Public
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadChatFilesRequest'
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadChatFilesResponse'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: uploadFiles
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                res = glean.client.chat.upload_files(files=[])

                # Handle response
                print(res)
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";
            import { openAsBlob } from "node:fs";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.chat.uploadFiles({
                files: [
                  {
                    fileName: "example.file",
                    content: await openAsBlob("example.file"),
                  },
                ],
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.UploadFiles(ctx, components.UploadChatFilesRequest{\n        Files: []components.File{},\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.UploadChatFilesResponse != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.UploadChatFilesRequest;
            import org.openapis.openapi.models.operations.UploadchatfilesResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    UploadchatfilesResponse res = sdk.client().chat().uploadFiles()
                            .uploadChatFilesRequest(UploadChatFilesRequest.builder()
                                .files(List.of())
                                .build())
                            .call();

                    if (res.uploadChatFilesResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/getchatfiles:
    post:
      tags:
        - Chat
      summary: Get files uploaded by a user for Chat.
      description: Get files uploaded by a user for Chat.
      operationId: getchatfiles
      x-visibility: Public
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChatFilesRequest'
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChatFilesResponse'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: retrieveFiles
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                res = glean.client.chat.retrieve_files(file_ids=[
                    "<value 1>",
                ])

                # Handle response
                print(res)
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.chat.retrieveFiles({
                fileIds: [
                  "<value 1>",
                ],
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.RetrieveFiles(ctx, components.GetChatFilesRequest{\n        FileIds: []string{\n            \"<value 1>\",\n        },\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.GetChatFilesResponse != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.GetChatFilesRequest;
            import org.openapis.openapi.models.operations.GetchatfilesResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    GetchatfilesResponse res = sdk.client().chat().retrieveFiles()
                            .getChatFilesRequest(GetChatFilesRequest.builder()
                                .fileIds(List.of(
                                    "<value 1>"))
                                .build())
                            .call();

                    if (res.getChatFilesResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/deletechatfiles:
    post:
      tags:
        - Chat
      summary: Delete files uploaded by a user for chat.
      description: Delete files uploaded by a user for Chat.
      operationId: deletechatfiles
      x-visibility: Public
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteChatFilesRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: deleteFiles
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                glean.client.chat.delete_files(file_ids=[
                    "<value 1>",
                    "<value 2>",
                    "<value 3>",
                ])

                # Use the SDK ...
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              await glean.client.chat.deleteFiles({
                fileIds: [
                  "<value 1>",
                  "<value 2>",
                  "<value 3>",
                ],
              });


            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.DeleteFiles(ctx, components.DeleteChatFilesRequest{\n        FileIds: []string{\n            \"<value 1>\",\n            \"<value 2>\",\n            \"<value 3>\",\n        },\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.DeleteChatFilesRequest;
            import org.openapis.openapi.models.operations.DeletechatfilesResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    DeletechatfilesResponse res = sdk.client().chat().deleteFiles()
                            .deleteChatFilesRequest(DeleteChatFilesRequest.builder()
                                .fileIds(List.of(
                                    "<value 1>",
                                    "<value 2>",
                                    "<value 3>"))
                                .build())
                            .call();

                    // handle response
                }
            }
  /rest/api/v1/chat#stream:
    post:
      tags:
        - Chat
      summary: Chat
      description: Have a conversation with Glean AI.
      operationId: chatStream
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
            examples:
              defaultExample:
                value:
                  messages:
                    - author: USER
                      messageType: CONTENT
                      fragments:
                        - text: What are the company holidays this year?
              gptAgentExample:
                value:
                  agentConfig:
                    agent: GPT
                  messages:
                    - author: USER
                      messageType: CONTENT
                      fragments:
                        - text: Who was the first person to land on the moon?
        description: Includes chat history for Glean AI to respond to.
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ChatRequestStream'
              examples:
                defaultExample:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: CONTENT
                        hasMoreFragments: false
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                        fragments:
                          - text: There are no holidays!
                streamingExample:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments: null
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments: null
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments:
                          - text: e are
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments:
                          - text: no hol
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: false
                        fragments:
                          - text: idays!
                updateResponse:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: UPDATE
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                        fragments:
                          - text: '**Reading:**'
                          - structuredResults:
                              - document:
                                  id: '123'
                                  title: Company Handbook
                citationResponse:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                        citations:
                          - sourceDocument:
                              id: '123'
                              title: Company Handbook
                              referenceRanges:
                                - textRange:
                                    startIndex: 0
                                    endIndex: 12
                                    type: CITATION
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '408':
          description: Request Timeout
        '429':
          description: Too Many Requests
      x-speakeasy-group: client.chat
      x-speakeasy-name-override: createStream
      x-speakeasy-usage-example: true
      x-codeSamples:
        - lang: Python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean, models
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as glean:

                res = glean.client.chat.create_stream(messages=[
                    {
                        "fragments": [
                            models.ChatMessageFragment(
                                text="What are the company holidays this year?",
                            ),
                        ],
                    },
                ], timeout_millis=30000)

                # Handle response
                print(res)
        - lang: JavaScript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.chat.createStream({
                messages: [
                  {
                    fragments: [
                      {
                        text: "What are the company holidays this year?",
                      },
                    ],
                  },
                ],
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: Go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.CreateStream(ctx, components.ChatRequest{\n        Messages: []components.ChatMessage{\n            components.ChatMessage{\n                Fragments: []components.ChatMessageFragment{\n                    components.ChatMessageFragment{\n                        Text: apiclientgo.String(\"What are the company holidays this year?\"),\n                    },\n                },\n            },\n        },\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.ChatRequestStream != nil {\n        // handle response\n    }\n}"
        - lang: Java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.*;
            import org.openapis.openapi.models.operations.ChatStreamResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))
                        .build();

                    ChatStreamResponse res = sdk.client().chat().createStream()
                            .chatRequest(ChatRequest.builder()
                                .messages(List.of(
                                    ChatMessage.builder()
                                        .fragments(List.of(
                                            ChatMessageFragment.builder()
                                                .text("What are the company holidays this year?")
                                                .build()))
                                        .build()))
                                .build())
                            .call();

                    if (res.chatRequestStream().isPresent()) {
                        // handle response
                    }
                }
            }
components:
  schemas:
    ChatFileFailureReason:
      type: string
      description: Reason for failed status.
      x-include-enum-class-prefix: true
      enum:
        - PARSE_FAILED
        - AV_SCAN_FAILED
        - FILE_TOO_SMALL
        - FILE_TOO_LARGE
        - FILE_EXTENSION_UNSUPPORTED
        - FILE_METADATA_VALIDATION_FAIL
        - FILE_PROCESSING_TIMED_OUT
    ChatFileStatus:
      type: string
      description: Current status of the file.
      x-include-enum-class-prefix: true
      enum:
        - PROCESSING
        - PROCESSED
        - FAILED
        - DELETED
    ClusterTypeEnum:
      type: string
      description: The reason for inclusion of clusteredResults.
      enum:
        - SIMILAR
        - FRESHNESS
        - TITLE
        - CONTENT
        - NONE
        - THREAD_REPLY
        - THREAD_ROOT
        - PREFIX
        - SUFFIX
    CollectionPinnableCategories:
      type: string
      description: Categories a Collection can be pinned to.
      enum:
        - COMPANY_RESOURCE
        - DEPARTMENT_RESOURCE
        - TEAM_RESOURCE
    CollectionPinnableTargets:
      type: string
      description: What targets can a Collection be pinned to.
      enum:
        - RESOURCE_CARD
        - TEAM_PROFILE_PAGE
    CommunicationChannel:
      type: string
      enum:
        - COMMUNICATION_CHANNEL_EMAIL
        - COMMUNICATION_CHANNEL_SLACK
    ConnectorType:
      type: string
      description: The source from which document content was pulled, e.g. an API crawl or browser history
      enum:
        - API_CRAWL
        - BROWSER_CRAWL
        - BROWSER_HISTORY
        - BUILTIN
        - FEDERATED_SEARCH
        - PUSH_API
        - WEB_CRAWL
        - NATIVE_HISTORY
    EntityType:
      type: string
      description: The type of entity.
      x-include-enum-class-prefix: true
      enum:
        - PERSON
        - PROJECT
        - CUSTOMER
    GroupType:
      type: string
      description: The type of user group
      enum:
        - DEPARTMENT
        - ALL
        - TEAM
        - JOB_TITLE
        - ROLE_TYPE
        - LOCATION
        - REGION
        - EXTERNAL_GROUP
    ScopeType:
      type: string
      description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
      enum:
        - GLOBAL
        - OWN
    UserRole:
      type: string
      description: A user's role with respect to a specific document.
      enum:
        - OWNER
        - VIEWER
        - ANSWER_MODERATOR
        - EDITOR
        - VERIFIER
    displayName:
      description: Human understandable name of the tool. Max 50 characters.
      type: string
    logoUrl:
      type: string
      description: URL used to fetch the logo.
    objectName:
      type: string
      description: Name of the generated object. This will be used to indicate to the end user what the generated object contains.
      example:
        - HR ticket
        - Email
        - Chat message
    DocumentVisibility:
      type: string
      description: The level of visibility of the document as understood by our system.
      x-enumDescriptions:
        PRIVATE: Only one person is able to see the document.
        SPECIFIC_PEOPLE_AND_GROUPS: Only specific people and/or groups can see the document.
        DOMAIN_LINK: Anyone in the domain with the link can see the document.
        DOMAIN_VISIBLE: Anyone in the domain can search for the document.
        PUBLIC_LINK: Anyone with the link can see the document.
        PUBLIC_VISIBLE: Anyone on the internet can search for the document.
      enum:
        - PRIVATE
        - SPECIFIC_PEOPLE_AND_GROUPS
        - DOMAIN_LINK
        - DOMAIN_VISIBLE
        - PUBLIC_LINK
        - PUBLIC_VISIBLE
    SearchResultProminenceEnum:
      type: string
      description: |
        The level of visual distinction that should be given to a result.
      x-enumDescriptions:
        HERO: A high-confidence result that should feature prominently on the page.
        PROMOTED: May not be the best result but should be given additional visual distinction.
        STANDARD: Should not be distinct from any other results.
      enum:
        - HERO
        - PROMOTED
        - STANDARD
    AnswerDocId:
      properties:
        docId:
          type: string
          description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
          example: ANSWERS_answer_3
    AnswerId:
      properties:
        id:
          type: integer
          description: The opaque ID of the Answer.
          example: 3
    GetChatApplicationRequest:
      required:
        - id
      properties:
        id:
          type: string
          description: The id of the Chat application to be retrieved.
    GetChatRequest:
      required:
        - id
      properties:
        id:
          type: string
          description: The id of the Chat to be retrieved.
    UserGeneratedContentId:
      properties:
        id:
          type: integer
          description: The opaque id of the user generated content.
    ChatApplicationDetails: {}
    DeleteChatFilesRequest:
      required:
        - fileIds
      properties:
        fileIds:
          type: array
          items:
            type: string
          description: IDs of files to delete.
    DeleteChatsRequest:
      required:
        - ids
      properties:
        ids:
          type: array
          items:
            type: string
          description: A non-empty list of ids of the Chats to be deleted.
    GetChatFilesRequest:
      required:
        - fileIds
      properties:
        fileIds:
          type: array
          items:
            type: string
          description: IDs of files to fetch.
    UploadChatFilesRequest:
      required:
        - files
      properties:
        files:
          type: array
          items:
            type: string
            format: binary
          description: Raw files to be uploaded for chat in binary format.
    CustomFieldValueStr:
      properties:
        strText:
          type: string
          description: Text field for string value.
    SearchRequestInputDetails:
      properties:
        hasCopyPaste:
          type: boolean
          description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
      example:
        hasCopyPaste: true
    StructuredTextMutableProperties:
      required:
        - text
      properties:
        text:
          type: string
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
    AgentConfig:
      description: Describes the agent that executes the request.
      properties:
        agent:
          type: string
          description: Name of the agent.
          x-enumDescriptions:
            DEFAULT: Integrates with your company's knowledge.
            GPT: Communicates directly with the LLM.
            UNIVERSAL: Uses both company and web knowledge.
          enum:
            - DEFAULT
            - GPT
            - UNIVERSAL
        mode:
          type: string
          description: Top level modes to run GleanChat in.
          x-enumDescriptions:
            DEFAULT: Used if no mode supplied.
            QUICK: Deprecated.
          enum:
            - DEFAULT
            - QUICK
    CustomFieldValueHyperlink:
      properties:
        urlAnchor:
          type: string
          description: Anchor text for hyperlink.
        urlLink:
          type: string
          description: Link for this URL.
    FacetBucketFilter:
      properties:
        facet:
          type: string
          description: The facet whose buckets should be filtered.
        prefix:
          type: string
          description: The per-term prefix that facet buckets should be filtered on.
    IndexStatus:
      properties:
        lastCrawledTime:
          description: When the document was last crawled
          type: string
          format: date-time
        lastIndexedTime:
          description: When the document was last indexed
          type: string
          format: date-time
    PersonObject:
      required:
        - name
        - obfuscatedId
      properties:
        name:
          type: string
          description: The display name.
        obfuscatedId:
          type: string
          description: An opaque identifier that can be used to request metadata for a Person.
    PossibleValue:
      type: object
      description: Possible value of a specific parameter
      properties:
        value:
          type: string
          description: Possible value
        label:
          type: string
          description: User-friendly label associated with the value
    Thumbnail:
      properties:
        photoId:
          type: string
          description: Photo id if the thumbnail is from splash.
        url:
          type: string
          description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
    TimeInterval:
      required:
        - start
        - end
      properties:
        start:
          type: string
          description: The RFC3339 timestamp formatted start time of this event.
        end:
          type: string
          description: The RFC3339 timestamp formatted end time of this event.
    TimePoint:
      properties:
        epochSeconds:
          type: integer
          description: Epoch seconds. Has precedence over daysFromNow.
        daysFromNow:
          type: integer
          description: The number of days from now. Specification relative to current time. Can be negative.
    ViewerInfo:
      properties:
        role:
          type: string
          enum:
            - ANSWER_MODERATOR
            - OWNER
            - VIEWER
          description: DEPRECATED - use permissions instead. Viewer's role on the specific document.
          deprecated: true
        lastViewedTime:
          type: string
          format: date-time
    CollectionItemMutableProperties:
      properties:
        name:
          type: string
          description: The optional name of the Collection item.
        description:
          type: string
          description: A helpful description of why this CollectionItem is in the Collection that it's in.
        icon:
          type: string
          description: The emoji icon for this CollectionItem. Only used for Text type items.
    FacetFilterValue:
      properties:
        value:
          type: string
          example: Spreadsheet
        relationType:
          type: string
          enum:
            - EQUALS
            - ID_EQUALS
            - LT
            - GT
            - NOT_EQUALS
          example: EQUALS
        isNegated:
          type: boolean
          deprecated: true
          description: DEPRECATED - please use relationType instead
    PersonDistance:
      required:
        - name
        - obfuscatedId
        - distance
      properties:
        name:
          type: string
          description: The display name.
        obfuscatedId:
          type: string
          description: An opaque identifier that can be used to request metadata for a Person.
        distance:
          type: number
          format: float
          description: Distance to person, refer to PeopleDistance pipeline on interpretation of the value.
    SearchProviderInfo:
      properties:
        name:
          type: string
          description: Name of the search provider.
        logoUrl:
          type: string
          description: URL to the provider's logo.
        searchLinkUrlTemplate:
          type: string
          description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
      example:
        name: Google
        logo: https://app.glean.com/images/feather/globe.svg
        searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
    SocialNetwork:
      required:
        - name
        - profileUrl
      properties:
        name:
          type: string
          description: Possible values are "twitter", "linkedin".
        profileName:
          type: string
          description: Human-readable profile name.
        profileUrl:
          type: string
          format: url
          description: Link to profile.
    TeamEmail:
      properties:
        email:
          type: string
          format: email
          description: An email address
        type:
          type: string
          enum:
            - PRIMARY
            - SECONDARY
            - ONCALL
            - OTHER
          default: OTHER
        isUserGenerated:
          type: boolean
          description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
    SessionInfo:
      properties:
        sessionTrackingToken:
          type: string
          description: A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab.
        tabId:
          type: string
          description: A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab.
        lastSeen:
          type: string
          format: date-time
          description: The last time the server saw this token.
        lastQuery:
          type: string
          description: The last query seen by the server.
    DatasourceProfile:
      required:
        - datasource
        - handle
      properties:
        datasource:
          type: string
          example: github
          description: The datasource the profile is of.
        handle:
          type: string
          description: The display name of the entity in the given datasource.
        url:
          type: string
          description: URL to view the entity's profile.
        nativeAppUrl:
          type: string
          description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
        isUserGenerated:
          type: boolean
          description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
    PersonTeam:
      description: Use `id` if you index teams via Glean, and use `name` and `externalLink` if you want to use your own team pages
      properties:
        id:
          type: string
          description: Unique identifier
        name:
          type: string
          description: Team name
        externalLink:
          type: string
          format: uri
          description: Link to a team page on the internet or your company's intranet
        relationship:
          type: string
          description: The team member's relationship to the team. This defaults to MEMBER if not set.
          default: MEMBER
          enum:
            - MEMBER
            - MANAGER
            - LEAD
            - POINT_OF_CONTACT
            - OTHER
        joinDate:
          type: string
          format: date-time
          description: The team member's start date
    AuthToken:
      required:
        - accessToken
        - datasource
      properties:
        accessToken:
          type: string
        datasource:
          type: string
        scope:
          type: string
        tokenType:
          type: string
        authUser:
          description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
          type: string
        expiration:
          description: Unix timestamp when this token expires (in seconds since epoch UTC).
          type: integer
          format: int64
      example:
        accessToken: 123abc
        datasource: gmail
        scope: email profile https://www.googleapis.com/auth/gmail.readonly
        tokenType: Bearer
        authUser: '1'
    RelatedObject:
      required:
        - id
      properties:
        id:
          type: string
          description: The ID of the related object
        metadata:
          type: object
          description: Some metadata of the object which can be displayed, while not having the actual object.
          properties:
            name:
              type: string
              description: Placeholder name of the object, not the relationship.
    IconConfig:
      description: Defines how to render an icon
      properties:
        generatedBackgroundColorKey:
          type: string
        backgroundColor:
          type: string
        color:
          type: string
        key:
          type: string
        iconType:
          enum:
            - COLLECTION
            - CUSTOM
            - DATASOURCE
            - DATASOURCE_INSTANCE
            - FAVICON
            - FILE_TYPE
            - GENERATED_BACKGROUND
            - GLYPH
            - MIME_TYPE
            - NO_ICON
            - PERSON
            - REACTIONS
            - URL
        masked:
          type: boolean
          description: Whether the icon should be masked based on current theme.
        name:
          type: string
          description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
        url:
          type: string
          description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
      example:
        color: '#343CED'
        key: person_icon
        iconType: GLYPH
        name: user
    StructuredLocation:
      type: object
      description: Detailed location with information about country, state, city etc.
      properties:
        deskLocation:
          type: string
          description: Desk number.
        timezone:
          type: string
          description: Location's timezone, e.g. UTC, PST.
        address:
          type: string
          description: Office address or name.
        city:
          type: string
          description: Name of the city.
        state:
          type: string
          description: State code.
        region:
          type: string
          description: Region information, e.g. NORAM, APAC.
        zipCode:
          type: string
          description: ZIP Code for the address.
        country:
          type: string
          description: Country name.
        countryCode:
          type: string
          description: Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA.
    DocumentCounts:
      type: object
      description: A map of {string, int} pairs representing counts of each document type associated with this customer.
      additionalProperties:
        type: integer
    CustomDataValue:
      properties:
        displayLabel:
          type: string
        stringValue:
          type: string
        stringListValue:
          type: array
          description: list of strings for multi-value properties
          items:
            type: string
        numberValue:
          type: number
        booleanValue:
          type: boolean
    DocumentSection:
      type: object
      properties:
        title:
          type: string
          description: The title of the document section (e.g. the section header).
        url:
          type: string
          description: The permalink of the document section.
    AppResult:
      required:
        - datasource
      properties:
        datasource:
          type: string
          description: The app or other repository type this represents
        docType:
          type: string
          description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
        mimeType:
          type: string
          description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
        iconUrl:
          type: string
          description: If there is available icon URL.
    Company:
      required:
        - name
      properties:
        name:
          type: string
          description: User-friendly display name.
        profileUrl:
          type: string
          description: Link to internal company company profile.
        websiteUrls:
          type: array
          description: Link to company's associated websites.
          items:
            type: string
        logoUrl:
          type: string
          description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
        location:
          type: string
          description: User facing string representing the company's location.
          example: New York City
        phone:
          type: string
          description: Phone number as a number string.
        fax:
          type: string
          description: Fax number as a number string.
        industry:
          type: string
          description: User facing string representing the company's industry.
          example: Finances
        annualRevenue:
          type: number
          format: double
          description: Average company's annual revenue for reference.
        numberOfEmployees:
          type: integer
          format: int64
          description: Average company's number of employees for reference.
        stockSymbol:
          type: string
          description: Company's stock symbol if company is public.
        foundedDate:
          type: string
          format: date
          description: The date when the company was founded.
        about:
          type: string
          description: User facing description of company.
          example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
    AuthConfig:
      description: Config for tool's authentication method.
      type: object
      properties:
        isOnPrem:
          type: boolean
          description: Whether or not this tool is hosted on-premise.
        usesCentralAuth:
          type: boolean
          description: Whether or not this uses central auth.
        type:
          type: string
          enum:
            - NONE
            - OAUTH_USER
            - OAUTH_ADMIN
            - API_KEY
            - BASIC_AUTH
            - DWD
          description: |
            The type of authentication being used.
            Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
            'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
            'OAUTH_USER' uses individual user tokens for external API calls.
            'DWD' refers to domain wide delegation.
        grantType:
          type: string
          enum:
            - AUTH_CODE
            - CLIENT_CREDENTIALS
          description: The type of grant type being used.
        status:
          type: string
          description: Auth status of the tool.
          enum:
            - AWAITING_AUTH
            - AUTHORIZED
        client_url:
          type: string
          format: url
          description: The URL where users will be directed to start the OAuth flow.
        scopes:
          type: array
          items:
            type: string
          description: A list of strings denoting the different scopes or access levels required by the tool.
        audiences:
          type: array
          items:
            type: string
          description: A list of strings denoting the different audience which can access the tool.
        authorization_url:
          type: string
          format: url
          description: The OAuth provider's endpoint, where access tokens are requested.
        lastAuthorizedAt:
          type: string
          format: date-time
          description: The time the tool was last authorized in ISO format (ISO 8601).
    CustomFieldData:
      required: &ref_13
        - label
        - values
        - displayable
      properties:
        displayable:
          default: true
          description: Determines whether the client should display this custom field
          type: boolean
        label:
          description: A user-facing label for this field.
          type: string
        values:
          type: array
          items:
            oneOf:
              - properties:
                  strText:
                    description: Text field for string value.
                    type: string
                type: object
              - properties:
                  urlAnchor:
                    description: Anchor text for hyperlink.
                    type: string
                  urlLink:
                    description: Link for this URL.
                    type: string
                type: object
              - properties:
                  person:
                    type: object
                    description: Person object (max depth)
                type: object
      type: object
    DocumentContent:
      properties:
        fullTextList:
          type: array
          items:
            type: string
          description: The plaintext content of the document.
    DocumentSpec:
      oneOf:
        - type: object
          properties:
            url:
              type: string
              description: The URL of the document.
        - type: object
          properties:
            id:
              type: string
              description: The ID of the document.
        - type: object
          properties:
            ugcType:
              type: string
              enum:
                - ANNOUNCEMENTS
                - ANSWERS
                - COLLECTIONS
                - SHORTCUTS
              description: The type of the user generated content (UGC datasource).
            contentId:
              type: integer
              description: The id for user generated content.
            docType:
              type: string
              description: The specific type of the user generated content type.
    CustomData:
      type: object
      description: Custom fields specific to individual datasources
      additionalProperties:
        $ref: '#/components/schemas/CustomDataValue'
    CustomFieldValue:
      oneOf:
        - properties:
            strText:
              description: Text field for string value.
              type: string
          type: object
        - properties:
            urlAnchor:
              description: Anchor text for hyperlink.
              type: string
            urlLink:
              description: Link for this URL.
              type: string
          type: object
        - properties:
            person:
              example: &ref_0
                name: George Clooney
                obfuscatedId: abc123
              required: &ref_1
                - name
                - obfuscatedId
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
          type: object
    GetChatApplicationResponse:
      properties:
        application:
          $ref: '#/components/schemas/ChatApplicationDetails'
    GetChatFilesResponse:
      properties:
        files:
          description: A map of file IDs to ChatFile structs.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ChatFile'
    GetChatResponse:
      properties:
        chatResult:
          $ref: '#/components/schemas/ChatResult'
    GrantPermission:
      description: Describes the grant permission level that a user has for a specific feature
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
    ObjectPermissions:
      properties:
        write:
          $ref: '#/components/schemas/WritePermission'
    PermissionedObject:
      properties:
        permissions:
          $ref: '#/components/schemas/ObjectPermissions'
          description: The permissions the current viewer has with respect to a particular object.
    ReadPermission:
      description: Describes the read permission level that a user has for a specific feature
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
    RelatedObjects:
      properties:
        relatedObjects:
          type: object
          description: A list of objects related to a source object.
          additionalProperties:
            $ref: '#/components/schemas/RelatedObjectEdge'
    AnonymousEvent:
      description: A generic, light-weight calendar event.
      type: object
      properties:
        time:
          $ref: '#/components/schemas/TimeInterval'
        eventType:
          description: The nature of the event, for example "out of office".
          type: string
          enum:
            - DEFAULT
            - OUT_OF_OFFICE
    CountInfo:
      required:
        - count
      properties:
        count:
          type: integer
          description: The counter value
        period:
          $ref: '#/components/schemas/Period'
        org:
          type: string
          description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
    Disambiguation:
      type: object
      description: A disambiguation between multiple entities with the same name
      properties:
        name:
          type: string
          description: Name of the ambiguous entity
        id:
          type: string
          description: The unique id of the entity in the knowledge graph
        type:
          $ref: '#/components/schemas/EntityType'
    Group:
      required:
        - type
        - id
      properties:
        type:
          $ref: '#/components/schemas/GroupType'
        id:
          type: string
          description: A unique identifier for the group. May be the same as name.
        name:
          type: string
          description: Name of the group.
    Badge:
      type: object
      description: Displays a user's accomplishment or milestone
      properties:
        key:
          type: string
          description: An auto generated unique identifier.
        displayName:
          type: string
          description: The badge name displayed to users
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
        pinned:
          type: boolean
          description: The badge should be shown on the PersonAttribution
      example:
        key: deployment_name_new_hire
        displayName: New hire
        iconConfig:
          color: '#343CED'
          key: person_icon
          iconType: GLYPH
          name: user
    ChatFile:
      type: object
      description: Structure for file uploaded by a user for Chat.
      properties:
        id:
          type: string
          description: Unique identifier of the file.
          example: FILE_1234
        url:
          type: string
          description: Url of the file.
          example: www.google.com
        name:
          type: string
          description: Name of the uploaded file.
          example: sample.pdf
        metadata:
          $ref: '#/components/schemas/ChatFileMetadata'
    Period:
      properties:
        minDaysFromNow:
          type: integer
          description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
          deprecated: true
        maxDaysFromNow:
          type: integer
          description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
          deprecated: true
        start:
          $ref: '#/components/schemas/TimePoint'
        end:
          $ref: '#/components/schemas/TimePoint'
    WritePermission:
      description: Describes the write permissions levels that a user has for a specific feature
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
        create:
          type: boolean
          description: True if user has create permission for this feature and scope
        update:
          type: boolean
          description: True if user has update permission for this feature and scope
        delete:
          type: boolean
          description: True if user has delete permission for this feature and scope
    GrantPermissions:
      description: Describes the grant permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of grant permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/GrantPermission'
    ReadPermissions:
      description: Describes the read permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of read permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/ReadPermission'
    WritePermissions:
      description: Describes the write permissions levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of write permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/WritePermission'
    Code:
      example: &ref_47
        repoName: scio
        fileName: README.md
        matches:
          - lineNumber: 1
            content: Welcome to the beginning
            ranges: []
          - lineNumber: 2
            content: Second line of the file
            ranges: []
          - lineNumber: 3
            content: hello world hello world
            ranges:
              - startindex: 0
                endIndex: 5
              - startIndex: 12
                endIndex: 17
      properties:
        fileName:
          type: string
        fileUrl:
          type: string
        isLastMatch:
          description: Last file match for a repo
          type: boolean
        lines:
          type: array
          items:
            properties:
              content:
                type: string
              lineNumber:
                type: integer
              ranges:
                description: Index ranges depicting matched sections of the line
                type: array
                items:
                  description: A subsection of a given string to which some special formatting should be applied.
                  required: &ref_2
                    - startIndex
                  properties:
                    document:
                      type: object
                      description: Document object (max depth)
                    endIndex:
                      description: The exclusive end index of the range.
                      type: integer
                    startIndex:
                      description: The inclusive start index of the range.
                      type: integer
                    type:
                      enum: &ref_3
                        - BOLD
                        - CITATION
                        - HIGHLIGHT
                        - LINK
                      type: string
                    url:
                      description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                      type: string
                  type: object
            type: object
        repoName:
          type: string
      type: object
    CustomEntityMetadata:
      properties:
        customData:
          $ref: '#/components/schemas/CustomData'
    AnswerLikes:
      required: &ref_63
        - likedBy
        - likedByUser
        - numLikes
      properties:
        likedBy:
          type: array
          items:
            properties:
              createTime:
                description: The time the user liked the answer in ISO format (ISO 8601).
                format: date-time
                type: string
              user:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
            type: object
        likedByUser:
          description: Whether the user in context liked the answer.
          type: boolean
        numLikes:
          description: The total number of likes for the answer.
          type: integer
      type: object
    ChatMetadataResult:
      properties:
        chat:
          $ref: '#/components/schemas/ChatMetadata'
        trackingToken:
          type: string
          description: An opaque token that represents this particular Chat. To be used for `/feedback` reporting.
    ChatResult:
      properties:
        chat:
          $ref: '#/components/schemas/Chat'
        trackingToken:
          type: string
          description: An opaque token that represents this particular Chat. To be used for `/feedback` reporting.
    CollectionPinMetadata:
      required:
        - id
        - target
      properties:
        id:
          type: integer
          description: The ID of the Collection.
        target:
          $ref: '#/components/schemas/CollectionPinTarget'
    CustomerMetadata:
      properties:
        datasourceId:
          type: string
          description: The user visible id of the salesforce customer account.
        customData:
          $ref: '#/components/schemas/CustomData'
    FacetFilterSet:
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FacetFilter'
      description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
    ListChatsResponse:
      properties:
        chatResults:
          type: array
          items:
            $ref: '#/components/schemas/ChatMetadataResult'
          x-includeEmpty: true
    RelatedObjectEdge:
      properties:
        objects:
          type: array
          items:
            $ref: '#/components/schemas/RelatedObject'
    RestrictionFilters:
      properties:
        containerSpecs:
          description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
          type: array
          items:
            $ref: '#/components/schemas/DocumentSpec'
    UploadChatFilesResponse:
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/ChatFile'
          description: Files uploaded for chat.
    ToolInfo:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/ToolMetadata'
        parameters:
          type: object
          description: Parameters supported by the tool.
          additionalProperties:
            $ref: '#/components/schemas/WriteActionParameter'
    CollectionPinTarget:
      required:
        - category
      properties:
        category:
          $ref: '#/components/schemas/CollectionPinnableCategories'
        value:
          type: string
          description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
        target:
          $ref: '#/components/schemas/CollectionPinnableTargets'
    FacetFilter:
      properties:
        fieldName:
          type: string
          example: owner
        values:
          type: array
          items:
            $ref: '#/components/schemas/FacetFilterValue'
          description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
        groupName:
          type: string
          example: Spreadsheet
          description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
      example:
        fieldName: type
        values:
          - value: Spreadsheet
            relationType: EQUALS
          - value: Presentation
            relationType: EQUALS
    WriteActionParameter:
      type: object
      properties:
        type:
          type: string
          description: The type of the value (e.g., integer, string, boolean, etc.)
          enum:
            - UNKNOWN
            - INTEGER
            - STRING
            - BOOLEAN
        displayName:
          type: string
          description: Human readable display name for the key.
        value:
          type: string
          description: The value of the field.
        isRequired:
          type: boolean
          description: Is the parameter a required field.
        description:
          type: string
          description: Description of the parameter.
        possibleValues:
          type: array
          items:
            $ref: '#/components/schemas/PossibleValue'
          description: Possible values that the parameter can take.
    CodeLine:
      properties:
        content:
          type: string
        lineNumber:
          type: integer
        ranges:
          description: Index ranges depicting matched sections of the line
          type: array
          items:
            description: A subsection of a given string to which some special formatting should be applied.
            required: *ref_2
            properties:
              document:
                properties:
                  connectorType:
                    type: object
                    description: ConnectorType object (max depth)
                  containerDocument:
                    type: object
                    description: Document object (circular reference)
                  content:
                    type: object
                    description: DocumentContent object (max depth)
                  datasource:
                    description: The app or other repository type from which the document was extracted
                    type: string
                  docType:
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                    type: string
                  id:
                    description: The Glean Document ID.
                    type: string
                  metadata:
                    type: object
                    description: DocumentMetadata object (max depth)
                  parentDocument:
                    type: object
                    description: Document object (circular reference)
                  sections:
                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                    type: array
                    items:
                      type: object
                      properties:
                        DocumentSection:
                          type: object
                          description: DocumentSection object (max depth)
                  title:
                    description: The title of the document.
                    type: string
                  url:
                    description: A permalink for the document.
                    type: string
                type: object
              endIndex:
                description: The exclusive end index of the range.
                type: integer
              startIndex:
                description: The inclusive start index of the range.
                type: integer
              type:
                enum: *ref_3
                type: string
              url:
                description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                type: string
            type: object
      type: object
    Meeting:
      properties:
        attendees:
          properties:
            isLimit:
              description: Whether the total count of the people returned is at the retrieval limit.
              type: boolean
            numAccepted:
              description: Total number of attendees who have accepted this event.
              type: integer
            numDeclined:
              description: Total number of attendees who have declined this event.
              type: integer
            numNoResponse:
              description: Total number of attendees who have not responded to this event.
              type: integer
            numTentative:
              description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
              type: integer
            people:
              description: Full details of some of the attendees of this event
              type: array
              items:
                required: &ref_4
                  - person
                properties:
                  groupAttendees:
                    description: If this attendee is a group, represents the list of individual attendees in the group.
                    type: array
                    items:
                      type: object
                      properties:
                        CalendarAttendee:
                          type: object
                          description: CalendarAttendee object (circular reference)
                  isInGroup:
                    description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                    type: boolean
                  isOrganizer:
                    description: Whether or not this attendee is an organizer.
                    type: boolean
                  person:
                    type: object
                    description: Person object (max depth)
                  responseStatus:
                    enum: &ref_5
                      - ACCEPTED
                      - DECLINED
                      - NO_RESPONSE
                      - TENTATIVE
                    type: string
                type: object
            total:
              description: Total number of attendees in this event.
              type: integer
          type: object
        description:
          type: string
        endTime:
          format: date-time
          type: string
        id:
          type: string
        startTime:
          format: date-time
          type: string
        title:
          type: string
        url:
          type: string
      type: object
    RelatedQuestion:
      properties:
        answer:
          description: The answer for the related question
          type: string
        question:
          description: The text of the related question
          type: string
        ranges:
          description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
          type: array
          items:
            description: A subsection of a given string to which some special formatting should be applied.
            required: *ref_2
            properties:
              document:
                properties:
                  connectorType:
                    type: object
                    description: ConnectorType object (max depth)
                  containerDocument:
                    type: object
                    description: Document object (circular reference)
                  content:
                    type: object
                    description: DocumentContent object (max depth)
                  datasource:
                    description: The app or other repository type from which the document was extracted
                    type: string
                  docType:
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                    type: string
                  id:
                    description: The Glean Document ID.
                    type: string
                  metadata:
                    type: object
                    description: DocumentMetadata object (max depth)
                  parentDocument:
                    type: object
                    description: Document object (circular reference)
                  sections:
                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                    type: array
                    items:
                      type: object
                      properties:
                        DocumentSection:
                          type: object
                          description: DocumentSection object (max depth)
                  title:
                    description: The title of the document.
                    type: string
                  url:
                    description: A permalink for the document.
                    type: string
                type: object
              endIndex:
                description: The exclusive end index of the range.
                type: integer
              startIndex:
                description: The inclusive start index of the range.
                type: integer
              type:
                enum: *ref_3
                type: string
              url:
                description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                type: string
            type: object
      type: object
    ChatResponse:
      description: A single response from the /chat backend.
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
        chatId:
          type: string
          description: The id of the associated Chat the messages belong to, if one exists.
        followUpPrompts:
          type: array
          items:
            type: string
          description: Follow-up prompts for the user to potentially use
        backendTimeMillis:
          type: integer
          format: int64
          description: Time in milliseconds the backend took to respond to the request.
          example: 1100
        chatSessionTrackingToken:
          type: string
          description: A token that is used to track the session.
    Chat:
      description: A historical representation of a series of chat messages a user had with Glean Assistant.
      allOf:
        - $ref: '#/components/schemas/ChatMetadata'
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          description: The chat messages within a Chat.
    ChatFileMetadata:
      type: object
      description: Metadata of a file uploaded by a user for Chat.
      properties:
        status:
          $ref: '#/components/schemas/ChatFileStatus'
        uploadTime:
          type: integer
          format: int64
          description: Upload time, in epoch seconds.
        processedSize:
          type: integer
          format: int64
          description: Size of the processed file in bytes.
        failureReason:
          $ref: '#/components/schemas/ChatFileFailureReason'
        mimeType:
          description: MIME type of the file.
          type: string
    CalendarAttendees:
      properties:
        isLimit:
          description: Whether the total count of the people returned is at the retrieval limit.
          type: boolean
        numAccepted:
          description: Total number of attendees who have accepted this event.
          type: integer
        numDeclined:
          description: Total number of attendees who have declined this event.
          type: integer
        numNoResponse:
          description: Total number of attendees who have not responded to this event.
          type: integer
        numTentative:
          description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
          type: integer
        people:
          description: Full details of some of the attendees of this event
          type: array
          items:
            required: *ref_4
            properties:
              groupAttendees:
                description: If this attendee is a group, represents the list of individual attendees in the group.
                type: array
                items:
                  type: object
                  properties:
                    CalendarAttendee:
                      type: object
                      description: CalendarAttendee object (circular reference)
              isInGroup:
                description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                type: boolean
              isOrganizer:
                description: Whether or not this attendee is an organizer.
                type: boolean
              person:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              responseStatus:
                enum: *ref_5
                type: string
            type: object
        total:
          description: Total number of attendees in this event.
          type: integer
      type: object
    PinDocumentMutableProperties:
      properties:
        queries:
          type: array
          description: The query strings for which the pinned result will show.
          items:
            type: string
        audienceFilters:
          type: array
          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
    ReferenceRange:
      description: Each text range from the response can correspond to an array of snippets from the citation source.
      properties:
        textRange:
          $ref: '#/components/schemas/TextRange'
        snippets:
          type: array
          items:
            $ref: '#/components/schemas/SearchResultSnippet'
    ChatMetadata:
      description: Metadata of a Chat a user had with Glean Assistant. This contains no actual conversational content.
      properties:
        id:
          type: string
          description: The opaque id of the Chat.
        createTime:
          type: integer
          description: Server Unix timestamp of the creation time (in seconds since epoch UTC).
        createdBy:
          $ref: '#/components/schemas/Person'
          description: The user who created this Chat.
        updateTime:
          type: integer
          description: Server Unix timestamp of the update time (in seconds since epoch UTC).
        name:
          type: string
          description: The name of the Chat.
        applicationId:
          type: string
          description: The ID of the AI App that this Chat is associated to.
        applicationName:
          type: string
          description: The display name of the AI App that this Chat is associated to.
        icon:
          $ref: '#/components/schemas/IconConfig'
    SearchResultSnippet:
      example: &ref_26
        snippet: snippet
        mimeType: mimeType
      required: &ref_27
        - snippet
      properties:
        mimeType:
          description: The mime type of the snippets, currently either text/plain or text/html.
          type: string
        ranges:
          description: The bolded ranges within text.
          type: array
          items:
            description: A subsection of a given string to which some special formatting should be applied.
            required: *ref_2
            properties:
              document:
                properties:
                  connectorType:
                    type: object
                    description: ConnectorType object (max depth)
                  containerDocument:
                    type: object
                    description: Document object (circular reference)
                  content:
                    type: object
                    description: DocumentContent object (max depth)
                  datasource:
                    description: The app or other repository type from which the document was extracted
                    type: string
                  docType:
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                    type: string
                  id:
                    description: The Glean Document ID.
                    type: string
                  metadata:
                    type: object
                    description: DocumentMetadata object (max depth)
                  parentDocument:
                    type: object
                    description: Document object (circular reference)
                  sections:
                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                    type: array
                    items:
                      type: object
                      properties:
                        DocumentSection:
                          type: object
                          description: DocumentSection object (max depth)
                  title:
                    description: The title of the document.
                    type: string
                  url:
                    description: A permalink for the document.
                    type: string
                type: object
              endIndex:
                description: The exclusive end index of the range.
                type: integer
              startIndex:
                description: The inclusive start index of the range.
                type: integer
              type:
                enum: *ref_3
                type: string
              url:
                description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                type: string
            type: object
        snippet:
          description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
          type: string
        snippetTextOrdering:
          description: Used for sorting based off the snippet's location within all_snippetable_text
          type: integer
        text:
          description: A matching snippet from the document with no highlights.
          type: string
        url:
          description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
          type: string
      type: object
    ChatRestrictionFilters:
      allOf:
        - $ref: '#/components/schemas/RestrictionFilters'
        - type: object
          properties:
            documentSpecs:
              type: array
              items:
                $ref: '#/components/schemas/DocumentSpec'
            datasourceInstances:
              type: array
              items:
                type: string
    AnswerBoardMutableProperties:
      type: object
      properties:
        addedRoles:
          description: A list of added user roles for the Collection.
          type: array
          items:
            required: &ref_6
              - role
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        audienceFilters:
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          type: array
          items:
            example: &ref_7
              fieldName: type
              values:
                - value: Spreadsheet
                  relationType: EQUALS
                - value: Presentation
                  relationType: EQUALS
            properties:
              fieldName:
                example: owner
                type: string
              groupName:
                description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                example: Spreadsheet
                type: string
              values:
                description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                type: array
                items:
                  type: object
                  properties:
                    FacetFilterValue:
                      type: object
                      description: FacetFilterValue object (max depth)
            type: object
        description:
          description: A brief summary of the Collection's contents.
          type: string
        name:
          description: The unique name of the Collection.
          type: string
        removedRoles:
          description: A list of removed user roles for the Collection.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
      required:
        - name
    Permissions:
      description: |-
        Describes the permissions levels that a user has for permissioned features. When the client sends this, Permissions.read and Permissions.write are the additional permissions granted to a user on top of what they have via their roles.
        When the server sends this, Permissions.read and Permissions.write are the complete (merged) set of permissions the user has, and Permissions.roles is just for display purposes.
      properties:
        canAdminSearch:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user has access to /adminsearch
        canAdminClientApiGlobalTokens:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user can administrate client API tokens with global scope
        canDlp:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user has access to data loss prevention (DLP) features
        read:
          $ref: '#/components/schemas/ReadPermissions'
        write:
          $ref: '#/components/schemas/WritePermissions'
        grant:
          $ref: '#/components/schemas/GrantPermissions'
        role:
          type: string
          description: The roleId of the canonical role a user has. The displayName is equal to the roleId.
        roles:
          type: array
          description: The roleIds of the roles a user has.
          items:
            type: string
    CollectionMutableProperties:
      type: object
      properties:
        addedRoles:
          description: A list of added user roles for the Collection.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        audienceFilters:
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          type: array
          items:
            example: *ref_7
            properties:
              fieldName:
                example: owner
                type: string
              groupName:
                description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                example: Spreadsheet
                type: string
              values:
                description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                type: array
                items:
                  type: object
                  properties:
                    FacetFilterValue:
                      type: object
                      description: FacetFilterValue object (max depth)
            type: object
        description:
          description: A brief summary of the Collection's contents.
          type: string
        name:
          description: The unique name of the Collection.
          type: string
        removedRoles:
          description: A list of removed user roles for the Collection.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        adminLocked:
          description: Indicates whether edits are allowed for everyone or only admins.
          type: boolean
        allowedDatasource:
          description: The datasource type this Collection can hold.
          type: string
        icon:
          description: The emoji icon of this Collection.
          type: string
        parentId:
          description: The parent of this Collection, or 0 if it's a top-level Collection.
          type: integer
        thumbnail:
          properties:
            photoId:
              description: Photo id if the thumbnail is from splash.
              type: string
            url:
              description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
              type: string
          type: object
      required:
        - name
    ChatMessageFragment:
      description: Represents a part of a ChatMessage that originates from a single action/tool. It is designed to support rich data formats beyond simple text, allowing for a more dynamic and interactive chat experience. Each fragment can include various types of content, such as text, search queries, action information, and more. Also, each ChatMessageFragment should only have one of structuredResults, querySuggestion, writeAction, followupAction, or file.
      allOf:
        - $ref: '#/components/schemas/Result'
        - type: object
          properties:
            text:
              type: string
            querySuggestion:
              description: The search queries issued while responding.
              $ref: '#/components/schemas/QuerySuggestion'
            file:
              description: Files referenced in the message fragment. This is used to construct rich-text messages with file references.
              $ref: '#/components/schemas/ChatFile'
            action:
              description: Basic information about an action. This can be used to construct rich-text messages with action references.
              $ref: '#/components/schemas/ToolInfo'
    ChatRequestStream:
      required:
        - messages
      properties:
        saveChat:
          type: boolean
          description: Save the current interaction as a Chat for the user to access and potentially continue later.
        chatId:
          type: string
          description: The id of the Chat that context should be retrieved from and messages added to. An empty id starts a new Chat, and the Chat is saved if saveChat is true.
        messages:
          type: array
          description: A list of chat messages, from most recent to least recent. It can be assumed that the first chat message in the list is the user's most recent query.
          items:
            $ref: '#/components/schemas/ChatMessage'
        agentConfig:
          $ref: '#/components/schemas/AgentConfig'
          description: Describes the agent that will execute the request.
        inclusions:
          $ref: '#/components/schemas/ChatRestrictionFilters'
          description: A list of filters which only allows chat to access certain content.
        exclusions:
          $ref: '#/components/schemas/ChatRestrictionFilters'
          description: A list of filters which disallows chat from accessing certain content. If content is in both inclusions and exclusions, it'll be excluded.
        timeoutMillis:
          type: integer
          description: Timeout in milliseconds for the request. A `408` error will be returned if handling the request takes longer.
          example: 30000
        applicationId:
          type: string
          description: The ID of the application this request originates from, used to determine the configuration of underlying chat processes. This should correspond to the ID set during admin setup. If not specified, the default chat experience will be used.
        stream:
          type: boolean
          description: If set, response lines will be streamed one-by-one as they become available. Each will be a ChatResponse, formatted as JSON, and separated by a new line. If false, the entire response will be returned at once. Note that if this is set and the model being used does not support streaming, the model's response will not be streamed, but other messages from the endpoint still will be.
          default: true
    CollectionPinnedMetadata:
      required:
        - pinnedCategories
        - eligibleCategoriesForPinning
      properties:
        existingPins:
          type: array
          items:
            $ref: '#/components/schemas/CollectionPinTarget'
          description: List of targets this Collection is pinned to.
        eligiblePins:
          type: array
          items:
            $ref: '#/components/schemas/CollectionPinMetadata'
          description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
    CustomEntity:
      type: object
      properties:
        permissions:
          properties:
            write:
              type: object
              description: WritePermission object (max depth)
          type: object
        datasource:
          description: The datasource the custom entity is from.
          type: string
        id:
          description: Unique identifier.
          type: string
        metadata:
          properties:
            customData:
              additionalProperties: &ref_34
                $ref: '#/components/schemas/CustomDataValue'
              description: Custom fields specific to individual datasources
              type: object
          type: object
        objectType:
          description: The type of the entity. Interpretation is specific to each datasource
          type: string
        roles:
          description: A list of user roles for the custom entity explicitly granted by the owner.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                required: &ref_8
                  - type
                  - id
                properties:
                  id:
                    description: A unique identifier for the group. May be the same as name.
                    type: string
                  name:
                    description: Name of the group.
                    type: string
                  type:
                    type: object
                    description: GroupType object (max depth)
                type: object
              person:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              role:
                description: A user's role with respect to a specific document.
                enum: &ref_9
                  - OWNER
                  - VIEWER
                  - ANSWER_MODERATOR
                  - EDITOR
                  - VERIFIER
                type: string
              sourceDocumentSpec:
                oneOf:
                  - type: object
                    properties:
                      url:
                        description: The URL of the document.
                        type: string
                  - type: object
                    properties:
                      id:
                        description: The ID of the document.
                        type: string
                  - type: object
                    properties:
                      contentId:
                        description: The id for user generated content.
                        type: integer
                      docType:
                        description: The specific type of the user generated content type.
                        type: string
                      ugcType:
                        description: The type of the user generated content (UGC datasource).
                        enum: &ref_10
                          - ANNOUNCEMENTS
                          - ANSWERS
                          - COLLECTIONS
                          - SHORTCUTS
                        type: string
            type: object
        title:
          description: Title or name of the custom entity.
          type: string
    StructuredText:
      type: object
      properties:
        text:
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
          type: string
        structuredList:
          description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
          type: array
          items:
            properties:
              document:
                properties:
                  connectorType:
                    type: object
                    description: ConnectorType object (max depth)
                  containerDocument:
                    type: object
                    description: Document object (circular reference)
                  content:
                    type: object
                    description: DocumentContent object (max depth)
                  datasource:
                    description: The app or other repository type from which the document was extracted
                    type: string
                  docType:
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                    type: string
                  id:
                    description: The Glean Document ID.
                    type: string
                  metadata:
                    type: object
                    description: DocumentMetadata object (max depth)
                  parentDocument:
                    type: object
                    description: Document object (circular reference)
                  sections:
                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                    type: array
                    items:
                      type: object
                      properties:
                        DocumentSection:
                          type: object
                          description: DocumentSection object (max depth)
                  title:
                    description: The title of the document.
                    type: string
                  url:
                    description: A permalink for the document.
                    type: string
                type: object
              link:
                example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
                type: string
              structuredResult:
                description: A single object that can support any object in the work graph. Only a single object will be populated.
                properties:
                  answer:
                    type: object
                    description: Answer object (max depth)
                  answerBoard:
                    type: object
                    description: AnswerBoard object (max depth)
                  app:
                    type: object
                    description: AppResult object (max depth)
                  code:
                    type: object
                    description: Code object (max depth)
                  collection:
                    type: object
                    description: Collection object (max depth)
                  customEntity:
                    type: object
                    description: CustomEntity object (max depth)
                  customer:
                    type: object
                    description: Customer object (max depth)
                  disambiguation:
                    type: object
                    description: Disambiguation object (max depth)
                  document:
                    type: object
                    description: Document object (max depth)
                  extractedQnA:
                    type: object
                    description: ExtractedQnA object (max depth)
                  meeting:
                    type: object
                    description: Meeting object (max depth)
                  person:
                    type: object
                    description: Person object (max depth)
                  prominence:
                    description: The level of visual distinction that should be given to a result.
                    enum: &ref_49
                      - HERO
                      - PROMOTED
                      - STANDARD
                    type: string
                    x-enumDescriptions: &ref_50
                      HERO: A high-confidence result that should feature prominently on the page.
                      PROMOTED: May not be the best result but should be given additional visual distinction.
                      STANDARD: Should not be distinct from any other results.
                  querySuggestions:
                    type: object
                    description: QuerySuggestionList object (max depth)
                  relatedDocuments:
                    description: A list of documents related to this structured result.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                  relatedQuestion:
                    type: object
                    description: RelatedQuestion object (max depth)
                  shortcut:
                    type: object
                    description: Shortcut object (max depth)
                  snippets:
                    description: Any snippets associated to the populated object.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResultSnippet:
                          type: object
                          description: SearchResultSnippet object (max depth)
                  source:
                    description: Source context for this result. Possible values depend on the result type.
                    enum: &ref_51
                      - EXPERT_DETECTION
                      - ENTITY_NLQ
                    type: string
                  team:
                    type: object
                    description: Team object (max depth)
                  trackingToken:
                    description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                    type: string
                type: object
              text:
                example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
                type: string
            type: object
      required:
        - text
    ShortcutMutableProperties:
      properties:
        addedRoles:
          description: A list of user roles added for the Shortcut.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                required: *ref_8
                properties:
                  id:
                    description: A unique identifier for the group. May be the same as name.
                    type: string
                  name:
                    description: Name of the group.
                    type: string
                  type:
                    type: object
                    description: GroupType object (max depth)
                type: object
              person:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              role:
                description: A user's role with respect to a specific document.
                enum: *ref_9
                type: string
              sourceDocumentSpec:
                oneOf:
                  - type: object
                    properties:
                      url:
                        description: The URL of the document.
                        type: string
                  - type: object
                    properties:
                      id:
                        description: The ID of the document.
                        type: string
                  - type: object
                    properties:
                      contentId:
                        description: The id for user generated content.
                        type: integer
                      docType:
                        description: The specific type of the user generated content type.
                        type: string
                      ugcType:
                        description: The type of the user generated content (UGC datasource).
                        enum: *ref_10
                        type: string
            type: object
        description:
          description: A short, plain text blurb to help people understand the intent of the shortcut.
          type: string
        destinationDocumentId:
          description: Glean Document ID for the URL, if known.
          type: string
        destinationUrl:
          description: Destination URL for the shortcut.
          type: string
        inputAlias:
          description: Link text following go/ prefix as entered by the user.
          type: string
        removedRoles:
          description: A list of user roles removed for the Shortcut.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                required: *ref_8
                properties:
                  id:
                    description: A unique identifier for the group. May be the same as name.
                    type: string
                  name:
                    description: Name of the group.
                    type: string
                  type:
                    type: object
                    description: GroupType object (max depth)
                type: object
              person:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              role:
                description: A user's role with respect to a specific document.
                enum: *ref_9
                type: string
              sourceDocumentSpec:
                oneOf:
                  - type: object
                    properties:
                      url:
                        description: The URL of the document.
                        type: string
                  - type: object
                    properties:
                      id:
                        description: The ID of the document.
                        type: string
                  - type: object
                    properties:
                      contentId:
                        description: The id for user generated content.
                        type: integer
                      docType:
                        description: The specific type of the user generated content type.
                        type: string
                      ugcType:
                        description: The type of the user generated content (UGC datasource).
                        enum: *ref_10
                        type: string
            type: object
        unlisted:
          description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
          type: boolean
        urlTemplate:
          description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
          type: string
      type: object
    ChatMessageCitation:
      description: Information about the source for a ChatMessage.
      properties:
        trackingToken:
          type: string
          description: An opaque token that represents this particular result in this particular ChatMessage. To be used for /feedback reporting.
        sourceDocument:
          $ref: '#/components/schemas/Document'
        sourceFile:
          $ref: '#/components/schemas/ChatFile'
        sourcePerson:
          $ref: '#/components/schemas/Person'
        referenceRanges:
          description: Each reference range and its corresponding snippets
          type: array
          items:
            $ref: '#/components/schemas/ReferenceRange'
    ChatMessage:
      description: A message that is rendered as one coherent unit with one given sender.
      properties:
        agentConfig:
          $ref: '#/components/schemas/AgentConfig'
          description: Describes the agent config that generated this message. Populated on responses and not required on requests.
        author:
          default: USER
          enum:
            - USER
            - GLEAN_AI
        citations:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageCitation'
          description: A list of Citations that were used to generate the response.
        uploadedFileIds:
          type: array
          items:
            type: string
          description: IDs of files uploaded in the message that are referenced to generate the answer.
        fragments:
          type: array
          description: A list of rich data used to represent the response or formulate a request. These are linearly stitched together to support richer data formats beyond simple text.
          items:
            $ref: '#/components/schemas/ChatMessageFragment'
        ts:
          type: string
          description: Response timestamp of the message.
        messageId:
          type: string
          description: A unique server-side generated ID used to identify a message, automatically populated for any USER authored messages.
        messageTrackingToken:
          type: string
          description: Opaque tracking token generated server-side.
        messageType:
          type: string
          default: CONTENT
          description: Semantically groups content of a certain type. It can be used for purposes such as differential UI treatment. USER authored messages should be of type CONTENT and do not need `messageType` specified.
          x-enumDescriptions:
            UPDATE: An intermediate state message for progress updates.
            CONTENT: A user query or response message.
            CONTEXT: A message providing context in addition to the user query.
            DEBUG: A debug message. Strictly used internally.
            DEBUG_EXTERNAL: A debug message to be used while debugging Action creation.
            ERROR: A message that describes an error while processing the request.
            HEADING: A heading message used to distinguish different sections of the holistic response.
            WARNING: A warning message to be shown to the user.
          enum:
            - UPDATE
            - CONTENT
            - CONTEXT
            - DEBUG
            - DEBUG_EXTERNAL
            - ERROR
            - HEADING
            - WARNING
        hasMoreFragments:
          deprecated: true
          type: boolean
          description: Signals there are additional response fragments incoming.
    ChatRequest:
      required:
        - messages
      properties:
        saveChat:
          type: boolean
          description: Save the current interaction as a Chat for the user to access and potentially continue later.
        chatId:
          type: string
          description: The id of the Chat that context should be retrieved from and messages added to. An empty id starts a new Chat, and the Chat is saved if saveChat is true.
        messages:
          type: array
          description: A list of chat messages, from most recent to least recent. It can be assumed that the first chat message in the list is the user's most recent query.
          items:
            $ref: '#/components/schemas/ChatMessage'
        agentConfig:
          $ref: '#/components/schemas/AgentConfig'
          description: Describes the agent that will execute the request.
        inclusions:
          $ref: '#/components/schemas/ChatRestrictionFilters'
          description: A list of filters which only allows chat to access certain content.
        exclusions:
          $ref: '#/components/schemas/ChatRestrictionFilters'
          description: A list of filters which disallows chat from accessing certain content. If content is in both inclusions and exclusions, it'll be excluded.
        timeoutMillis:
          type: integer
          description: Timeout in milliseconds for the request. A `408` error will be returned if handling the request takes longer.
          example: 30000
        sessionInfo:
          description: Optional object for tracking the session used by the client and for debugging purposes.
          $ref: '#/components/schemas/SessionInfo'
        applicationId:
          type: string
          description: The ID of the application this request originates from, used to determine the configuration of underlying chat processes. This should correspond to the ID set during admin setup. If not specified, the default chat experience will be used.
        agentId:
          type: string
          description: The ID of the Agent that should process this chat request. Only Agents with trigger set to 'User chat message' are invokable through this API. If not specified, the default chat experience will be used.
        stream:
          type: boolean
          description: If set, response lines will be streamed one-by-one as they become available. Each will be a ChatResponse, formatted as JSON, and separated by a new line. If false, the entire response will be returned at once. Note that if this is set and the model being used does not support streaming, the model's response will not be streamed, but other messages from the endpoint still will be.
    CollectionBaseMutableProperties:
      required:
        - name
      properties:
        addedRoles:
          description: A list of added user roles for the Collection.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                required: *ref_8
                properties:
                  id:
                    description: A unique identifier for the group. May be the same as name.
                    type: string
                  name:
                    description: Name of the group.
                    type: string
                  type:
                    type: object
                    description: GroupType object (max depth)
                type: object
              person:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              role:
                description: A user's role with respect to a specific document.
                enum: *ref_9
                type: string
              sourceDocumentSpec:
                oneOf:
                  - type: object
                    properties:
                      url:
                        description: The URL of the document.
                        type: string
                  - type: object
                    properties:
                      id:
                        description: The ID of the document.
                        type: string
                  - type: object
                    properties:
                      contentId:
                        description: The id for user generated content.
                        type: integer
                      docType:
                        description: The specific type of the user generated content type.
                        type: string
                      ugcType:
                        description: The type of the user generated content (UGC datasource).
                        enum: *ref_10
                        type: string
            type: object
        audienceFilters:
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          type: array
          items:
            example: *ref_7
            properties:
              fieldName:
                example: owner
                type: string
              groupName:
                description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                example: Spreadsheet
                type: string
              values:
                description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                type: array
                items:
                  properties:
                    isNegated:
                      deprecated: true
                      description: DEPRECATED - please use relationType instead
                      type: boolean
                    relationType:
                      enum: &ref_14
                        - EQUALS
                        - ID_EQUALS
                        - LT
                        - GT
                        - NOT_EQUALS
                      example: EQUALS
                      type: string
                    value:
                      example: Spreadsheet
                      type: string
                  type: object
            type: object
        description:
          description: A brief summary of the Collection's contents.
          type: string
        name:
          description: The unique name of the Collection.
          type: string
        removedRoles:
          description: A list of removed user roles for the Collection.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                required: *ref_8
                properties:
                  id:
                    description: A unique identifier for the group. May be the same as name.
                    type: string
                  name:
                    description: Name of the group.
                    type: string
                  type:
                    type: object
                    description: GroupType object (max depth)
                type: object
              person:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              role:
                description: A user's role with respect to a specific document.
                enum: *ref_9
                type: string
              sourceDocumentSpec:
                oneOf:
                  - type: object
                    properties:
                      url:
                        description: The URL of the document.
                        type: string
                  - type: object
                    properties:
                      id:
                        description: The ID of the document.
                        type: string
                  - type: object
                    properties:
                      contentId:
                        description: The id for user generated content.
                        type: integer
                      docType:
                        description: The specific type of the user generated content type.
                        type: string
                      ugcType:
                        description: The type of the user generated content (UGC datasource).
                        enum: *ref_10
                        type: string
            type: object
      type: object
    Verification:
      required: &ref_44
        - state
      properties:
        metadata:
          required: &ref_61
            - documentId
          properties:
            candidateVerifiers:
              description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
              type: array
              items:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
            document:
              properties:
                connectorType:
                  type: object
                  description: ConnectorType object (max depth)
                containerDocument:
                  type: object
                  description: Document object (circular reference)
                content:
                  type: object
                  description: DocumentContent object (max depth)
                datasource:
                  description: The app or other repository type from which the document was extracted
                  type: string
                docType:
                  description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                id:
                  description: The Glean Document ID.
                  type: string
                metadata:
                  type: object
                  description: DocumentMetadata object (max depth)
                parentDocument:
                  type: object
                  description: Document object (circular reference)
                sections:
                  description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                  type: array
                  items:
                    type: object
                    properties:
                      DocumentSection:
                        type: object
                        description: DocumentSection object (max depth)
                title:
                  description: The title of the document.
                  type: string
                url:
                  description: A permalink for the document.
                  type: string
              type: object
            expirationTs:
              description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
              type: integer
            lastReminder:
              required: &ref_11
                - assignee
                - remindAt
              properties:
                assignee:
                  type: object
                  description: Person object (max depth)
                createdAt:
                  description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                  type: integer
                reason:
                  description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                  type: string
                remindAt:
                  description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                  type: integer
                requestor:
                  type: object
                  description: Person object (max depth)
              type: object
            lastVerificationTs:
              description: The unix timestamp of the verification (in seconds since epoch UTC).
              type: integer
            lastVerifier:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            reminders:
              description: Info about all outstanding verification reminders for the document if exists.
              type: array
              items:
                required: *ref_11
                properties:
                  assignee:
                    type: object
                    description: Person object (max depth)
                  createdAt:
                    description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                    type: integer
                  reason:
                    description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                    type: string
                  remindAt:
                    description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                    type: integer
                  requestor:
                    type: object
                    description: Person object (max depth)
                type: object
            visitorCount:
              description: Number of visitors to the document during included time periods.
              type: array
              items:
                required: &ref_12
                  - count
                properties:
                  count:
                    description: The counter value
                    type: integer
                  org:
                    description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                    type: string
                  period:
                    type: object
                    description: Period object (max depth)
                type: object
          type: object
        state:
          description: The verification state for the document.
          enum: &ref_45
            - UNVERIFIED
            - VERIFIED
            - DEPRECATED
          type: string
      type: object
    ToolMetadata:
      description: The manifest for a tool that can be used to augment Glean Assistant.
      required:
        - type
        - name
        - displayName
        - displayDescription
      properties:
        type:
          description: The type of tool.
          type: string
          enum:
            - RETRIEVAL
            - ACTION
        name:
          description: Unique identifier for the tool. Name should be understandable by the LLM, and will be used to invoke a tool.
          type: string
        displayName:
          $ref: '#/components/schemas/displayName'
        toolId:
          type: string
          description: An opaque id which is unique identifier for the tool.
        displayDescription:
          description: Description of the tool meant for a human.
          type: string
        logoUrl:
          $ref: '#/components/schemas/logoUrl'
        objectName:
          $ref: '#/components/schemas/objectName'
        knowledgeType:
          type: string
          description: Indicates the kind of knowledge a tool would access or modify.
          enum:
            - NEUTRAL_KNOWLEDGE
            - COMPANY_KNOWLEDGE
            - WORLD_KNOWLEDGE
        createdBy:
          $ref: '#/components/schemas/PersonObject'
        lastUpdatedBy:
          $ref: '#/components/schemas/PersonObject'
        createdAt:
          type: string
          format: date-time
          description: The time the tool was created in ISO format (ISO 8601)
        lastUpdatedAt:
          type: string
          format: date-time
          description: The time the tool was last updated in ISO format (ISO 8601)
        writeActionType:
          type: string
          description: Valid only for write actions. Represents the type of write action. REDIRECT - The client renders the URL which contains information for carrying out the action. EXECUTION - Send a request to an external server and execute the action.
          enum:
            - REDIRECT
            - EXECUTION
        authType:
          type: string
          enum:
            - NONE
            - OAUTH_USER
            - OAUTH_ADMIN
            - API_KEY
            - BASIC_AUTH
            - DWD
          description: |
            The type of authentication being used.
            Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
            'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
            'OAUTH_USER' uses individual user tokens for external API calls.
            'DWD' refers to domain wide delegation.
        auth:
          deprecated: true
          $ref: '#/components/schemas/AuthConfig'
        permissions:
          deprecated: true
          $ref: '#/components/schemas/ObjectPermissions'
        usageInstructions:
          description: Usage instructions for the LLM to use this action.
          type: string
        isSetupFinished:
          type: boolean
          description: Whether this action has been fully configured and validated.
    DocumentInteractions:
      properties:
        numComments:
          description: The count of comments (thread replies in the case of slack).
          type: integer
        numReactions:
          description: The count of reactions on the document.
          type: integer
        reactions:
          deprecated: true
          description: To be deprecated in favor of reacts. A (potentially non-exhaustive) list of reactions for the document.
          type: array
          items:
            type: string
        reacts:
          type: array
          items:
            properties:
              count:
                description: The count of the reaction type on the document.
                type: integer
              reactedByViewer:
                description: Whether the user in context reacted with this type to the document.
                type: boolean
              reactors:
                type: array
                items:
                  example: *ref_0
                  required: *ref_1
                  properties:
                    metadata:
                      type: object
                      description: PersonMetadata object (max depth)
                    name:
                      description: The display name.
                      type: string
                    obfuscatedId:
                      description: An opaque identifier that can be used to request metadata for a Person.
                      type: string
                    relatedDocuments:
                      description: A list of documents related to this person.
                      type: array
                      items:
                        type: object
                        properties:
                          RelatedDocuments:
                            type: object
                            description: RelatedDocuments object (max depth)
                  type: object
              type:
                type: string
            type: object
        shares:
          description: Describes instances of someone posting a link to this document in one of our indexed datasources.
          type: array
          items:
            description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
            required: &ref_41
              - numDaysAgo
            properties:
              numDaysAgo:
                description: The number of days that has passed since the share happened
                type: integer
              sharer:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              sharingDocument:
                properties:
                  connectorType:
                    type: object
                    description: ConnectorType object (max depth)
                  containerDocument:
                    type: object
                    description: Document object (circular reference)
                  content:
                    type: object
                    description: DocumentContent object (max depth)
                  datasource:
                    description: The app or other repository type from which the document was extracted
                    type: string
                  docType:
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                    type: string
                  id:
                    description: The Glean Document ID.
                    type: string
                  metadata:
                    type: object
                    description: DocumentMetadata object (max depth)
                  parentDocument:
                    type: object
                    description: Document object (circular reference)
                  sections:
                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                    type: array
                    items:
                      type: object
                      properties:
                        DocumentSection:
                          type: object
                          description: DocumentSection object (max depth)
                  title:
                    description: The title of the document.
                    type: string
                  url:
                    description: A permalink for the document.
                    type: string
                type: object
            type: object
        visitorCount:
          required: *ref_12
          properties:
            count:
              description: The counter value
              type: integer
            org:
              description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
              type: string
            period:
              properties:
                end:
                  type: object
                  description: TimePoint object (max depth)
                maxDaysFromNow:
                  deprecated: true
                  description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                  type: integer
                minDaysFromNow:
                  deprecated: true
                  description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                  type: integer
                start:
                  type: object
                  description: TimePoint object (max depth)
              type: object
          type: object
      type: object
    TextRange:
      description: A subsection of a given string to which some special formatting should be applied.
      required: *ref_2
      properties:
        document:
          properties:
            connectorType:
              description: The source from which document content was pulled, e.g. an API crawl or browser history
              enum: &ref_42
                - API_CRAWL
                - BROWSER_CRAWL
                - BROWSER_HISTORY
                - BUILTIN
                - FEDERATED_SEARCH
                - PUSH_API
                - WEB_CRAWL
                - NATIVE_HISTORY
              type: string
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              properties:
                fullTextList:
                  description: The plaintext content of the document.
                  type: array
                  items:
                    type: string
              type: object
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              example: &ref_43
                container: container
                parentId: JIRA_EN-1337
                createTime: '2000-01-23T04:56:07.000Z'
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: '2000-01-23T04:56:07.000Z'
                mimeType: mimeType
                objectType: Feature Request
                components:
                  - Backend
                  - Networking
                status:
                  - Done
                customData:
                  someCustomField: someCustomValue
              properties:
                ancestors:
                  description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
                  type: array
                  items:
                    type: object
                    properties:
                      Document:
                        type: object
                        description: Document object (circular reference)
                assignedTo:
                  type: object
                  description: Person object (max depth)
                author:
                  type: object
                  description: Person object (max depth)
                collections:
                  description: A list of collections that the document belongs to.
                  type: array
                  items:
                    type: object
                    properties:
                      Collection:
                        type: object
                        description: Collection object (max depth)
                components:
                  description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
                  type: array
                  items:
                    type: string
                contactPerson:
                  type: object
                  description: Person object (max depth)
                container:
                  description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
                  type: string
                containerId:
                  description: The Glean Document ID of the container. Uniquely identifies the container.
                  type: string
                createTime:
                  format: date-time
                  type: string
                customData:
                  type: object
                  description: CustomData object (max depth)
                datasource:
                  type: string
                datasourceId:
                  description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
                  type: string
                datasourceInstance:
                  description: The datasource instance from which the document was extracted.
                  type: string
                documentCategory:
                  description: The document's document_category(.proto).
                  type: string
                documentId:
                  description: The index-wide unique identifier.
                  type: string
                documentIdHash:
                  description: Hash of the Glean Document ID.
                  type: string
                indexStatus:
                  type: object
                  description: IndexStatus object (max depth)
                interactions:
                  type: object
                  description: DocumentInteractions object (max depth)
                labels:
                  description: A list of tags for the document. Interpretation is datasource specific.
                  type: array
                  items:
                    type: string
                loggingId:
                  description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
                  type: string
                mentionedPeople:
                  description: A list of people mentioned in the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (max depth)
                mimeType:
                  type: string
                objectType:
                  description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                owner:
                  type: object
                  description: Person object (max depth)
                parentId:
                  description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
                  type: string
                path:
                  description: For file datasources like onedrive/github etc this has the path to the file
                  type: string
                permissions:
                  type: object
                  description: ObjectPermissions object (max depth)
                pins:
                  description: A list of stars associated with this result.  "Pin" is an older name.
                  type: array
                  items:
                    type: object
                    properties:
                      PinDocument:
                        type: object
                        description: PinDocument object (max depth)
                priority:
                  description: The document priority. Interpretation is datasource specific.
                  type: string
                shortcuts:
                  description: A list of shortcuts of which destination URL is for the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Shortcut:
                        type: object
                        description: Shortcut object (max depth)
                status:
                  description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
                  type: string
                statusCategory:
                  description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
                  type: string
                superContainerId:
                  description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
                  type: string
                thumbnail:
                  type: object
                  description: Thumbnail object (max depth)
                updateTime:
                  format: date-time
                  type: string
                updatedBy:
                  type: object
                  description: Person object (max depth)
                verification:
                  type: object
                  description: Verification object (max depth)
                viewerInfo:
                  type: object
                  description: ViewerInfo object (max depth)
                visibility:
                  type: object
                  description: DocumentVisibility object (max depth)
                visitCount:
                  type: object
                  description: CountInfo object (max depth)
              type: object
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  title:
                    description: The title of the document section (e.g. the section header).
                    type: string
                  url:
                    description: The permalink of the document section.
                    type: string
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        endIndex:
          description: The exclusive end index of the range.
          type: integer
        startIndex:
          description: The inclusive start index of the range.
          type: integer
        type:
          enum: *ref_3
          type: string
        url:
          description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
          type: string
      type: object
    Team:
      type: object
      properties:
        relatedObjects:
          additionalProperties: &ref_66
            $ref: '#/components/schemas/RelatedObjectEdge'
          description: A list of objects related to a source object.
          type: object
        permissions:
          properties:
            write:
              type: object
              description: WritePermission object (max depth)
          type: object
        bannerUrl:
          description: A link to the team's banner photo.
          format: url
          type: string
        businessUnit:
          description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
          type: string
        canBeDeleted:
          default: true
          description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
          type: boolean
        createdFrom:
          description: For teams created from docs, the doc title. Otherwise empty.
          type: string
        customFields:
          description: Customizable fields for additional team information.
          type: array
          items:
            required: *ref_13
            properties:
              displayable:
                default: true
                description: Determines whether the client should display this custom field
                type: boolean
              label:
                description: A user-facing label for this field.
                type: string
              values:
                type: array
                items:
                  oneOf:
                    - type: object
                      description: CustomFieldValueStr object (max depth)
                    - type: object
                      description: CustomFieldValueHyperlink object (max depth)
                    - type: object
                      description: CustomFieldValuePerson object (max depth)
            type: object
        datasource:
          description: the data source of the team, e.g. GDRIVE
          type: string
        datasourceProfiles:
          description: The datasource profiles of the team
          type: array
          items:
            required: &ref_46
              - datasource
              - handle
            properties:
              datasource:
                description: The datasource the profile is of.
                example: github
                type: string
              handle:
                description: The display name of the entity in the given datasource.
                type: string
              isUserGenerated:
                description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                type: boolean
              nativeAppUrl:
                description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                type: string
              url:
                description: URL to view the entity's profile.
                type: string
            type: object
        department:
          description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
          type: string
        description:
          description: A description of the team
          type: string
        emails:
          description: The emails for this team
          type: array
          items:
            properties:
              email:
                description: An email address
                format: email
                type: string
              isUserGenerated:
                description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                type: boolean
              type:
                default: OTHER
                enum: &ref_67
                  - PRIMARY
                  - SECONDARY
                  - ONCALL
                  - OTHER
                type: string
            type: object
        externalLink:
          description: Link to a team page on the internet or your company's intranet
          format: uri
          type: string
        id:
          description: Unique identifier
          type: string
        lastUpdatedAt:
          description: when this team was last updated.
          format: date-time
          type: string
        loggingId:
          description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
          type: string
        memberCount:
          description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
          type: integer
        members:
          description: The members on this team
          type: array
          items:
            description: Metadata about the relationship of a person to a team.
            required: &ref_21
              - person
            type: object
            properties:
              customRelationshipStr:
                description: Displayed name for the relationship if relationship is set to `OTHER`.
                type: string
              joinDate:
                description: The team member's start date
                format: date-time
                type: string
              person:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              relationship:
                default: MEMBER
                description: The team member's relationship to the team. This defaults to MEMBER if not set.
                enum: &ref_22
                  - MEMBER
                  - MANAGER
                  - LEAD
                  - POINT_OF_CONTACT
                  - OTHER
                type: string
        name:
          description: Team name
          type: string
        photoUrl:
          description: A link to the team's photo.
          format: url
          type: string
        status:
          default: PROCESSED
          description: whether this team is fully processed or there are still unprocessed operations that'll affect it
          enum: &ref_52
            - PROCESSED
            - QUEUED_FOR_CREATION
            - QUEUED_FOR_DELETION
          type: string
      required:
        - id
        - name
    Shortcut:
      type: object
      properties:
        id:
          description: The opaque id of the user generated content.
          type: integer
        addedRoles:
          description: A list of user roles added for the Shortcut.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        description:
          description: A short, plain text blurb to help people understand the intent of the shortcut.
          type: string
        destinationDocumentId:
          description: Glean Document ID for the URL, if known.
          type: string
        destinationUrl:
          description: Destination URL for the shortcut.
          type: string
        inputAlias:
          description: Link text following go/ prefix as entered by the user.
          type: string
        removedRoles:
          description: A list of user roles removed for the Shortcut.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        unlisted:
          description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
          type: boolean
        urlTemplate:
          description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
          type: string
        permissions:
          properties:
            write:
              type: object
              description: WritePermission object (max depth)
          type: object
        createTime:
          description: The time the shortcut was created in ISO format (ISO 8601).
          format: date-time
          type: string
        createdBy:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        destinationDocument:
          properties:
            connectorType:
              type: object
              description: ConnectorType object (max depth)
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              type: object
              description: DocumentContent object (max depth)
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              type: object
              description: DocumentMetadata object (max depth)
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  DocumentSection:
                    type: object
                    description: DocumentSection object (max depth)
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        editUrl:
          description: The URL using which the user can access the edit page of the shortcut.
          type: string
        intermediateUrl:
          description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
          type: string
        isExternal:
          description: Indicates whether a shortcut is native or external.
          type: boolean
        updateTime:
          description: The time the shortcut was updated in ISO format (ISO 8601).
          format: date-time
          type: string
        updatedBy:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              type: object
              description: PersonMetadata object (max depth)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                type: object
                properties:
                  RelatedDocuments:
                    type: object
                    description: RelatedDocuments object (max depth)
          type: object
        viewPrefix:
          description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
          type: string
        alias:
          description: canonical link text following go/ prefix where hyphen/underscore is removed.
          type: string
        roles:
          description: A list of user roles for the Go Link.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                required: *ref_8
                properties:
                  id:
                    description: A unique identifier for the group. May be the same as name.
                    type: string
                  name:
                    description: Name of the group.
                    type: string
                  type:
                    type: object
                    description: GroupType object (max depth)
                type: object
              person:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              role:
                description: A user's role with respect to a specific document.
                enum: *ref_9
                type: string
              sourceDocumentSpec:
                oneOf:
                  - type: object
                    properties:
                      url:
                        description: The URL of the document.
                        type: string
                  - type: object
                    properties:
                      id:
                        description: The ID of the document.
                        type: string
                  - type: object
                    properties:
                      contentId:
                        description: The id for user generated content.
                        type: integer
                      docType:
                        description: The specific type of the user generated content type.
                        type: string
                      ugcType:
                        description: The type of the user generated content (UGC datasource).
                        enum: *ref_10
                        type: string
            type: object
        title:
          description: Title for the Go Link
          type: string
      required:
        - inputAlias
    SearchRequestOptions:
      required:
        - facetBucketSize
      properties:
        datasourceFilter:
          type: string
          description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
        datasourcesFilter:
          type: array
          items:
            type: string
          description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
        queryOverridesFacetFilters:
          type: boolean
          description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
        facetFilters:
          type: array
          items:
            $ref: '#/components/schemas/FacetFilter'
          description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
        facetFilterSets:
          type: array
          items:
            $ref: '#/components/schemas/FacetFilterSet'
          description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
        facetBucketFilter:
          $ref: '#/components/schemas/FacetBucketFilter'
        facetBucketSize:
          type: integer
          description: The maximum number of FacetBuckets to return in each FacetResult.
        defaultFacets:
          type: array
          items:
            type: string
          description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
        authTokens:
          type: array
          description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
          items:
            $ref: '#/components/schemas/AuthToken'
        fetchAllDatasourceCounts:
          type: boolean
          description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
        responseHints:
          type: array
          description: Array of hints containing which fields should be populated in the response.
          items:
            type: string
            description: Hints for the response content.
            x-enumDescriptions:
              ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
              FACET_RESULTS: Return only facet results.
              QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
              RESULTS: Return search result documents.
              SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
            enum:
              - ALL_RESULT_COUNTS
              - FACET_RESULTS
              - QUERY_METADATA
              - RESULTS
              - SPELLCHECK_METADATA
        timezoneOffset:
          type: integer
          description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
        disableSpellcheck:
          type: boolean
          description: Whether or not to disable spellcheck.
        disableQueryAutocorrect:
          type: boolean
          description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
        returnLlmContentOverSnippets:
          type: boolean
          description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
        inclusions:
          $ref: '#/components/schemas/RestrictionFilters'
          description: A list of filters which restrict the search results to only the specified content.
        exclusions:
          $ref: '#/components/schemas/RestrictionFilters'
          description: A list of filters specifying content to avoid getting search results from. Exclusions take precendence over inclusions and other query parameters, such as search operators and search facets.
      example:
        datasourceFilter: JIRA
        datasourcesFilter:
          - JIRA
        queryOverridesFacetFilters: true
        facetFilters:
          - fieldName: fieldName
            values:
              - fieldValues
              - fieldValues
          - fieldName: fieldName
            values:
              - fieldValues
              - fieldValues
    AnswerMutableProperties:
      properties:
        addedRoles:
          description: A list of user roles for the answer added by the owner.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                required: *ref_8
                properties:
                  id:
                    description: A unique identifier for the group. May be the same as name.
                    type: string
                  name:
                    description: Name of the group.
                    type: string
                  type:
                    type: object
                    description: GroupType object (max depth)
                type: object
              person:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              role:
                description: A user's role with respect to a specific document.
                enum: *ref_9
                type: string
              sourceDocumentSpec:
                oneOf:
                  - type: object
                    properties:
                      url:
                        description: The URL of the document.
                        type: string
                  - type: object
                    properties:
                      id:
                        description: The ID of the document.
                        type: string
                  - type: object
                    properties:
                      contentId:
                        description: The id for user generated content.
                        type: integer
                      docType:
                        description: The specific type of the user generated content type.
                        type: string
                      ugcType:
                        description: The type of the user generated content (UGC datasource).
                        enum: *ref_10
                        type: string
            type: object
        audienceFilters:
          description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
          type: array
          items:
            example: *ref_7
            properties:
              fieldName:
                example: owner
                type: string
              groupName:
                description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                example: Spreadsheet
                type: string
              values:
                description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                type: array
                items:
                  properties:
                    isNegated:
                      deprecated: true
                      description: DEPRECATED - please use relationType instead
                      type: boolean
                    relationType:
                      enum: *ref_14
                      example: EQUALS
                      type: string
                    value:
                      example: Spreadsheet
                      type: string
                  type: object
            type: object
        boardId:
          deprecated: true
          description: The parent board ID of this Answer, or 0 if it's a floating Answer. Adding Answers to Answer Boards is no longer permitted.
          type: integer
        bodyText:
          description: The plain text answer to the question.
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
          type: string
        question:
          example: Why is the sky blue?
          type: string
        questionVariations:
          description: Additional ways of phrasing this question.
          type: array
          items:
            type: string
        removedRoles:
          description: A list of user roles for the answer removed by the owner.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                required: *ref_8
                properties:
                  id:
                    description: A unique identifier for the group. May be the same as name.
                    type: string
                  name:
                    description: Name of the group.
                    type: string
                  type:
                    type: object
                    description: GroupType object (max depth)
                type: object
              person:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              role:
                description: A user's role with respect to a specific document.
                enum: *ref_9
                type: string
              sourceDocumentSpec:
                oneOf:
                  - type: object
                    properties:
                      url:
                        description: The URL of the document.
                        type: string
                  - type: object
                    properties:
                      id:
                        description: The ID of the document.
                        type: string
                  - type: object
                    properties:
                      contentId:
                        description: The id for user generated content.
                        type: integer
                      docType:
                        description: The specific type of the user generated content type.
                        type: string
                      ugcType:
                        description: The type of the user generated content (UGC datasource).
                        enum: *ref_10
                        type: string
            type: object
        roles:
          description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                required: *ref_8
                properties:
                  id:
                    description: A unique identifier for the group. May be the same as name.
                    type: string
                  name:
                    description: Name of the group.
                    type: string
                  type:
                    type: object
                    description: GroupType object (max depth)
                type: object
              person:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              role:
                description: A user's role with respect to a specific document.
                enum: *ref_9
                type: string
              sourceDocumentSpec:
                oneOf:
                  - type: object
                    properties:
                      url:
                        description: The URL of the document.
                        type: string
                  - type: object
                    properties:
                      id:
                        description: The ID of the document.
                        type: string
                  - type: object
                    properties:
                      contentId:
                        description: The id for user generated content.
                        type: integer
                      docType:
                        description: The specific type of the user generated content type.
                        type: string
                      ugcType:
                        description: The type of the user generated content (UGC datasource).
                        enum: *ref_10
                        type: string
            type: object
        sourceDocumentSpec:
          oneOf:
            - type: object
              properties:
                url:
                  description: The URL of the document.
                  type: string
            - type: object
              properties:
                id:
                  description: The ID of the document.
                  type: string
            - type: object
              properties:
                contentId:
                  description: The id for user generated content.
                  type: integer
                docType:
                  description: The specific type of the user generated content type.
                  type: string
                ugcType:
                  description: The type of the user generated content (UGC datasource).
                  enum: *ref_10
                  type: string
        sourceType:
          enum: &ref_62
            - DOCUMENT
            - ASSISTANT
          type: string
      type: object
    QuerySuggestion:
      example: &ref_24
        query: app:github type:pull author:mortimer
        label: Mortimer's PRs
        datasource: github
      required: &ref_25
        - query
      properties:
        datasource:
          description: The datasource associated with the suggestion.
          type: string
        inputDetails:
          example: &ref_35
            hasCopyPaste: true
          properties:
            hasCopyPaste:
              description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
              type: boolean
          type: object
        label:
          description: A user-facing description to display for the suggestion.
          type: string
        missingTerm:
          description: A query term missing from the original query on which this suggestion is based.
          type: string
        query:
          description: The query being suggested (e.g. enforcing the missing term from the original query).
          type: string
        ranges:
          description: The bolded ranges within the query of the QuerySuggestion.
          type: array
          items:
            description: A subsection of a given string to which some special formatting should be applied.
            required: *ref_2
            properties:
              document:
                properties:
                  connectorType:
                    type: object
                    description: ConnectorType object (max depth)
                  containerDocument:
                    type: object
                    description: Document object (circular reference)
                  content:
                    type: object
                    description: DocumentContent object (max depth)
                  datasource:
                    description: The app or other repository type from which the document was extracted
                    type: string
                  docType:
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                    type: string
                  id:
                    description: The Glean Document ID.
                    type: string
                  metadata:
                    type: object
                    description: DocumentMetadata object (max depth)
                  parentDocument:
                    type: object
                    description: Document object (circular reference)
                  sections:
                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                    type: array
                    items:
                      type: object
                      properties:
                        DocumentSection:
                          type: object
                          description: DocumentSection object (max depth)
                  title:
                    description: The title of the document.
                    type: string
                  url:
                    description: A permalink for the document.
                    type: string
                type: object
              endIndex:
                description: The exclusive end index of the range.
                type: integer
              startIndex:
                description: The inclusive start index of the range.
                type: integer
              type:
                enum: *ref_3
                type: string
              url:
                description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                type: string
            type: object
        requestOptions:
          example: &ref_36
            datasourceFilter: JIRA
            datasourcesFilter:
              - JIRA
            queryOverridesFacetFilters: true
            facetFilters:
              - fieldName: fieldName
                values:
                  - fieldValues
                  - fieldValues
              - fieldName: fieldName
                values:
                  - fieldValues
                  - fieldValues
          required: &ref_37
            - facetBucketSize
          properties:
            authTokens:
              description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
              type: array
              items:
                example:
                  accessToken: 123abc
                  datasource: gmail
                  scope: email profile https://www.googleapis.com/auth/gmail.readonly
                  tokenType: Bearer
                  authUser: '1'
                required:
                  - accessToken
                  - datasource
                properties:
                  accessToken:
                    type: string
                  authUser:
                    description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                    type: string
                  datasource:
                    type: string
                  expiration:
                    description: Unix timestamp when this token expires (in seconds since epoch UTC).
                    format: int64
                    type: integer
                  scope:
                    type: string
                  tokenType:
                    type: string
                type: object
            datasourceFilter:
              description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
              type: string
            datasourcesFilter:
              description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
              type: array
              items:
                type: string
            defaultFacets:
              description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
              type: array
              items:
                type: string
            disableQueryAutocorrect:
              description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
              type: boolean
            disableSpellcheck:
              description: Whether or not to disable spellcheck.
              type: boolean
            exclusions:
              properties:
                containerSpecs:
                  description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                  type: array
                  items:
                    type: object
                    properties:
                      DocumentSpec:
                        type: object
                        description: DocumentSpec object (max depth)
              type: object
            facetBucketFilter:
              properties:
                facet:
                  description: The facet whose buckets should be filtered.
                  type: string
                prefix:
                  description: The per-term prefix that facet buckets should be filtered on.
                  type: string
              type: object
            facetBucketSize:
              description: The maximum number of FacetBuckets to return in each FacetResult.
              type: integer
            facetFilterSets:
              description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
              type: array
              items:
                description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                properties:
                  filters:
                    type: array
                    items:
                      type: object
                      properties:
                        FacetFilter:
                          type: object
                          description: FacetFilter object (max depth)
                type: object
            facetFilters:
              description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
              type: array
              items:
                example: *ref_7
                properties:
                  fieldName:
                    example: owner
                    type: string
                  groupName:
                    description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                    example: Spreadsheet
                    type: string
                  values:
                    description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                    type: array
                    items:
                      type: object
                      properties:
                        FacetFilterValue:
                          type: object
                          description: FacetFilterValue object (max depth)
                type: object
            fetchAllDatasourceCounts:
              description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
              type: boolean
            inclusions:
              properties:
                containerSpecs:
                  description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                  type: array
                  items:
                    type: object
                    properties:
                      DocumentSpec:
                        type: object
                        description: DocumentSpec object (max depth)
              type: object
            queryOverridesFacetFilters:
              description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
              type: boolean
            responseHints:
              description: Array of hints containing which fields should be populated in the response.
              type: array
              items:
                description: Hints for the response content.
                enum: &ref_38
                  - ALL_RESULT_COUNTS
                  - FACET_RESULTS
                  - QUERY_METADATA
                  - RESULTS
                  - SPELLCHECK_METADATA
                type: string
                x-enumDescriptions: &ref_39
                  ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                  FACET_RESULTS: Return only facet results.
                  QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                  RESULTS: Return search result documents.
                  SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
            returnLlmContentOverSnippets:
              description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
              type: boolean
            timezoneOffset:
              description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
              type: integer
          type: object
        searchProviderInfo:
          example: &ref_40
            name: Google
            logo: https://app.glean.com/images/feather/globe.svg
            searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
          properties:
            logoUrl:
              description: URL to the provider's logo.
              type: string
            name:
              description: Name of the search provider.
              type: string
            searchLinkUrlTemplate:
              description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
              type: string
          type: object
      type: object
    CustomFieldValuePerson:
      properties:
        person:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: &ref_15
                department: Movies
                email: george@example.com
                location: Hollywood, CA
                phone: 6505551234
                photoUrl: https://example.com/george.jpg
                startDate: '2000-01-23'
                title: Actor
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: &ref_16
                    type: boolean
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: &ref_17
                    - FULL_TIME
                    - CONTRACTOR
                    - NON_EMPLOYEE
                    - FORMER_EMPLOYEE
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: &ref_18
                    FULL_TIME: The person is a current full-time employee of the company.
                    CONTRACTOR: The person is a current contractor of the company.
                    NON_EMPLOYEE: The person object represents a non-human actor such as a service or admin account.
                    FORMER_EMPLOYEE: The person is a previous employee of the company.
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: &ref_19
                      - ATTACHMENT
                      - CANONICAL
                      - CASE
                      - contact
                      - CONTACT
                      - CONVERSATION_MESSAGES
                      - EXPERT
                      - FROM
                      - HIGHLIGHT
                      - opportunity
                      - OPPORTUNITY
                      - RECENT
                      - SOURCE
                      - TICKET
                      - TRANSCRIPT
                      - WITH
                    type: string
                    x-enumDescriptions: &ref_20
                      CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
      type: object
    AnswerLike:
      properties:
        createTime:
          description: The time the user liked the answer in ISO format (ISO 8601).
          format: date-time
          type: string
        user:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
      type: object
    PersonToTeamRelationship:
      description: Metadata about the relationship of a person to a team.
      required: *ref_21
      type: object
      properties:
        customRelationshipStr:
          description: Displayed name for the relationship if relationship is set to `OTHER`.
          type: string
        joinDate:
          description: The team member's start date
          format: date-time
          type: string
        person:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        relationship:
          default: MEMBER
          description: The team member's relationship to the team. This defaults to MEMBER if not set.
          enum: *ref_22
          type: string
    ChannelInviteInfo:
      description: Information regarding the invite status of a person for a particular channel.
      properties:
        channel:
          enum: &ref_23
            - COMMUNICATION_CHANNEL_EMAIL
            - COMMUNICATION_CHANNEL_SLACK
          type: string
        inviteTime:
          description: The time this person was invited in ISO format (ISO 8601).
          format: date-time
          type: string
        inviter:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        isAutoInvite:
          description: Bit that tracks if this invite was automatically sent or user-sent
          type: boolean
        reminderTime:
          description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
          format: date-time
          type: string
      type: object
    UserRoleSpecification:
      required: *ref_6
      properties:
        group:
          required: *ref_8
          properties:
            id:
              description: A unique identifier for the group. May be the same as name.
              type: string
            name:
              description: Name of the group.
              type: string
            type:
              description: The type of user group
              enum:
                - DEPARTMENT
                - ALL
                - TEAM
                - JOB_TITLE
                - ROLE_TYPE
                - LOCATION
                - REGION
                - EXTERNAL_GROUP
              type: string
          type: object
        person:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        role:
          description: A user's role with respect to a specific document.
          enum: *ref_9
          type: string
        sourceDocumentSpec:
          oneOf:
            - type: object
              properties:
                url:
                  description: The URL of the document.
                  type: string
            - type: object
              properties:
                id:
                  description: The ID of the document.
                  type: string
            - type: object
              properties:
                contentId:
                  description: The id for user generated content.
                  type: integer
                docType:
                  description: The specific type of the user generated content type.
                  type: string
                ugcType:
                  description: The type of the user generated content (UGC datasource).
                  enum: *ref_10
                  type: string
      type: object
    CalendarAttendee:
      required: *ref_4
      properties:
        groupAttendees:
          description: If this attendee is a group, represents the list of individual attendees in the group.
          type: array
          items:
            type: object
            properties:
              CalendarAttendee:
                type: object
                description: CalendarAttendee object (circular reference)
        isInGroup:
          description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
          type: boolean
        isOrganizer:
          description: Whether or not this attendee is an organizer.
          type: boolean
        person:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        responseStatus:
          enum: *ref_5
          type: string
      type: object
    Reaction:
      properties:
        count:
          description: The count of the reaction type on the document.
          type: integer
        reactedByViewer:
          description: Whether the user in context reacted with this type to the document.
          type: boolean
        reactors:
          type: array
          items:
            example: *ref_0
            required: *ref_1
            properties:
              metadata:
                example: *ref_15
                properties:
                  aliasEmails:
                    description: Additional email addresses of this user beyond the primary, if any.
                    type: array
                    items:
                      type: string
                  badges:
                    description: The badges that a user has earned over their lifetime.
                    type: array
                    items:
                      type: object
                      properties:
                        Badge:
                          type: object
                          description: Badge object (max depth)
                  bannerUrl:
                    description: The URL of the person's banner photo.
                    format: url
                    type: string
                  bio:
                    description: Short biography or mission statement of the employee.
                    type: string
                  businessUnit:
                    description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                    type: string
                  busyEvents:
                    description: Intervals of busy time for this person, along with the type of event they're busy with.
                    type: array
                    items:
                      type: object
                      properties:
                        AnonymousEvent:
                          type: object
                          description: AnonymousEvent object (max depth)
                  customFields:
                    description: User customizable fields for additional people information.
                    type: array
                    items:
                      type: object
                      properties:
                        CustomFieldData:
                          type: object
                          description: CustomFieldData object (max depth)
                  datasourceProfile:
                    description: List of profiles this user has in different datasources / tools that they use.
                    type: array
                    items:
                      type: object
                      properties:
                        DatasourceProfile:
                          type: object
                          description: DatasourceProfile object (max depth)
                  department:
                    description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                    type: string
                  departmentCount:
                    description: The number of people in this person's department.
                    type: integer
                  directReportsCount:
                    description: The total number of people who directly report to this person, or 0
                    type: integer
                  email:
                    description: The user's primary email address
                    type: string
                  endDate:
                    description: If a former employee, the last date of employment.
                    format: date
                    type: string
                  externalProfileLink:
                    description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                    type: string
                  firstName:
                    description: The first name of the person
                    type: string
                  inviteInfo:
                    type: object
                    description: InviteInfo object (max depth)
                  isOrgRoot:
                    description: Whether this person is a "root" node in their organization's hierarchy.
                    type: boolean
                  isSignedUp:
                    description: Whether the user has signed into Glean at least once.
                    type: boolean
                  lastExtensionUse:
                    description: The last time the user has used the Glean extension in ISO 8601 format.
                    format: date-time
                    type: string
                  lastName:
                    description: The last name of the person
                    type: string
                  location:
                    description: User facing string representing the person's location.
                    type: string
                  loggingId:
                    description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                    type: string
                  managementChain:
                    description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                    type: array
                    items:
                      type: object
                      properties:
                        Person:
                          type: object
                          description: Person object (circular reference)
                  manager:
                    type: object
                    description: Person object (circular reference)
                  orgSizeCount:
                    description: The total recursive size of the people reporting to this person, or 1
                    type: integer
                  peopleDistance:
                    description: List of people and distances to those people from this person. Optionally with metadata.
                    type: array
                    items:
                      type: object
                      properties:
                        PersonDistance:
                          type: object
                          description: PersonDistance object (max depth)
                  permissions:
                    type: object
                    description: Permissions object (max depth)
                  phone:
                    description: Phone number as a number string.
                    type: string
                  photoUrl:
                    description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                    format: url
                    type: string
                  preferredName:
                    description: The preferred name of the person, or a nickname.
                    type: string
                  profileBoolSettings:
                    additionalProperties: *ref_16
                    description: flag settings to indicate user profile settings for certain items
                    type: object
                  pronoun:
                    description: She/her, He/his or other pronoun.
                    type: string
                  querySuggestions:
                    type: object
                    description: QuerySuggestionList object (max depth)
                  reports:
                    type: array
                    items:
                      type: object
                      properties:
                        Person:
                          type: object
                          description: Person object (circular reference)
                  socialNetwork:
                    description: List of social network profiles.
                    type: array
                    items:
                      type: object
                      properties:
                        SocialNetwork:
                          type: object
                          description: SocialNetwork object (max depth)
                  startDate:
                    description: The date when the employee started.
                    format: date
                    type: string
                  startDatePercentile:
                    description: Percentage of the company that started strictly after this person. Between [0,100).
                    format: float
                    type: number
                  structuredLocation:
                    type: object
                    description: StructuredLocation object (max depth)
                  teams:
                    description: Info about the employee's team(s).
                    type: array
                    items:
                      type: object
                      properties:
                        PersonTeam:
                          type: object
                          description: PersonTeam object (max depth)
                  timezone:
                    description: The timezone of the person. E.g. "Pacific Daylight Time".
                    type: string
                  timezoneOffset:
                    description: The offset of the person's timezone in seconds from UTC.
                    format: int64
                    type: integer
                  title:
                    description: Job title.
                    type: string
                  type:
                    enum: *ref_17
                    example: FULL_TIME
                    type: string
                    x-enumDescriptions: *ref_18
                  uneditedPhotoUrl:
                    description: The original photo URL of the person's avatar before any edits they made are applied
                    format: url
                    type: string
                type: object
              name:
                description: The display name.
                type: string
              obfuscatedId:
                description: An opaque identifier that can be used to request metadata for a Person.
                type: string
              relatedDocuments:
                description: A list of documents related to this person.
                type: array
                items:
                  properties:
                    associatedEntityId:
                      description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                      type: string
                    documents:
                      deprecated: true
                      description: A truncated list of documents with this relation. TO BE DEPRECATED.
                      type: array
                      items:
                        type: object
                        properties:
                          Document:
                            type: object
                            description: Document object (max depth)
                    querySuggestion:
                      type: object
                      description: QuerySuggestion object (max depth)
                    relation:
                      description: How this document relates to the including entity.
                      enum: *ref_19
                      type: string
                      x-enumDescriptions: *ref_20
                    results:
                      description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResult:
                            type: object
                            description: SearchResult object (max depth)
                  type: object
            type: object
        type:
          type: string
      type: object
    InviteInfo:
      description: Information regarding the invite status of a person.
      properties:
        inviteTime:
          deprecated: true
          description: The time this person was invited in ISO format (ISO 8601).
          format: date-time
          type: string
        inviter:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (circular reference)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        invites:
          description: Latest invites received by the user for each channel
          type: array
          items:
            description: Information regarding the invite status of a person for a particular channel.
            properties:
              channel:
                enum: *ref_23
                type: string
              inviteTime:
                description: The time this person was invited in ISO format (ISO 8601).
                format: date-time
                type: string
              inviter:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              isAutoInvite:
                description: Bit that tracks if this invite was automatically sent or user-sent
                type: boolean
              reminderTime:
                description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
                format: date-time
                type: string
            type: object
        reminderTime:
          deprecated: true
          description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
          format: date-time
          type: string
        signUpTime:
          description: The time this person signed up in ISO format (ISO 8601).
          format: date-time
          type: string
      type: object
    ExtractedQnA:
      properties:
        heading:
          description: Heading text that was matched to produce this result.
          type: string
        question:
          description: Question text that was matched to produce this result.
          type: string
        questionResult:
          example: &ref_30
            snippets:
              - snippet: snippet
                mimeType: mimeType
            metadata:
              container: container
              createTime: '2000-01-23T04:56:07.000Z'
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: '2000-01-23T04:56:07.000Z'
              mimeType: mimeType
              objectType: objectType
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
              - missingTerm: container
                query: container
          required: &ref_31
            - url
          type: object
          properties:
            structuredResults:
              description: An array of entities in the work graph retrieved via a data request.
              type: array
              items:
                type: object
                properties:
                  StructuredResult:
                    type: object
                    description: StructuredResult object (max depth)
            trackingToken:
              description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
              type: string
            allClusteredResults:
              description: A list of results that should be displayed as associated with this result.
              type: array
              items:
                required: &ref_28
                  - visibleCountHint
                properties:
                  clusterType:
                    type: object
                    description: ClusterTypeEnum object (max depth)
                  clusteredResults:
                    description: A list of results that should be displayed as associated with this result.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (circular reference)
                  visibleCountHint:
                    description: The default number of results to display before truncating and showing a "see more" link
                    type: integer
                type: object
            attachmentContext:
              description: Additional context for the relationship between the result and the document it's attached to.
              type: string
            attachmentCount:
              description: The total number of attachments.
              type: integer
            attachments:
              description: A (potentially partial) list of results representing documents attached to the main result document.
              type: array
              items:
                type: object
                properties:
                  SearchResult:
                    type: object
                    description: SearchResult object (circular reference)
            backlinkResults:
              description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
              type: array
              items:
                type: object
                properties:
                  SearchResult:
                    type: object
                    description: SearchResult object (circular reference)
            clusterType:
              description: The reason for inclusion of clusteredResults.
              enum: &ref_29
                - SIMILAR
                - FRESHNESS
                - TITLE
                - CONTENT
                - NONE
                - THREAD_REPLY
                - THREAD_ROOT
                - PREFIX
                - SUFFIX
              type: string
            clusteredResults:
              description: A list of results that should be displayed as associated with this result.
              type: array
              items:
                type: object
                properties:
                  SearchResult:
                    type: object
                    description: SearchResult object (circular reference)
            document:
              properties:
                connectorType:
                  type: object
                  description: ConnectorType object (max depth)
                containerDocument:
                  type: object
                  description: Document object (circular reference)
                content:
                  type: object
                  description: DocumentContent object (max depth)
                datasource:
                  description: The app or other repository type from which the document was extracted
                  type: string
                docType:
                  description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                id:
                  description: The Glean Document ID.
                  type: string
                metadata:
                  type: object
                  description: DocumentMetadata object (max depth)
                parentDocument:
                  type: object
                  description: Document object (circular reference)
                sections:
                  description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                  type: array
                  items:
                    type: object
                    properties:
                      DocumentSection:
                        type: object
                        description: DocumentSection object (max depth)
                title:
                  description: The title of the document.
                  type: string
                url:
                  description: A permalink for the document.
                  type: string
              type: object
            fullText:
              description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
              type: string
            fullTextList:
              description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
              type: array
              items:
                type: string
            mustIncludeSuggestions:
              properties:
                person:
                  type: object
                  description: Person object (max depth)
                suggestions:
                  type: array
                  items:
                    type: object
                    properties:
                      QuerySuggestion:
                        type: object
                        description: QuerySuggestion object (max depth)
              type: object
            nativeAppUrl:
              description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
              type: string
            pins:
              description: A list of pins associated with this search result.
              type: array
              items:
                description: PinDocumentMutableProperties object (max depth)
                type: object
                properties:
                  attribution:
                    type: object
                    description: Person object (max depth)
                  audienceFilters:
                    description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                    type: array
                    items:
                      type: object
                      properties:
                        FacetFilter:
                          type: object
                          description: FacetFilter object (max depth)
                  createTime:
                    format: date-time
                    type: string
                  documentId:
                    description: The document which should be a pinned result.
                    type: string
                  id:
                    description: The opaque id of the pin.
                    type: string
                  updateTime:
                    format: date-time
                    type: string
                  updatedBy:
                    type: object
                    description: Person object (max depth)
                required:
                  - documentId
            prominence:
              description: |
                The level of visual distinction that should be given to a result.
              enum: &ref_32
                - HERO
                - PROMOTED
                - STANDARD
              type: string
              x-enumDescriptions: &ref_33
                HERO: A high-confidence result that should feature prominently on the page.
                PROMOTED: May not be the best result but should be given additional visual distinction.
                STANDARD: Should not be distinct from any other results.
            querySuggestion:
              example: *ref_24
              required: *ref_25
              properties:
                datasource:
                  description: The datasource associated with the suggestion.
                  type: string
                inputDetails:
                  type: object
                  description: SearchRequestInputDetails object (max depth)
                label:
                  description: A user-facing description to display for the suggestion.
                  type: string
                missingTerm:
                  description: A query term missing from the original query on which this suggestion is based.
                  type: string
                query:
                  description: The query being suggested (e.g. enforcing the missing term from the original query).
                  type: string
                ranges:
                  description: The bolded ranges within the query of the QuerySuggestion.
                  type: array
                  items:
                    type: object
                    properties:
                      TextRange:
                        type: object
                        description: TextRange object (max depth)
                requestOptions:
                  type: object
                  description: SearchRequestOptions object (max depth)
                searchProviderInfo:
                  type: object
                  description: SearchProviderInfo object (max depth)
              type: object
            relatedResults:
              description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (circular reference)
                type: object
            snippets:
              description: Text content from the result document which contains search query terms, if available.
              type: array
              items:
                example: *ref_26
                required: *ref_27
                properties:
                  mimeType:
                    description: The mime type of the snippets, currently either text/plain or text/html.
                    type: string
                  ranges:
                    description: The bolded ranges within text.
                    type: array
                    items:
                      type: object
                      properties:
                        TextRange:
                          type: object
                          description: TextRange object (max depth)
                  snippet:
                    description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                    type: string
                  snippetTextOrdering:
                    description: Used for sorting based off the snippet's location within all_snippetable_text
                    type: integer
                  text:
                    description: A matching snippet from the document with no highlights.
                    type: string
                  url:
                    description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                    type: string
                type: object
            title:
              type: string
            url:
              type: string
      type: object
    ClusterGroup:
      required: *ref_28
      properties:
        clusterType:
          description: The reason for inclusion of clusteredResults.
          enum: *ref_29
          type: string
        clusteredResults:
          description: A list of results that should be displayed as associated with this result.
          type: array
          items:
            example: *ref_30
            required: *ref_31
            type: object
            properties:
              structuredResults:
                description: An array of entities in the work graph retrieved via a data request.
                type: array
                items:
                  type: object
                  properties:
                    StructuredResult:
                      type: object
                      description: StructuredResult object (max depth)
              trackingToken:
                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                type: string
              allClusteredResults:
                description: A list of results that should be displayed as associated with this result.
                type: array
                items:
                  type: object
                  properties:
                    ClusterGroup:
                      type: object
                      description: ClusterGroup object (circular reference)
              attachmentContext:
                description: Additional context for the relationship between the result and the document it's attached to.
                type: string
              attachmentCount:
                description: The total number of attachments.
                type: integer
              attachments:
                description: A (potentially partial) list of results representing documents attached to the main result document.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
              backlinkResults:
                description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
              clusterType:
                description: The reason for inclusion of clusteredResults.
                enum: *ref_29
                type: string
              clusteredResults:
                description: A list of results that should be displayed as associated with this result.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
              document:
                properties:
                  connectorType:
                    type: object
                    description: ConnectorType object (max depth)
                  containerDocument:
                    type: object
                    description: Document object (circular reference)
                  content:
                    type: object
                    description: DocumentContent object (max depth)
                  datasource:
                    description: The app or other repository type from which the document was extracted
                    type: string
                  docType:
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                    type: string
                  id:
                    description: The Glean Document ID.
                    type: string
                  metadata:
                    type: object
                    description: DocumentMetadata object (max depth)
                  parentDocument:
                    type: object
                    description: Document object (circular reference)
                  sections:
                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                    type: array
                    items:
                      type: object
                      properties:
                        DocumentSection:
                          type: object
                          description: DocumentSection object (max depth)
                  title:
                    description: The title of the document.
                    type: string
                  url:
                    description: A permalink for the document.
                    type: string
                type: object
              fullText:
                description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                type: string
              fullTextList:
                description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                type: array
                items:
                  type: string
              mustIncludeSuggestions:
                properties:
                  person:
                    type: object
                    description: Person object (max depth)
                  suggestions:
                    type: array
                    items:
                      type: object
                      properties:
                        QuerySuggestion:
                          type: object
                          description: QuerySuggestion object (max depth)
                type: object
              nativeAppUrl:
                description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                type: string
              pins:
                description: A list of pins associated with this search result.
                type: array
                items:
                  description: PinDocumentMutableProperties object (max depth)
                  type: object
                  properties:
                    attribution:
                      type: object
                      description: Person object (max depth)
                    audienceFilters:
                      description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                      type: array
                      items:
                        type: object
                        properties:
                          FacetFilter:
                            type: object
                            description: FacetFilter object (max depth)
                    createTime:
                      format: date-time
                      type: string
                    documentId:
                      description: The document which should be a pinned result.
                      type: string
                    id:
                      description: The opaque id of the pin.
                      type: string
                    updateTime:
                      format: date-time
                      type: string
                    updatedBy:
                      type: object
                      description: Person object (max depth)
                  required:
                    - documentId
              prominence:
                description: |
                  The level of visual distinction that should be given to a result.
                enum: *ref_32
                type: string
                x-enumDescriptions: *ref_33
              querySuggestion:
                example: *ref_24
                required: *ref_25
                properties:
                  datasource:
                    description: The datasource associated with the suggestion.
                    type: string
                  inputDetails:
                    type: object
                    description: SearchRequestInputDetails object (max depth)
                  label:
                    description: A user-facing description to display for the suggestion.
                    type: string
                  missingTerm:
                    description: A query term missing from the original query on which this suggestion is based.
                    type: string
                  query:
                    description: The query being suggested (e.g. enforcing the missing term from the original query).
                    type: string
                  ranges:
                    description: The bolded ranges within the query of the QuerySuggestion.
                    type: array
                    items:
                      type: object
                      properties:
                        TextRange:
                          type: object
                          description: TextRange object (max depth)
                  requestOptions:
                    type: object
                    description: SearchRequestOptions object (max depth)
                  searchProviderInfo:
                    type: object
                    description: SearchProviderInfo object (max depth)
                type: object
              relatedResults:
                description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                type: array
                items:
                  properties:
                    associatedEntityId:
                      description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                      type: string
                    documents:
                      deprecated: true
                      description: A truncated list of documents with this relation. TO BE DEPRECATED.
                      type: array
                      items:
                        type: object
                        properties:
                          Document:
                            type: object
                            description: Document object (max depth)
                    querySuggestion:
                      type: object
                      description: QuerySuggestion object (max depth)
                    relation:
                      description: How this document relates to the including entity.
                      enum: *ref_19
                      type: string
                      x-enumDescriptions: *ref_20
                    results:
                      description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResult:
                            type: object
                            description: SearchResult object (circular reference)
                  type: object
              snippets:
                description: Text content from the result document which contains search query terms, if available.
                type: array
                items:
                  example: *ref_26
                  required: *ref_27
                  properties:
                    mimeType:
                      description: The mime type of the snippets, currently either text/plain or text/html.
                      type: string
                    ranges:
                      description: The bolded ranges within text.
                      type: array
                      items:
                        type: object
                        properties:
                          TextRange:
                            type: object
                            description: TextRange object (max depth)
                    snippet:
                      description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                      type: string
                    snippetTextOrdering:
                      description: Used for sorting based off the snippet's location within all_snippetable_text
                      type: integer
                    text:
                      description: A matching snippet from the document with no highlights.
                      type: string
                    url:
                      description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                      type: string
                  type: object
              title:
                type: string
              url:
                type: string
        visibleCountHint:
          description: The default number of results to display before truncating and showing a "see more" link
          type: integer
      type: object
    Customer:
      required: &ref_48
        - id
        - company
      properties:
        company:
          required: &ref_64
            - name
          properties:
            about:
              description: User facing description of company.
              example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
              type: string
            annualRevenue:
              description: Average company's annual revenue for reference.
              format: double
              type: number
            fax:
              description: Fax number as a number string.
              type: string
            foundedDate:
              description: The date when the company was founded.
              format: date
              type: string
            industry:
              description: User facing string representing the company's industry.
              example: Finances
              type: string
            location:
              description: User facing string representing the company's location.
              example: New York City
              type: string
            logoUrl:
              description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
              type: string
            name:
              description: User-friendly display name.
              type: string
            numberOfEmployees:
              description: Average company's number of employees for reference.
              format: int64
              type: integer
            phone:
              description: Phone number as a number string.
              type: string
            profileUrl:
              description: Link to internal company company profile.
              type: string
            stockSymbol:
              description: Company's stock symbol if company is public.
              type: string
            websiteUrls:
              description: Link to company's associated websites.
              type: array
              items:
                type: string
          type: object
        contractAnnualRevenue:
          description: Average contract annual revenue with that customer.
          format: double
          type: number
        documentCounts:
          additionalProperties: &ref_65
            type: integer
          description: A map of {string, int} pairs representing counts of each document type associated with this customer.
          type: object
        domains:
          description: Link to company's associated website domains.
          type: array
          items:
            type: string
        id:
          description: Unique identifier.
          type: string
        mergedCustomers:
          description: A list of Customers.
          type: array
          items:
            type: object
            properties:
              Customer:
                type: object
                description: Customer object (circular reference)
        metadata:
          properties:
            customData:
              additionalProperties: *ref_34
              description: Custom fields specific to individual datasources
              type: object
            datasourceId:
              description: The user visible id of the salesforce customer account.
              type: string
          type: object
        notes:
          description: User facing (potentially generated) notes about company.
          example: CIO is interested in trying out the product.
          type: string
        poc:
          description: A list of POC for company.
          type: array
          items:
            example: *ref_0
            required: *ref_1
            properties:
              metadata:
                example: *ref_15
                properties:
                  aliasEmails:
                    description: Additional email addresses of this user beyond the primary, if any.
                    type: array
                    items:
                      type: string
                  badges:
                    description: The badges that a user has earned over their lifetime.
                    type: array
                    items:
                      type: object
                      properties:
                        Badge:
                          type: object
                          description: Badge object (max depth)
                  bannerUrl:
                    description: The URL of the person's banner photo.
                    format: url
                    type: string
                  bio:
                    description: Short biography or mission statement of the employee.
                    type: string
                  businessUnit:
                    description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                    type: string
                  busyEvents:
                    description: Intervals of busy time for this person, along with the type of event they're busy with.
                    type: array
                    items:
                      type: object
                      properties:
                        AnonymousEvent:
                          type: object
                          description: AnonymousEvent object (max depth)
                  customFields:
                    description: User customizable fields for additional people information.
                    type: array
                    items:
                      type: object
                      properties:
                        CustomFieldData:
                          type: object
                          description: CustomFieldData object (max depth)
                  datasourceProfile:
                    description: List of profiles this user has in different datasources / tools that they use.
                    type: array
                    items:
                      type: object
                      properties:
                        DatasourceProfile:
                          type: object
                          description: DatasourceProfile object (max depth)
                  department:
                    description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                    type: string
                  departmentCount:
                    description: The number of people in this person's department.
                    type: integer
                  directReportsCount:
                    description: The total number of people who directly report to this person, or 0
                    type: integer
                  email:
                    description: The user's primary email address
                    type: string
                  endDate:
                    description: If a former employee, the last date of employment.
                    format: date
                    type: string
                  externalProfileLink:
                    description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                    type: string
                  firstName:
                    description: The first name of the person
                    type: string
                  inviteInfo:
                    type: object
                    description: InviteInfo object (max depth)
                  isOrgRoot:
                    description: Whether this person is a "root" node in their organization's hierarchy.
                    type: boolean
                  isSignedUp:
                    description: Whether the user has signed into Glean at least once.
                    type: boolean
                  lastExtensionUse:
                    description: The last time the user has used the Glean extension in ISO 8601 format.
                    format: date-time
                    type: string
                  lastName:
                    description: The last name of the person
                    type: string
                  location:
                    description: User facing string representing the person's location.
                    type: string
                  loggingId:
                    description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                    type: string
                  managementChain:
                    description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                    type: array
                    items:
                      type: object
                      properties:
                        Person:
                          type: object
                          description: Person object (circular reference)
                  manager:
                    type: object
                    description: Person object (circular reference)
                  orgSizeCount:
                    description: The total recursive size of the people reporting to this person, or 1
                    type: integer
                  peopleDistance:
                    description: List of people and distances to those people from this person. Optionally with metadata.
                    type: array
                    items:
                      type: object
                      properties:
                        PersonDistance:
                          type: object
                          description: PersonDistance object (max depth)
                  permissions:
                    type: object
                    description: Permissions object (max depth)
                  phone:
                    description: Phone number as a number string.
                    type: string
                  photoUrl:
                    description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                    format: url
                    type: string
                  preferredName:
                    description: The preferred name of the person, or a nickname.
                    type: string
                  profileBoolSettings:
                    additionalProperties: *ref_16
                    description: flag settings to indicate user profile settings for certain items
                    type: object
                  pronoun:
                    description: She/her, He/his or other pronoun.
                    type: string
                  querySuggestions:
                    type: object
                    description: QuerySuggestionList object (max depth)
                  reports:
                    type: array
                    items:
                      type: object
                      properties:
                        Person:
                          type: object
                          description: Person object (circular reference)
                  socialNetwork:
                    description: List of social network profiles.
                    type: array
                    items:
                      type: object
                      properties:
                        SocialNetwork:
                          type: object
                          description: SocialNetwork object (max depth)
                  startDate:
                    description: The date when the employee started.
                    format: date
                    type: string
                  startDatePercentile:
                    description: Percentage of the company that started strictly after this person. Between [0,100).
                    format: float
                    type: number
                  structuredLocation:
                    type: object
                    description: StructuredLocation object (max depth)
                  teams:
                    description: Info about the employee's team(s).
                    type: array
                    items:
                      type: object
                      properties:
                        PersonTeam:
                          type: object
                          description: PersonTeam object (max depth)
                  timezone:
                    description: The timezone of the person. E.g. "Pacific Daylight Time".
                    type: string
                  timezoneOffset:
                    description: The offset of the person's timezone in seconds from UTC.
                    format: int64
                    type: integer
                  title:
                    description: Job title.
                    type: string
                  type:
                    enum: *ref_17
                    example: FULL_TIME
                    type: string
                    x-enumDescriptions: *ref_18
                  uneditedPhotoUrl:
                    description: The original photo URL of the person's avatar before any edits they made are applied
                    format: url
                    type: string
                type: object
              name:
                description: The display name.
                type: string
              obfuscatedId:
                description: An opaque identifier that can be used to request metadata for a Person.
                type: string
              relatedDocuments:
                description: A list of documents related to this person.
                type: array
                items:
                  properties:
                    associatedEntityId:
                      description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                      type: string
                    documents:
                      deprecated: true
                      description: A truncated list of documents with this relation. TO BE DEPRECATED.
                      type: array
                      items:
                        type: object
                        properties:
                          Document:
                            type: object
                            description: Document object (max depth)
                    querySuggestion:
                      type: object
                      description: QuerySuggestion object (max depth)
                    relation:
                      description: How this document relates to the including entity.
                      enum: *ref_19
                      type: string
                      x-enumDescriptions: *ref_20
                    results:
                      description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResult:
                            type: object
                            description: SearchResult object (max depth)
                  type: object
            type: object
        startDate:
          description: The date when the interaction with customer started.
          format: date
          type: string
      type: object
    QuerySuggestionList:
      properties:
        person:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (circular reference)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        suggestions:
          type: array
          items:
            example: *ref_24
            required: *ref_25
            properties:
              datasource:
                description: The datasource associated with the suggestion.
                type: string
              inputDetails:
                example: *ref_35
                properties:
                  hasCopyPaste:
                    description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                    type: boolean
                type: object
              label:
                description: A user-facing description to display for the suggestion.
                type: string
              missingTerm:
                description: A query term missing from the original query on which this suggestion is based.
                type: string
              query:
                description: The query being suggested (e.g. enforcing the missing term from the original query).
                type: string
              ranges:
                description: The bolded ranges within the query of the QuerySuggestion.
                type: array
                items:
                  description: A subsection of a given string to which some special formatting should be applied.
                  required: *ref_2
                  properties:
                    document:
                      type: object
                      description: Document object (max depth)
                    endIndex:
                      description: The exclusive end index of the range.
                      type: integer
                    startIndex:
                      description: The inclusive start index of the range.
                      type: integer
                    type:
                      enum: *ref_3
                      type: string
                    url:
                      description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                      type: string
                  type: object
              requestOptions:
                example: *ref_36
                required: *ref_37
                properties:
                  authTokens:
                    description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                    type: array
                    items:
                      type: object
                      properties:
                        AuthToken:
                          type: object
                          description: AuthToken object (max depth)
                  datasourceFilter:
                    description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                    type: string
                  datasourcesFilter:
                    description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                    type: array
                    items:
                      type: string
                  defaultFacets:
                    description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                    type: array
                    items:
                      type: string
                  disableQueryAutocorrect:
                    description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                    type: boolean
                  disableSpellcheck:
                    description: Whether or not to disable spellcheck.
                    type: boolean
                  exclusions:
                    type: object
                    description: RestrictionFilters object (max depth)
                  facetBucketFilter:
                    type: object
                    description: FacetBucketFilter object (max depth)
                  facetBucketSize:
                    description: The maximum number of FacetBuckets to return in each FacetResult.
                    type: integer
                  facetFilterSets:
                    description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                    type: array
                    items:
                      type: object
                      properties:
                        FacetFilterSet:
                          type: object
                          description: FacetFilterSet object (max depth)
                  facetFilters:
                    description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                    type: array
                    items:
                      type: object
                      properties:
                        FacetFilter:
                          type: object
                          description: FacetFilter object (max depth)
                  fetchAllDatasourceCounts:
                    description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                    type: boolean
                  inclusions:
                    type: object
                    description: RestrictionFilters object (max depth)
                  queryOverridesFacetFilters:
                    description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                    type: boolean
                  responseHints:
                    description: Array of hints containing which fields should be populated in the response.
                    type: array
                    items:
                      description: Hints for the response content.
                      enum: *ref_38
                      type: string
                      x-enumDescriptions: *ref_39
                  returnLlmContentOverSnippets:
                    description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                    type: boolean
                  timezoneOffset:
                    description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                    type: integer
                type: object
              searchProviderInfo:
                example: *ref_40
                properties:
                  logoUrl:
                    description: URL to the provider's logo.
                    type: string
                  name:
                    description: Name of the search provider.
                    type: string
                  searchLinkUrlTemplate:
                    description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                    type: string
                type: object
            type: object
      type: object
    Share:
      description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
      required: *ref_41
      properties:
        numDaysAgo:
          description: The number of days that has passed since the share happened
          type: integer
        sharer:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        sharingDocument:
          properties:
            connectorType:
              description: The source from which document content was pulled, e.g. an API crawl or browser history
              enum: *ref_42
              type: string
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              properties:
                fullTextList:
                  description: The plaintext content of the document.
                  type: array
                  items:
                    type: string
              type: object
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              example: *ref_43
              properties:
                ancestors:
                  description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
                  type: array
                  items:
                    type: object
                    properties:
                      Document:
                        type: object
                        description: Document object (circular reference)
                assignedTo:
                  type: object
                  description: Person object (max depth)
                author:
                  type: object
                  description: Person object (max depth)
                collections:
                  description: A list of collections that the document belongs to.
                  type: array
                  items:
                    type: object
                    properties:
                      Collection:
                        type: object
                        description: Collection object (max depth)
                components:
                  description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
                  type: array
                  items:
                    type: string
                contactPerson:
                  type: object
                  description: Person object (max depth)
                container:
                  description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
                  type: string
                containerId:
                  description: The Glean Document ID of the container. Uniquely identifies the container.
                  type: string
                createTime:
                  format: date-time
                  type: string
                customData:
                  type: object
                  description: CustomData object (max depth)
                datasource:
                  type: string
                datasourceId:
                  description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
                  type: string
                datasourceInstance:
                  description: The datasource instance from which the document was extracted.
                  type: string
                documentCategory:
                  description: The document's document_category(.proto).
                  type: string
                documentId:
                  description: The index-wide unique identifier.
                  type: string
                documentIdHash:
                  description: Hash of the Glean Document ID.
                  type: string
                indexStatus:
                  type: object
                  description: IndexStatus object (max depth)
                interactions:
                  type: object
                  description: DocumentInteractions object (max depth)
                labels:
                  description: A list of tags for the document. Interpretation is datasource specific.
                  type: array
                  items:
                    type: string
                loggingId:
                  description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
                  type: string
                mentionedPeople:
                  description: A list of people mentioned in the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (max depth)
                mimeType:
                  type: string
                objectType:
                  description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                owner:
                  type: object
                  description: Person object (max depth)
                parentId:
                  description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
                  type: string
                path:
                  description: For file datasources like onedrive/github etc this has the path to the file
                  type: string
                permissions:
                  type: object
                  description: ObjectPermissions object (max depth)
                pins:
                  description: A list of stars associated with this result.  "Pin" is an older name.
                  type: array
                  items:
                    type: object
                    properties:
                      PinDocument:
                        type: object
                        description: PinDocument object (max depth)
                priority:
                  description: The document priority. Interpretation is datasource specific.
                  type: string
                shortcuts:
                  description: A list of shortcuts of which destination URL is for the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Shortcut:
                        type: object
                        description: Shortcut object (max depth)
                status:
                  description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
                  type: string
                statusCategory:
                  description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
                  type: string
                superContainerId:
                  description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
                  type: string
                thumbnail:
                  type: object
                  description: Thumbnail object (max depth)
                updateTime:
                  format: date-time
                  type: string
                updatedBy:
                  type: object
                  description: Person object (max depth)
                verification:
                  type: object
                  description: Verification object (max depth)
                viewerInfo:
                  type: object
                  description: ViewerInfo object (max depth)
                visibility:
                  type: object
                  description: DocumentVisibility object (max depth)
                visitCount:
                  type: object
                  description: CountInfo object (max depth)
              type: object
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  title:
                    description: The title of the document section (e.g. the section header).
                    type: string
                  url:
                    description: The permalink of the document section.
                    type: string
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
      type: object
    Document:
      properties:
        connectorType:
          description: The source from which document content was pulled, e.g. an API crawl or browser history
          enum: *ref_42
          type: string
        containerDocument:
          type: object
          description: Document object (circular reference)
        content:
          properties:
            fullTextList:
              description: The plaintext content of the document.
              type: array
              items:
                type: string
          type: object
        datasource:
          description: The app or other repository type from which the document was extracted
          type: string
        docType:
          description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
          type: string
        id:
          description: The Glean Document ID.
          type: string
        metadata:
          example: *ref_43
          properties:
            ancestors:
              description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
              type: array
              items:
                type: object
                properties:
                  Document:
                    type: object
                    description: Document object (circular reference)
            assignedTo:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            author:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            collections:
              description: A list of collections that the document belongs to.
              type: array
              items:
                description: CollectionMutableProperties object (max depth)
                type: object
                properties:
                  childCount:
                    description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                    type: integer
                  children:
                    description: The children Collections of this Collection.
                    type: array
                    items:
                      type: object
                      properties:
                        Collection:
                          type: object
                          description: Collection object (circular reference)
                  createTime:
                    format: date-time
                    type: string
                  creator:
                    type: object
                    description: Person object (max depth)
                  id:
                    description: The unique ID of the Collection.
                    type: integer
                  itemCount:
                    description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                    type: integer
                  items:
                    description: The items in this Collection.
                    type: array
                    items:
                      type: object
                      properties:
                        CollectionItem:
                          type: object
                          description: CollectionItem object (max depth)
                  pinMetadata:
                    type: object
                    description: CollectionPinnedMetadata object (max depth)
                  roles:
                    description: A list of user roles for the Collection.
                    type: array
                    items:
                      type: object
                      properties:
                        UserRoleSpecification:
                          type: object
                          description: UserRoleSpecification object (max depth)
                  shortcuts:
                    description: The names of the shortcuts (Go Links) that point to this Collection.
                    type: array
                    items:
                      type: string
                  updateTime:
                    format: date-time
                    type: string
                  updatedBy:
                    type: object
                    description: Person object (max depth)
                required:
                  - id
                  - description
            components:
              description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
              type: array
              items:
                type: string
            contactPerson:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            container:
              description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
              type: string
            containerId:
              description: The Glean Document ID of the container. Uniquely identifies the container.
              type: string
            createTime:
              format: date-time
              type: string
            customData:
              additionalProperties: *ref_34
              description: Custom fields specific to individual datasources
              type: object
            datasource:
              type: string
            datasourceId:
              description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
              type: string
            datasourceInstance:
              description: The datasource instance from which the document was extracted.
              type: string
            documentCategory:
              description: The document's document_category(.proto).
              type: string
            documentId:
              description: The index-wide unique identifier.
              type: string
            documentIdHash:
              description: Hash of the Glean Document ID.
              type: string
            indexStatus:
              properties:
                lastCrawledTime:
                  description: When the document was last crawled
                  format: date-time
                  type: string
                lastIndexedTime:
                  description: When the document was last indexed
                  format: date-time
                  type: string
              type: object
            interactions:
              properties:
                numComments:
                  description: The count of comments (thread replies in the case of slack).
                  type: integer
                numReactions:
                  description: The count of reactions on the document.
                  type: integer
                reactions:
                  deprecated: true
                  description: To be deprecated in favor of reacts. A (potentially non-exhaustive) list of reactions for the document.
                  type: array
                  items:
                    type: string
                reacts:
                  type: array
                  items:
                    type: object
                    properties:
                      Reaction:
                        type: object
                        description: Reaction object (max depth)
                shares:
                  description: Describes instances of someone posting a link to this document in one of our indexed datasources.
                  type: array
                  items:
                    type: object
                    properties:
                      Share:
                        type: object
                        description: Share object (max depth)
                visitorCount:
                  type: object
                  description: CountInfo object (max depth)
              type: object
            labels:
              description: A list of tags for the document. Interpretation is datasource specific.
              type: array
              items:
                type: string
            loggingId:
              description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
              type: string
            mentionedPeople:
              description: A list of people mentioned in the document.
              type: array
              items:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
            mimeType:
              type: string
            objectType:
              description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            owner:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            parentId:
              description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
              type: string
            path:
              description: For file datasources like onedrive/github etc this has the path to the file
              type: string
            permissions:
              properties:
                write:
                  type: object
                  description: WritePermission object (max depth)
              type: object
            pins:
              description: A list of stars associated with this result.  "Pin" is an older name.
              type: array
              items:
                description: PinDocumentMutableProperties object (max depth)
                type: object
                properties:
                  attribution:
                    type: object
                    description: Person object (max depth)
                  audienceFilters:
                    description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                    type: array
                    items:
                      type: object
                      properties:
                        FacetFilter:
                          type: object
                          description: FacetFilter object (max depth)
                  createTime:
                    format: date-time
                    type: string
                  documentId:
                    description: The document which should be a pinned result.
                    type: string
                  id:
                    description: The opaque id of the pin.
                    type: string
                  updateTime:
                    format: date-time
                    type: string
                  updatedBy:
                    type: object
                    description: Person object (max depth)
                required:
                  - documentId
            priority:
              description: The document priority. Interpretation is datasource specific.
              type: string
            shortcuts:
              description: A list of shortcuts of which destination URL is for the document.
              type: array
              items:
                description: UserGeneratedContentId object (max depth)
                type: object
                properties:
                  alias:
                    description: canonical link text following go/ prefix where hyphen/underscore is removed.
                    type: string
                  roles:
                    description: A list of user roles for the Go Link.
                    type: array
                    items:
                      type: object
                      properties:
                        UserRoleSpecification:
                          type: object
                          description: UserRoleSpecification object (max depth)
                  title:
                    description: Title for the Go Link
                    type: string
                required:
                  - inputAlias
            status:
              description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
              type: string
            statusCategory:
              description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
              type: string
            superContainerId:
              description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
              type: string
            thumbnail:
              properties:
                photoId:
                  description: Photo id if the thumbnail is from splash.
                  type: string
                url:
                  description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                  type: string
              type: object
            updateTime:
              format: date-time
              type: string
            updatedBy:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            verification:
              required: *ref_44
              properties:
                metadata:
                  type: object
                  description: VerificationMetadata object (max depth)
                state:
                  description: The verification state for the document.
                  enum: *ref_45
                  type: string
              type: object
            viewerInfo:
              properties:
                lastViewedTime:
                  format: date-time
                  type: string
                role:
                  deprecated: true
                  description: DEPRECATED - use permissions instead. Viewer's role on the specific document.
                  enum: &ref_68
                    - ANSWER_MODERATOR
                    - OWNER
                    - VIEWER
                  type: string
              type: object
            visibility:
              description: The level of visibility of the document as understood by our system.
              enum: &ref_69
                - PRIVATE
                - SPECIFIC_PEOPLE_AND_GROUPS
                - DOMAIN_LINK
                - DOMAIN_VISIBLE
                - PUBLIC_LINK
                - PUBLIC_VISIBLE
              type: string
              x-enumDescriptions: &ref_70
                PRIVATE: Only one person is able to see the document.
                SPECIFIC_PEOPLE_AND_GROUPS: Only specific people and/or groups can see the document.
                DOMAIN_LINK: Anyone in the domain with the link can see the document.
                DOMAIN_VISIBLE: Anyone in the domain can search for the document.
                PUBLIC_LINK: Anyone with the link can see the document.
                PUBLIC_VISIBLE: Anyone on the internet can search for the document.
            visitCount:
              required: *ref_12
              properties:
                count:
                  description: The counter value
                  type: integer
                org:
                  description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                  type: string
                period:
                  type: object
                  description: Period object (max depth)
              type: object
          type: object
        parentDocument:
          type: object
          description: Document object (circular reference)
        sections:
          description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
          type: array
          items:
            type: object
            properties:
              title:
                description: The title of the document section (e.g. the section header).
                type: string
              url:
                description: The permalink of the document section.
                type: string
        title:
          description: The title of the document.
          type: string
        url:
          description: A permalink for the document.
          type: string
      type: object
    Reminder:
      required: *ref_11
      properties:
        assignee:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        createdAt:
          description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
          type: integer
        reason:
          description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
          type: string
        remindAt:
          description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
          type: integer
        requestor:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
      type: object
    Person:
      example: *ref_0
      required: *ref_1
      properties:
        metadata:
          example: *ref_15
          properties:
            aliasEmails:
              description: Additional email addresses of this user beyond the primary, if any.
              type: array
              items:
                type: string
            badges:
              description: The badges that a user has earned over their lifetime.
              type: array
              items:
                description: Displays a user's accomplishment or milestone
                example: &ref_53
                  key: deployment_name_new_hire
                  displayName: New hire
                  iconConfig:
                    color: '#343CED'
                    key: person_icon
                    iconType: GLYPH
                    name: user
                type: object
                properties:
                  displayName:
                    description: The badge name displayed to users
                    type: string
                  iconConfig:
                    type: object
                    description: IconConfig object (max depth)
                  key:
                    description: An auto generated unique identifier.
                    type: string
                  pinned:
                    description: The badge should be shown on the PersonAttribution
                    type: boolean
            bannerUrl:
              description: The URL of the person's banner photo.
              format: url
              type: string
            bio:
              description: Short biography or mission statement of the employee.
              type: string
            businessUnit:
              description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
              type: string
            busyEvents:
              description: Intervals of busy time for this person, along with the type of event they're busy with.
              type: array
              items:
                description: A generic, light-weight calendar event.
                type: object
                properties:
                  eventType:
                    description: The nature of the event, for example "out of office".
                    enum: &ref_54
                      - DEFAULT
                      - OUT_OF_OFFICE
                    type: string
                  time:
                    type: object
                    description: TimeInterval object (max depth)
            customFields:
              description: User customizable fields for additional people information.
              type: array
              items:
                required: *ref_13
                properties:
                  displayable:
                    default: true
                    description: Determines whether the client should display this custom field
                    type: boolean
                  label:
                    description: A user-facing label for this field.
                    type: string
                  values:
                    type: array
                    items:
                      type: object
                      properties:
                        CustomFieldValue:
                          type: object
                          description: CustomFieldValue object (max depth)
                type: object
            datasourceProfile:
              description: List of profiles this user has in different datasources / tools that they use.
              type: array
              items:
                required: *ref_46
                properties:
                  datasource:
                    description: The datasource the profile is of.
                    example: github
                    type: string
                  handle:
                    description: The display name of the entity in the given datasource.
                    type: string
                  isUserGenerated:
                    description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                    type: boolean
                  nativeAppUrl:
                    description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                    type: string
                  url:
                    description: URL to view the entity's profile.
                    type: string
                type: object
            department:
              description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
              type: string
            departmentCount:
              description: The number of people in this person's department.
              type: integer
            directReportsCount:
              description: The total number of people who directly report to this person, or 0
              type: integer
            email:
              description: The user's primary email address
              type: string
            endDate:
              description: If a former employee, the last date of employment.
              format: date
              type: string
            externalProfileLink:
              description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
              type: string
            firstName:
              description: The first name of the person
              type: string
            inviteInfo:
              description: Information regarding the invite status of a person.
              properties:
                inviteTime:
                  deprecated: true
                  description: The time this person was invited in ISO format (ISO 8601).
                  format: date-time
                  type: string
                inviter:
                  type: object
                  description: Person object (circular reference)
                invites:
                  description: Latest invites received by the user for each channel
                  type: array
                  items:
                    type: object
                    properties:
                      ChannelInviteInfo:
                        type: object
                        description: ChannelInviteInfo object (max depth)
                reminderTime:
                  deprecated: true
                  description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
                  format: date-time
                  type: string
                signUpTime:
                  description: The time this person signed up in ISO format (ISO 8601).
                  format: date-time
                  type: string
              type: object
            isOrgRoot:
              description: Whether this person is a "root" node in their organization's hierarchy.
              type: boolean
            isSignedUp:
              description: Whether the user has signed into Glean at least once.
              type: boolean
            lastExtensionUse:
              description: The last time the user has used the Glean extension in ISO 8601 format.
              format: date-time
              type: string
            lastName:
              description: The last name of the person
              type: string
            location:
              description: User facing string representing the person's location.
              type: string
            loggingId:
              description: The logging id of the person used in scrubbed logs, tracking GA metrics.
              type: string
            managementChain:
              description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
              type: array
              items:
                type: object
                properties:
                  Person:
                    type: object
                    description: Person object (circular reference)
            manager:
              type: object
              description: Person object (circular reference)
            orgSizeCount:
              description: The total recursive size of the people reporting to this person, or 1
              type: integer
            peopleDistance:
              description: List of people and distances to those people from this person. Optionally with metadata.
              type: array
              items:
                required: &ref_55
                  - name
                  - obfuscatedId
                  - distance
                properties:
                  distance:
                    description: Distance to person, refer to PeopleDistance pipeline on interpretation of the value.
                    format: float
                    type: number
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                type: object
            permissions:
              description: |-
                Describes the permissions levels that a user has for permissioned features. When the client sends this, Permissions.read and Permissions.write are the additional permissions granted to a user on top of what they have via their roles.
                When the server sends this, Permissions.read and Permissions.write are the complete (merged) set of permissions the user has, and Permissions.roles is just for display purposes.
              properties:
                canAdminClientApiGlobalTokens:
                  description: TODO--deprecate in favor of the read and write properties. True if the user can administrate client API tokens with global scope
                  type: boolean
                canAdminSearch:
                  description: TODO--deprecate in favor of the read and write properties. True if the user has access to /adminsearch
                  type: boolean
                canDlp:
                  description: TODO--deprecate in favor of the read and write properties. True if the user has access to data loss prevention (DLP) features
                  type: boolean
                grant:
                  type: object
                  description: GrantPermissions object (max depth)
                read:
                  type: object
                  description: ReadPermissions object (max depth)
                role:
                  description: The roleId of the canonical role a user has. The displayName is equal to the roleId.
                  type: string
                roles:
                  description: The roleIds of the roles a user has.
                  type: array
                  items:
                    type: string
                write:
                  type: object
                  description: WritePermissions object (max depth)
              type: object
            phone:
              description: Phone number as a number string.
              type: string
            photoUrl:
              description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
              format: url
              type: string
            preferredName:
              description: The preferred name of the person, or a nickname.
              type: string
            profileBoolSettings:
              additionalProperties: *ref_16
              description: flag settings to indicate user profile settings for certain items
              type: object
            pronoun:
              description: She/her, He/his or other pronoun.
              type: string
            querySuggestions:
              properties:
                person:
                  type: object
                  description: Person object (circular reference)
                suggestions:
                  type: array
                  items:
                    type: object
                    properties:
                      QuerySuggestion:
                        type: object
                        description: QuerySuggestion object (max depth)
              type: object
            reports:
              type: array
              items:
                type: object
                properties:
                  Person:
                    type: object
                    description: Person object (circular reference)
            socialNetwork:
              description: List of social network profiles.
              type: array
              items:
                required: &ref_56
                  - name
                  - profileUrl
                properties:
                  name:
                    description: Possible values are "twitter", "linkedin".
                    type: string
                  profileName:
                    description: Human-readable profile name.
                    type: string
                  profileUrl:
                    description: Link to profile.
                    format: url
                    type: string
                type: object
            startDate:
              description: The date when the employee started.
              format: date
              type: string
            startDatePercentile:
              description: Percentage of the company that started strictly after this person. Between [0,100).
              format: float
              type: number
            structuredLocation:
              description: Detailed location with information about country, state, city etc.
              type: object
              properties:
                address:
                  description: Office address or name.
                  type: string
                city:
                  description: Name of the city.
                  type: string
                country:
                  description: Country name.
                  type: string
                countryCode:
                  description: Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA.
                  type: string
                deskLocation:
                  description: Desk number.
                  type: string
                region:
                  description: Region information, e.g. NORAM, APAC.
                  type: string
                state:
                  description: State code.
                  type: string
                timezone:
                  description: Location's timezone, e.g. UTC, PST.
                  type: string
                zipCode:
                  description: ZIP Code for the address.
                  type: string
            teams:
              description: Info about the employee's team(s).
              type: array
              items:
                description: Use `id` if you index teams via Glean, and use `name` and `externalLink` if you want to use your own team pages
                properties:
                  externalLink:
                    description: Link to a team page on the internet or your company's intranet
                    format: uri
                    type: string
                  id:
                    description: Unique identifier
                    type: string
                  joinDate:
                    description: The team member's start date
                    format: date-time
                    type: string
                  name:
                    description: Team name
                    type: string
                  relationship:
                    default: MEMBER
                    description: The team member's relationship to the team. This defaults to MEMBER if not set.
                    enum: &ref_57
                      - MEMBER
                      - MANAGER
                      - LEAD
                      - POINT_OF_CONTACT
                      - OTHER
                    type: string
                type: object
            timezone:
              description: The timezone of the person. E.g. "Pacific Daylight Time".
              type: string
            timezoneOffset:
              description: The offset of the person's timezone in seconds from UTC.
              format: int64
              type: integer
            title:
              description: Job title.
              type: string
            type:
              enum: *ref_17
              example: FULL_TIME
              type: string
              x-enumDescriptions: *ref_18
            uneditedPhotoUrl:
              description: The original photo URL of the person's avatar before any edits they made are applied
              format: url
              type: string
          type: object
        name:
          description: The display name.
          type: string
        obfuscatedId:
          description: An opaque identifier that can be used to request metadata for a Person.
          type: string
        relatedDocuments:
          description: A list of documents related to this person.
          type: array
          items:
            properties:
              associatedEntityId:
                description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                type: string
              documents:
                deprecated: true
                description: A truncated list of documents with this relation. TO BE DEPRECATED.
                type: array
                items:
                  properties:
                    connectorType:
                      type: object
                      description: ConnectorType object (max depth)
                    containerDocument:
                      type: object
                      description: Document object (circular reference)
                    content:
                      type: object
                      description: DocumentContent object (max depth)
                    datasource:
                      description: The app or other repository type from which the document was extracted
                      type: string
                    docType:
                      description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                      type: string
                    id:
                      description: The Glean Document ID.
                      type: string
                    metadata:
                      type: object
                      description: DocumentMetadata object (max depth)
                    parentDocument:
                      type: object
                      description: Document object (circular reference)
                    sections:
                      description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                      type: array
                      items:
                        type: object
                        properties:
                          DocumentSection:
                            type: object
                            description: DocumentSection object (max depth)
                    title:
                      description: The title of the document.
                      type: string
                    url:
                      description: A permalink for the document.
                      type: string
                  type: object
              querySuggestion:
                example: *ref_24
                required: *ref_25
                properties:
                  datasource:
                    description: The datasource associated with the suggestion.
                    type: string
                  inputDetails:
                    type: object
                    description: SearchRequestInputDetails object (max depth)
                  label:
                    description: A user-facing description to display for the suggestion.
                    type: string
                  missingTerm:
                    description: A query term missing from the original query on which this suggestion is based.
                    type: string
                  query:
                    description: The query being suggested (e.g. enforcing the missing term from the original query).
                    type: string
                  ranges:
                    description: The bolded ranges within the query of the QuerySuggestion.
                    type: array
                    items:
                      type: object
                      properties:
                        TextRange:
                          type: object
                          description: TextRange object (max depth)
                  requestOptions:
                    type: object
                    description: SearchRequestOptions object (max depth)
                  searchProviderInfo:
                    type: object
                    description: SearchProviderInfo object (max depth)
                type: object
              relation:
                description: How this document relates to the including entity.
                enum: *ref_19
                type: string
                x-enumDescriptions: *ref_20
              results:
                description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                type: array
                items:
                  example: *ref_30
                  required: *ref_31
                  description: Result object (max depth)
                  type: object
                  properties:
                    allClusteredResults:
                      description: A list of results that should be displayed as associated with this result.
                      type: array
                      items:
                        type: object
                        properties:
                          ClusterGroup:
                            type: object
                            description: ClusterGroup object (max depth)
                    attachmentContext:
                      description: Additional context for the relationship between the result and the document it's attached to.
                      type: string
                    attachmentCount:
                      description: The total number of attachments.
                      type: integer
                    attachments:
                      description: A (potentially partial) list of results representing documents attached to the main result document.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResult:
                            type: object
                            description: SearchResult object (circular reference)
                    backlinkResults:
                      description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResult:
                            type: object
                            description: SearchResult object (circular reference)
                    clusterType:
                      type: object
                      description: ClusterTypeEnum object (max depth)
                    clusteredResults:
                      description: A list of results that should be displayed as associated with this result.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResult:
                            type: object
                            description: SearchResult object (circular reference)
                    document:
                      type: object
                      description: Document object (max depth)
                    fullText:
                      description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                      type: string
                    fullTextList:
                      description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                      type: array
                      items:
                        type: string
                    mustIncludeSuggestions:
                      type: object
                      description: QuerySuggestionList object (max depth)
                    nativeAppUrl:
                      description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                      type: string
                    pins:
                      description: A list of pins associated with this search result.
                      type: array
                      items:
                        type: object
                        properties:
                          PinDocument:
                            type: object
                            description: PinDocument object (max depth)
                    prominence:
                      type: object
                      description: SearchResultProminenceEnum object (max depth)
                    querySuggestion:
                      type: object
                      description: QuerySuggestion object (max depth)
                    relatedResults:
                      description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                      type: array
                      items:
                        type: object
                        properties:
                          RelatedDocuments:
                            type: object
                            description: RelatedDocuments object (circular reference)
                    snippets:
                      description: Text content from the result document which contains search query terms, if available.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResultSnippet:
                            type: object
                            description: SearchResultSnippet object (max depth)
                    title:
                      type: string
                    url:
                      type: string
            type: object
      type: object
    Result:
      properties:
        structuredResults:
          description: An array of entities in the work graph retrieved via a data request.
          type: array
          items:
            description: A single object that can support any object in the work graph. Only a single object will be populated.
            properties:
              answer:
                description: AnswerId object (max depth)
                type: object
                properties:
                  author:
                    type: object
                    description: Person object (max depth)
                  board:
                    type: object
                    description: AnswerBoard object (max depth)
                  collections:
                    description: The collections to which the answer belongs.
                    type: array
                    items:
                      type: object
                      properties:
                        Collection:
                          type: object
                          description: Collection object (max depth)
                  combinedAnswerText:
                    type: object
                    description: StructuredText object (max depth)
                  createTime:
                    description: The time the answer was created in ISO format (ISO 8601).
                    format: date-time
                    type: string
                  documentCategory:
                    description: The document's document_category(.proto).
                    type: string
                  likes:
                    type: object
                    description: AnswerLikes object (max depth)
                  sourceDocument:
                    type: object
                    description: Document object (max depth)
                  updateTime:
                    description: The time the answer was last updated in ISO format (ISO 8601).
                    format: date-time
                    type: string
                  updatedBy:
                    type: object
                    description: Person object (max depth)
                  verification:
                    type: object
                    description: Verification object (max depth)
                required:
                  - id
              answerBoard:
                description: AnswerBoardMutableProperties object (max depth)
                type: object
                properties:
                  createTime:
                    format: date-time
                    type: string
                  creator:
                    type: object
                    description: Person object (max depth)
                  id:
                    description: The unique ID of the Answer Board.
                    type: integer
                  itemCount:
                    description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                    type: integer
                  roles:
                    description: A list of user roles for the Answer Board.
                    type: array
                    items:
                      type: object
                      properties:
                        UserRoleSpecification:
                          type: object
                          description: UserRoleSpecification object (max depth)
                  updateTime:
                    format: date-time
                    type: string
                  updatedBy:
                    type: object
                    description: Person object (max depth)
                required:
                  - id
                  - description
              app:
                required: &ref_58
                  - datasource
                properties:
                  datasource:
                    description: The app or other repository type this represents
                    type: string
                  docType:
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                    type: string
                  iconUrl:
                    description: If there is available icon URL.
                    type: string
                  mimeType:
                    description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                    type: string
                type: object
              code:
                example: *ref_47
                properties:
                  fileName:
                    type: string
                  fileUrl:
                    type: string
                  isLastMatch:
                    description: Last file match for a repo
                    type: boolean
                  lines:
                    type: array
                    items:
                      type: object
                      properties:
                        CodeLine:
                          type: object
                          description: CodeLine object (max depth)
                  repoName:
                    type: string
                type: object
              collection:
                description: CollectionMutableProperties object (max depth)
                type: object
                properties:
                  childCount:
                    description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                    type: integer
                  children:
                    description: The children Collections of this Collection.
                    type: array
                    items:
                      type: object
                      properties:
                        Collection:
                          type: object
                          description: Collection object (circular reference)
                  createTime:
                    format: date-time
                    type: string
                  creator:
                    type: object
                    description: Person object (max depth)
                  id:
                    description: The unique ID of the Collection.
                    type: integer
                  itemCount:
                    description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                    type: integer
                  items:
                    description: The items in this Collection.
                    type: array
                    items:
                      type: object
                      properties:
                        CollectionItem:
                          type: object
                          description: CollectionItem object (max depth)
                  pinMetadata:
                    type: object
                    description: CollectionPinnedMetadata object (max depth)
                  roles:
                    description: A list of user roles for the Collection.
                    type: array
                    items:
                      type: object
                      properties:
                        UserRoleSpecification:
                          type: object
                          description: UserRoleSpecification object (max depth)
                  shortcuts:
                    description: The names of the shortcuts (Go Links) that point to this Collection.
                    type: array
                    items:
                      type: string
                  updateTime:
                    format: date-time
                    type: string
                  updatedBy:
                    type: object
                    description: Person object (max depth)
                required:
                  - id
                  - description
              customEntity:
                description: PermissionedObject object (max depth)
                type: object
                properties:
                  datasource:
                    description: The datasource the custom entity is from.
                    type: string
                  id:
                    description: Unique identifier.
                    type: string
                  metadata:
                    type: object
                    description: CustomEntityMetadata object (max depth)
                  objectType:
                    description: The type of the entity. Interpretation is specific to each datasource
                    type: string
                  roles:
                    description: A list of user roles for the custom entity explicitly granted by the owner.
                    type: array
                    items:
                      type: object
                      properties:
                        UserRoleSpecification:
                          type: object
                          description: UserRoleSpecification object (max depth)
                  title:
                    description: Title or name of the custom entity.
                    type: string
              customer:
                required: *ref_48
                properties:
                  company:
                    type: object
                    description: Company object (max depth)
                  contractAnnualRevenue:
                    description: Average contract annual revenue with that customer.
                    format: double
                    type: number
                  documentCounts:
                    type: object
                    description: DocumentCounts object (max depth)
                  domains:
                    description: Link to company's associated website domains.
                    type: array
                    items:
                      type: string
                  id:
                    description: Unique identifier.
                    type: string
                  mergedCustomers:
                    description: A list of Customers.
                    type: array
                    items:
                      type: object
                      properties:
                        Customer:
                          type: object
                          description: Customer object (circular reference)
                  metadata:
                    type: object
                    description: CustomerMetadata object (max depth)
                  notes:
                    description: User facing (potentially generated) notes about company.
                    example: CIO is interested in trying out the product.
                    type: string
                  poc:
                    description: A list of POC for company.
                    type: array
                    items:
                      type: object
                      properties:
                        Person:
                          type: object
                          description: Person object (max depth)
                  startDate:
                    description: The date when the interaction with customer started.
                    format: date
                    type: string
                type: object
              disambiguation:
                description: A disambiguation between multiple entities with the same name
                type: object
                properties:
                  id:
                    description: The unique id of the entity in the knowledge graph
                    type: string
                  name:
                    description: Name of the ambiguous entity
                    type: string
                  type:
                    type: object
                    description: EntityType object (max depth)
              document:
                properties:
                  connectorType:
                    type: object
                    description: ConnectorType object (max depth)
                  containerDocument:
                    type: object
                    description: Document object (circular reference)
                  content:
                    type: object
                    description: DocumentContent object (max depth)
                  datasource:
                    description: The app or other repository type from which the document was extracted
                    type: string
                  docType:
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                    type: string
                  id:
                    description: The Glean Document ID.
                    type: string
                  metadata:
                    type: object
                    description: DocumentMetadata object (max depth)
                  parentDocument:
                    type: object
                    description: Document object (circular reference)
                  sections:
                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                    type: array
                    items:
                      type: object
                      properties:
                        DocumentSection:
                          type: object
                          description: DocumentSection object (max depth)
                  title:
                    description: The title of the document.
                    type: string
                  url:
                    description: A permalink for the document.
                    type: string
                type: object
              extractedQnA:
                properties:
                  heading:
                    description: Heading text that was matched to produce this result.
                    type: string
                  question:
                    description: Question text that was matched to produce this result.
                    type: string
                  questionResult:
                    type: object
                    description: SearchResult object (max depth)
                type: object
              meeting:
                properties:
                  attendees:
                    type: object
                    description: CalendarAttendees object (max depth)
                  description:
                    type: string
                  endTime:
                    format: date-time
                    type: string
                  id:
                    type: string
                  startTime:
                    format: date-time
                    type: string
                  title:
                    type: string
                  url:
                    type: string
                type: object
              person:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              prominence:
                description: The level of visual distinction that should be given to a result.
                enum: *ref_49
                type: string
                x-enumDescriptions: *ref_50
              querySuggestions:
                properties:
                  person:
                    type: object
                    description: Person object (max depth)
                  suggestions:
                    type: array
                    items:
                      type: object
                      properties:
                        QuerySuggestion:
                          type: object
                          description: QuerySuggestion object (max depth)
                type: object
              relatedDocuments:
                description: A list of documents related to this structured result.
                type: array
                items:
                  properties:
                    associatedEntityId:
                      description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                      type: string
                    documents:
                      deprecated: true
                      description: A truncated list of documents with this relation. TO BE DEPRECATED.
                      type: array
                      items:
                        type: object
                        properties:
                          Document:
                            type: object
                            description: Document object (max depth)
                    querySuggestion:
                      type: object
                      description: QuerySuggestion object (max depth)
                    relation:
                      description: How this document relates to the including entity.
                      enum: *ref_19
                      type: string
                      x-enumDescriptions: *ref_20
                    results:
                      description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResult:
                            type: object
                            description: SearchResult object (max depth)
                  type: object
              relatedQuestion:
                properties:
                  answer:
                    description: The answer for the related question
                    type: string
                  question:
                    description: The text of the related question
                    type: string
                  ranges:
                    description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                    type: array
                    items:
                      type: object
                      properties:
                        TextRange:
                          type: object
                          description: TextRange object (max depth)
                type: object
              shortcut:
                description: UserGeneratedContentId object (max depth)
                type: object
                properties:
                  alias:
                    description: canonical link text following go/ prefix where hyphen/underscore is removed.
                    type: string
                  roles:
                    description: A list of user roles for the Go Link.
                    type: array
                    items:
                      type: object
                      properties:
                        UserRoleSpecification:
                          type: object
                          description: UserRoleSpecification object (max depth)
                  title:
                    description: Title for the Go Link
                    type: string
                required:
                  - inputAlias
              snippets:
                description: Any snippets associated to the populated object.
                type: array
                items:
                  example: *ref_26
                  required: *ref_27
                  properties:
                    mimeType:
                      description: The mime type of the snippets, currently either text/plain or text/html.
                      type: string
                    ranges:
                      description: The bolded ranges within text.
                      type: array
                      items:
                        type: object
                        properties:
                          TextRange:
                            type: object
                            description: TextRange object (max depth)
                    snippet:
                      description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                      type: string
                    snippetTextOrdering:
                      description: Used for sorting based off the snippet's location within all_snippetable_text
                      type: integer
                    text:
                      description: A matching snippet from the document with no highlights.
                      type: string
                    url:
                      description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                      type: string
                  type: object
              source:
                description: Source context for this result. Possible values depend on the result type.
                enum: *ref_51
                type: string
              team:
                description: RelatedObjects object (max depth)
                type: object
                properties:
                  bannerUrl:
                    description: A link to the team's banner photo.
                    format: url
                    type: string
                  businessUnit:
                    description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                    type: string
                  canBeDeleted:
                    default: true
                    description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                    type: boolean
                  createdFrom:
                    description: For teams created from docs, the doc title. Otherwise empty.
                    type: string
                  customFields:
                    description: Customizable fields for additional team information.
                    type: array
                    items:
                      type: object
                      properties:
                        CustomFieldData:
                          type: object
                          description: CustomFieldData object (max depth)
                  datasource:
                    description: the data source of the team, e.g. GDRIVE
                    type: string
                  datasourceProfiles:
                    description: The datasource profiles of the team
                    type: array
                    items:
                      type: object
                      properties:
                        DatasourceProfile:
                          type: object
                          description: DatasourceProfile object (max depth)
                  department:
                    description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                    type: string
                  description:
                    description: A description of the team
                    type: string
                  emails:
                    description: The emails for this team
                    type: array
                    items:
                      type: object
                      properties:
                        TeamEmail:
                          type: object
                          description: TeamEmail object (max depth)
                  externalLink:
                    description: Link to a team page on the internet or your company's intranet
                    format: uri
                    type: string
                  id:
                    description: Unique identifier
                    type: string
                  lastUpdatedAt:
                    description: when this team was last updated.
                    format: date-time
                    type: string
                  loggingId:
                    description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                    type: string
                  memberCount:
                    description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                    type: integer
                  members:
                    description: The members on this team
                    type: array
                    items:
                      type: object
                      properties:
                        PersonToTeamRelationship:
                          type: object
                          description: PersonToTeamRelationship object (max depth)
                  name:
                    description: Team name
                    type: string
                  photoUrl:
                    description: A link to the team's photo.
                    format: url
                    type: string
                  status:
                    default: PROCESSED
                    description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                    enum: *ref_52
                    type: string
                required:
                  - id
                  - name
              trackingToken:
                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                type: string
            type: object
        trackingToken:
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
          type: string
      type: object
    PinDocument:
      type: object
      properties:
        audienceFilters:
          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
          type: array
          items:
            example: *ref_7
            properties:
              fieldName:
                example: owner
                type: string
              groupName:
                description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                example: Spreadsheet
                type: string
              values:
                description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                type: array
                items:
                  properties:
                    isNegated:
                      deprecated: true
                      description: DEPRECATED - please use relationType instead
                      type: boolean
                    relationType:
                      enum: *ref_14
                      example: EQUALS
                      type: string
                    value:
                      example: Spreadsheet
                      type: string
                  type: object
            type: object
        queries:
          description: The query strings for which the pinned result will show.
          type: array
          items:
            type: string
        attribution:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        createTime:
          format: date-time
          type: string
        documentId:
          description: The document which should be a pinned result.
          type: string
        id:
          description: The opaque id of the pin.
          type: string
        updateTime:
          format: date-time
          type: string
        updatedBy:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
      required:
        - documentId
    AnswerBoard:
      type: object
      properties:
        addedRoles:
          description: A list of added user roles for the Collection.
          type: array
          items:
            type: object
            properties:
              UserRoleSpecification:
                type: object
                description: UserRoleSpecification object (max depth)
        audienceFilters:
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          type: array
          items:
            type: object
            properties:
              FacetFilter:
                type: object
                description: FacetFilter object (max depth)
        description:
          description: A brief summary of the Collection's contents.
          type: string
        name:
          description: The unique name of the Collection.
          type: string
        removedRoles:
          description: A list of removed user roles for the Collection.
          type: array
          items:
            type: object
            properties:
              UserRoleSpecification:
                type: object
                description: UserRoleSpecification object (max depth)
        permissions:
          properties:
            write:
              type: object
              description: WritePermission object (max depth)
          type: object
        createTime:
          format: date-time
          type: string
        creator:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        id:
          description: The unique ID of the Answer Board.
          type: integer
        itemCount:
          description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
          type: integer
        roles:
          description: A list of user roles for the Answer Board.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                required: *ref_8
                properties:
                  id:
                    description: A unique identifier for the group. May be the same as name.
                    type: string
                  name:
                    description: Name of the group.
                    type: string
                  type:
                    type: object
                    description: GroupType object (max depth)
                type: object
              person:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              role:
                description: A user's role with respect to a specific document.
                enum: *ref_9
                type: string
              sourceDocumentSpec:
                oneOf:
                  - type: object
                    properties:
                      url:
                        description: The URL of the document.
                        type: string
                  - type: object
                    properties:
                      id:
                        description: The ID of the document.
                        type: string
                  - type: object
                    properties:
                      contentId:
                        description: The id for user generated content.
                        type: integer
                      docType:
                        description: The specific type of the user generated content type.
                        type: string
                      ugcType:
                        description: The type of the user generated content (UGC datasource).
                        enum: *ref_10
                        type: string
            type: object
        updateTime:
          format: date-time
          type: string
        updatedBy:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
      required:
        - name
        - id
        - description
    RelatedDocuments:
      properties:
        associatedEntityId:
          description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
          type: string
        documents:
          deprecated: true
          description: A truncated list of documents with this relation. TO BE DEPRECATED.
          type: array
          items:
            properties:
              connectorType:
                description: The source from which document content was pulled, e.g. an API crawl or browser history
                enum: *ref_42
                type: string
              containerDocument:
                type: object
                description: Document object (circular reference)
              content:
                properties:
                  fullTextList:
                    description: The plaintext content of the document.
                    type: array
                    items:
                      type: string
                type: object
              datasource:
                description: The app or other repository type from which the document was extracted
                type: string
              docType:
                description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                type: string
              id:
                description: The Glean Document ID.
                type: string
              metadata:
                example: *ref_43
                properties:
                  ancestors:
                    description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (circular reference)
                  assignedTo:
                    type: object
                    description: Person object (max depth)
                  author:
                    type: object
                    description: Person object (max depth)
                  collections:
                    description: A list of collections that the document belongs to.
                    type: array
                    items:
                      type: object
                      properties:
                        Collection:
                          type: object
                          description: Collection object (max depth)
                  components:
                    description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
                    type: array
                    items:
                      type: string
                  contactPerson:
                    type: object
                    description: Person object (max depth)
                  container:
                    description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
                    type: string
                  containerId:
                    description: The Glean Document ID of the container. Uniquely identifies the container.
                    type: string
                  createTime:
                    format: date-time
                    type: string
                  customData:
                    type: object
                    description: CustomData object (max depth)
                  datasource:
                    type: string
                  datasourceId:
                    description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
                    type: string
                  datasourceInstance:
                    description: The datasource instance from which the document was extracted.
                    type: string
                  documentCategory:
                    description: The document's document_category(.proto).
                    type: string
                  documentId:
                    description: The index-wide unique identifier.
                    type: string
                  documentIdHash:
                    description: Hash of the Glean Document ID.
                    type: string
                  indexStatus:
                    type: object
                    description: IndexStatus object (max depth)
                  interactions:
                    type: object
                    description: DocumentInteractions object (max depth)
                  labels:
                    description: A list of tags for the document. Interpretation is datasource specific.
                    type: array
                    items:
                      type: string
                  loggingId:
                    description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
                    type: string
                  mentionedPeople:
                    description: A list of people mentioned in the document.
                    type: array
                    items:
                      type: object
                      properties:
                        Person:
                          type: object
                          description: Person object (max depth)
                  mimeType:
                    type: string
                  objectType:
                    description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                    type: string
                  owner:
                    type: object
                    description: Person object (max depth)
                  parentId:
                    description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
                    type: string
                  path:
                    description: For file datasources like onedrive/github etc this has the path to the file
                    type: string
                  permissions:
                    type: object
                    description: ObjectPermissions object (max depth)
                  pins:
                    description: A list of stars associated with this result.  "Pin" is an older name.
                    type: array
                    items:
                      type: object
                      properties:
                        PinDocument:
                          type: object
                          description: PinDocument object (max depth)
                  priority:
                    description: The document priority. Interpretation is datasource specific.
                    type: string
                  shortcuts:
                    description: A list of shortcuts of which destination URL is for the document.
                    type: array
                    items:
                      type: object
                      properties:
                        Shortcut:
                          type: object
                          description: Shortcut object (max depth)
                  status:
                    description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
                    type: string
                  statusCategory:
                    description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
                    type: string
                  superContainerId:
                    description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
                    type: string
                  thumbnail:
                    type: object
                    description: Thumbnail object (max depth)
                  updateTime:
                    format: date-time
                    type: string
                  updatedBy:
                    type: object
                    description: Person object (max depth)
                  verification:
                    type: object
                    description: Verification object (max depth)
                  viewerInfo:
                    type: object
                    description: ViewerInfo object (max depth)
                  visibility:
                    type: object
                    description: DocumentVisibility object (max depth)
                  visitCount:
                    type: object
                    description: CountInfo object (max depth)
                type: object
              parentDocument:
                type: object
                description: Document object (circular reference)
              sections:
                description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                type: array
                items:
                  type: object
                  properties:
                    title:
                      description: The title of the document section (e.g. the section header).
                      type: string
                    url:
                      description: The permalink of the document section.
                      type: string
              title:
                description: The title of the document.
                type: string
              url:
                description: A permalink for the document.
                type: string
            type: object
        querySuggestion:
          example: *ref_24
          required: *ref_25
          properties:
            datasource:
              description: The datasource associated with the suggestion.
              type: string
            inputDetails:
              example: *ref_35
              properties:
                hasCopyPaste:
                  description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                  type: boolean
              type: object
            label:
              description: A user-facing description to display for the suggestion.
              type: string
            missingTerm:
              description: A query term missing from the original query on which this suggestion is based.
              type: string
            query:
              description: The query being suggested (e.g. enforcing the missing term from the original query).
              type: string
            ranges:
              description: The bolded ranges within the query of the QuerySuggestion.
              type: array
              items:
                description: A subsection of a given string to which some special formatting should be applied.
                required: *ref_2
                properties:
                  document:
                    type: object
                    description: Document object (max depth)
                  endIndex:
                    description: The exclusive end index of the range.
                    type: integer
                  startIndex:
                    description: The inclusive start index of the range.
                    type: integer
                  type:
                    enum: *ref_3
                    type: string
                  url:
                    description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                    type: string
                type: object
            requestOptions:
              example: *ref_36
              required: *ref_37
              properties:
                authTokens:
                  description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                  type: array
                  items:
                    type: object
                    properties:
                      AuthToken:
                        type: object
                        description: AuthToken object (max depth)
                datasourceFilter:
                  description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                  type: string
                datasourcesFilter:
                  description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                  type: array
                  items:
                    type: string
                defaultFacets:
                  description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                  type: array
                  items:
                    type: string
                disableQueryAutocorrect:
                  description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                  type: boolean
                disableSpellcheck:
                  description: Whether or not to disable spellcheck.
                  type: boolean
                exclusions:
                  type: object
                  description: RestrictionFilters object (max depth)
                facetBucketFilter:
                  type: object
                  description: FacetBucketFilter object (max depth)
                facetBucketSize:
                  description: The maximum number of FacetBuckets to return in each FacetResult.
                  type: integer
                facetFilterSets:
                  description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                  type: array
                  items:
                    type: object
                    properties:
                      FacetFilterSet:
                        type: object
                        description: FacetFilterSet object (max depth)
                facetFilters:
                  description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                  type: array
                  items:
                    type: object
                    properties:
                      FacetFilter:
                        type: object
                        description: FacetFilter object (max depth)
                fetchAllDatasourceCounts:
                  description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                  type: boolean
                inclusions:
                  type: object
                  description: RestrictionFilters object (max depth)
                queryOverridesFacetFilters:
                  description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                  type: boolean
                responseHints:
                  description: Array of hints containing which fields should be populated in the response.
                  type: array
                  items:
                    description: Hints for the response content.
                    enum: *ref_38
                    type: string
                    x-enumDescriptions: *ref_39
                returnLlmContentOverSnippets:
                  description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                  type: boolean
                timezoneOffset:
                  description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                  type: integer
              type: object
            searchProviderInfo:
              example: *ref_40
              properties:
                logoUrl:
                  description: URL to the provider's logo.
                  type: string
                name:
                  description: Name of the search provider.
                  type: string
                searchLinkUrlTemplate:
                  description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                  type: string
              type: object
          type: object
        relation:
          description: How this document relates to the including entity.
          enum: *ref_19
          type: string
          x-enumDescriptions: *ref_20
        results:
          description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
          type: array
          items:
            example: *ref_30
            required: *ref_31
            type: object
            properties:
              structuredResults:
                description: An array of entities in the work graph retrieved via a data request.
                type: array
                items:
                  type: object
                  properties:
                    StructuredResult:
                      type: object
                      description: StructuredResult object (max depth)
              trackingToken:
                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                type: string
              allClusteredResults:
                description: A list of results that should be displayed as associated with this result.
                type: array
                items:
                  required: *ref_28
                  properties:
                    clusterType:
                      type: object
                      description: ClusterTypeEnum object (max depth)
                    clusteredResults:
                      description: A list of results that should be displayed as associated with this result.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResult:
                            type: object
                            description: SearchResult object (circular reference)
                    visibleCountHint:
                      description: The default number of results to display before truncating and showing a "see more" link
                      type: integer
                  type: object
              attachmentContext:
                description: Additional context for the relationship between the result and the document it's attached to.
                type: string
              attachmentCount:
                description: The total number of attachments.
                type: integer
              attachments:
                description: A (potentially partial) list of results representing documents attached to the main result document.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
              backlinkResults:
                description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
              clusterType:
                description: The reason for inclusion of clusteredResults.
                enum: *ref_29
                type: string
              clusteredResults:
                description: A list of results that should be displayed as associated with this result.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
              document:
                properties:
                  connectorType:
                    type: object
                    description: ConnectorType object (max depth)
                  containerDocument:
                    type: object
                    description: Document object (circular reference)
                  content:
                    type: object
                    description: DocumentContent object (max depth)
                  datasource:
                    description: The app or other repository type from which the document was extracted
                    type: string
                  docType:
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                    type: string
                  id:
                    description: The Glean Document ID.
                    type: string
                  metadata:
                    type: object
                    description: DocumentMetadata object (max depth)
                  parentDocument:
                    type: object
                    description: Document object (circular reference)
                  sections:
                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                    type: array
                    items:
                      type: object
                      properties:
                        DocumentSection:
                          type: object
                          description: DocumentSection object (max depth)
                  title:
                    description: The title of the document.
                    type: string
                  url:
                    description: A permalink for the document.
                    type: string
                type: object
              fullText:
                description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                type: string
              fullTextList:
                description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                type: array
                items:
                  type: string
              mustIncludeSuggestions:
                properties:
                  person:
                    type: object
                    description: Person object (max depth)
                  suggestions:
                    type: array
                    items:
                      type: object
                      properties:
                        QuerySuggestion:
                          type: object
                          description: QuerySuggestion object (max depth)
                type: object
              nativeAppUrl:
                description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                type: string
              pins:
                description: A list of pins associated with this search result.
                type: array
                items:
                  description: PinDocumentMutableProperties object (max depth)
                  type: object
                  properties:
                    attribution:
                      type: object
                      description: Person object (max depth)
                    audienceFilters:
                      description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                      type: array
                      items:
                        type: object
                        properties:
                          FacetFilter:
                            type: object
                            description: FacetFilter object (max depth)
                    createTime:
                      format: date-time
                      type: string
                    documentId:
                      description: The document which should be a pinned result.
                      type: string
                    id:
                      description: The opaque id of the pin.
                      type: string
                    updateTime:
                      format: date-time
                      type: string
                    updatedBy:
                      type: object
                      description: Person object (max depth)
                  required:
                    - documentId
              prominence:
                description: |
                  The level of visual distinction that should be given to a result.
                enum: *ref_32
                type: string
                x-enumDescriptions: *ref_33
              querySuggestion:
                example: *ref_24
                required: *ref_25
                properties:
                  datasource:
                    description: The datasource associated with the suggestion.
                    type: string
                  inputDetails:
                    type: object
                    description: SearchRequestInputDetails object (max depth)
                  label:
                    description: A user-facing description to display for the suggestion.
                    type: string
                  missingTerm:
                    description: A query term missing from the original query on which this suggestion is based.
                    type: string
                  query:
                    description: The query being suggested (e.g. enforcing the missing term from the original query).
                    type: string
                  ranges:
                    description: The bolded ranges within the query of the QuerySuggestion.
                    type: array
                    items:
                      type: object
                      properties:
                        TextRange:
                          type: object
                          description: TextRange object (max depth)
                  requestOptions:
                    type: object
                    description: SearchRequestOptions object (max depth)
                  searchProviderInfo:
                    type: object
                    description: SearchProviderInfo object (max depth)
                type: object
              relatedResults:
                description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                type: array
                items:
                  type: object
                  properties:
                    RelatedDocuments:
                      type: object
                      description: RelatedDocuments object (circular reference)
              snippets:
                description: Text content from the result document which contains search query terms, if available.
                type: array
                items:
                  example: *ref_26
                  required: *ref_27
                  properties:
                    mimeType:
                      description: The mime type of the snippets, currently either text/plain or text/html.
                      type: string
                    ranges:
                      description: The bolded ranges within text.
                      type: array
                      items:
                        type: object
                        properties:
                          TextRange:
                            type: object
                            description: TextRange object (max depth)
                    snippet:
                      description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                      type: string
                    snippetTextOrdering:
                      description: Used for sorting based off the snippet's location within all_snippetable_text
                      type: integer
                    text:
                      description: A matching snippet from the document with no highlights.
                      type: string
                    url:
                      description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                      type: string
                  type: object
              title:
                type: string
              url:
                type: string
      type: object
    CollectionItem:
      type: object
      properties:
        description:
          description: A helpful description of why this CollectionItem is in the Collection that it's in.
          type: string
        icon:
          description: The emoji icon for this CollectionItem. Only used for Text type items.
          type: string
        name:
          description: The optional name of the Collection item.
          type: string
        collection:
          description: CollectionBaseMutableProperties object (max depth)
          type: object
          properties:
            adminLocked:
              description: Indicates whether edits are allowed for everyone or only admins.
              type: boolean
            allowedDatasource:
              description: The datasource type this Collection can hold.
              type: string
            icon:
              description: The emoji icon of this Collection.
              type: string
            parentId:
              description: The parent of this Collection, or 0 if it's a top-level Collection.
              type: integer
            thumbnail:
              type: object
              description: Thumbnail object (max depth)
            permissions:
              type: object
              description: ObjectPermissions object (max depth)
            childCount:
              description: The number of children Collections. Separated from the actual children so we can grab the count without children.
              type: integer
            children:
              description: The children Collections of this Collection.
              type: array
              items:
                type: object
                properties:
                  Collection:
                    type: object
                    description: Collection object (circular reference)
            createTime:
              format: date-time
              type: string
            creator:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            id:
              description: The unique ID of the Collection.
              type: integer
            itemCount:
              description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
              type: integer
            items:
              description: The items in this Collection.
              type: array
              items:
                type: object
                properties:
                  CollectionItem:
                    type: object
                    description: CollectionItem object (circular reference)
            pinMetadata:
              required: &ref_60
                - pinnedCategories
                - eligibleCategoriesForPinning
              properties:
                eligiblePins:
                  description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                  type: array
                  items:
                    type: object
                    properties:
                      CollectionPinMetadata:
                        type: object
                        description: CollectionPinMetadata object (max depth)
                existingPins:
                  description: List of targets this Collection is pinned to.
                  type: array
                  items:
                    type: object
                    properties:
                      CollectionPinTarget:
                        type: object
                        description: CollectionPinTarget object (max depth)
              type: object
            roles:
              description: A list of user roles for the Collection.
              type: array
              items:
                required: *ref_6
                properties:
                  group:
                    type: object
                    description: Group object (max depth)
                  person:
                    type: object
                    description: Person object (max depth)
                  role:
                    type: object
                    description: UserRole object (max depth)
                  sourceDocumentSpec:
                    type: object
                    description: DocumentSpec object (max depth)
                type: object
            shortcuts:
              description: The names of the shortcuts (Go Links) that point to this Collection.
              type: array
              items:
                type: string
            updateTime:
              format: date-time
              type: string
            updatedBy:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
          required:
            - name
            - id
            - description
        collectionId:
          description: The Collection ID of the Collection that this CollectionItem belongs in.
          type: integer
        createdAt:
          description: Unix timestamp for when the item was first added (in seconds since epoch UTC).
          format: date-time
          type: string
        createdBy:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        document:
          properties:
            connectorType:
              description: The source from which document content was pulled, e.g. an API crawl or browser history
              enum: *ref_42
              type: string
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              properties:
                fullTextList:
                  description: The plaintext content of the document.
                  type: array
                  items:
                    type: string
              type: object
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              example: *ref_43
              properties:
                ancestors:
                  description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
                  type: array
                  items:
                    type: object
                    properties:
                      Document:
                        type: object
                        description: Document object (circular reference)
                assignedTo:
                  type: object
                  description: Person object (max depth)
                author:
                  type: object
                  description: Person object (max depth)
                collections:
                  description: A list of collections that the document belongs to.
                  type: array
                  items:
                    type: object
                    properties:
                      Collection:
                        type: object
                        description: Collection object (max depth)
                components:
                  description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
                  type: array
                  items:
                    type: string
                contactPerson:
                  type: object
                  description: Person object (max depth)
                container:
                  description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
                  type: string
                containerId:
                  description: The Glean Document ID of the container. Uniquely identifies the container.
                  type: string
                createTime:
                  format: date-time
                  type: string
                customData:
                  type: object
                  description: CustomData object (max depth)
                datasource:
                  type: string
                datasourceId:
                  description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
                  type: string
                datasourceInstance:
                  description: The datasource instance from which the document was extracted.
                  type: string
                documentCategory:
                  description: The document's document_category(.proto).
                  type: string
                documentId:
                  description: The index-wide unique identifier.
                  type: string
                documentIdHash:
                  description: Hash of the Glean Document ID.
                  type: string
                indexStatus:
                  type: object
                  description: IndexStatus object (max depth)
                interactions:
                  type: object
                  description: DocumentInteractions object (max depth)
                labels:
                  description: A list of tags for the document. Interpretation is datasource specific.
                  type: array
                  items:
                    type: string
                loggingId:
                  description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
                  type: string
                mentionedPeople:
                  description: A list of people mentioned in the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (max depth)
                mimeType:
                  type: string
                objectType:
                  description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                owner:
                  type: object
                  description: Person object (max depth)
                parentId:
                  description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
                  type: string
                path:
                  description: For file datasources like onedrive/github etc this has the path to the file
                  type: string
                permissions:
                  type: object
                  description: ObjectPermissions object (max depth)
                pins:
                  description: A list of stars associated with this result.  "Pin" is an older name.
                  type: array
                  items:
                    type: object
                    properties:
                      PinDocument:
                        type: object
                        description: PinDocument object (max depth)
                priority:
                  description: The document priority. Interpretation is datasource specific.
                  type: string
                shortcuts:
                  description: A list of shortcuts of which destination URL is for the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Shortcut:
                        type: object
                        description: Shortcut object (max depth)
                status:
                  description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
                  type: string
                statusCategory:
                  description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
                  type: string
                superContainerId:
                  description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
                  type: string
                thumbnail:
                  type: object
                  description: Thumbnail object (max depth)
                updateTime:
                  format: date-time
                  type: string
                updatedBy:
                  type: object
                  description: Person object (max depth)
                verification:
                  type: object
                  description: Verification object (max depth)
                viewerInfo:
                  type: object
                  description: ViewerInfo object (max depth)
                visibility:
                  type: object
                  description: DocumentVisibility object (max depth)
                visitCount:
                  type: object
                  description: CountInfo object (max depth)
              type: object
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  title:
                    description: The title of the document section (e.g. the section header).
                    type: string
                  url:
                    description: The permalink of the document section.
                    type: string
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        documentId:
          description: If this CollectionItem is indexed, the Glean Document ID of that document.
          type: string
        itemId:
          description: Unique identifier for the item within the Collection it belongs to.
          type: string
        itemType:
          enum: &ref_59
            - DOCUMENT
            - TEXT
            - URL
            - COLLECTION
          type: string
        shortcut:
          type: object
          properties:
            id:
              description: The opaque id of the user generated content.
              type: integer
            addedRoles:
              description: A list of user roles added for the Shortcut.
              type: array
              items:
                type: object
                properties:
                  UserRoleSpecification:
                    type: object
                    description: UserRoleSpecification object (max depth)
            description:
              description: A short, plain text blurb to help people understand the intent of the shortcut.
              type: string
            destinationDocumentId:
              description: Glean Document ID for the URL, if known.
              type: string
            destinationUrl:
              description: Destination URL for the shortcut.
              type: string
            inputAlias:
              description: Link text following go/ prefix as entered by the user.
              type: string
            removedRoles:
              description: A list of user roles removed for the Shortcut.
              type: array
              items:
                type: object
                properties:
                  UserRoleSpecification:
                    type: object
                    description: UserRoleSpecification object (max depth)
            unlisted:
              description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
              type: boolean
            urlTemplate:
              description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
              type: string
            permissions:
              type: object
              description: ObjectPermissions object (max depth)
            createTime:
              description: The time the shortcut was created in ISO format (ISO 8601).
              format: date-time
              type: string
            createdBy:
              type: object
              description: Person object (max depth)
            destinationDocument:
              type: object
              description: Document object (max depth)
            editUrl:
              description: The URL using which the user can access the edit page of the shortcut.
              type: string
            intermediateUrl:
              description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
              type: string
            isExternal:
              description: Indicates whether a shortcut is native or external.
              type: boolean
            updateTime:
              description: The time the shortcut was updated in ISO format (ISO 8601).
              format: date-time
              type: string
            updatedBy:
              type: object
              description: Person object (max depth)
            viewPrefix:
              description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
              type: string
            alias:
              description: canonical link text following go/ prefix where hyphen/underscore is removed.
              type: string
            roles:
              description: A list of user roles for the Go Link.
              type: array
              items:
                required: *ref_6
                properties:
                  group:
                    type: object
                    description: Group object (max depth)
                  person:
                    type: object
                    description: Person object (max depth)
                  role:
                    type: object
                    description: UserRole object (max depth)
                  sourceDocumentSpec:
                    type: object
                    description: DocumentSpec object (max depth)
                type: object
            title:
              description: Title for the Go Link
              type: string
          required:
            - inputAlias
        url:
          description: The URL of this CollectionItem.
          type: string
      required:
        - collectionId
        - itemType
    PersonMetadata:
      example: *ref_15
      properties:
        aliasEmails:
          description: Additional email addresses of this user beyond the primary, if any.
          type: array
          items:
            type: string
        badges:
          description: The badges that a user has earned over their lifetime.
          type: array
          items:
            description: Displays a user's accomplishment or milestone
            example: *ref_53
            type: object
            properties:
              displayName:
                description: The badge name displayed to users
                type: string
              iconConfig:
                description: Defines how to render an icon
                example:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                properties:
                  backgroundColor:
                    type: string
                  color:
                    type: string
                  generatedBackgroundColorKey:
                    type: string
                  iconType:
                    enum:
                      - COLLECTION
                      - CUSTOM
                      - DATASOURCE
                      - DATASOURCE_INSTANCE
                      - FAVICON
                      - FILE_TYPE
                      - GENERATED_BACKGROUND
                      - GLYPH
                      - MIME_TYPE
                      - NO_ICON
                      - PERSON
                      - REACTIONS
                      - URL
                  key:
                    type: string
                  masked:
                    description: Whether the icon should be masked based on current theme.
                    type: boolean
                  name:
                    description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
                    type: string
                  url:
                    description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
                    type: string
                type: object
              key:
                description: An auto generated unique identifier.
                type: string
              pinned:
                description: The badge should be shown on the PersonAttribution
                type: boolean
        bannerUrl:
          description: The URL of the person's banner photo.
          format: url
          type: string
        bio:
          description: Short biography or mission statement of the employee.
          type: string
        businessUnit:
          description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
          type: string
        busyEvents:
          description: Intervals of busy time for this person, along with the type of event they're busy with.
          type: array
          items:
            description: A generic, light-weight calendar event.
            type: object
            properties:
              eventType:
                description: The nature of the event, for example "out of office".
                enum: *ref_54
                type: string
              time:
                required:
                  - start
                  - end
                properties:
                  end:
                    description: The RFC3339 timestamp formatted end time of this event.
                    type: string
                  start:
                    description: The RFC3339 timestamp formatted start time of this event.
                    type: string
                type: object
        customFields:
          description: User customizable fields for additional people information.
          type: array
          items:
            required: *ref_13
            properties:
              displayable:
                default: true
                description: Determines whether the client should display this custom field
                type: boolean
              label:
                description: A user-facing label for this field.
                type: string
              values:
                type: array
                items:
                  oneOf:
                    - type: object
                      description: CustomFieldValueStr object (max depth)
                    - type: object
                      description: CustomFieldValueHyperlink object (max depth)
                    - type: object
                      description: CustomFieldValuePerson object (max depth)
            type: object
        datasourceProfile:
          description: List of profiles this user has in different datasources / tools that they use.
          type: array
          items:
            required: *ref_46
            properties:
              datasource:
                description: The datasource the profile is of.
                example: github
                type: string
              handle:
                description: The display name of the entity in the given datasource.
                type: string
              isUserGenerated:
                description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                type: boolean
              nativeAppUrl:
                description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                type: string
              url:
                description: URL to view the entity's profile.
                type: string
            type: object
        department:
          description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
          type: string
        departmentCount:
          description: The number of people in this person's department.
          type: integer
        directReportsCount:
          description: The total number of people who directly report to this person, or 0
          type: integer
        email:
          description: The user's primary email address
          type: string
        endDate:
          description: If a former employee, the last date of employment.
          format: date
          type: string
        externalProfileLink:
          description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
          type: string
        firstName:
          description: The first name of the person
          type: string
        inviteInfo:
          description: Information regarding the invite status of a person.
          properties:
            inviteTime:
              deprecated: true
              description: The time this person was invited in ISO format (ISO 8601).
              format: date-time
              type: string
            inviter:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (circular reference)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            invites:
              description: Latest invites received by the user for each channel
              type: array
              items:
                description: Information regarding the invite status of a person for a particular channel.
                properties:
                  channel:
                    type: object
                    description: CommunicationChannel object (max depth)
                  inviteTime:
                    description: The time this person was invited in ISO format (ISO 8601).
                    format: date-time
                    type: string
                  inviter:
                    type: object
                    description: Person object (max depth)
                  isAutoInvite:
                    description: Bit that tracks if this invite was automatically sent or user-sent
                    type: boolean
                  reminderTime:
                    description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
                    format: date-time
                    type: string
                type: object
            reminderTime:
              deprecated: true
              description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
              format: date-time
              type: string
            signUpTime:
              description: The time this person signed up in ISO format (ISO 8601).
              format: date-time
              type: string
          type: object
        isOrgRoot:
          description: Whether this person is a "root" node in their organization's hierarchy.
          type: boolean
        isSignedUp:
          description: Whether the user has signed into Glean at least once.
          type: boolean
        lastExtensionUse:
          description: The last time the user has used the Glean extension in ISO 8601 format.
          format: date-time
          type: string
        lastName:
          description: The last name of the person
          type: string
        location:
          description: User facing string representing the person's location.
          type: string
        loggingId:
          description: The logging id of the person used in scrubbed logs, tracking GA metrics.
          type: string
        managementChain:
          description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
          type: array
          items:
            example: *ref_0
            required: *ref_1
            properties:
              metadata:
                type: object
                description: PersonMetadata object (circular reference)
              name:
                description: The display name.
                type: string
              obfuscatedId:
                description: An opaque identifier that can be used to request metadata for a Person.
                type: string
              relatedDocuments:
                description: A list of documents related to this person.
                type: array
                items:
                  properties:
                    associatedEntityId:
                      description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                      type: string
                    documents:
                      deprecated: true
                      description: A truncated list of documents with this relation. TO BE DEPRECATED.
                      type: array
                      items:
                        type: object
                        properties:
                          Document:
                            type: object
                            description: Document object (max depth)
                    querySuggestion:
                      type: object
                      description: QuerySuggestion object (max depth)
                    relation:
                      description: How this document relates to the including entity.
                      enum: *ref_19
                      type: string
                      x-enumDescriptions: *ref_20
                    results:
                      description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResult:
                            type: object
                            description: SearchResult object (max depth)
                  type: object
            type: object
        manager:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              type: object
              description: PersonMetadata object (circular reference)
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        orgSizeCount:
          description: The total recursive size of the people reporting to this person, or 1
          type: integer
        peopleDistance:
          description: List of people and distances to those people from this person. Optionally with metadata.
          type: array
          items:
            required: *ref_55
            properties:
              distance:
                description: Distance to person, refer to PeopleDistance pipeline on interpretation of the value.
                format: float
                type: number
              name:
                description: The display name.
                type: string
              obfuscatedId:
                description: An opaque identifier that can be used to request metadata for a Person.
                type: string
            type: object
        permissions:
          description: |-
            Describes the permissions levels that a user has for permissioned features. When the client sends this, Permissions.read and Permissions.write are the additional permissions granted to a user on top of what they have via their roles.
            When the server sends this, Permissions.read and Permissions.write are the complete (merged) set of permissions the user has, and Permissions.roles is just for display purposes.
          properties:
            canAdminClientApiGlobalTokens:
              description: TODO--deprecate in favor of the read and write properties. True if the user can administrate client API tokens with global scope
              type: boolean
            canAdminSearch:
              description: TODO--deprecate in favor of the read and write properties. True if the user has access to /adminsearch
              type: boolean
            canDlp:
              description: TODO--deprecate in favor of the read and write properties. True if the user has access to data loss prevention (DLP) features
              type: boolean
            grant:
              additionalProperties:
                type: array
                description: List of grant permissions (for different scopes but same feature)
                items:
                  $ref: '#/components/schemas/GrantPermission'
              description: Describes the grant permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
            read:
              additionalProperties:
                type: array
                description: List of read permissions (for different scopes but same feature)
                items:
                  $ref: '#/components/schemas/ReadPermission'
              description: Describes the read permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
            role:
              description: The roleId of the canonical role a user has. The displayName is equal to the roleId.
              type: string
            roles:
              description: The roleIds of the roles a user has.
              type: array
              items:
                type: string
            write:
              additionalProperties:
                type: array
                description: List of write permissions (for different scopes but same feature)
                items:
                  $ref: '#/components/schemas/WritePermission'
              description: Describes the write permissions levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
          type: object
        phone:
          description: Phone number as a number string.
          type: string
        photoUrl:
          description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
          format: url
          type: string
        preferredName:
          description: The preferred name of the person, or a nickname.
          type: string
        profileBoolSettings:
          additionalProperties: *ref_16
          description: flag settings to indicate user profile settings for certain items
          type: object
        pronoun:
          description: She/her, He/his or other pronoun.
          type: string
        querySuggestions:
          properties:
            person:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (circular reference)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            suggestions:
              type: array
              items:
                example: *ref_24
                required: *ref_25
                properties:
                  datasource:
                    description: The datasource associated with the suggestion.
                    type: string
                  inputDetails:
                    type: object
                    description: SearchRequestInputDetails object (max depth)
                  label:
                    description: A user-facing description to display for the suggestion.
                    type: string
                  missingTerm:
                    description: A query term missing from the original query on which this suggestion is based.
                    type: string
                  query:
                    description: The query being suggested (e.g. enforcing the missing term from the original query).
                    type: string
                  ranges:
                    description: The bolded ranges within the query of the QuerySuggestion.
                    type: array
                    items:
                      type: object
                      properties:
                        TextRange:
                          type: object
                          description: TextRange object (max depth)
                  requestOptions:
                    type: object
                    description: SearchRequestOptions object (max depth)
                  searchProviderInfo:
                    type: object
                    description: SearchProviderInfo object (max depth)
                type: object
          type: object
        reports:
          type: array
          items:
            example: *ref_0
            required: *ref_1
            properties:
              metadata:
                type: object
                description: PersonMetadata object (circular reference)
              name:
                description: The display name.
                type: string
              obfuscatedId:
                description: An opaque identifier that can be used to request metadata for a Person.
                type: string
              relatedDocuments:
                description: A list of documents related to this person.
                type: array
                items:
                  properties:
                    associatedEntityId:
                      description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                      type: string
                    documents:
                      deprecated: true
                      description: A truncated list of documents with this relation. TO BE DEPRECATED.
                      type: array
                      items:
                        type: object
                        properties:
                          Document:
                            type: object
                            description: Document object (max depth)
                    querySuggestion:
                      type: object
                      description: QuerySuggestion object (max depth)
                    relation:
                      description: How this document relates to the including entity.
                      enum: *ref_19
                      type: string
                      x-enumDescriptions: *ref_20
                    results:
                      description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResult:
                            type: object
                            description: SearchResult object (max depth)
                  type: object
            type: object
        socialNetwork:
          description: List of social network profiles.
          type: array
          items:
            required: *ref_56
            properties:
              name:
                description: Possible values are "twitter", "linkedin".
                type: string
              profileName:
                description: Human-readable profile name.
                type: string
              profileUrl:
                description: Link to profile.
                format: url
                type: string
            type: object
        startDate:
          description: The date when the employee started.
          format: date
          type: string
        startDatePercentile:
          description: Percentage of the company that started strictly after this person. Between [0,100).
          format: float
          type: number
        structuredLocation:
          description: Detailed location with information about country, state, city etc.
          type: object
          properties:
            address:
              description: Office address or name.
              type: string
            city:
              description: Name of the city.
              type: string
            country:
              description: Country name.
              type: string
            countryCode:
              description: Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA.
              type: string
            deskLocation:
              description: Desk number.
              type: string
            region:
              description: Region information, e.g. NORAM, APAC.
              type: string
            state:
              description: State code.
              type: string
            timezone:
              description: Location's timezone, e.g. UTC, PST.
              type: string
            zipCode:
              description: ZIP Code for the address.
              type: string
        teams:
          description: Info about the employee's team(s).
          type: array
          items:
            description: Use `id` if you index teams via Glean, and use `name` and `externalLink` if you want to use your own team pages
            properties:
              externalLink:
                description: Link to a team page on the internet or your company's intranet
                format: uri
                type: string
              id:
                description: Unique identifier
                type: string
              joinDate:
                description: The team member's start date
                format: date-time
                type: string
              name:
                description: Team name
                type: string
              relationship:
                default: MEMBER
                description: The team member's relationship to the team. This defaults to MEMBER if not set.
                enum: *ref_57
                type: string
            type: object
        timezone:
          description: The timezone of the person. E.g. "Pacific Daylight Time".
          type: string
        timezoneOffset:
          description: The offset of the person's timezone in seconds from UTC.
          format: int64
          type: integer
        title:
          description: Job title.
          type: string
        type:
          enum: *ref_17
          example: FULL_TIME
          type: string
          x-enumDescriptions: *ref_18
        uneditedPhotoUrl:
          description: The original photo URL of the person's avatar before any edits they made are applied
          format: url
          type: string
      type: object
    StructuredTextItem:
      properties:
        document:
          properties:
            connectorType:
              description: The source from which document content was pulled, e.g. an API crawl or browser history
              enum: *ref_42
              type: string
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              properties:
                fullTextList:
                  description: The plaintext content of the document.
                  type: array
                  items:
                    type: string
              type: object
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              example: *ref_43
              properties:
                ancestors:
                  description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
                  type: array
                  items:
                    type: object
                    properties:
                      Document:
                        type: object
                        description: Document object (circular reference)
                assignedTo:
                  type: object
                  description: Person object (max depth)
                author:
                  type: object
                  description: Person object (max depth)
                collections:
                  description: A list of collections that the document belongs to.
                  type: array
                  items:
                    type: object
                    properties:
                      Collection:
                        type: object
                        description: Collection object (max depth)
                components:
                  description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
                  type: array
                  items:
                    type: string
                contactPerson:
                  type: object
                  description: Person object (max depth)
                container:
                  description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
                  type: string
                containerId:
                  description: The Glean Document ID of the container. Uniquely identifies the container.
                  type: string
                createTime:
                  format: date-time
                  type: string
                customData:
                  type: object
                  description: CustomData object (max depth)
                datasource:
                  type: string
                datasourceId:
                  description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
                  type: string
                datasourceInstance:
                  description: The datasource instance from which the document was extracted.
                  type: string
                documentCategory:
                  description: The document's document_category(.proto).
                  type: string
                documentId:
                  description: The index-wide unique identifier.
                  type: string
                documentIdHash:
                  description: Hash of the Glean Document ID.
                  type: string
                indexStatus:
                  type: object
                  description: IndexStatus object (max depth)
                interactions:
                  type: object
                  description: DocumentInteractions object (max depth)
                labels:
                  description: A list of tags for the document. Interpretation is datasource specific.
                  type: array
                  items:
                    type: string
                loggingId:
                  description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
                  type: string
                mentionedPeople:
                  description: A list of people mentioned in the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (max depth)
                mimeType:
                  type: string
                objectType:
                  description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                owner:
                  type: object
                  description: Person object (max depth)
                parentId:
                  description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
                  type: string
                path:
                  description: For file datasources like onedrive/github etc this has the path to the file
                  type: string
                permissions:
                  type: object
                  description: ObjectPermissions object (max depth)
                pins:
                  description: A list of stars associated with this result.  "Pin" is an older name.
                  type: array
                  items:
                    type: object
                    properties:
                      PinDocument:
                        type: object
                        description: PinDocument object (max depth)
                priority:
                  description: The document priority. Interpretation is datasource specific.
                  type: string
                shortcuts:
                  description: A list of shortcuts of which destination URL is for the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Shortcut:
                        type: object
                        description: Shortcut object (max depth)
                status:
                  description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
                  type: string
                statusCategory:
                  description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
                  type: string
                superContainerId:
                  description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
                  type: string
                thumbnail:
                  type: object
                  description: Thumbnail object (max depth)
                updateTime:
                  format: date-time
                  type: string
                updatedBy:
                  type: object
                  description: Person object (max depth)
                verification:
                  type: object
                  description: Verification object (max depth)
                viewerInfo:
                  type: object
                  description: ViewerInfo object (max depth)
                visibility:
                  type: object
                  description: DocumentVisibility object (max depth)
                visitCount:
                  type: object
                  description: CountInfo object (max depth)
              type: object
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  title:
                    description: The title of the document section (e.g. the section header).
                    type: string
                  url:
                    description: The permalink of the document section.
                    type: string
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        link:
          example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
          type: string
        structuredResult:
          description: A single object that can support any object in the work graph. Only a single object will be populated.
          properties:
            answer:
              description: AnswerId object (max depth)
              type: object
              properties:
                author:
                  type: object
                  description: Person object (max depth)
                board:
                  type: object
                  description: AnswerBoard object (max depth)
                collections:
                  description: The collections to which the answer belongs.
                  type: array
                  items:
                    type: object
                    properties:
                      Collection:
                        type: object
                        description: Collection object (max depth)
                combinedAnswerText:
                  type: object
                  description: StructuredText object (max depth)
                createTime:
                  description: The time the answer was created in ISO format (ISO 8601).
                  format: date-time
                  type: string
                documentCategory:
                  description: The document's document_category(.proto).
                  type: string
                likes:
                  type: object
                  description: AnswerLikes object (max depth)
                sourceDocument:
                  type: object
                  description: Document object (max depth)
                updateTime:
                  description: The time the answer was last updated in ISO format (ISO 8601).
                  format: date-time
                  type: string
                updatedBy:
                  type: object
                  description: Person object (max depth)
                verification:
                  type: object
                  description: Verification object (max depth)
              required:
                - id
            answerBoard:
              description: AnswerBoardMutableProperties object (max depth)
              type: object
              properties:
                createTime:
                  format: date-time
                  type: string
                creator:
                  type: object
                  description: Person object (max depth)
                id:
                  description: The unique ID of the Answer Board.
                  type: integer
                itemCount:
                  description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                  type: integer
                roles:
                  description: A list of user roles for the Answer Board.
                  type: array
                  items:
                    type: object
                    properties:
                      UserRoleSpecification:
                        type: object
                        description: UserRoleSpecification object (max depth)
                updateTime:
                  format: date-time
                  type: string
                updatedBy:
                  type: object
                  description: Person object (max depth)
              required:
                - id
                - description
            app:
              required: *ref_58
              properties:
                datasource:
                  description: The app or other repository type this represents
                  type: string
                docType:
                  description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                iconUrl:
                  description: If there is available icon URL.
                  type: string
                mimeType:
                  description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                  type: string
              type: object
            code:
              example: *ref_47
              properties:
                fileName:
                  type: string
                fileUrl:
                  type: string
                isLastMatch:
                  description: Last file match for a repo
                  type: boolean
                lines:
                  type: array
                  items:
                    type: object
                    properties:
                      CodeLine:
                        type: object
                        description: CodeLine object (max depth)
                repoName:
                  type: string
              type: object
            collection:
              description: CollectionMutableProperties object (max depth)
              type: object
              properties:
                childCount:
                  description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                  type: integer
                children:
                  description: The children Collections of this Collection.
                  type: array
                  items:
                    type: object
                    properties:
                      Collection:
                        type: object
                        description: Collection object (circular reference)
                createTime:
                  format: date-time
                  type: string
                creator:
                  type: object
                  description: Person object (max depth)
                id:
                  description: The unique ID of the Collection.
                  type: integer
                itemCount:
                  description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                  type: integer
                items:
                  description: The items in this Collection.
                  type: array
                  items:
                    type: object
                    properties:
                      CollectionItem:
                        type: object
                        description: CollectionItem object (max depth)
                pinMetadata:
                  type: object
                  description: CollectionPinnedMetadata object (max depth)
                roles:
                  description: A list of user roles for the Collection.
                  type: array
                  items:
                    type: object
                    properties:
                      UserRoleSpecification:
                        type: object
                        description: UserRoleSpecification object (max depth)
                shortcuts:
                  description: The names of the shortcuts (Go Links) that point to this Collection.
                  type: array
                  items:
                    type: string
                updateTime:
                  format: date-time
                  type: string
                updatedBy:
                  type: object
                  description: Person object (max depth)
              required:
                - id
                - description
            customEntity:
              description: PermissionedObject object (max depth)
              type: object
              properties:
                datasource:
                  description: The datasource the custom entity is from.
                  type: string
                id:
                  description: Unique identifier.
                  type: string
                metadata:
                  type: object
                  description: CustomEntityMetadata object (max depth)
                objectType:
                  description: The type of the entity. Interpretation is specific to each datasource
                  type: string
                roles:
                  description: A list of user roles for the custom entity explicitly granted by the owner.
                  type: array
                  items:
                    type: object
                    properties:
                      UserRoleSpecification:
                        type: object
                        description: UserRoleSpecification object (max depth)
                title:
                  description: Title or name of the custom entity.
                  type: string
            customer:
              required: *ref_48
              properties:
                company:
                  type: object
                  description: Company object (max depth)
                contractAnnualRevenue:
                  description: Average contract annual revenue with that customer.
                  format: double
                  type: number
                documentCounts:
                  type: object
                  description: DocumentCounts object (max depth)
                domains:
                  description: Link to company's associated website domains.
                  type: array
                  items:
                    type: string
                id:
                  description: Unique identifier.
                  type: string
                mergedCustomers:
                  description: A list of Customers.
                  type: array
                  items:
                    type: object
                    properties:
                      Customer:
                        type: object
                        description: Customer object (circular reference)
                metadata:
                  type: object
                  description: CustomerMetadata object (max depth)
                notes:
                  description: User facing (potentially generated) notes about company.
                  example: CIO is interested in trying out the product.
                  type: string
                poc:
                  description: A list of POC for company.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (max depth)
                startDate:
                  description: The date when the interaction with customer started.
                  format: date
                  type: string
              type: object
            disambiguation:
              description: A disambiguation between multiple entities with the same name
              type: object
              properties:
                id:
                  description: The unique id of the entity in the knowledge graph
                  type: string
                name:
                  description: Name of the ambiguous entity
                  type: string
                type:
                  type: object
                  description: EntityType object (max depth)
            document:
              properties:
                connectorType:
                  type: object
                  description: ConnectorType object (max depth)
                containerDocument:
                  type: object
                  description: Document object (circular reference)
                content:
                  type: object
                  description: DocumentContent object (max depth)
                datasource:
                  description: The app or other repository type from which the document was extracted
                  type: string
                docType:
                  description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                id:
                  description: The Glean Document ID.
                  type: string
                metadata:
                  type: object
                  description: DocumentMetadata object (max depth)
                parentDocument:
                  type: object
                  description: Document object (circular reference)
                sections:
                  description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                  type: array
                  items:
                    type: object
                    properties:
                      DocumentSection:
                        type: object
                        description: DocumentSection object (max depth)
                title:
                  description: The title of the document.
                  type: string
                url:
                  description: A permalink for the document.
                  type: string
              type: object
            extractedQnA:
              properties:
                heading:
                  description: Heading text that was matched to produce this result.
                  type: string
                question:
                  description: Question text that was matched to produce this result.
                  type: string
                questionResult:
                  type: object
                  description: SearchResult object (max depth)
              type: object
            meeting:
              properties:
                attendees:
                  type: object
                  description: CalendarAttendees object (max depth)
                description:
                  type: string
                endTime:
                  format: date-time
                  type: string
                id:
                  type: string
                startTime:
                  format: date-time
                  type: string
                title:
                  type: string
                url:
                  type: string
              type: object
            person:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            prominence:
              description: The level of visual distinction that should be given to a result.
              enum: *ref_49
              type: string
              x-enumDescriptions: *ref_50
            querySuggestions:
              properties:
                person:
                  type: object
                  description: Person object (max depth)
                suggestions:
                  type: array
                  items:
                    type: object
                    properties:
                      QuerySuggestion:
                        type: object
                        description: QuerySuggestion object (max depth)
              type: object
            relatedDocuments:
              description: A list of documents related to this structured result.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
            relatedQuestion:
              properties:
                answer:
                  description: The answer for the related question
                  type: string
                question:
                  description: The text of the related question
                  type: string
                ranges:
                  description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                  type: array
                  items:
                    type: object
                    properties:
                      TextRange:
                        type: object
                        description: TextRange object (max depth)
              type: object
            shortcut:
              description: UserGeneratedContentId object (max depth)
              type: object
              properties:
                alias:
                  description: canonical link text following go/ prefix where hyphen/underscore is removed.
                  type: string
                roles:
                  description: A list of user roles for the Go Link.
                  type: array
                  items:
                    type: object
                    properties:
                      UserRoleSpecification:
                        type: object
                        description: UserRoleSpecification object (max depth)
                title:
                  description: Title for the Go Link
                  type: string
              required:
                - inputAlias
            snippets:
              description: Any snippets associated to the populated object.
              type: array
              items:
                example: *ref_26
                required: *ref_27
                properties:
                  mimeType:
                    description: The mime type of the snippets, currently either text/plain or text/html.
                    type: string
                  ranges:
                    description: The bolded ranges within text.
                    type: array
                    items:
                      type: object
                      properties:
                        TextRange:
                          type: object
                          description: TextRange object (max depth)
                  snippet:
                    description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                    type: string
                  snippetTextOrdering:
                    description: Used for sorting based off the snippet's location within all_snippetable_text
                    type: integer
                  text:
                    description: A matching snippet from the document with no highlights.
                    type: string
                  url:
                    description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                    type: string
                type: object
            source:
              description: Source context for this result. Possible values depend on the result type.
              enum: *ref_51
              type: string
            team:
              description: RelatedObjects object (max depth)
              type: object
              properties:
                bannerUrl:
                  description: A link to the team's banner photo.
                  format: url
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                canBeDeleted:
                  default: true
                  description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                  type: boolean
                createdFrom:
                  description: For teams created from docs, the doc title. Otherwise empty.
                  type: string
                customFields:
                  description: Customizable fields for additional team information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasource:
                  description: the data source of the team, e.g. GDRIVE
                  type: string
                datasourceProfiles:
                  description: The datasource profiles of the team
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                description:
                  description: A description of the team
                  type: string
                emails:
                  description: The emails for this team
                  type: array
                  items:
                    type: object
                    properties:
                      TeamEmail:
                        type: object
                        description: TeamEmail object (max depth)
                externalLink:
                  description: Link to a team page on the internet or your company's intranet
                  format: uri
                  type: string
                id:
                  description: Unique identifier
                  type: string
                lastUpdatedAt:
                  description: when this team was last updated.
                  format: date-time
                  type: string
                loggingId:
                  description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                  type: string
                memberCount:
                  description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                  type: integer
                members:
                  description: The members on this team
                  type: array
                  items:
                    type: object
                    properties:
                      PersonToTeamRelationship:
                        type: object
                        description: PersonToTeamRelationship object (max depth)
                name:
                  description: Team name
                  type: string
                photoUrl:
                  description: A link to the team's photo.
                  format: url
                  type: string
                status:
                  default: PROCESSED
                  description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                  enum: *ref_52
                  type: string
              required:
                - id
                - name
            trackingToken:
              description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
              type: string
          type: object
        text:
          example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
          type: string
      type: object
    ShortcutMetadata:
      properties:
        createTime:
          description: The time the shortcut was created in ISO format (ISO 8601).
          format: date-time
          type: string
        createdBy:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        destinationDocument:
          properties:
            connectorType:
              description: The source from which document content was pulled, e.g. an API crawl or browser history
              enum: *ref_42
              type: string
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              properties:
                fullTextList:
                  description: The plaintext content of the document.
                  type: array
                  items:
                    type: string
              type: object
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              example: *ref_43
              properties:
                ancestors:
                  description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
                  type: array
                  items:
                    type: object
                    properties:
                      Document:
                        type: object
                        description: Document object (circular reference)
                assignedTo:
                  type: object
                  description: Person object (max depth)
                author:
                  type: object
                  description: Person object (max depth)
                collections:
                  description: A list of collections that the document belongs to.
                  type: array
                  items:
                    type: object
                    properties:
                      Collection:
                        type: object
                        description: Collection object (max depth)
                components:
                  description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
                  type: array
                  items:
                    type: string
                contactPerson:
                  type: object
                  description: Person object (max depth)
                container:
                  description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
                  type: string
                containerId:
                  description: The Glean Document ID of the container. Uniquely identifies the container.
                  type: string
                createTime:
                  format: date-time
                  type: string
                customData:
                  type: object
                  description: CustomData object (max depth)
                datasource:
                  type: string
                datasourceId:
                  description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
                  type: string
                datasourceInstance:
                  description: The datasource instance from which the document was extracted.
                  type: string
                documentCategory:
                  description: The document's document_category(.proto).
                  type: string
                documentId:
                  description: The index-wide unique identifier.
                  type: string
                documentIdHash:
                  description: Hash of the Glean Document ID.
                  type: string
                indexStatus:
                  type: object
                  description: IndexStatus object (max depth)
                interactions:
                  type: object
                  description: DocumentInteractions object (max depth)
                labels:
                  description: A list of tags for the document. Interpretation is datasource specific.
                  type: array
                  items:
                    type: string
                loggingId:
                  description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
                  type: string
                mentionedPeople:
                  description: A list of people mentioned in the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (max depth)
                mimeType:
                  type: string
                objectType:
                  description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                owner:
                  type: object
                  description: Person object (max depth)
                parentId:
                  description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
                  type: string
                path:
                  description: For file datasources like onedrive/github etc this has the path to the file
                  type: string
                permissions:
                  type: object
                  description: ObjectPermissions object (max depth)
                pins:
                  description: A list of stars associated with this result.  "Pin" is an older name.
                  type: array
                  items:
                    type: object
                    properties:
                      PinDocument:
                        type: object
                        description: PinDocument object (max depth)
                priority:
                  description: The document priority. Interpretation is datasource specific.
                  type: string
                shortcuts:
                  description: A list of shortcuts of which destination URL is for the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Shortcut:
                        type: object
                        description: Shortcut object (max depth)
                status:
                  description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
                  type: string
                statusCategory:
                  description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
                  type: string
                superContainerId:
                  description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
                  type: string
                thumbnail:
                  type: object
                  description: Thumbnail object (max depth)
                updateTime:
                  format: date-time
                  type: string
                updatedBy:
                  type: object
                  description: Person object (max depth)
                verification:
                  type: object
                  description: Verification object (max depth)
                viewerInfo:
                  type: object
                  description: ViewerInfo object (max depth)
                visibility:
                  type: object
                  description: DocumentVisibility object (max depth)
                visitCount:
                  type: object
                  description: CountInfo object (max depth)
              type: object
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  title:
                    description: The title of the document section (e.g. the section header).
                    type: string
                  url:
                    description: The permalink of the document section.
                    type: string
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        editUrl:
          description: The URL using which the user can access the edit page of the shortcut.
          type: string
        intermediateUrl:
          description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
          type: string
        isExternal:
          description: Indicates whether a shortcut is native or external.
          type: boolean
        updateTime:
          description: The time the shortcut was updated in ISO format (ISO 8601).
          format: date-time
          type: string
        updatedBy:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        viewPrefix:
          description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
          type: string
      type: object
    SearchResult:
      example: *ref_30
      required: *ref_31
      type: object
      properties:
        structuredResults:
          description: An array of entities in the work graph retrieved via a data request.
          type: array
          items:
            description: A single object that can support any object in the work graph. Only a single object will be populated.
            properties:
              answer:
                type: object
                description: Answer object (max depth)
              answerBoard:
                type: object
                description: AnswerBoard object (max depth)
              app:
                type: object
                description: AppResult object (max depth)
              code:
                type: object
                description: Code object (max depth)
              collection:
                type: object
                description: Collection object (max depth)
              customEntity:
                type: object
                description: CustomEntity object (max depth)
              customer:
                type: object
                description: Customer object (max depth)
              disambiguation:
                type: object
                description: Disambiguation object (max depth)
              document:
                type: object
                description: Document object (max depth)
              extractedQnA:
                type: object
                description: ExtractedQnA object (max depth)
              meeting:
                type: object
                description: Meeting object (max depth)
              person:
                type: object
                description: Person object (max depth)
              prominence:
                description: The level of visual distinction that should be given to a result.
                enum: *ref_49
                type: string
                x-enumDescriptions: *ref_50
              querySuggestions:
                type: object
                description: QuerySuggestionList object (max depth)
              relatedDocuments:
                description: A list of documents related to this structured result.
                type: array
                items:
                  type: object
                  properties:
                    RelatedDocuments:
                      type: object
                      description: RelatedDocuments object (max depth)
              relatedQuestion:
                type: object
                description: RelatedQuestion object (max depth)
              shortcut:
                type: object
                description: Shortcut object (max depth)
              snippets:
                description: Any snippets associated to the populated object.
                type: array
                items:
                  type: object
                  properties:
                    SearchResultSnippet:
                      type: object
                      description: SearchResultSnippet object (max depth)
              source:
                description: Source context for this result. Possible values depend on the result type.
                enum: *ref_51
                type: string
              team:
                type: object
                description: Team object (max depth)
              trackingToken:
                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                type: string
            type: object
        trackingToken:
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
          type: string
        allClusteredResults:
          description: A list of results that should be displayed as associated with this result.
          type: array
          items:
            required: *ref_28
            properties:
              clusterType:
                description: The reason for inclusion of clusteredResults.
                enum: *ref_29
                type: string
              clusteredResults:
                description: A list of results that should be displayed as associated with this result.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
              visibleCountHint:
                description: The default number of results to display before truncating and showing a "see more" link
                type: integer
            type: object
        attachmentContext:
          description: Additional context for the relationship between the result and the document it's attached to.
          type: string
        attachmentCount:
          description: The total number of attachments.
          type: integer
        attachments:
          description: A (potentially partial) list of results representing documents attached to the main result document.
          type: array
          items:
            type: object
            properties:
              SearchResult:
                type: object
                description: SearchResult object (circular reference)
        backlinkResults:
          description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
          type: array
          items:
            type: object
            properties:
              SearchResult:
                type: object
                description: SearchResult object (circular reference)
        clusterType:
          description: The reason for inclusion of clusteredResults.
          enum: *ref_29
          type: string
        clusteredResults:
          description: A list of results that should be displayed as associated with this result.
          type: array
          items:
            type: object
            properties:
              SearchResult:
                type: object
                description: SearchResult object (circular reference)
        document:
          properties:
            connectorType:
              description: The source from which document content was pulled, e.g. an API crawl or browser history
              enum: *ref_42
              type: string
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              properties:
                fullTextList:
                  description: The plaintext content of the document.
                  type: array
                  items:
                    type: string
              type: object
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              example: *ref_43
              properties:
                ancestors:
                  description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
                  type: array
                  items:
                    type: object
                    properties:
                      Document:
                        type: object
                        description: Document object (circular reference)
                assignedTo:
                  type: object
                  description: Person object (max depth)
                author:
                  type: object
                  description: Person object (max depth)
                collections:
                  description: A list of collections that the document belongs to.
                  type: array
                  items:
                    type: object
                    properties:
                      Collection:
                        type: object
                        description: Collection object (max depth)
                components:
                  description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
                  type: array
                  items:
                    type: string
                contactPerson:
                  type: object
                  description: Person object (max depth)
                container:
                  description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
                  type: string
                containerId:
                  description: The Glean Document ID of the container. Uniquely identifies the container.
                  type: string
                createTime:
                  format: date-time
                  type: string
                customData:
                  type: object
                  description: CustomData object (max depth)
                datasource:
                  type: string
                datasourceId:
                  description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
                  type: string
                datasourceInstance:
                  description: The datasource instance from which the document was extracted.
                  type: string
                documentCategory:
                  description: The document's document_category(.proto).
                  type: string
                documentId:
                  description: The index-wide unique identifier.
                  type: string
                documentIdHash:
                  description: Hash of the Glean Document ID.
                  type: string
                indexStatus:
                  type: object
                  description: IndexStatus object (max depth)
                interactions:
                  type: object
                  description: DocumentInteractions object (max depth)
                labels:
                  description: A list of tags for the document. Interpretation is datasource specific.
                  type: array
                  items:
                    type: string
                loggingId:
                  description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
                  type: string
                mentionedPeople:
                  description: A list of people mentioned in the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (max depth)
                mimeType:
                  type: string
                objectType:
                  description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                owner:
                  type: object
                  description: Person object (max depth)
                parentId:
                  description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
                  type: string
                path:
                  description: For file datasources like onedrive/github etc this has the path to the file
                  type: string
                permissions:
                  type: object
                  description: ObjectPermissions object (max depth)
                pins:
                  description: A list of stars associated with this result.  "Pin" is an older name.
                  type: array
                  items:
                    type: object
                    properties:
                      PinDocument:
                        type: object
                        description: PinDocument object (max depth)
                priority:
                  description: The document priority. Interpretation is datasource specific.
                  type: string
                shortcuts:
                  description: A list of shortcuts of which destination URL is for the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Shortcut:
                        type: object
                        description: Shortcut object (max depth)
                status:
                  description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
                  type: string
                statusCategory:
                  description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
                  type: string
                superContainerId:
                  description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
                  type: string
                thumbnail:
                  type: object
                  description: Thumbnail object (max depth)
                updateTime:
                  format: date-time
                  type: string
                updatedBy:
                  type: object
                  description: Person object (max depth)
                verification:
                  type: object
                  description: Verification object (max depth)
                viewerInfo:
                  type: object
                  description: ViewerInfo object (max depth)
                visibility:
                  type: object
                  description: DocumentVisibility object (max depth)
                visitCount:
                  type: object
                  description: CountInfo object (max depth)
              type: object
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  title:
                    description: The title of the document section (e.g. the section header).
                    type: string
                  url:
                    description: The permalink of the document section.
                    type: string
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        fullText:
          description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
          type: string
        fullTextList:
          description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
          type: array
          items:
            type: string
        mustIncludeSuggestions:
          properties:
            person:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            suggestions:
              type: array
              items:
                example: *ref_24
                required: *ref_25
                properties:
                  datasource:
                    description: The datasource associated with the suggestion.
                    type: string
                  inputDetails:
                    type: object
                    description: SearchRequestInputDetails object (max depth)
                  label:
                    description: A user-facing description to display for the suggestion.
                    type: string
                  missingTerm:
                    description: A query term missing from the original query on which this suggestion is based.
                    type: string
                  query:
                    description: The query being suggested (e.g. enforcing the missing term from the original query).
                    type: string
                  ranges:
                    description: The bolded ranges within the query of the QuerySuggestion.
                    type: array
                    items:
                      type: object
                      properties:
                        TextRange:
                          type: object
                          description: TextRange object (max depth)
                  requestOptions:
                    type: object
                    description: SearchRequestOptions object (max depth)
                  searchProviderInfo:
                    type: object
                    description: SearchProviderInfo object (max depth)
                type: object
          type: object
        nativeAppUrl:
          description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
          type: string
        pins:
          description: A list of pins associated with this search result.
          type: array
          items:
            type: object
            properties:
              audienceFilters:
                description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                type: array
                items:
                  example: *ref_7
                  properties:
                    fieldName:
                      example: owner
                      type: string
                    groupName:
                      description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                      example: Spreadsheet
                      type: string
                    values:
                      description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                      type: array
                      items:
                        type: object
                        properties:
                          FacetFilterValue:
                            type: object
                            description: FacetFilterValue object (max depth)
                  type: object
              queries:
                description: The query strings for which the pinned result will show.
                type: array
                items:
                  type: string
              attribution:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              createTime:
                format: date-time
                type: string
              documentId:
                description: The document which should be a pinned result.
                type: string
              id:
                description: The opaque id of the pin.
                type: string
              updateTime:
                format: date-time
                type: string
              updatedBy:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
            required:
              - documentId
        prominence:
          description: |
            The level of visual distinction that should be given to a result.
          enum: *ref_32
          type: string
          x-enumDescriptions: *ref_33
        querySuggestion:
          example: *ref_24
          required: *ref_25
          properties:
            datasource:
              description: The datasource associated with the suggestion.
              type: string
            inputDetails:
              example: *ref_35
              properties:
                hasCopyPaste:
                  description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                  type: boolean
              type: object
            label:
              description: A user-facing description to display for the suggestion.
              type: string
            missingTerm:
              description: A query term missing from the original query on which this suggestion is based.
              type: string
            query:
              description: The query being suggested (e.g. enforcing the missing term from the original query).
              type: string
            ranges:
              description: The bolded ranges within the query of the QuerySuggestion.
              type: array
              items:
                description: A subsection of a given string to which some special formatting should be applied.
                required: *ref_2
                properties:
                  document:
                    type: object
                    description: Document object (max depth)
                  endIndex:
                    description: The exclusive end index of the range.
                    type: integer
                  startIndex:
                    description: The inclusive start index of the range.
                    type: integer
                  type:
                    enum: *ref_3
                    type: string
                  url:
                    description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                    type: string
                type: object
            requestOptions:
              example: *ref_36
              required: *ref_37
              properties:
                authTokens:
                  description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                  type: array
                  items:
                    type: object
                    properties:
                      AuthToken:
                        type: object
                        description: AuthToken object (max depth)
                datasourceFilter:
                  description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                  type: string
                datasourcesFilter:
                  description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                  type: array
                  items:
                    type: string
                defaultFacets:
                  description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                  type: array
                  items:
                    type: string
                disableQueryAutocorrect:
                  description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                  type: boolean
                disableSpellcheck:
                  description: Whether or not to disable spellcheck.
                  type: boolean
                exclusions:
                  type: object
                  description: RestrictionFilters object (max depth)
                facetBucketFilter:
                  type: object
                  description: FacetBucketFilter object (max depth)
                facetBucketSize:
                  description: The maximum number of FacetBuckets to return in each FacetResult.
                  type: integer
                facetFilterSets:
                  description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                  type: array
                  items:
                    type: object
                    properties:
                      FacetFilterSet:
                        type: object
                        description: FacetFilterSet object (max depth)
                facetFilters:
                  description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                  type: array
                  items:
                    type: object
                    properties:
                      FacetFilter:
                        type: object
                        description: FacetFilter object (max depth)
                fetchAllDatasourceCounts:
                  description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                  type: boolean
                inclusions:
                  type: object
                  description: RestrictionFilters object (max depth)
                queryOverridesFacetFilters:
                  description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                  type: boolean
                responseHints:
                  description: Array of hints containing which fields should be populated in the response.
                  type: array
                  items:
                    description: Hints for the response content.
                    enum: *ref_38
                    type: string
                    x-enumDescriptions: *ref_39
                returnLlmContentOverSnippets:
                  description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                  type: boolean
                timezoneOffset:
                  description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                  type: integer
              type: object
            searchProviderInfo:
              example: *ref_40
              properties:
                logoUrl:
                  description: URL to the provider's logo.
                  type: string
                name:
                  description: Name of the search provider.
                  type: string
                searchLinkUrlTemplate:
                  description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                  type: string
              type: object
          type: object
        relatedResults:
          description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
          type: array
          items:
            properties:
              associatedEntityId:
                description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                type: string
              documents:
                deprecated: true
                description: A truncated list of documents with this relation. TO BE DEPRECATED.
                type: array
                items:
                  properties:
                    connectorType:
                      type: object
                      description: ConnectorType object (max depth)
                    containerDocument:
                      type: object
                      description: Document object (circular reference)
                    content:
                      type: object
                      description: DocumentContent object (max depth)
                    datasource:
                      description: The app or other repository type from which the document was extracted
                      type: string
                    docType:
                      description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                      type: string
                    id:
                      description: The Glean Document ID.
                      type: string
                    metadata:
                      type: object
                      description: DocumentMetadata object (max depth)
                    parentDocument:
                      type: object
                      description: Document object (circular reference)
                    sections:
                      description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                      type: array
                      items:
                        type: object
                        properties:
                          DocumentSection:
                            type: object
                            description: DocumentSection object (max depth)
                    title:
                      description: The title of the document.
                      type: string
                    url:
                      description: A permalink for the document.
                      type: string
                  type: object
              querySuggestion:
                example: *ref_24
                required: *ref_25
                properties:
                  datasource:
                    description: The datasource associated with the suggestion.
                    type: string
                  inputDetails:
                    type: object
                    description: SearchRequestInputDetails object (max depth)
                  label:
                    description: A user-facing description to display for the suggestion.
                    type: string
                  missingTerm:
                    description: A query term missing from the original query on which this suggestion is based.
                    type: string
                  query:
                    description: The query being suggested (e.g. enforcing the missing term from the original query).
                    type: string
                  ranges:
                    description: The bolded ranges within the query of the QuerySuggestion.
                    type: array
                    items:
                      type: object
                      properties:
                        TextRange:
                          type: object
                          description: TextRange object (max depth)
                  requestOptions:
                    type: object
                    description: SearchRequestOptions object (max depth)
                  searchProviderInfo:
                    type: object
                    description: SearchProviderInfo object (max depth)
                type: object
              relation:
                description: How this document relates to the including entity.
                enum: *ref_19
                type: string
                x-enumDescriptions: *ref_20
              results:
                description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                type: array
                items:
                  type: object
                  properties:
                    SearchResult:
                      type: object
                      description: SearchResult object (circular reference)
            type: object
        snippets:
          description: Text content from the result document which contains search query terms, if available.
          type: array
          items:
            example: *ref_26
            required: *ref_27
            properties:
              mimeType:
                description: The mime type of the snippets, currently either text/plain or text/html.
                type: string
              ranges:
                description: The bolded ranges within text.
                type: array
                items:
                  description: A subsection of a given string to which some special formatting should be applied.
                  required: *ref_2
                  properties:
                    document:
                      type: object
                      description: Document object (max depth)
                    endIndex:
                      description: The exclusive end index of the range.
                      type: integer
                    startIndex:
                      description: The inclusive start index of the range.
                      type: integer
                    type:
                      enum: *ref_3
                      type: string
                    url:
                      description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                      type: string
                  type: object
              snippet:
                description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                type: string
              snippetTextOrdering:
                description: Used for sorting based off the snippet's location within all_snippetable_text
                type: integer
              text:
                description: A matching snippet from the document with no highlights.
                type: string
              url:
                description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                type: string
            type: object
        title:
          type: string
        url:
          type: string
    Collection:
      type: object
      properties:
        addedRoles:
          description: A list of added user roles for the Collection.
          type: array
          items:
            type: object
            properties:
              UserRoleSpecification:
                type: object
                description: UserRoleSpecification object (max depth)
        audienceFilters:
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          type: array
          items:
            type: object
            properties:
              FacetFilter:
                type: object
                description: FacetFilter object (max depth)
        description:
          description: A brief summary of the Collection's contents.
          type: string
        name:
          description: The unique name of the Collection.
          type: string
        removedRoles:
          description: A list of removed user roles for the Collection.
          type: array
          items:
            type: object
            properties:
              UserRoleSpecification:
                type: object
                description: UserRoleSpecification object (max depth)
        adminLocked:
          description: Indicates whether edits are allowed for everyone or only admins.
          type: boolean
        allowedDatasource:
          description: The datasource type this Collection can hold.
          type: string
        icon:
          description: The emoji icon of this Collection.
          type: string
        parentId:
          description: The parent of this Collection, or 0 if it's a top-level Collection.
          type: integer
        thumbnail:
          properties:
            photoId:
              description: Photo id if the thumbnail is from splash.
              type: string
            url:
              description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
              type: string
          type: object
        permissions:
          properties:
            write:
              type: object
              description: WritePermission object (max depth)
          type: object
        childCount:
          description: The number of children Collections. Separated from the actual children so we can grab the count without children.
          type: integer
        children:
          description: The children Collections of this Collection.
          type: array
          items:
            type: object
            properties:
              Collection:
                type: object
                description: Collection object (circular reference)
        createTime:
          format: date-time
          type: string
        creator:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        id:
          description: The unique ID of the Collection.
          type: integer
        itemCount:
          description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
          type: integer
        items:
          description: The items in this Collection.
          type: array
          items:
            type: object
            properties:
              description:
                description: A helpful description of why this CollectionItem is in the Collection that it's in.
                type: string
              icon:
                description: The emoji icon for this CollectionItem. Only used for Text type items.
                type: string
              name:
                description: The optional name of the Collection item.
                type: string
              collection:
                type: object
                description: Collection object (circular reference)
              collectionId:
                description: The Collection ID of the Collection that this CollectionItem belongs in.
                type: integer
              createdAt:
                description: Unix timestamp for when the item was first added (in seconds since epoch UTC).
                format: date-time
                type: string
              createdBy:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              document:
                properties:
                  connectorType:
                    type: object
                    description: ConnectorType object (max depth)
                  containerDocument:
                    type: object
                    description: Document object (circular reference)
                  content:
                    type: object
                    description: DocumentContent object (max depth)
                  datasource:
                    description: The app or other repository type from which the document was extracted
                    type: string
                  docType:
                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                    type: string
                  id:
                    description: The Glean Document ID.
                    type: string
                  metadata:
                    type: object
                    description: DocumentMetadata object (max depth)
                  parentDocument:
                    type: object
                    description: Document object (circular reference)
                  sections:
                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                    type: array
                    items:
                      type: object
                      properties:
                        DocumentSection:
                          type: object
                          description: DocumentSection object (max depth)
                  title:
                    description: The title of the document.
                    type: string
                  url:
                    description: A permalink for the document.
                    type: string
                type: object
              documentId:
                description: If this CollectionItem is indexed, the Glean Document ID of that document.
                type: string
              itemId:
                description: Unique identifier for the item within the Collection it belongs to.
                type: string
              itemType:
                enum: *ref_59
                type: string
              shortcut:
                description: UserGeneratedContentId object (max depth)
                type: object
                properties:
                  alias:
                    description: canonical link text following go/ prefix where hyphen/underscore is removed.
                    type: string
                  roles:
                    description: A list of user roles for the Go Link.
                    type: array
                    items:
                      type: object
                      properties:
                        UserRoleSpecification:
                          type: object
                          description: UserRoleSpecification object (max depth)
                  title:
                    description: Title for the Go Link
                    type: string
                required:
                  - inputAlias
              url:
                description: The URL of this CollectionItem.
                type: string
            required:
              - collectionId
              - itemType
        pinMetadata:
          required: *ref_60
          properties:
            eligiblePins:
              description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
              type: array
              items:
                required:
                  - id
                  - target
                properties:
                  id:
                    description: The ID of the Collection.
                    type: integer
                  target:
                    type: object
                    description: CollectionPinTarget object (max depth)
                type: object
            existingPins:
              description: List of targets this Collection is pinned to.
              type: array
              items:
                required:
                  - category
                properties:
                  category:
                    type: object
                    description: CollectionPinnableCategories object (max depth)
                  target:
                    type: object
                    description: CollectionPinnableTargets object (max depth)
                  value:
                    description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                    type: string
                type: object
          type: object
        roles:
          description: A list of user roles for the Collection.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                required: *ref_8
                properties:
                  id:
                    description: A unique identifier for the group. May be the same as name.
                    type: string
                  name:
                    description: Name of the group.
                    type: string
                  type:
                    type: object
                    description: GroupType object (max depth)
                type: object
              person:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              role:
                description: A user's role with respect to a specific document.
                enum: *ref_9
                type: string
              sourceDocumentSpec:
                oneOf:
                  - type: object
                    properties:
                      url:
                        description: The URL of the document.
                        type: string
                  - type: object
                    properties:
                      id:
                        description: The ID of the document.
                        type: string
                  - type: object
                    properties:
                      contentId:
                        description: The id for user generated content.
                        type: integer
                      docType:
                        description: The specific type of the user generated content type.
                        type: string
                      ugcType:
                        description: The type of the user generated content (UGC datasource).
                        enum: *ref_10
                        type: string
            type: object
        shortcuts:
          description: The names of the shortcuts (Go Links) that point to this Collection.
          type: array
          items:
            type: string
        updateTime:
          format: date-time
          type: string
        updatedBy:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
      required:
        - name
        - id
        - description
    VerificationMetadata:
      required: *ref_61
      properties:
        candidateVerifiers:
          description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
          type: array
          items:
            example: *ref_0
            required: *ref_1
            properties:
              metadata:
                example: *ref_15
                properties:
                  aliasEmails:
                    description: Additional email addresses of this user beyond the primary, if any.
                    type: array
                    items:
                      type: string
                  badges:
                    description: The badges that a user has earned over their lifetime.
                    type: array
                    items:
                      type: object
                      properties:
                        Badge:
                          type: object
                          description: Badge object (max depth)
                  bannerUrl:
                    description: The URL of the person's banner photo.
                    format: url
                    type: string
                  bio:
                    description: Short biography or mission statement of the employee.
                    type: string
                  businessUnit:
                    description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                    type: string
                  busyEvents:
                    description: Intervals of busy time for this person, along with the type of event they're busy with.
                    type: array
                    items:
                      type: object
                      properties:
                        AnonymousEvent:
                          type: object
                          description: AnonymousEvent object (max depth)
                  customFields:
                    description: User customizable fields for additional people information.
                    type: array
                    items:
                      type: object
                      properties:
                        CustomFieldData:
                          type: object
                          description: CustomFieldData object (max depth)
                  datasourceProfile:
                    description: List of profiles this user has in different datasources / tools that they use.
                    type: array
                    items:
                      type: object
                      properties:
                        DatasourceProfile:
                          type: object
                          description: DatasourceProfile object (max depth)
                  department:
                    description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                    type: string
                  departmentCount:
                    description: The number of people in this person's department.
                    type: integer
                  directReportsCount:
                    description: The total number of people who directly report to this person, or 0
                    type: integer
                  email:
                    description: The user's primary email address
                    type: string
                  endDate:
                    description: If a former employee, the last date of employment.
                    format: date
                    type: string
                  externalProfileLink:
                    description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                    type: string
                  firstName:
                    description: The first name of the person
                    type: string
                  inviteInfo:
                    type: object
                    description: InviteInfo object (max depth)
                  isOrgRoot:
                    description: Whether this person is a "root" node in their organization's hierarchy.
                    type: boolean
                  isSignedUp:
                    description: Whether the user has signed into Glean at least once.
                    type: boolean
                  lastExtensionUse:
                    description: The last time the user has used the Glean extension in ISO 8601 format.
                    format: date-time
                    type: string
                  lastName:
                    description: The last name of the person
                    type: string
                  location:
                    description: User facing string representing the person's location.
                    type: string
                  loggingId:
                    description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                    type: string
                  managementChain:
                    description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                    type: array
                    items:
                      type: object
                      properties:
                        Person:
                          type: object
                          description: Person object (circular reference)
                  manager:
                    type: object
                    description: Person object (circular reference)
                  orgSizeCount:
                    description: The total recursive size of the people reporting to this person, or 1
                    type: integer
                  peopleDistance:
                    description: List of people and distances to those people from this person. Optionally with metadata.
                    type: array
                    items:
                      type: object
                      properties:
                        PersonDistance:
                          type: object
                          description: PersonDistance object (max depth)
                  permissions:
                    type: object
                    description: Permissions object (max depth)
                  phone:
                    description: Phone number as a number string.
                    type: string
                  photoUrl:
                    description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                    format: url
                    type: string
                  preferredName:
                    description: The preferred name of the person, or a nickname.
                    type: string
                  profileBoolSettings:
                    additionalProperties: *ref_16
                    description: flag settings to indicate user profile settings for certain items
                    type: object
                  pronoun:
                    description: She/her, He/his or other pronoun.
                    type: string
                  querySuggestions:
                    type: object
                    description: QuerySuggestionList object (max depth)
                  reports:
                    type: array
                    items:
                      type: object
                      properties:
                        Person:
                          type: object
                          description: Person object (circular reference)
                  socialNetwork:
                    description: List of social network profiles.
                    type: array
                    items:
                      type: object
                      properties:
                        SocialNetwork:
                          type: object
                          description: SocialNetwork object (max depth)
                  startDate:
                    description: The date when the employee started.
                    format: date
                    type: string
                  startDatePercentile:
                    description: Percentage of the company that started strictly after this person. Between [0,100).
                    format: float
                    type: number
                  structuredLocation:
                    type: object
                    description: StructuredLocation object (max depth)
                  teams:
                    description: Info about the employee's team(s).
                    type: array
                    items:
                      type: object
                      properties:
                        PersonTeam:
                          type: object
                          description: PersonTeam object (max depth)
                  timezone:
                    description: The timezone of the person. E.g. "Pacific Daylight Time".
                    type: string
                  timezoneOffset:
                    description: The offset of the person's timezone in seconds from UTC.
                    format: int64
                    type: integer
                  title:
                    description: Job title.
                    type: string
                  type:
                    enum: *ref_17
                    example: FULL_TIME
                    type: string
                    x-enumDescriptions: *ref_18
                  uneditedPhotoUrl:
                    description: The original photo URL of the person's avatar before any edits they made are applied
                    format: url
                    type: string
                type: object
              name:
                description: The display name.
                type: string
              obfuscatedId:
                description: An opaque identifier that can be used to request metadata for a Person.
                type: string
              relatedDocuments:
                description: A list of documents related to this person.
                type: array
                items:
                  properties:
                    associatedEntityId:
                      description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                      type: string
                    documents:
                      deprecated: true
                      description: A truncated list of documents with this relation. TO BE DEPRECATED.
                      type: array
                      items:
                        type: object
                        properties:
                          Document:
                            type: object
                            description: Document object (max depth)
                    querySuggestion:
                      type: object
                      description: QuerySuggestion object (max depth)
                    relation:
                      description: How this document relates to the including entity.
                      enum: *ref_19
                      type: string
                      x-enumDescriptions: *ref_20
                    results:
                      description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResult:
                            type: object
                            description: SearchResult object (max depth)
                  type: object
            type: object
        document:
          properties:
            connectorType:
              description: The source from which document content was pulled, e.g. an API crawl or browser history
              enum: *ref_42
              type: string
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              properties:
                fullTextList:
                  description: The plaintext content of the document.
                  type: array
                  items:
                    type: string
              type: object
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              example: *ref_43
              properties:
                ancestors:
                  description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
                  type: array
                  items:
                    type: object
                    properties:
                      Document:
                        type: object
                        description: Document object (circular reference)
                assignedTo:
                  type: object
                  description: Person object (max depth)
                author:
                  type: object
                  description: Person object (max depth)
                collections:
                  description: A list of collections that the document belongs to.
                  type: array
                  items:
                    type: object
                    properties:
                      Collection:
                        type: object
                        description: Collection object (max depth)
                components:
                  description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
                  type: array
                  items:
                    type: string
                contactPerson:
                  type: object
                  description: Person object (max depth)
                container:
                  description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
                  type: string
                containerId:
                  description: The Glean Document ID of the container. Uniquely identifies the container.
                  type: string
                createTime:
                  format: date-time
                  type: string
                customData:
                  type: object
                  description: CustomData object (max depth)
                datasource:
                  type: string
                datasourceId:
                  description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
                  type: string
                datasourceInstance:
                  description: The datasource instance from which the document was extracted.
                  type: string
                documentCategory:
                  description: The document's document_category(.proto).
                  type: string
                documentId:
                  description: The index-wide unique identifier.
                  type: string
                documentIdHash:
                  description: Hash of the Glean Document ID.
                  type: string
                indexStatus:
                  type: object
                  description: IndexStatus object (max depth)
                interactions:
                  type: object
                  description: DocumentInteractions object (max depth)
                labels:
                  description: A list of tags for the document. Interpretation is datasource specific.
                  type: array
                  items:
                    type: string
                loggingId:
                  description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
                  type: string
                mentionedPeople:
                  description: A list of people mentioned in the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (max depth)
                mimeType:
                  type: string
                objectType:
                  description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                owner:
                  type: object
                  description: Person object (max depth)
                parentId:
                  description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
                  type: string
                path:
                  description: For file datasources like onedrive/github etc this has the path to the file
                  type: string
                permissions:
                  type: object
                  description: ObjectPermissions object (max depth)
                pins:
                  description: A list of stars associated with this result.  "Pin" is an older name.
                  type: array
                  items:
                    type: object
                    properties:
                      PinDocument:
                        type: object
                        description: PinDocument object (max depth)
                priority:
                  description: The document priority. Interpretation is datasource specific.
                  type: string
                shortcuts:
                  description: A list of shortcuts of which destination URL is for the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Shortcut:
                        type: object
                        description: Shortcut object (max depth)
                status:
                  description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
                  type: string
                statusCategory:
                  description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
                  type: string
                superContainerId:
                  description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
                  type: string
                thumbnail:
                  type: object
                  description: Thumbnail object (max depth)
                updateTime:
                  format: date-time
                  type: string
                updatedBy:
                  type: object
                  description: Person object (max depth)
                verification:
                  type: object
                  description: Verification object (max depth)
                viewerInfo:
                  type: object
                  description: ViewerInfo object (max depth)
                visibility:
                  type: object
                  description: DocumentVisibility object (max depth)
                visitCount:
                  type: object
                  description: CountInfo object (max depth)
              type: object
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  title:
                    description: The title of the document section (e.g. the section header).
                    type: string
                  url:
                    description: The permalink of the document section.
                    type: string
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        expirationTs:
          description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
          type: integer
        lastReminder:
          required: *ref_11
          properties:
            assignee:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            createdAt:
              description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
              type: integer
            reason:
              description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
              type: string
            remindAt:
              description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
              type: integer
            requestor:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
          type: object
        lastVerificationTs:
          description: The unix timestamp of the verification (in seconds since epoch UTC).
          type: integer
        lastVerifier:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        reminders:
          description: Info about all outstanding verification reminders for the document if exists.
          type: array
          items:
            required: *ref_11
            properties:
              assignee:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              createdAt:
                description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                type: integer
              reason:
                description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                type: string
              remindAt:
                description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                type: integer
              requestor:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
            type: object
        visitorCount:
          description: Number of visitors to the document during included time periods.
          type: array
          items:
            required: *ref_12
            properties:
              count:
                description: The counter value
                type: integer
              org:
                description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                type: string
              period:
                properties:
                  end:
                    type: object
                    description: TimePoint object (max depth)
                  maxDaysFromNow:
                    deprecated: true
                    description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                    type: integer
                  minDaysFromNow:
                    deprecated: true
                    description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                    type: integer
                  start:
                    type: object
                    description: TimePoint object (max depth)
                type: object
            type: object
      type: object
    Answer:
      type: object
      properties:
        id:
          description: The opaque ID of the Answer.
          example: 3
          type: integer
        docId:
          description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
          example: ANSWERS_answer_3
          type: string
        addedRoles:
          description: A list of user roles for the answer added by the owner.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        audienceFilters:
          description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
          type: array
          items:
            example: *ref_7
            properties:
              fieldName:
                example: owner
                type: string
              groupName:
                description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                example: Spreadsheet
                type: string
              values:
                description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                type: array
                items:
                  type: object
                  properties:
                    FacetFilterValue:
                      type: object
                      description: FacetFilterValue object (max depth)
            type: object
        boardId:
          deprecated: true
          description: The parent board ID of this Answer, or 0 if it's a floating Answer. Adding Answers to Answer Boards is no longer permitted.
          type: integer
        bodyText:
          description: The plain text answer to the question.
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
          type: string
        question:
          example: Why is the sky blue?
          type: string
        questionVariations:
          description: Additional ways of phrasing this question.
          type: array
          items:
            type: string
        removedRoles:
          description: A list of user roles for the answer removed by the owner.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        roles:
          description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
          type: array
          items:
            required: *ref_6
            properties:
              group:
                type: object
                description: Group object (max depth)
              person:
                type: object
                description: Person object (max depth)
              role:
                type: object
                description: UserRole object (max depth)
              sourceDocumentSpec:
                type: object
                description: DocumentSpec object (max depth)
            type: object
        sourceDocumentSpec:
          oneOf:
            - type: object
              properties:
                url:
                  description: The URL of the document.
                  type: string
            - type: object
              properties:
                id:
                  description: The ID of the document.
                  type: string
            - type: object
              properties:
                contentId:
                  description: The id for user generated content.
                  type: integer
                docType:
                  description: The specific type of the user generated content type.
                  type: string
                ugcType:
                  description: The type of the user generated content (UGC datasource).
                  enum: *ref_10
                  type: string
        sourceType:
          enum: *ref_62
          type: string
        permissions:
          properties:
            write:
              type: object
              description: WritePermission object (max depth)
          type: object
        author:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        board:
          description: CollectionBaseMutableProperties object (max depth)
          type: object
          properties:
            permissions:
              type: object
              description: ObjectPermissions object (max depth)
            createTime:
              format: date-time
              type: string
            creator:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            id:
              description: The unique ID of the Answer Board.
              type: integer
            itemCount:
              description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
              type: integer
            roles:
              description: A list of user roles for the Answer Board.
              type: array
              items:
                required: *ref_6
                properties:
                  group:
                    type: object
                    description: Group object (max depth)
                  person:
                    type: object
                    description: Person object (max depth)
                  role:
                    type: object
                    description: UserRole object (max depth)
                  sourceDocumentSpec:
                    type: object
                    description: DocumentSpec object (max depth)
                type: object
            updateTime:
              format: date-time
              type: string
            updatedBy:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
          required:
            - id
            - description
        collections:
          description: The collections to which the answer belongs.
          type: array
          items:
            description: CollectionBaseMutableProperties object (max depth)
            type: object
            properties:
              adminLocked:
                description: Indicates whether edits are allowed for everyone or only admins.
                type: boolean
              allowedDatasource:
                description: The datasource type this Collection can hold.
                type: string
              icon:
                description: The emoji icon of this Collection.
                type: string
              parentId:
                description: The parent of this Collection, or 0 if it's a top-level Collection.
                type: integer
              thumbnail:
                type: object
                description: Thumbnail object (max depth)
              permissions:
                type: object
                description: ObjectPermissions object (max depth)
              childCount:
                description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                type: integer
              children:
                description: The children Collections of this Collection.
                type: array
                items:
                  type: object
                  properties:
                    Collection:
                      type: object
                      description: Collection object (circular reference)
              createTime:
                format: date-time
                type: string
              creator:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              id:
                description: The unique ID of the Collection.
                type: integer
              itemCount:
                description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                type: integer
              items:
                description: The items in this Collection.
                type: array
                items:
                  description: CollectionItemMutableProperties object (max depth)
                  type: object
                  properties:
                    collection:
                      type: object
                      description: Collection object (circular reference)
                    collectionId:
                      description: The Collection ID of the Collection that this CollectionItem belongs in.
                      type: integer
                    createdAt:
                      description: Unix timestamp for when the item was first added (in seconds since epoch UTC).
                      format: date-time
                      type: string
                    createdBy:
                      type: object
                      description: Person object (max depth)
                    document:
                      type: object
                      description: Document object (max depth)
                    documentId:
                      description: If this CollectionItem is indexed, the Glean Document ID of that document.
                      type: string
                    itemId:
                      description: Unique identifier for the item within the Collection it belongs to.
                      type: string
                    itemType:
                      enum: *ref_59
                      type: string
                    shortcut:
                      type: object
                      description: Shortcut object (max depth)
                    url:
                      description: The URL of this CollectionItem.
                      type: string
                  required:
                    - collectionId
                    - itemType
              pinMetadata:
                required: *ref_60
                properties:
                  eligiblePins:
                    description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                    type: array
                    items:
                      type: object
                      properties:
                        CollectionPinMetadata:
                          type: object
                          description: CollectionPinMetadata object (max depth)
                  existingPins:
                    description: List of targets this Collection is pinned to.
                    type: array
                    items:
                      type: object
                      properties:
                        CollectionPinTarget:
                          type: object
                          description: CollectionPinTarget object (max depth)
                type: object
              roles:
                description: A list of user roles for the Collection.
                type: array
                items:
                  required: *ref_6
                  properties:
                    group:
                      type: object
                      description: Group object (max depth)
                    person:
                      type: object
                      description: Person object (max depth)
                    role:
                      type: object
                      description: UserRole object (max depth)
                    sourceDocumentSpec:
                      type: object
                      description: DocumentSpec object (max depth)
                  type: object
              shortcuts:
                description: The names of the shortcuts (Go Links) that point to this Collection.
                type: array
                items:
                  type: string
              updateTime:
                format: date-time
                type: string
              updatedBy:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
            required:
              - name
              - id
              - description
        combinedAnswerText:
          type: object
          properties:
            text:
              example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
              type: string
            structuredList:
              description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
              type: array
              items:
                properties:
                  document:
                    type: object
                    description: Document object (max depth)
                  link:
                    example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
                    type: string
                  structuredResult:
                    type: object
                    description: StructuredResult object (max depth)
                  text:
                    example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
                    type: string
                type: object
          required:
            - text
        createTime:
          description: The time the answer was created in ISO format (ISO 8601).
          format: date-time
          type: string
        documentCategory:
          description: The document's document_category(.proto).
          type: string
        likes:
          required: *ref_63
          properties:
            likedBy:
              type: array
              items:
                properties:
                  createTime:
                    description: The time the user liked the answer in ISO format (ISO 8601).
                    format: date-time
                    type: string
                  user:
                    type: object
                    description: Person object (max depth)
                type: object
            likedByUser:
              description: Whether the user in context liked the answer.
              type: boolean
            numLikes:
              description: The total number of likes for the answer.
              type: integer
          type: object
        sourceDocument:
          properties:
            connectorType:
              description: The source from which document content was pulled, e.g. an API crawl or browser history
              enum: *ref_42
              type: string
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              properties:
                fullTextList:
                  description: The plaintext content of the document.
                  type: array
                  items:
                    type: string
              type: object
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              example: *ref_43
              properties:
                ancestors:
                  description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
                  type: array
                  items:
                    type: object
                    properties:
                      Document:
                        type: object
                        description: Document object (circular reference)
                assignedTo:
                  type: object
                  description: Person object (max depth)
                author:
                  type: object
                  description: Person object (max depth)
                collections:
                  description: A list of collections that the document belongs to.
                  type: array
                  items:
                    type: object
                    properties:
                      Collection:
                        type: object
                        description: Collection object (max depth)
                components:
                  description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
                  type: array
                  items:
                    type: string
                contactPerson:
                  type: object
                  description: Person object (max depth)
                container:
                  description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
                  type: string
                containerId:
                  description: The Glean Document ID of the container. Uniquely identifies the container.
                  type: string
                createTime:
                  format: date-time
                  type: string
                customData:
                  type: object
                  description: CustomData object (max depth)
                datasource:
                  type: string
                datasourceId:
                  description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
                  type: string
                datasourceInstance:
                  description: The datasource instance from which the document was extracted.
                  type: string
                documentCategory:
                  description: The document's document_category(.proto).
                  type: string
                documentId:
                  description: The index-wide unique identifier.
                  type: string
                documentIdHash:
                  description: Hash of the Glean Document ID.
                  type: string
                indexStatus:
                  type: object
                  description: IndexStatus object (max depth)
                interactions:
                  type: object
                  description: DocumentInteractions object (max depth)
                labels:
                  description: A list of tags for the document. Interpretation is datasource specific.
                  type: array
                  items:
                    type: string
                loggingId:
                  description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
                  type: string
                mentionedPeople:
                  description: A list of people mentioned in the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (max depth)
                mimeType:
                  type: string
                objectType:
                  description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                owner:
                  type: object
                  description: Person object (max depth)
                parentId:
                  description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
                  type: string
                path:
                  description: For file datasources like onedrive/github etc this has the path to the file
                  type: string
                permissions:
                  type: object
                  description: ObjectPermissions object (max depth)
                pins:
                  description: A list of stars associated with this result.  "Pin" is an older name.
                  type: array
                  items:
                    type: object
                    properties:
                      PinDocument:
                        type: object
                        description: PinDocument object (max depth)
                priority:
                  description: The document priority. Interpretation is datasource specific.
                  type: string
                shortcuts:
                  description: A list of shortcuts of which destination URL is for the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Shortcut:
                        type: object
                        description: Shortcut object (max depth)
                status:
                  description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
                  type: string
                statusCategory:
                  description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
                  type: string
                superContainerId:
                  description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
                  type: string
                thumbnail:
                  type: object
                  description: Thumbnail object (max depth)
                updateTime:
                  format: date-time
                  type: string
                updatedBy:
                  type: object
                  description: Person object (max depth)
                verification:
                  type: object
                  description: Verification object (max depth)
                viewerInfo:
                  type: object
                  description: ViewerInfo object (max depth)
                visibility:
                  type: object
                  description: DocumentVisibility object (max depth)
                visitCount:
                  type: object
                  description: CountInfo object (max depth)
              type: object
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  title:
                    description: The title of the document section (e.g. the section header).
                    type: string
                  url:
                    description: The permalink of the document section.
                    type: string
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        updateTime:
          description: The time the answer was last updated in ISO format (ISO 8601).
          format: date-time
          type: string
        updatedBy:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        verification:
          required: *ref_44
          properties:
            metadata:
              required: *ref_61
              properties:
                candidateVerifiers:
                  description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (max depth)
                document:
                  type: object
                  description: Document object (max depth)
                expirationTs:
                  description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
                  type: integer
                lastReminder:
                  type: object
                  description: Reminder object (max depth)
                lastVerificationTs:
                  description: The unix timestamp of the verification (in seconds since epoch UTC).
                  type: integer
                lastVerifier:
                  type: object
                  description: Person object (max depth)
                reminders:
                  description: Info about all outstanding verification reminders for the document if exists.
                  type: array
                  items:
                    type: object
                    properties:
                      Reminder:
                        type: object
                        description: Reminder object (max depth)
                visitorCount:
                  description: Number of visitors to the document during included time periods.
                  type: array
                  items:
                    type: object
                    properties:
                      CountInfo:
                        type: object
                        description: CountInfo object (max depth)
              type: object
            state:
              description: The verification state for the document.
              enum: *ref_45
              type: string
          type: object
      required:
        - id
    StructuredResult:
      description: A single object that can support any object in the work graph. Only a single object will be populated.
      properties:
        answer:
          type: object
          properties:
            id:
              description: The opaque ID of the Answer.
              example: 3
              type: integer
            docId:
              description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
              example: ANSWERS_answer_3
              type: string
            addedRoles:
              description: A list of user roles for the answer added by the owner.
              type: array
              items:
                type: object
                properties:
                  UserRoleSpecification:
                    type: object
                    description: UserRoleSpecification object (max depth)
            audienceFilters:
              description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
              type: array
              items:
                type: object
                properties:
                  FacetFilter:
                    type: object
                    description: FacetFilter object (max depth)
            boardId:
              deprecated: true
              description: The parent board ID of this Answer, or 0 if it's a floating Answer. Adding Answers to Answer Boards is no longer permitted.
              type: integer
            bodyText:
              description: The plain text answer to the question.
              example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
              type: string
            question:
              example: Why is the sky blue?
              type: string
            questionVariations:
              description: Additional ways of phrasing this question.
              type: array
              items:
                type: string
            removedRoles:
              description: A list of user roles for the answer removed by the owner.
              type: array
              items:
                type: object
                properties:
                  UserRoleSpecification:
                    type: object
                    description: UserRoleSpecification object (max depth)
            roles:
              description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
              type: array
              items:
                type: object
                properties:
                  UserRoleSpecification:
                    type: object
                    description: UserRoleSpecification object (max depth)
            sourceDocumentSpec:
              type: object
              description: DocumentSpec object (max depth)
            sourceType:
              enum: *ref_62
              type: string
            permissions:
              type: object
              description: ObjectPermissions object (max depth)
            author:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            board:
              description: AnswerBoardMutableProperties object (max depth)
              type: object
              properties:
                createTime:
                  format: date-time
                  type: string
                creator:
                  type: object
                  description: Person object (max depth)
                id:
                  description: The unique ID of the Answer Board.
                  type: integer
                itemCount:
                  description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                  type: integer
                roles:
                  description: A list of user roles for the Answer Board.
                  type: array
                  items:
                    type: object
                    properties:
                      UserRoleSpecification:
                        type: object
                        description: UserRoleSpecification object (max depth)
                updateTime:
                  format: date-time
                  type: string
                updatedBy:
                  type: object
                  description: Person object (max depth)
              required:
                - id
                - description
            collections:
              description: The collections to which the answer belongs.
              type: array
              items:
                description: CollectionMutableProperties object (max depth)
                type: object
                properties:
                  childCount:
                    description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                    type: integer
                  children:
                    description: The children Collections of this Collection.
                    type: array
                    items:
                      type: object
                      properties:
                        Collection:
                          type: object
                          description: Collection object (circular reference)
                  createTime:
                    format: date-time
                    type: string
                  creator:
                    type: object
                    description: Person object (max depth)
                  id:
                    description: The unique ID of the Collection.
                    type: integer
                  itemCount:
                    description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                    type: integer
                  items:
                    description: The items in this Collection.
                    type: array
                    items:
                      type: object
                      properties:
                        CollectionItem:
                          type: object
                          description: CollectionItem object (max depth)
                  pinMetadata:
                    type: object
                    description: CollectionPinnedMetadata object (max depth)
                  roles:
                    description: A list of user roles for the Collection.
                    type: array
                    items:
                      type: object
                      properties:
                        UserRoleSpecification:
                          type: object
                          description: UserRoleSpecification object (max depth)
                  shortcuts:
                    description: The names of the shortcuts (Go Links) that point to this Collection.
                    type: array
                    items:
                      type: string
                  updateTime:
                    format: date-time
                    type: string
                  updatedBy:
                    type: object
                    description: Person object (max depth)
                required:
                  - id
                  - description
            combinedAnswerText:
              description: StructuredTextMutableProperties object (max depth)
              type: object
              properties:
                structuredList:
                  description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
                  type: array
                  items:
                    type: object
                    properties:
                      StructuredTextItem:
                        type: object
                        description: StructuredTextItem object (max depth)
            createTime:
              description: The time the answer was created in ISO format (ISO 8601).
              format: date-time
              type: string
            documentCategory:
              description: The document's document_category(.proto).
              type: string
            likes:
              required: *ref_63
              properties:
                likedBy:
                  type: array
                  items:
                    type: object
                    properties:
                      AnswerLike:
                        type: object
                        description: AnswerLike object (max depth)
                likedByUser:
                  description: Whether the user in context liked the answer.
                  type: boolean
                numLikes:
                  description: The total number of likes for the answer.
                  type: integer
              type: object
            sourceDocument:
              properties:
                connectorType:
                  type: object
                  description: ConnectorType object (max depth)
                containerDocument:
                  type: object
                  description: Document object (circular reference)
                content:
                  type: object
                  description: DocumentContent object (max depth)
                datasource:
                  description: The app or other repository type from which the document was extracted
                  type: string
                docType:
                  description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                id:
                  description: The Glean Document ID.
                  type: string
                metadata:
                  type: object
                  description: DocumentMetadata object (max depth)
                parentDocument:
                  type: object
                  description: Document object (circular reference)
                sections:
                  description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                  type: array
                  items:
                    type: object
                    properties:
                      DocumentSection:
                        type: object
                        description: DocumentSection object (max depth)
                title:
                  description: The title of the document.
                  type: string
                url:
                  description: A permalink for the document.
                  type: string
              type: object
            updateTime:
              description: The time the answer was last updated in ISO format (ISO 8601).
              format: date-time
              type: string
            updatedBy:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            verification:
              required: *ref_44
              properties:
                metadata:
                  type: object
                  description: VerificationMetadata object (max depth)
                state:
                  description: The verification state for the document.
                  enum: *ref_45
                  type: string
              type: object
          required:
            - id
        answerBoard:
          description: CollectionBaseMutableProperties object (max depth)
          type: object
          properties:
            permissions:
              type: object
              description: ObjectPermissions object (max depth)
            createTime:
              format: date-time
              type: string
            creator:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            id:
              description: The unique ID of the Answer Board.
              type: integer
            itemCount:
              description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
              type: integer
            roles:
              description: A list of user roles for the Answer Board.
              type: array
              items:
                required: *ref_6
                properties:
                  group:
                    type: object
                    description: Group object (max depth)
                  person:
                    type: object
                    description: Person object (max depth)
                  role:
                    type: object
                    description: UserRole object (max depth)
                  sourceDocumentSpec:
                    type: object
                    description: DocumentSpec object (max depth)
                type: object
            updateTime:
              format: date-time
              type: string
            updatedBy:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
          required:
            - id
            - description
        app:
          required: *ref_58
          properties:
            datasource:
              description: The app or other repository type this represents
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            iconUrl:
              description: If there is available icon URL.
              type: string
            mimeType:
              description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
              type: string
          type: object
        code:
          example: *ref_47
          properties:
            fileName:
              type: string
            fileUrl:
              type: string
            isLastMatch:
              description: Last file match for a repo
              type: boolean
            lines:
              type: array
              items:
                properties:
                  content:
                    type: string
                  lineNumber:
                    type: integer
                  ranges:
                    description: Index ranges depicting matched sections of the line
                    type: array
                    items:
                      type: object
                      properties:
                        TextRange:
                          type: object
                          description: TextRange object (max depth)
                type: object
            repoName:
              type: string
          type: object
        collection:
          description: CollectionBaseMutableProperties object (max depth)
          type: object
          properties:
            adminLocked:
              description: Indicates whether edits are allowed for everyone or only admins.
              type: boolean
            allowedDatasource:
              description: The datasource type this Collection can hold.
              type: string
            icon:
              description: The emoji icon of this Collection.
              type: string
            parentId:
              description: The parent of this Collection, or 0 if it's a top-level Collection.
              type: integer
            thumbnail:
              type: object
              description: Thumbnail object (max depth)
            permissions:
              type: object
              description: ObjectPermissions object (max depth)
            childCount:
              description: The number of children Collections. Separated from the actual children so we can grab the count without children.
              type: integer
            children:
              description: The children Collections of this Collection.
              type: array
              items:
                type: object
                properties:
                  Collection:
                    type: object
                    description: Collection object (circular reference)
            createTime:
              format: date-time
              type: string
            creator:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            id:
              description: The unique ID of the Collection.
              type: integer
            itemCount:
              description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
              type: integer
            items:
              description: The items in this Collection.
              type: array
              items:
                description: CollectionItemMutableProperties object (max depth)
                type: object
                properties:
                  collection:
                    type: object
                    description: Collection object (circular reference)
                  collectionId:
                    description: The Collection ID of the Collection that this CollectionItem belongs in.
                    type: integer
                  createdAt:
                    description: Unix timestamp for when the item was first added (in seconds since epoch UTC).
                    format: date-time
                    type: string
                  createdBy:
                    type: object
                    description: Person object (max depth)
                  document:
                    type: object
                    description: Document object (max depth)
                  documentId:
                    description: If this CollectionItem is indexed, the Glean Document ID of that document.
                    type: string
                  itemId:
                    description: Unique identifier for the item within the Collection it belongs to.
                    type: string
                  itemType:
                    enum: *ref_59
                    type: string
                  shortcut:
                    type: object
                    description: Shortcut object (max depth)
                  url:
                    description: The URL of this CollectionItem.
                    type: string
                required:
                  - collectionId
                  - itemType
            pinMetadata:
              required: *ref_60
              properties:
                eligiblePins:
                  description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                  type: array
                  items:
                    type: object
                    properties:
                      CollectionPinMetadata:
                        type: object
                        description: CollectionPinMetadata object (max depth)
                existingPins:
                  description: List of targets this Collection is pinned to.
                  type: array
                  items:
                    type: object
                    properties:
                      CollectionPinTarget:
                        type: object
                        description: CollectionPinTarget object (max depth)
              type: object
            roles:
              description: A list of user roles for the Collection.
              type: array
              items:
                required: *ref_6
                properties:
                  group:
                    type: object
                    description: Group object (max depth)
                  person:
                    type: object
                    description: Person object (max depth)
                  role:
                    type: object
                    description: UserRole object (max depth)
                  sourceDocumentSpec:
                    type: object
                    description: DocumentSpec object (max depth)
                type: object
            shortcuts:
              description: The names of the shortcuts (Go Links) that point to this Collection.
              type: array
              items:
                type: string
            updateTime:
              format: date-time
              type: string
            updatedBy:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
          required:
            - name
            - id
            - description
        customEntity:
          type: object
          properties:
            permissions:
              type: object
              description: ObjectPermissions object (max depth)
            datasource:
              description: The datasource the custom entity is from.
              type: string
            id:
              description: Unique identifier.
              type: string
            metadata:
              properties:
                customData:
                  type: object
                  description: CustomData object (max depth)
              type: object
            objectType:
              description: The type of the entity. Interpretation is specific to each datasource
              type: string
            roles:
              description: A list of user roles for the custom entity explicitly granted by the owner.
              type: array
              items:
                required: *ref_6
                properties:
                  group:
                    type: object
                    description: Group object (max depth)
                  person:
                    type: object
                    description: Person object (max depth)
                  role:
                    type: object
                    description: UserRole object (max depth)
                  sourceDocumentSpec:
                    type: object
                    description: DocumentSpec object (max depth)
                type: object
            title:
              description: Title or name of the custom entity.
              type: string
        customer:
          required: *ref_48
          properties:
            company:
              required: *ref_64
              properties:
                about:
                  description: User facing description of company.
                  example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                  type: string
                annualRevenue:
                  description: Average company's annual revenue for reference.
                  format: double
                  type: number
                fax:
                  description: Fax number as a number string.
                  type: string
                foundedDate:
                  description: The date when the company was founded.
                  format: date
                  type: string
                industry:
                  description: User facing string representing the company's industry.
                  example: Finances
                  type: string
                location:
                  description: User facing string representing the company's location.
                  example: New York City
                  type: string
                logoUrl:
                  description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  type: string
                name:
                  description: User-friendly display name.
                  type: string
                numberOfEmployees:
                  description: Average company's number of employees for reference.
                  format: int64
                  type: integer
                phone:
                  description: Phone number as a number string.
                  type: string
                profileUrl:
                  description: Link to internal company company profile.
                  type: string
                stockSymbol:
                  description: Company's stock symbol if company is public.
                  type: string
                websiteUrls:
                  description: Link to company's associated websites.
                  type: array
                  items:
                    type: string
              type: object
            contractAnnualRevenue:
              description: Average contract annual revenue with that customer.
              format: double
              type: number
            documentCounts:
              additionalProperties: *ref_65
              description: A map of {string, int} pairs representing counts of each document type associated with this customer.
              type: object
            domains:
              description: Link to company's associated website domains.
              type: array
              items:
                type: string
            id:
              description: Unique identifier.
              type: string
            mergedCustomers:
              description: A list of Customers.
              type: array
              items:
                type: object
                properties:
                  Customer:
                    type: object
                    description: Customer object (circular reference)
            metadata:
              properties:
                customData:
                  type: object
                  description: CustomData object (max depth)
                datasourceId:
                  description: The user visible id of the salesforce customer account.
                  type: string
              type: object
            notes:
              description: User facing (potentially generated) notes about company.
              example: CIO is interested in trying out the product.
              type: string
            poc:
              description: A list of POC for company.
              type: array
              items:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
            startDate:
              description: The date when the interaction with customer started.
              format: date
              type: string
          type: object
        disambiguation:
          description: A disambiguation between multiple entities with the same name
          type: object
          properties:
            id:
              description: The unique id of the entity in the knowledge graph
              type: string
            name:
              description: Name of the ambiguous entity
              type: string
            type:
              description: The type of entity.
              enum:
                - PERSON
                - PROJECT
                - CUSTOMER
              type: string
              x-include-enum-class-prefix: true
        document:
          properties:
            connectorType:
              description: The source from which document content was pulled, e.g. an API crawl or browser history
              enum: *ref_42
              type: string
            containerDocument:
              type: object
              description: Document object (circular reference)
            content:
              properties:
                fullTextList:
                  description: The plaintext content of the document.
                  type: array
                  items:
                    type: string
              type: object
            datasource:
              description: The app or other repository type from which the document was extracted
              type: string
            docType:
              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
              type: string
            id:
              description: The Glean Document ID.
              type: string
            metadata:
              example: *ref_43
              properties:
                ancestors:
                  description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
                  type: array
                  items:
                    type: object
                    properties:
                      Document:
                        type: object
                        description: Document object (circular reference)
                assignedTo:
                  type: object
                  description: Person object (max depth)
                author:
                  type: object
                  description: Person object (max depth)
                collections:
                  description: A list of collections that the document belongs to.
                  type: array
                  items:
                    type: object
                    properties:
                      Collection:
                        type: object
                        description: Collection object (max depth)
                components:
                  description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
                  type: array
                  items:
                    type: string
                contactPerson:
                  type: object
                  description: Person object (max depth)
                container:
                  description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
                  type: string
                containerId:
                  description: The Glean Document ID of the container. Uniquely identifies the container.
                  type: string
                createTime:
                  format: date-time
                  type: string
                customData:
                  type: object
                  description: CustomData object (max depth)
                datasource:
                  type: string
                datasourceId:
                  description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
                  type: string
                datasourceInstance:
                  description: The datasource instance from which the document was extracted.
                  type: string
                documentCategory:
                  description: The document's document_category(.proto).
                  type: string
                documentId:
                  description: The index-wide unique identifier.
                  type: string
                documentIdHash:
                  description: Hash of the Glean Document ID.
                  type: string
                indexStatus:
                  type: object
                  description: IndexStatus object (max depth)
                interactions:
                  type: object
                  description: DocumentInteractions object (max depth)
                labels:
                  description: A list of tags for the document. Interpretation is datasource specific.
                  type: array
                  items:
                    type: string
                loggingId:
                  description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
                  type: string
                mentionedPeople:
                  description: A list of people mentioned in the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (max depth)
                mimeType:
                  type: string
                objectType:
                  description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                  type: string
                owner:
                  type: object
                  description: Person object (max depth)
                parentId:
                  description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
                  type: string
                path:
                  description: For file datasources like onedrive/github etc this has the path to the file
                  type: string
                permissions:
                  type: object
                  description: ObjectPermissions object (max depth)
                pins:
                  description: A list of stars associated with this result.  "Pin" is an older name.
                  type: array
                  items:
                    type: object
                    properties:
                      PinDocument:
                        type: object
                        description: PinDocument object (max depth)
                priority:
                  description: The document priority. Interpretation is datasource specific.
                  type: string
                shortcuts:
                  description: A list of shortcuts of which destination URL is for the document.
                  type: array
                  items:
                    type: object
                    properties:
                      Shortcut:
                        type: object
                        description: Shortcut object (max depth)
                status:
                  description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
                  type: string
                statusCategory:
                  description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
                  type: string
                superContainerId:
                  description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
                  type: string
                thumbnail:
                  type: object
                  description: Thumbnail object (max depth)
                updateTime:
                  format: date-time
                  type: string
                updatedBy:
                  type: object
                  description: Person object (max depth)
                verification:
                  type: object
                  description: Verification object (max depth)
                viewerInfo:
                  type: object
                  description: ViewerInfo object (max depth)
                visibility:
                  type: object
                  description: DocumentVisibility object (max depth)
                visitCount:
                  type: object
                  description: CountInfo object (max depth)
              type: object
            parentDocument:
              type: object
              description: Document object (circular reference)
            sections:
              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
              type: array
              items:
                type: object
                properties:
                  title:
                    description: The title of the document section (e.g. the section header).
                    type: string
                  url:
                    description: The permalink of the document section.
                    type: string
            title:
              description: The title of the document.
              type: string
            url:
              description: A permalink for the document.
              type: string
          type: object
        extractedQnA:
          properties:
            heading:
              description: Heading text that was matched to produce this result.
              type: string
            question:
              description: Question text that was matched to produce this result.
              type: string
            questionResult:
              example: *ref_30
              required: *ref_31
              description: Result object (max depth)
              type: object
              properties:
                allClusteredResults:
                  description: A list of results that should be displayed as associated with this result.
                  type: array
                  items:
                    type: object
                    properties:
                      ClusterGroup:
                        type: object
                        description: ClusterGroup object (max depth)
                attachmentContext:
                  description: Additional context for the relationship between the result and the document it's attached to.
                  type: string
                attachmentCount:
                  description: The total number of attachments.
                  type: integer
                attachments:
                  description: A (potentially partial) list of results representing documents attached to the main result document.
                  type: array
                  items:
                    type: object
                    properties:
                      SearchResult:
                        type: object
                        description: SearchResult object (circular reference)
                backlinkResults:
                  description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                  type: array
                  items:
                    type: object
                    properties:
                      SearchResult:
                        type: object
                        description: SearchResult object (circular reference)
                clusterType:
                  type: object
                  description: ClusterTypeEnum object (max depth)
                clusteredResults:
                  description: A list of results that should be displayed as associated with this result.
                  type: array
                  items:
                    type: object
                    properties:
                      SearchResult:
                        type: object
                        description: SearchResult object (circular reference)
                document:
                  type: object
                  description: Document object (max depth)
                fullText:
                  description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                  type: string
                fullTextList:
                  description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                  type: array
                  items:
                    type: string
                mustIncludeSuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                nativeAppUrl:
                  description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                  type: string
                pins:
                  description: A list of pins associated with this search result.
                  type: array
                  items:
                    type: object
                    properties:
                      PinDocument:
                        type: object
                        description: PinDocument object (max depth)
                prominence:
                  type: object
                  description: SearchResultProminenceEnum object (max depth)
                querySuggestion:
                  type: object
                  description: QuerySuggestion object (max depth)
                relatedResults:
                  description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
                snippets:
                  description: Text content from the result document which contains search query terms, if available.
                  type: array
                  items:
                    type: object
                    properties:
                      SearchResultSnippet:
                        type: object
                        description: SearchResultSnippet object (max depth)
                title:
                  type: string
                url:
                  type: string
          type: object
        meeting:
          properties:
            attendees:
              properties:
                isLimit:
                  description: Whether the total count of the people returned is at the retrieval limit.
                  type: boolean
                numAccepted:
                  description: Total number of attendees who have accepted this event.
                  type: integer
                numDeclined:
                  description: Total number of attendees who have declined this event.
                  type: integer
                numNoResponse:
                  description: Total number of attendees who have not responded to this event.
                  type: integer
                numTentative:
                  description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                  type: integer
                people:
                  description: Full details of some of the attendees of this event
                  type: array
                  items:
                    type: object
                    properties:
                      CalendarAttendee:
                        type: object
                        description: CalendarAttendee object (max depth)
                total:
                  description: Total number of attendees in this event.
                  type: integer
              type: object
            description:
              type: string
            endTime:
              format: date-time
              type: string
            id:
              type: string
            startTime:
              format: date-time
              type: string
            title:
              type: string
            url:
              type: string
          type: object
        person:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        prominence:
          description: The level of visual distinction that should be given to a result.
          enum: *ref_49
          type: string
          x-enumDescriptions: *ref_50
        querySuggestions:
          properties:
            person:
              example: *ref_0
              required: *ref_1
              properties:
                metadata:
                  type: object
                  description: PersonMetadata object (max depth)
                name:
                  description: The display name.
                  type: string
                obfuscatedId:
                  description: An opaque identifier that can be used to request metadata for a Person.
                  type: string
                relatedDocuments:
                  description: A list of documents related to this person.
                  type: array
                  items:
                    type: object
                    properties:
                      RelatedDocuments:
                        type: object
                        description: RelatedDocuments object (max depth)
              type: object
            suggestions:
              type: array
              items:
                example: *ref_24
                required: *ref_25
                properties:
                  datasource:
                    description: The datasource associated with the suggestion.
                    type: string
                  inputDetails:
                    type: object
                    description: SearchRequestInputDetails object (max depth)
                  label:
                    description: A user-facing description to display for the suggestion.
                    type: string
                  missingTerm:
                    description: A query term missing from the original query on which this suggestion is based.
                    type: string
                  query:
                    description: The query being suggested (e.g. enforcing the missing term from the original query).
                    type: string
                  ranges:
                    description: The bolded ranges within the query of the QuerySuggestion.
                    type: array
                    items:
                      type: object
                      properties:
                        TextRange:
                          type: object
                          description: TextRange object (max depth)
                  requestOptions:
                    type: object
                    description: SearchRequestOptions object (max depth)
                  searchProviderInfo:
                    type: object
                    description: SearchProviderInfo object (max depth)
                type: object
          type: object
        relatedDocuments:
          description: A list of documents related to this structured result.
          type: array
          items:
            properties:
              associatedEntityId:
                description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                type: string
              documents:
                deprecated: true
                description: A truncated list of documents with this relation. TO BE DEPRECATED.
                type: array
                items:
                  properties:
                    connectorType:
                      type: object
                      description: ConnectorType object (max depth)
                    containerDocument:
                      type: object
                      description: Document object (circular reference)
                    content:
                      type: object
                      description: DocumentContent object (max depth)
                    datasource:
                      description: The app or other repository type from which the document was extracted
                      type: string
                    docType:
                      description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                      type: string
                    id:
                      description: The Glean Document ID.
                      type: string
                    metadata:
                      type: object
                      description: DocumentMetadata object (max depth)
                    parentDocument:
                      type: object
                      description: Document object (circular reference)
                    sections:
                      description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                      type: array
                      items:
                        type: object
                        properties:
                          DocumentSection:
                            type: object
                            description: DocumentSection object (max depth)
                    title:
                      description: The title of the document.
                      type: string
                    url:
                      description: A permalink for the document.
                      type: string
                  type: object
              querySuggestion:
                example: *ref_24
                required: *ref_25
                properties:
                  datasource:
                    description: The datasource associated with the suggestion.
                    type: string
                  inputDetails:
                    type: object
                    description: SearchRequestInputDetails object (max depth)
                  label:
                    description: A user-facing description to display for the suggestion.
                    type: string
                  missingTerm:
                    description: A query term missing from the original query on which this suggestion is based.
                    type: string
                  query:
                    description: The query being suggested (e.g. enforcing the missing term from the original query).
                    type: string
                  ranges:
                    description: The bolded ranges within the query of the QuerySuggestion.
                    type: array
                    items:
                      type: object
                      properties:
                        TextRange:
                          type: object
                          description: TextRange object (max depth)
                  requestOptions:
                    type: object
                    description: SearchRequestOptions object (max depth)
                  searchProviderInfo:
                    type: object
                    description: SearchProviderInfo object (max depth)
                type: object
              relation:
                description: How this document relates to the including entity.
                enum: *ref_19
                type: string
                x-enumDescriptions: *ref_20
              results:
                description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                type: array
                items:
                  example: *ref_30
                  required: *ref_31
                  description: Result object (max depth)
                  type: object
                  properties:
                    allClusteredResults:
                      description: A list of results that should be displayed as associated with this result.
                      type: array
                      items:
                        type: object
                        properties:
                          ClusterGroup:
                            type: object
                            description: ClusterGroup object (max depth)
                    attachmentContext:
                      description: Additional context for the relationship between the result and the document it's attached to.
                      type: string
                    attachmentCount:
                      description: The total number of attachments.
                      type: integer
                    attachments:
                      description: A (potentially partial) list of results representing documents attached to the main result document.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResult:
                            type: object
                            description: SearchResult object (circular reference)
                    backlinkResults:
                      description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResult:
                            type: object
                            description: SearchResult object (circular reference)
                    clusterType:
                      type: object
                      description: ClusterTypeEnum object (max depth)
                    clusteredResults:
                      description: A list of results that should be displayed as associated with this result.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResult:
                            type: object
                            description: SearchResult object (circular reference)
                    document:
                      type: object
                      description: Document object (max depth)
                    fullText:
                      description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                      type: string
                    fullTextList:
                      description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                      type: array
                      items:
                        type: string
                    mustIncludeSuggestions:
                      type: object
                      description: QuerySuggestionList object (max depth)
                    nativeAppUrl:
                      description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                      type: string
                    pins:
                      description: A list of pins associated with this search result.
                      type: array
                      items:
                        type: object
                        properties:
                          PinDocument:
                            type: object
                            description: PinDocument object (max depth)
                    prominence:
                      type: object
                      description: SearchResultProminenceEnum object (max depth)
                    querySuggestion:
                      type: object
                      description: QuerySuggestion object (max depth)
                    relatedResults:
                      description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                      type: array
                      items:
                        type: object
                        properties:
                          RelatedDocuments:
                            type: object
                            description: RelatedDocuments object (circular reference)
                    snippets:
                      description: Text content from the result document which contains search query terms, if available.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResultSnippet:
                            type: object
                            description: SearchResultSnippet object (max depth)
                    title:
                      type: string
                    url:
                      type: string
            type: object
        relatedQuestion:
          properties:
            answer:
              description: The answer for the related question
              type: string
            question:
              description: The text of the related question
              type: string
            ranges:
              description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
              type: array
              items:
                description: A subsection of a given string to which some special formatting should be applied.
                required: *ref_2
                properties:
                  document:
                    type: object
                    description: Document object (max depth)
                  endIndex:
                    description: The exclusive end index of the range.
                    type: integer
                  startIndex:
                    description: The inclusive start index of the range.
                    type: integer
                  type:
                    enum: *ref_3
                    type: string
                  url:
                    description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                    type: string
                type: object
          type: object
        shortcut:
          type: object
          properties:
            id:
              description: The opaque id of the user generated content.
              type: integer
            addedRoles:
              description: A list of user roles added for the Shortcut.
              type: array
              items:
                type: object
                properties:
                  UserRoleSpecification:
                    type: object
                    description: UserRoleSpecification object (max depth)
            description:
              description: A short, plain text blurb to help people understand the intent of the shortcut.
              type: string
            destinationDocumentId:
              description: Glean Document ID for the URL, if known.
              type: string
            destinationUrl:
              description: Destination URL for the shortcut.
              type: string
            inputAlias:
              description: Link text following go/ prefix as entered by the user.
              type: string
            removedRoles:
              description: A list of user roles removed for the Shortcut.
              type: array
              items:
                type: object
                properties:
                  UserRoleSpecification:
                    type: object
                    description: UserRoleSpecification object (max depth)
            unlisted:
              description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
              type: boolean
            urlTemplate:
              description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
              type: string
            permissions:
              type: object
              description: ObjectPermissions object (max depth)
            createTime:
              description: The time the shortcut was created in ISO format (ISO 8601).
              format: date-time
              type: string
            createdBy:
              type: object
              description: Person object (max depth)
            destinationDocument:
              type: object
              description: Document object (max depth)
            editUrl:
              description: The URL using which the user can access the edit page of the shortcut.
              type: string
            intermediateUrl:
              description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
              type: string
            isExternal:
              description: Indicates whether a shortcut is native or external.
              type: boolean
            updateTime:
              description: The time the shortcut was updated in ISO format (ISO 8601).
              format: date-time
              type: string
            updatedBy:
              type: object
              description: Person object (max depth)
            viewPrefix:
              description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
              type: string
            alias:
              description: canonical link text following go/ prefix where hyphen/underscore is removed.
              type: string
            roles:
              description: A list of user roles for the Go Link.
              type: array
              items:
                required: *ref_6
                properties:
                  group:
                    type: object
                    description: Group object (max depth)
                  person:
                    type: object
                    description: Person object (max depth)
                  role:
                    type: object
                    description: UserRole object (max depth)
                  sourceDocumentSpec:
                    type: object
                    description: DocumentSpec object (max depth)
                type: object
            title:
              description: Title for the Go Link
              type: string
          required:
            - inputAlias
        snippets:
          description: Any snippets associated to the populated object.
          type: array
          items:
            example: *ref_26
            required: *ref_27
            properties:
              mimeType:
                description: The mime type of the snippets, currently either text/plain or text/html.
                type: string
              ranges:
                description: The bolded ranges within text.
                type: array
                items:
                  description: A subsection of a given string to which some special formatting should be applied.
                  required: *ref_2
                  properties:
                    document:
                      type: object
                      description: Document object (max depth)
                    endIndex:
                      description: The exclusive end index of the range.
                      type: integer
                    startIndex:
                      description: The inclusive start index of the range.
                      type: integer
                    type:
                      enum: *ref_3
                      type: string
                    url:
                      description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                      type: string
                  type: object
              snippet:
                description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                type: string
              snippetTextOrdering:
                description: Used for sorting based off the snippet's location within all_snippetable_text
                type: integer
              text:
                description: A matching snippet from the document with no highlights.
                type: string
              url:
                description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                type: string
            type: object
        source:
          description: Source context for this result. Possible values depend on the result type.
          enum: *ref_51
          type: string
        team:
          type: object
          properties:
            relatedObjects:
              additionalProperties: *ref_66
              description: A list of objects related to a source object.
              type: object
            permissions:
              type: object
              description: ObjectPermissions object (max depth)
            bannerUrl:
              description: A link to the team's banner photo.
              format: url
              type: string
            businessUnit:
              description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
              type: string
            canBeDeleted:
              default: true
              description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
              type: boolean
            createdFrom:
              description: For teams created from docs, the doc title. Otherwise empty.
              type: string
            customFields:
              description: Customizable fields for additional team information.
              type: array
              items:
                required: *ref_13
                properties:
                  displayable:
                    default: true
                    description: Determines whether the client should display this custom field
                    type: boolean
                  label:
                    description: A user-facing label for this field.
                    type: string
                  values:
                    type: array
                    items:
                      type: object
                      properties:
                        CustomFieldValue:
                          type: object
                          description: CustomFieldValue object (max depth)
                type: object
            datasource:
              description: the data source of the team, e.g. GDRIVE
              type: string
            datasourceProfiles:
              description: The datasource profiles of the team
              type: array
              items:
                required: *ref_46
                properties:
                  datasource:
                    description: The datasource the profile is of.
                    example: github
                    type: string
                  handle:
                    description: The display name of the entity in the given datasource.
                    type: string
                  isUserGenerated:
                    description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                    type: boolean
                  nativeAppUrl:
                    description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                    type: string
                  url:
                    description: URL to view the entity's profile.
                    type: string
                type: object
            department:
              description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
              type: string
            description:
              description: A description of the team
              type: string
            emails:
              description: The emails for this team
              type: array
              items:
                properties:
                  email:
                    description: An email address
                    format: email
                    type: string
                  isUserGenerated:
                    description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                    type: boolean
                  type:
                    default: OTHER
                    enum: *ref_67
                    type: string
                type: object
            externalLink:
              description: Link to a team page on the internet or your company's intranet
              format: uri
              type: string
            id:
              description: Unique identifier
              type: string
            lastUpdatedAt:
              description: when this team was last updated.
              format: date-time
              type: string
            loggingId:
              description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
              type: string
            memberCount:
              description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
              type: integer
            members:
              description: The members on this team
              type: array
              items:
                description: Metadata about the relationship of a person to a team.
                required: *ref_21
                type: object
                properties:
                  customRelationshipStr:
                    description: Displayed name for the relationship if relationship is set to `OTHER`.
                    type: string
                  joinDate:
                    description: The team member's start date
                    format: date-time
                    type: string
                  person:
                    type: object
                    description: Person object (max depth)
                  relationship:
                    default: MEMBER
                    description: The team member's relationship to the team. This defaults to MEMBER if not set.
                    enum: *ref_22
                    type: string
            name:
              description: Team name
              type: string
            photoUrl:
              description: A link to the team's photo.
              format: url
              type: string
            status:
              default: PROCESSED
              description: whether this team is fully processed or there are still unprocessed operations that'll affect it
              enum: *ref_52
              type: string
          required:
            - id
            - name
        trackingToken:
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
          type: string
      type: object
    DocumentMetadata:
      example: *ref_43
      properties:
        ancestors:
          description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
          type: array
          items:
            properties:
              connectorType:
                description: The source from which document content was pulled, e.g. an API crawl or browser history
                enum: *ref_42
                type: string
              containerDocument:
                type: object
                description: Document object (circular reference)
              content:
                properties:
                  fullTextList:
                    description: The plaintext content of the document.
                    type: array
                    items:
                      type: string
                type: object
              datasource:
                description: The app or other repository type from which the document was extracted
                type: string
              docType:
                description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                type: string
              id:
                description: The Glean Document ID.
                type: string
              metadata:
                type: object
                description: DocumentMetadata object (circular reference)
              parentDocument:
                type: object
                description: Document object (circular reference)
              sections:
                description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                type: array
                items:
                  type: object
                  properties:
                    title:
                      description: The title of the document section (e.g. the section header).
                      type: string
                    url:
                      description: The permalink of the document section.
                      type: string
              title:
                description: The title of the document.
                type: string
              url:
                description: A permalink for the document.
                type: string
            type: object
        assignedTo:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        author:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        collections:
          description: A list of collections that the document belongs to.
          type: array
          items:
            description: CollectionBaseMutableProperties object (max depth)
            type: object
            properties:
              adminLocked:
                description: Indicates whether edits are allowed for everyone or only admins.
                type: boolean
              allowedDatasource:
                description: The datasource type this Collection can hold.
                type: string
              icon:
                description: The emoji icon of this Collection.
                type: string
              parentId:
                description: The parent of this Collection, or 0 if it's a top-level Collection.
                type: integer
              thumbnail:
                type: object
                description: Thumbnail object (max depth)
              permissions:
                type: object
                description: ObjectPermissions object (max depth)
              childCount:
                description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                type: integer
              children:
                description: The children Collections of this Collection.
                type: array
                items:
                  type: object
                  properties:
                    Collection:
                      type: object
                      description: Collection object (circular reference)
              createTime:
                format: date-time
                type: string
              creator:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              id:
                description: The unique ID of the Collection.
                type: integer
              itemCount:
                description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                type: integer
              items:
                description: The items in this Collection.
                type: array
                items:
                  description: CollectionItemMutableProperties object (max depth)
                  type: object
                  properties:
                    collection:
                      type: object
                      description: Collection object (circular reference)
                    collectionId:
                      description: The Collection ID of the Collection that this CollectionItem belongs in.
                      type: integer
                    createdAt:
                      description: Unix timestamp for when the item was first added (in seconds since epoch UTC).
                      format: date-time
                      type: string
                    createdBy:
                      type: object
                      description: Person object (max depth)
                    document:
                      type: object
                      description: Document object (max depth)
                    documentId:
                      description: If this CollectionItem is indexed, the Glean Document ID of that document.
                      type: string
                    itemId:
                      description: Unique identifier for the item within the Collection it belongs to.
                      type: string
                    itemType:
                      enum: *ref_59
                      type: string
                    shortcut:
                      type: object
                      description: Shortcut object (max depth)
                    url:
                      description: The URL of this CollectionItem.
                      type: string
                  required:
                    - collectionId
                    - itemType
              pinMetadata:
                required: *ref_60
                properties:
                  eligiblePins:
                    description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                    type: array
                    items:
                      type: object
                      properties:
                        CollectionPinMetadata:
                          type: object
                          description: CollectionPinMetadata object (max depth)
                  existingPins:
                    description: List of targets this Collection is pinned to.
                    type: array
                    items:
                      type: object
                      properties:
                        CollectionPinTarget:
                          type: object
                          description: CollectionPinTarget object (max depth)
                type: object
              roles:
                description: A list of user roles for the Collection.
                type: array
                items:
                  required: *ref_6
                  properties:
                    group:
                      type: object
                      description: Group object (max depth)
                    person:
                      type: object
                      description: Person object (max depth)
                    role:
                      type: object
                      description: UserRole object (max depth)
                    sourceDocumentSpec:
                      type: object
                      description: DocumentSpec object (max depth)
                  type: object
              shortcuts:
                description: The names of the shortcuts (Go Links) that point to this Collection.
                type: array
                items:
                  type: string
              updateTime:
                format: date-time
                type: string
              updatedBy:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
            required:
              - name
              - id
              - description
        components:
          description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
          type: array
          items:
            type: string
        contactPerson:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        container:
          description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
          type: string
        containerId:
          description: The Glean Document ID of the container. Uniquely identifies the container.
          type: string
        createTime:
          format: date-time
          type: string
        customData:
          additionalProperties: *ref_34
          description: Custom fields specific to individual datasources
          type: object
        datasource:
          type: string
        datasourceId:
          description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
          type: string
        datasourceInstance:
          description: The datasource instance from which the document was extracted.
          type: string
        documentCategory:
          description: The document's document_category(.proto).
          type: string
        documentId:
          description: The index-wide unique identifier.
          type: string
        documentIdHash:
          description: Hash of the Glean Document ID.
          type: string
        indexStatus:
          properties:
            lastCrawledTime:
              description: When the document was last crawled
              format: date-time
              type: string
            lastIndexedTime:
              description: When the document was last indexed
              format: date-time
              type: string
          type: object
        interactions:
          properties:
            numComments:
              description: The count of comments (thread replies in the case of slack).
              type: integer
            numReactions:
              description: The count of reactions on the document.
              type: integer
            reactions:
              deprecated: true
              description: To be deprecated in favor of reacts. A (potentially non-exhaustive) list of reactions for the document.
              type: array
              items:
                type: string
            reacts:
              type: array
              items:
                properties:
                  count:
                    description: The count of the reaction type on the document.
                    type: integer
                  reactedByViewer:
                    description: Whether the user in context reacted with this type to the document.
                    type: boolean
                  reactors:
                    type: array
                    items:
                      type: object
                      properties:
                        Person:
                          type: object
                          description: Person object (max depth)
                  type:
                    type: string
                type: object
            shares:
              description: Describes instances of someone posting a link to this document in one of our indexed datasources.
              type: array
              items:
                description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
                required: *ref_41
                properties:
                  numDaysAgo:
                    description: The number of days that has passed since the share happened
                    type: integer
                  sharer:
                    type: object
                    description: Person object (max depth)
                  sharingDocument:
                    type: object
                    description: Document object (max depth)
                type: object
            visitorCount:
              required: *ref_12
              properties:
                count:
                  description: The counter value
                  type: integer
                org:
                  description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                  type: string
                period:
                  type: object
                  description: Period object (max depth)
              type: object
          type: object
        labels:
          description: A list of tags for the document. Interpretation is datasource specific.
          type: array
          items:
            type: string
        loggingId:
          description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
          type: string
        mentionedPeople:
          description: A list of people mentioned in the document.
          type: array
          items:
            example: *ref_0
            required: *ref_1
            properties:
              metadata:
                example: *ref_15
                properties:
                  aliasEmails:
                    description: Additional email addresses of this user beyond the primary, if any.
                    type: array
                    items:
                      type: string
                  badges:
                    description: The badges that a user has earned over their lifetime.
                    type: array
                    items:
                      type: object
                      properties:
                        Badge:
                          type: object
                          description: Badge object (max depth)
                  bannerUrl:
                    description: The URL of the person's banner photo.
                    format: url
                    type: string
                  bio:
                    description: Short biography or mission statement of the employee.
                    type: string
                  businessUnit:
                    description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                    type: string
                  busyEvents:
                    description: Intervals of busy time for this person, along with the type of event they're busy with.
                    type: array
                    items:
                      type: object
                      properties:
                        AnonymousEvent:
                          type: object
                          description: AnonymousEvent object (max depth)
                  customFields:
                    description: User customizable fields for additional people information.
                    type: array
                    items:
                      type: object
                      properties:
                        CustomFieldData:
                          type: object
                          description: CustomFieldData object (max depth)
                  datasourceProfile:
                    description: List of profiles this user has in different datasources / tools that they use.
                    type: array
                    items:
                      type: object
                      properties:
                        DatasourceProfile:
                          type: object
                          description: DatasourceProfile object (max depth)
                  department:
                    description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                    type: string
                  departmentCount:
                    description: The number of people in this person's department.
                    type: integer
                  directReportsCount:
                    description: The total number of people who directly report to this person, or 0
                    type: integer
                  email:
                    description: The user's primary email address
                    type: string
                  endDate:
                    description: If a former employee, the last date of employment.
                    format: date
                    type: string
                  externalProfileLink:
                    description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                    type: string
                  firstName:
                    description: The first name of the person
                    type: string
                  inviteInfo:
                    type: object
                    description: InviteInfo object (max depth)
                  isOrgRoot:
                    description: Whether this person is a "root" node in their organization's hierarchy.
                    type: boolean
                  isSignedUp:
                    description: Whether the user has signed into Glean at least once.
                    type: boolean
                  lastExtensionUse:
                    description: The last time the user has used the Glean extension in ISO 8601 format.
                    format: date-time
                    type: string
                  lastName:
                    description: The last name of the person
                    type: string
                  location:
                    description: User facing string representing the person's location.
                    type: string
                  loggingId:
                    description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                    type: string
                  managementChain:
                    description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                    type: array
                    items:
                      type: object
                      properties:
                        Person:
                          type: object
                          description: Person object (circular reference)
                  manager:
                    type: object
                    description: Person object (circular reference)
                  orgSizeCount:
                    description: The total recursive size of the people reporting to this person, or 1
                    type: integer
                  peopleDistance:
                    description: List of people and distances to those people from this person. Optionally with metadata.
                    type: array
                    items:
                      type: object
                      properties:
                        PersonDistance:
                          type: object
                          description: PersonDistance object (max depth)
                  permissions:
                    type: object
                    description: Permissions object (max depth)
                  phone:
                    description: Phone number as a number string.
                    type: string
                  photoUrl:
                    description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                    format: url
                    type: string
                  preferredName:
                    description: The preferred name of the person, or a nickname.
                    type: string
                  profileBoolSettings:
                    additionalProperties: *ref_16
                    description: flag settings to indicate user profile settings for certain items
                    type: object
                  pronoun:
                    description: She/her, He/his or other pronoun.
                    type: string
                  querySuggestions:
                    type: object
                    description: QuerySuggestionList object (max depth)
                  reports:
                    type: array
                    items:
                      type: object
                      properties:
                        Person:
                          type: object
                          description: Person object (circular reference)
                  socialNetwork:
                    description: List of social network profiles.
                    type: array
                    items:
                      type: object
                      properties:
                        SocialNetwork:
                          type: object
                          description: SocialNetwork object (max depth)
                  startDate:
                    description: The date when the employee started.
                    format: date
                    type: string
                  startDatePercentile:
                    description: Percentage of the company that started strictly after this person. Between [0,100).
                    format: float
                    type: number
                  structuredLocation:
                    type: object
                    description: StructuredLocation object (max depth)
                  teams:
                    description: Info about the employee's team(s).
                    type: array
                    items:
                      type: object
                      properties:
                        PersonTeam:
                          type: object
                          description: PersonTeam object (max depth)
                  timezone:
                    description: The timezone of the person. E.g. "Pacific Daylight Time".
                    type: string
                  timezoneOffset:
                    description: The offset of the person's timezone in seconds from UTC.
                    format: int64
                    type: integer
                  title:
                    description: Job title.
                    type: string
                  type:
                    enum: *ref_17
                    example: FULL_TIME
                    type: string
                    x-enumDescriptions: *ref_18
                  uneditedPhotoUrl:
                    description: The original photo URL of the person's avatar before any edits they made are applied
                    format: url
                    type: string
                type: object
              name:
                description: The display name.
                type: string
              obfuscatedId:
                description: An opaque identifier that can be used to request metadata for a Person.
                type: string
              relatedDocuments:
                description: A list of documents related to this person.
                type: array
                items:
                  properties:
                    associatedEntityId:
                      description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                      type: string
                    documents:
                      deprecated: true
                      description: A truncated list of documents with this relation. TO BE DEPRECATED.
                      type: array
                      items:
                        type: object
                        properties:
                          Document:
                            type: object
                            description: Document object (max depth)
                    querySuggestion:
                      type: object
                      description: QuerySuggestion object (max depth)
                    relation:
                      description: How this document relates to the including entity.
                      enum: *ref_19
                      type: string
                      x-enumDescriptions: *ref_20
                    results:
                      description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                      type: array
                      items:
                        type: object
                        properties:
                          SearchResult:
                            type: object
                            description: SearchResult object (max depth)
                  type: object
            type: object
        mimeType:
          type: string
        objectType:
          description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
          type: string
        owner:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        parentId:
          description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
          type: string
        path:
          description: For file datasources like onedrive/github etc this has the path to the file
          type: string
        permissions:
          properties:
            write:
              description: Describes the write permissions levels that a user has for a specific feature
              properties:
                create:
                  description: True if user has create permission for this feature and scope
                  type: boolean
                delete:
                  description: True if user has delete permission for this feature and scope
                  type: boolean
                scopeType:
                  type: object
                  description: ScopeType object (max depth)
                update:
                  description: True if user has update permission for this feature and scope
                  type: boolean
              type: object
          type: object
        pins:
          description: A list of stars associated with this result.  "Pin" is an older name.
          type: array
          items:
            type: object
            properties:
              audienceFilters:
                description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                type: array
                items:
                  example: *ref_7
                  properties:
                    fieldName:
                      example: owner
                      type: string
                    groupName:
                      description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                      example: Spreadsheet
                      type: string
                    values:
                      description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                      type: array
                      items:
                        type: object
                        properties:
                          FacetFilterValue:
                            type: object
                            description: FacetFilterValue object (max depth)
                  type: object
              queries:
                description: The query strings for which the pinned result will show.
                type: array
                items:
                  type: string
              attribution:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
              createTime:
                format: date-time
                type: string
              documentId:
                description: The document which should be a pinned result.
                type: string
              id:
                description: The opaque id of the pin.
                type: string
              updateTime:
                format: date-time
                type: string
              updatedBy:
                example: *ref_0
                required: *ref_1
                properties:
                  metadata:
                    type: object
                    description: PersonMetadata object (max depth)
                  name:
                    description: The display name.
                    type: string
                  obfuscatedId:
                    description: An opaque identifier that can be used to request metadata for a Person.
                    type: string
                  relatedDocuments:
                    description: A list of documents related to this person.
                    type: array
                    items:
                      type: object
                      properties:
                        RelatedDocuments:
                          type: object
                          description: RelatedDocuments object (max depth)
                type: object
            required:
              - documentId
        priority:
          description: The document priority. Interpretation is datasource specific.
          type: string
        shortcuts:
          description: A list of shortcuts of which destination URL is for the document.
          type: array
          items:
            type: object
            properties:
              id:
                description: The opaque id of the user generated content.
                type: integer
              addedRoles:
                description: A list of user roles added for the Shortcut.
                type: array
                items:
                  type: object
                  properties:
                    UserRoleSpecification:
                      type: object
                      description: UserRoleSpecification object (max depth)
              description:
                description: A short, plain text blurb to help people understand the intent of the shortcut.
                type: string
              destinationDocumentId:
                description: Glean Document ID for the URL, if known.
                type: string
              destinationUrl:
                description: Destination URL for the shortcut.
                type: string
              inputAlias:
                description: Link text following go/ prefix as entered by the user.
                type: string
              removedRoles:
                description: A list of user roles removed for the Shortcut.
                type: array
                items:
                  type: object
                  properties:
                    UserRoleSpecification:
                      type: object
                      description: UserRoleSpecification object (max depth)
              unlisted:
                description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                type: boolean
              urlTemplate:
                description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                type: string
              permissions:
                type: object
                description: ObjectPermissions object (max depth)
              createTime:
                description: The time the shortcut was created in ISO format (ISO 8601).
                format: date-time
                type: string
              createdBy:
                type: object
                description: Person object (max depth)
              destinationDocument:
                type: object
                description: Document object (max depth)
              editUrl:
                description: The URL using which the user can access the edit page of the shortcut.
                type: string
              intermediateUrl:
                description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                type: string
              isExternal:
                description: Indicates whether a shortcut is native or external.
                type: boolean
              updateTime:
                description: The time the shortcut was updated in ISO format (ISO 8601).
                format: date-time
                type: string
              updatedBy:
                type: object
                description: Person object (max depth)
              viewPrefix:
                description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                type: string
              alias:
                description: canonical link text following go/ prefix where hyphen/underscore is removed.
                type: string
              roles:
                description: A list of user roles for the Go Link.
                type: array
                items:
                  required: *ref_6
                  properties:
                    group:
                      type: object
                      description: Group object (max depth)
                    person:
                      type: object
                      description: Person object (max depth)
                    role:
                      type: object
                      description: UserRole object (max depth)
                    sourceDocumentSpec:
                      type: object
                      description: DocumentSpec object (max depth)
                  type: object
              title:
                description: Title for the Go Link
                type: string
            required:
              - inputAlias
        status:
          description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
          type: string
        statusCategory:
          description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
          type: string
        superContainerId:
          description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
          type: string
        thumbnail:
          properties:
            photoId:
              description: Photo id if the thumbnail is from splash.
              type: string
            url:
              description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
              type: string
          type: object
        updateTime:
          format: date-time
          type: string
        updatedBy:
          example: *ref_0
          required: *ref_1
          properties:
            metadata:
              example: *ref_15
              properties:
                aliasEmails:
                  description: Additional email addresses of this user beyond the primary, if any.
                  type: array
                  items:
                    type: string
                badges:
                  description: The badges that a user has earned over their lifetime.
                  type: array
                  items:
                    type: object
                    properties:
                      Badge:
                        type: object
                        description: Badge object (max depth)
                bannerUrl:
                  description: The URL of the person's banner photo.
                  format: url
                  type: string
                bio:
                  description: Short biography or mission statement of the employee.
                  type: string
                businessUnit:
                  description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                  type: string
                busyEvents:
                  description: Intervals of busy time for this person, along with the type of event they're busy with.
                  type: array
                  items:
                    type: object
                    properties:
                      AnonymousEvent:
                        type: object
                        description: AnonymousEvent object (max depth)
                customFields:
                  description: User customizable fields for additional people information.
                  type: array
                  items:
                    type: object
                    properties:
                      CustomFieldData:
                        type: object
                        description: CustomFieldData object (max depth)
                datasourceProfile:
                  description: List of profiles this user has in different datasources / tools that they use.
                  type: array
                  items:
                    type: object
                    properties:
                      DatasourceProfile:
                        type: object
                        description: DatasourceProfile object (max depth)
                department:
                  description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                  type: string
                departmentCount:
                  description: The number of people in this person's department.
                  type: integer
                directReportsCount:
                  description: The total number of people who directly report to this person, or 0
                  type: integer
                email:
                  description: The user's primary email address
                  type: string
                endDate:
                  description: If a former employee, the last date of employment.
                  format: date
                  type: string
                externalProfileLink:
                  description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
                  type: string
                firstName:
                  description: The first name of the person
                  type: string
                inviteInfo:
                  type: object
                  description: InviteInfo object (max depth)
                isOrgRoot:
                  description: Whether this person is a "root" node in their organization's hierarchy.
                  type: boolean
                isSignedUp:
                  description: Whether the user has signed into Glean at least once.
                  type: boolean
                lastExtensionUse:
                  description: The last time the user has used the Glean extension in ISO 8601 format.
                  format: date-time
                  type: string
                lastName:
                  description: The last name of the person
                  type: string
                location:
                  description: User facing string representing the person's location.
                  type: string
                loggingId:
                  description: The logging id of the person used in scrubbed logs, tracking GA metrics.
                  type: string
                managementChain:
                  description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                manager:
                  type: object
                  description: Person object (circular reference)
                orgSizeCount:
                  description: The total recursive size of the people reporting to this person, or 1
                  type: integer
                peopleDistance:
                  description: List of people and distances to those people from this person. Optionally with metadata.
                  type: array
                  items:
                    type: object
                    properties:
                      PersonDistance:
                        type: object
                        description: PersonDistance object (max depth)
                permissions:
                  type: object
                  description: Permissions object (max depth)
                phone:
                  description: Phone number as a number string.
                  type: string
                photoUrl:
                  description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                  format: url
                  type: string
                preferredName:
                  description: The preferred name of the person, or a nickname.
                  type: string
                profileBoolSettings:
                  additionalProperties: *ref_16
                  description: flag settings to indicate user profile settings for certain items
                  type: object
                pronoun:
                  description: She/her, He/his or other pronoun.
                  type: string
                querySuggestions:
                  type: object
                  description: QuerySuggestionList object (max depth)
                reports:
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (circular reference)
                socialNetwork:
                  description: List of social network profiles.
                  type: array
                  items:
                    type: object
                    properties:
                      SocialNetwork:
                        type: object
                        description: SocialNetwork object (max depth)
                startDate:
                  description: The date when the employee started.
                  format: date
                  type: string
                startDatePercentile:
                  description: Percentage of the company that started strictly after this person. Between [0,100).
                  format: float
                  type: number
                structuredLocation:
                  type: object
                  description: StructuredLocation object (max depth)
                teams:
                  description: Info about the employee's team(s).
                  type: array
                  items:
                    type: object
                    properties:
                      PersonTeam:
                        type: object
                        description: PersonTeam object (max depth)
                timezone:
                  description: The timezone of the person. E.g. "Pacific Daylight Time".
                  type: string
                timezoneOffset:
                  description: The offset of the person's timezone in seconds from UTC.
                  format: int64
                  type: integer
                title:
                  description: Job title.
                  type: string
                type:
                  enum: *ref_17
                  example: FULL_TIME
                  type: string
                  x-enumDescriptions: *ref_18
                uneditedPhotoUrl:
                  description: The original photo URL of the person's avatar before any edits they made are applied
                  format: url
                  type: string
              type: object
            name:
              description: The display name.
              type: string
            obfuscatedId:
              description: An opaque identifier that can be used to request metadata for a Person.
              type: string
            relatedDocuments:
              description: A list of documents related to this person.
              type: array
              items:
                properties:
                  associatedEntityId:
                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                    type: string
                  documents:
                    deprecated: true
                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                    type: array
                    items:
                      type: object
                      properties:
                        Document:
                          type: object
                          description: Document object (max depth)
                  querySuggestion:
                    type: object
                    description: QuerySuggestion object (max depth)
                  relation:
                    description: How this document relates to the including entity.
                    enum: *ref_19
                    type: string
                    x-enumDescriptions: *ref_20
                  results:
                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                    type: array
                    items:
                      type: object
                      properties:
                        SearchResult:
                          type: object
                          description: SearchResult object (max depth)
                type: object
          type: object
        verification:
          required: *ref_44
          properties:
            metadata:
              required: *ref_61
              properties:
                candidateVerifiers:
                  description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
                  type: array
                  items:
                    type: object
                    properties:
                      Person:
                        type: object
                        description: Person object (max depth)
                document:
                  type: object
                  description: Document object (max depth)
                expirationTs:
                  description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
                  type: integer
                lastReminder:
                  type: object
                  description: Reminder object (max depth)
                lastVerificationTs:
                  description: The unix timestamp of the verification (in seconds since epoch UTC).
                  type: integer
                lastVerifier:
                  type: object
                  description: Person object (max depth)
                reminders:
                  description: Info about all outstanding verification reminders for the document if exists.
                  type: array
                  items:
                    type: object
                    properties:
                      Reminder:
                        type: object
                        description: Reminder object (max depth)
                visitorCount:
                  description: Number of visitors to the document during included time periods.
                  type: array
                  items:
                    type: object
                    properties:
                      CountInfo:
                        type: object
                        description: CountInfo object (max depth)
              type: object
            state:
              description: The verification state for the document.
              enum: *ref_45
              type: string
          type: object
        viewerInfo:
          properties:
            lastViewedTime:
              format: date-time
              type: string
            role:
              deprecated: true
              description: DEPRECATED - use permissions instead. Viewer's role on the specific document.
              enum: *ref_68
              type: string
          type: object
        visibility:
          description: The level of visibility of the document as understood by our system.
          enum: *ref_69
          type: string
          x-enumDescriptions: *ref_70
        visitCount:
          required: *ref_12
          properties:
            count:
              description: The counter value
              type: integer
            org:
              description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
              type: string
            period:
              properties:
                end:
                  type: object
                  description: TimePoint object (max depth)
                maxDaysFromNow:
                  deprecated: true
                  description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                  type: integer
                minDaysFromNow:
                  deprecated: true
                  description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                  type: integer
                start:
                  type: object
                  description: TimePoint object (max depth)
              type: object
          type: object
      type: object
  securitySchemes:
    APIToken:
      scheme: bearer
      type: http
  parameters:
    timezoneOffset:
      name: timezoneOffset
      in: query
      description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
      schema:
        type: integer
