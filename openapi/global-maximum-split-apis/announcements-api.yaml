openapi: 3.0.0
info:
  version: 0.9.0
  title: Announcements
  description: Announcements operations for Glean API
  x-logo:
    url: https://app.glean.com/images/glean-text2.svg
  x-speakeasy-name: Glean API
servers:
  - url: https://{instance}-be.glean.com
    variables:
      instance:
        default: instance-name
        description: The instance name (typically the email domain without the TLD) that determines the deployment backend.
tags:
  - name: Announcements
    description: Announcements
paths:
  /rest/api/v1/createannouncement:
    post:
      tags:
        - Announcements
      summary: Create Announcement
      description: Create a textual announcement visible to some set of users based on department and location.
      operationId: createannouncement
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAnnouncementRequest'
        description: Announcement content
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: create
      x-speakeasy-group: client.announcements
      x-codeSamples:
        - lang: python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean, models
            from glean.api_client.utils import parse_datetime
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as g_client:

                res = g_client.client.announcements.create(start_time=parse_datetime("2023-05-01T12:02:10.816Z"), end_time=parse_datetime("2024-03-17T14:19:30.278Z"), title="<value>", body={
                    "text": "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                    "structured_list": [
                        models.StructuredTextItem(
                            link="https://en.wikipedia.org/wiki/Diffuse_sky_radiation",
                            document=models.Document(
                                container_document=models.Document(
                                    metadata=models.DocumentMetadata(
                                        datasource="datasource",
                                        object_type="Feature Request",
                                        container="container",
                                        parent_id="JIRA_EN-1337",
                                        mime_type="mimeType",
                                        document_id="documentId",
                                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                        author=models.Person(
                                            name="name",
                                            obfuscated_id="<id>",
                                        ),
                                        components=[
                                            "Backend",
                                            "Networking",
                                        ],
                                        status="[\"Done\"]",
                                        custom_data={
                                            "someCustomField": models.CustomDataValue(),
                                        },
                                    ),
                                ),
                                parent_document=models.Document(
                                    metadata=models.DocumentMetadata(
                                        datasource="datasource",
                                        object_type="Feature Request",
                                        container="container",
                                        parent_id="JIRA_EN-1337",
                                        mime_type="mimeType",
                                        document_id="documentId",
                                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                        author=models.Person(
                                            name="name",
                                            obfuscated_id="<id>",
                                        ),
                                        components=[
                                            "Backend",
                                            "Networking",
                                        ],
                                        status="[\"Done\"]",
                                        custom_data={
                                            "someCustomField": models.CustomDataValue(),
                                        },
                                    ),
                                ),
                                metadata=models.DocumentMetadata(
                                    datasource="datasource",
                                    object_type="Feature Request",
                                    container="container",
                                    parent_id="JIRA_EN-1337",
                                    mime_type="mimeType",
                                    document_id="documentId",
                                    create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                    update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                    author=models.Person(
                                        name="name",
                                        obfuscated_id="<id>",
                                    ),
                                    components=[
                                        "Backend",
                                        "Networking",
                                    ],
                                    status="[\"Done\"]",
                                    custom_data={
                                        "someCustomField": models.CustomDataValue(),
                                    },
                                ),
                            ),
                            text="Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.",
                            structured_result=models.StructuredResult(
                                document=models.Document(
                                    container_document=models.Document(
                                        metadata=models.DocumentMetadata(
                                            datasource="datasource",
                                            object_type="Feature Request",
                                            container="container",
                                            parent_id="JIRA_EN-1337",
                                            mime_type="mimeType",
                                            document_id="documentId",
                                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            author=models.Person(
                                                name="name",
                                                obfuscated_id="<id>",
                                            ),
                                            components=[
                                                "Backend",
                                                "Networking",
                                            ],
                                            status="[\"Done\"]",
                                            custom_data={
                                                "someCustomField": models.CustomDataValue(),
                                            },
                                        ),
                                    ),
                                    parent_document=models.Document(
                                        metadata=models.DocumentMetadata(
                                            datasource="datasource",
                                            object_type="Feature Request",
                                            container="container",
                                            parent_id="JIRA_EN-1337",
                                            mime_type="mimeType",
                                            document_id="documentId",
                                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            author=models.Person(
                                                name="name",
                                                obfuscated_id="<id>",
                                            ),
                                            components=[
                                                "Backend",
                                                "Networking",
                                            ],
                                            status="[\"Done\"]",
                                            custom_data={
                                                "someCustomField": models.CustomDataValue(),
                                            },
                                        ),
                                    ),
                                    metadata=models.DocumentMetadata(
                                        datasource="datasource",
                                        object_type="Feature Request",
                                        container="container",
                                        parent_id="JIRA_EN-1337",
                                        mime_type="mimeType",
                                        document_id="documentId",
                                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                        author=models.Person(
                                            name="name",
                                            obfuscated_id="<id>",
                                        ),
                                        components=[
                                            "Backend",
                                            "Networking",
                                        ],
                                        status="[\"Done\"]",
                                        custom_data={
                                            "someCustomField": models.CustomDataValue(),
                                        },
                                    ),
                                ),
                                person=models.Person(
                                    name="George Clooney",
                                    obfuscated_id="abc123",
                                ),
                                customer=models.Customer(
                                    id="<id>",
                                    company=models.Company(
                                        name="<value>",
                                        location="New York City",
                                        industry="Finances",
                                        about="Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                                    ),
                                    poc=[
                                        models.Person(
                                            name="George Clooney",
                                            obfuscated_id="abc123",
                                        ),
                                    ],
                                    merged_customers=[
                                        models.Customer(
                                            id="<id>",
                                            company=models.Company(
                                                name="<value>",
                                                location="New York City",
                                                industry="Finances",
                                                about="Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                                            ),
                                            notes="CIO is interested in trying out the product.",
                                        ),
                                    ],
                                    notes="CIO is interested in trying out the product.",
                                ),
                                team=models.Team(
                                    id="<id>",
                                    name="<value>",
                                    members=[
                                        models.PersonToTeamRelationship(
                                            person=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                        ),
                                    ],
                                    custom_fields=[
                                        models.CustomFieldData(
                                            label="<value>",
                                            values=[
                                                models.CustomFieldValuePerson(
                                                    person=models.Person(
                                                        name="George Clooney",
                                                        obfuscated_id="abc123",
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ],
                                    datasource_profiles=[
                                        models.DatasourceProfile(
                                            datasource="github",
                                            handle="<value>",
                                        ),
                                    ],
                                ),
                                custom_entity=models.CustomEntity(
                                    roles=[
                                        models.UserRoleSpecification(
                                            person=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                            role=models.UserRole.ANSWER_MODERATOR,
                                        ),
                                    ],
                                ),
                                answer=models.Answer(
                                    id=3,
                                    doc_id="ANSWERS_answer_3",
                                    question="Why is the sky blue?",
                                    body_text="From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                                    audience_filters=[
                                        models.FacetFilter(
                                            field_name="type",
                                            values=[
                                                models.FacetFilterValue(
                                                    value="Spreadsheet",
                                                    relation_type=models.RelationType.EQUALS,
                                                ),
                                                models.FacetFilterValue(
                                                    value="Presentation",
                                                    relation_type=models.RelationType.EQUALS,
                                                ),
                                            ],
                                        ),
                                    ],
                                    added_roles=[
                                        models.UserRoleSpecification(
                                            person=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                            role=models.UserRole.VERIFIER,
                                        ),
                                    ],
                                    removed_roles=[
                                        models.UserRoleSpecification(
                                            person=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                            role=models.UserRole.VERIFIER,
                                        ),
                                    ],
                                    combined_answer_text=models.StructuredText(
                                        text="From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                                    ),
                                    likes=models.AnswerLikes(
                                        liked_by=[
                                            models.AnswerLike(
                                                user=models.Person(
                                                    name="George Clooney",
                                                    obfuscated_id="abc123",
                                                ),
                                            ),
                                        ],
                                        liked_by_user=False,
                                        num_likes=852982,
                                    ),
                                    author=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                    updated_by=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                    verification=models.Verification(
                                        state=models.State.DEPRECATED,
                                        metadata=models.VerificationMetadata(
                                            last_verifier=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                            document=models.Document(
                                                container_document=models.Document(
                                                    metadata=models.DocumentMetadata(
                                                        datasource="datasource",
                                                        object_type="Feature Request",
                                                        container="container",
                                                        parent_id="JIRA_EN-1337",
                                                        mime_type="mimeType",
                                                        document_id="documentId",
                                                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        author=models.Person(
                                                            name="name",
                                                            obfuscated_id="<id>",
                                                        ),
                                                        components=[
                                                            "Backend",
                                                            "Networking",
                                                        ],
                                                        status="[\"Done\"]",
                                                        custom_data={
                                                            "someCustomField": models.CustomDataValue(),
                                                        },
                                                    ),
                                                ),
                                                parent_document=models.Document(
                                                    metadata=models.DocumentMetadata(
                                                        datasource="datasource",
                                                        object_type="Feature Request",
                                                        container="container",
                                                        parent_id="JIRA_EN-1337",
                                                        mime_type="mimeType",
                                                        document_id="documentId",
                                                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        author=models.Person(
                                                            name="name",
                                                            obfuscated_id="<id>",
                                                        ),
                                                        components=[
                                                            "Backend",
                                                            "Networking",
                                                        ],
                                                        status="[\"Done\"]",
                                                        custom_data={
                                                            "someCustomField": models.CustomDataValue(),
                                                        },
                                                    ),
                                                ),
                                                metadata=models.DocumentMetadata(
                                                    datasource="datasource",
                                                    object_type="Feature Request",
                                                    container="container",
                                                    parent_id="JIRA_EN-1337",
                                                    mime_type="mimeType",
                                                    document_id="documentId",
                                                    create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                    update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                    author=models.Person(
                                                        name="name",
                                                        obfuscated_id="<id>",
                                                    ),
                                                    components=[
                                                        "Backend",
                                                        "Networking",
                                                    ],
                                                    status="[\"Done\"]",
                                                    custom_data={
                                                        "someCustomField": models.CustomDataValue(),
                                                    },
                                                ),
                                            ),
                                            reminders=[
                                                models.Reminder(
                                                    assignee=models.Person(
                                                        name="George Clooney",
                                                        obfuscated_id="abc123",
                                                    ),
                                                    requestor=models.Person(
                                                        name="George Clooney",
                                                        obfuscated_id="abc123",
                                                    ),
                                                    remind_at=627080,
                                                ),
                                            ],
                                            last_reminder=models.Reminder(
                                                assignee=models.Person(
                                                    name="George Clooney",
                                                    obfuscated_id="abc123",
                                                ),
                                                requestor=models.Person(
                                                    name="George Clooney",
                                                    obfuscated_id="abc123",
                                                ),
                                                remind_at=642543,
                                            ),
                                            candidate_verifiers=[
                                                models.Person(
                                                    name="George Clooney",
                                                    obfuscated_id="abc123",
                                                ),
                                            ],
                                        ),
                                    ),
                                    board=models.AnswerBoard(
                                        name="<value>",
                                        description="actual even swift curse while puppet outlandish since urgently",
                                        audience_filters=[
                                            models.FacetFilter(
                                                field_name="type",
                                                values=[
                                                    models.FacetFilterValue(
                                                        value="Spreadsheet",
                                                        relation_type=models.RelationType.EQUALS,
                                                    ),
                                                    models.FacetFilterValue(
                                                        value="Presentation",
                                                        relation_type=models.RelationType.EQUALS,
                                                    ),
                                                ],
                                            ),
                                        ],
                                        id=812610,
                                        creator=models.Person(
                                            name="George Clooney",
                                            obfuscated_id="abc123",
                                        ),
                                        updated_by=models.Person(
                                            name="George Clooney",
                                            obfuscated_id="abc123",
                                        ),
                                    ),
                                    collections=[
                                        models.Collection(
                                            name="<value>",
                                            description="minus mindless prudent better elderly",
                                            audience_filters=[
                                                models.FacetFilter(
                                                    field_name="type",
                                                    values=[
                                                        models.FacetFilterValue(
                                                            value="Spreadsheet",
                                                            relation_type=models.RelationType.EQUALS,
                                                        ),
                                                        models.FacetFilterValue(
                                                            value="Presentation",
                                                            relation_type=models.RelationType.EQUALS,
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            id=953622,
                                            creator=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                            updated_by=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                            items=[
                                                models.CollectionItem(
                                                    collection_id=164413,
                                                    created_by=models.Person(
                                                        name="George Clooney",
                                                        obfuscated_id="abc123",
                                                    ),
                                                    document=models.Document(
                                                        container_document=models.Document(
                                                            metadata=models.DocumentMetadata(
                                                                datasource="datasource",
                                                                object_type="Feature Request",
                                                                container="container",
                                                                parent_id="JIRA_EN-1337",
                                                                mime_type="mimeType",
                                                                document_id="documentId",
                                                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                author=models.Person(
                                                                    name="name",
                                                                    obfuscated_id="<id>",
                                                                ),
                                                                components=[
                                                                    "Backend",
                                                                    "Networking",
                                                                ],
                                                                status="[\"Done\"]",
                                                                custom_data={
                                                                    "someCustomField": models.CustomDataValue(),
                                                                },
                                                            ),
                                                        ),
                                                        parent_document=models.Document(
                                                            metadata=models.DocumentMetadata(
                                                                datasource="datasource",
                                                                object_type="Feature Request",
                                                                container="container",
                                                                parent_id="JIRA_EN-1337",
                                                                mime_type="mimeType",
                                                                document_id="documentId",
                                                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                author=models.Person(
                                                                    name="name",
                                                                    obfuscated_id="<id>",
                                                                ),
                                                                components=[
                                                                    "Backend",
                                                                    "Networking",
                                                                ],
                                                                status="[\"Done\"]",
                                                                custom_data={
                                                                    "someCustomField": models.CustomDataValue(),
                                                                },
                                                            ),
                                                        ),
                                                        metadata=models.DocumentMetadata(
                                                            datasource="datasource",
                                                            object_type="Feature Request",
                                                            container="container",
                                                            parent_id="JIRA_EN-1337",
                                                            mime_type="mimeType",
                                                            document_id="documentId",
                                                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                            author=models.Person(
                                                                name="name",
                                                                obfuscated_id="<id>",
                                                            ),
                                                            components=[
                                                                "Backend",
                                                                "Networking",
                                                            ],
                                                            status="[\"Done\"]",
                                                            custom_data={
                                                                "someCustomField": models.CustomDataValue(),
                                                            },
                                                        ),
                                                    ),
                                                    shortcut=models.Shortcut(
                                                        input_alias="<value>",
                                                        created_by=models.Person(
                                                            name="George Clooney",
                                                            obfuscated_id="abc123",
                                                        ),
                                                        updated_by=models.Person(
                                                            name="George Clooney",
                                                            obfuscated_id="abc123",
                                                        ),
                                                        destination_document=models.Document(
                                                            container_document=models.Document(
                                                                metadata=models.DocumentMetadata(
                                                                    datasource="datasource",
                                                                    object_type="Feature Request",
                                                                    container="container",
                                                                    parent_id="JIRA_EN-1337",
                                                                    mime_type="mimeType",
                                                                    document_id="documentId",
                                                                    create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                    update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                    author=models.Person(
                                                                        name="name",
                                                                        obfuscated_id="<id>",
                                                                    ),
                                                                    components=[
                                                                        "Backend",
                                                                        "Networking",
                                                                    ],
                                                                    status="[\"Done\"]",
                                                                    custom_data={
                                                                        "someCustomField": models.CustomDataValue(),
                                                                    },
                                                                ),
                                                            ),
                                                            parent_document=models.Document(
                                                                metadata=models.DocumentMetadata(
                                                                    datasource="datasource",
                                                                    object_type="Feature Request",
                                                                    container="container",
                                                                    parent_id="JIRA_EN-1337",
                                                                    mime_type="mimeType",
                                                                    document_id="documentId",
                                                                    create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                    update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                    author=models.Person(
                                                                        name="name",
                                                                        obfuscated_id="<id>",
                                                                    ),
                                                                    components=[
                                                                        "Backend",
                                                                        "Networking",
                                                                    ],
                                                                    status="[\"Done\"]",
                                                                    custom_data={
                                                                        "someCustomField": models.CustomDataValue(),
                                                                    },
                                                                ),
                                                            ),
                                                            metadata=models.DocumentMetadata(
                                                                datasource="datasource",
                                                                object_type="Feature Request",
                                                                container="container",
                                                                parent_id="JIRA_EN-1337",
                                                                mime_type="mimeType",
                                                                document_id="documentId",
                                                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                author=models.Person(
                                                                    name="name",
                                                                    obfuscated_id="<id>",
                                                                ),
                                                                components=[
                                                                    "Backend",
                                                                    "Networking",
                                                                ],
                                                                status="[\"Done\"]",
                                                                custom_data={
                                                                    "someCustomField": models.CustomDataValue(),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                    collection=models.Collection(
                                                        name="<value>",
                                                        description="instead calmly after ick headline inasmuch forenenst westernize grouper amidst",
                                                        audience_filters=[
                                                            models.FacetFilter(
                                                                field_name="type",
                                                                values=[
                                                                    models.FacetFilterValue(
                                                                        value="Spreadsheet",
                                                                        relation_type=models.RelationType.EQUALS,
                                                                    ),
                                                                    models.FacetFilterValue(
                                                                        value="Presentation",
                                                                        relation_type=models.RelationType.EQUALS,
                                                                    ),
                                                                ],
                                                            ),
                                                        ],
                                                        id=345597,
                                                        creator=models.Person(
                                                            name="George Clooney",
                                                            obfuscated_id="abc123",
                                                        ),
                                                        updated_by=models.Person(
                                                            name="George Clooney",
                                                            obfuscated_id="abc123",
                                                        ),
                                                        children=[
                                                            models.Collection(
                                                                name="<value>",
                                                                description="boulevard pale collaborate pertinent comparison drat yum rejigger nor finding",
                                                                audience_filters=[
                                                                    models.FacetFilter(
                                                                        field_name="type",
                                                                        values=[
                                                                            models.FacetFilterValue(
                                                                                value="Spreadsheet",
                                                                                relation_type=models.RelationType.EQUALS,
                                                                            ),
                                                                            models.FacetFilterValue(
                                                                                value="Presentation",
                                                                                relation_type=models.RelationType.EQUALS,
                                                                            ),
                                                                        ],
                                                                    ),
                                                                ],
                                                                id=654575,
                                                                creator=models.Person(
                                                                    name="George Clooney",
                                                                    obfuscated_id="abc123",
                                                                ),
                                                                updated_by=models.Person(
                                                                    name="George Clooney",
                                                                    obfuscated_id="abc123",
                                                                ),
                                                            ),
                                                        ],
                                                    ),
                                                    item_type=models.CollectionItemItemType.DOCUMENT,
                                                ),
                                            ],
                                        ),
                                    ],
                                    source_document=models.Document(
                                        container_document=models.Document(
                                            metadata=models.DocumentMetadata(
                                                datasource="datasource",
                                                object_type="Feature Request",
                                                container="container",
                                                parent_id="JIRA_EN-1337",
                                                mime_type="mimeType",
                                                document_id="documentId",
                                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                author=models.Person(
                                                    name="name",
                                                    obfuscated_id="<id>",
                                                ),
                                                components=[
                                                    "Backend",
                                                    "Networking",
                                                ],
                                                status="[\"Done\"]",
                                                custom_data={
                                                    "someCustomField": models.CustomDataValue(),
                                                },
                                            ),
                                        ),
                                        parent_document=models.Document(
                                            metadata=models.DocumentMetadata(
                                                datasource="datasource",
                                                object_type="Feature Request",
                                                container="container",
                                                parent_id="JIRA_EN-1337",
                                                mime_type="mimeType",
                                                document_id="documentId",
                                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                author=models.Person(
                                                    name="name",
                                                    obfuscated_id="<id>",
                                                ),
                                                components=[
                                                    "Backend",
                                                    "Networking",
                                                ],
                                                status="[\"Done\"]",
                                                custom_data={
                                                    "someCustomField": models.CustomDataValue(),
                                                },
                                            ),
                                        ),
                                        metadata=models.DocumentMetadata(
                                            datasource="datasource",
                                            object_type="Feature Request",
                                            container="container",
                                            parent_id="JIRA_EN-1337",
                                            mime_type="mimeType",
                                            document_id="documentId",
                                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            author=models.Person(
                                                name="name",
                                                obfuscated_id="<id>",
                                            ),
                                            components=[
                                                "Backend",
                                                "Networking",
                                            ],
                                            status="[\"Done\"]",
                                            custom_data={
                                                "someCustomField": models.CustomDataValue(),
                                            },
                                        ),
                                    ),
                                ),
                                extracted_qn_a=models.ExtractedQnA(
                                    question_result=models.SearchResult(
                                        title="title",
                                        url="https://example.com/foo/bar",
                                        native_app_url="slack://foo/bar",
                                        snippets=[
                                            models.SearchResultSnippet(
                                                snippet="snippet",
                                                mime_type="mimeType",
                                            ),
                                        ],
                                        must_include_suggestions=models.QuerySuggestionList(
                                            suggestions=[
                                                models.QuerySuggestion(
                                                    query="app:github type:pull author:mortimer",
                                                    label="Mortimer's PRs",
                                                    datasource="github",
                                                ),
                                            ],
                                            person=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                        ),
                                    ),
                                ),
                                meeting=models.Meeting(
                                    attendees=models.CalendarAttendees(
                                        people=[
                                            models.CalendarAttendee(
                                                person=models.Person(
                                                    name="George Clooney",
                                                    obfuscated_id="abc123",
                                                ),
                                                group_attendees=[
                                                    models.CalendarAttendee(
                                                        person=models.Person(
                                                            name="George Clooney",
                                                            obfuscated_id="abc123",
                                                        ),
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ),
                                ),
                                collection=models.Collection(
                                    name="<value>",
                                    description="instead calmly after ick headline inasmuch forenenst westernize grouper amidst",
                                    audience_filters=[
                                        models.FacetFilter(
                                            field_name="type",
                                            values=[
                                                models.FacetFilterValue(
                                                    value="Spreadsheet",
                                                    relation_type=models.RelationType.EQUALS,
                                                ),
                                                models.FacetFilterValue(
                                                    value="Presentation",
                                                    relation_type=models.RelationType.EQUALS,
                                                ),
                                            ],
                                        ),
                                    ],
                                    id=345597,
                                    creator=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                    updated_by=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                    children=[
                                        models.Collection(
                                            name="<value>",
                                            description="boulevard pale collaborate pertinent comparison drat yum rejigger nor finding",
                                            audience_filters=[
                                                models.FacetFilter(
                                                    field_name="type",
                                                    values=[
                                                        models.FacetFilterValue(
                                                            value="Spreadsheet",
                                                            relation_type=models.RelationType.EQUALS,
                                                        ),
                                                        models.FacetFilterValue(
                                                            value="Presentation",
                                                            relation_type=models.RelationType.EQUALS,
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            id=654575,
                                            creator=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                            updated_by=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                        ),
                                    ],
                                ),
                                answer_board=models.AnswerBoard(
                                    name="<value>",
                                    description="capitalise rubric championship snowplow",
                                    audience_filters=[
                                        models.FacetFilter(
                                            field_name="type",
                                            values=[
                                                models.FacetFilterValue(
                                                    value="Spreadsheet",
                                                    relation_type=models.RelationType.EQUALS,
                                                ),
                                                models.FacetFilterValue(
                                                    value="Presentation",
                                                    relation_type=models.RelationType.EQUALS,
                                                ),
                                            ],
                                        ),
                                    ],
                                    id=920771,
                                    creator=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                    updated_by=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                ),
                                code=models.Code(
                                    repo_name="scio",
                                    file_name="README.md",
                                ),
                                shortcut=models.Shortcut(
                                    input_alias="<value>",
                                    created_by=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                    updated_by=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                    destination_document=models.Document(
                                        container_document=models.Document(
                                            metadata=models.DocumentMetadata(
                                                datasource="datasource",
                                                object_type="Feature Request",
                                                container="container",
                                                parent_id="JIRA_EN-1337",
                                                mime_type="mimeType",
                                                document_id="documentId",
                                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                author=models.Person(
                                                    name="name",
                                                    obfuscated_id="<id>",
                                                ),
                                                components=[
                                                    "Backend",
                                                    "Networking",
                                                ],
                                                status="[\"Done\"]",
                                                custom_data={
                                                    "someCustomField": models.CustomDataValue(),
                                                },
                                            ),
                                        ),
                                        parent_document=models.Document(
                                            metadata=models.DocumentMetadata(
                                                datasource="datasource",
                                                object_type="Feature Request",
                                                container="container",
                                                parent_id="JIRA_EN-1337",
                                                mime_type="mimeType",
                                                document_id="documentId",
                                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                author=models.Person(
                                                    name="name",
                                                    obfuscated_id="<id>",
                                                ),
                                                components=[
                                                    "Backend",
                                                    "Networking",
                                                ],
                                                status="[\"Done\"]",
                                                custom_data={
                                                    "someCustomField": models.CustomDataValue(),
                                                },
                                            ),
                                        ),
                                        metadata=models.DocumentMetadata(
                                            datasource="datasource",
                                            object_type="Feature Request",
                                            container="container",
                                            parent_id="JIRA_EN-1337",
                                            mime_type="mimeType",
                                            document_id="documentId",
                                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            author=models.Person(
                                                name="name",
                                                obfuscated_id="<id>",
                                            ),
                                            components=[
                                                "Backend",
                                                "Networking",
                                            ],
                                            status="[\"Done\"]",
                                            custom_data={
                                                "someCustomField": models.CustomDataValue(),
                                            },
                                        ),
                                    ),
                                ),
                                query_suggestions=models.QuerySuggestionList(
                                    person=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                ),
                                related_documents=[
                                    models.RelatedDocuments(
                                        query_suggestion=models.QuerySuggestion(
                                            query="app:github type:pull author:mortimer",
                                            label="Mortimer's PRs",
                                            datasource="github",
                                        ),
                                        results=[
                                            models.SearchResult(
                                                title="title",
                                                url="https://example.com/foo/bar",
                                                native_app_url="slack://foo/bar",
                                                snippets=[
                                                    models.SearchResultSnippet(
                                                        snippet="snippet",
                                                        mime_type="mimeType",
                                                    ),
                                                ],
                                                must_include_suggestions=models.QuerySuggestionList(
                                                    person=models.Person(
                                                        name="George Clooney",
                                                        obfuscated_id="abc123",
                                                    ),
                                                ),
                                            ),
                                        ],
                                    ),
                                ],
                                related_question=models.RelatedQuestion(
                                    ranges=[
                                        models.TextRange(
                                            start_index=254608,
                                            document=models.Document(
                                                container_document=models.Document(
                                                    metadata=models.DocumentMetadata(
                                                        datasource="datasource",
                                                        object_type="Feature Request",
                                                        container="container",
                                                        parent_id="JIRA_EN-1337",
                                                        mime_type="mimeType",
                                                        document_id="documentId",
                                                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        author=models.Person(
                                                            name="name",
                                                            obfuscated_id="<id>",
                                                        ),
                                                        components=[
                                                            "Backend",
                                                            "Networking",
                                                        ],
                                                        status="[\"Done\"]",
                                                        custom_data={
                                                            "someCustomField": models.CustomDataValue(),
                                                        },
                                                    ),
                                                ),
                                                parent_document=models.Document(
                                                    metadata=models.DocumentMetadata(
                                                        datasource="datasource",
                                                        object_type="Feature Request",
                                                        container="container",
                                                        parent_id="JIRA_EN-1337",
                                                        mime_type="mimeType",
                                                        document_id="documentId",
                                                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        author=models.Person(
                                                            name="name",
                                                            obfuscated_id="<id>",
                                                        ),
                                                        components=[
                                                            "Backend",
                                                            "Networking",
                                                        ],
                                                        status="[\"Done\"]",
                                                        custom_data={
                                                            "someCustomField": models.CustomDataValue(),
                                                        },
                                                    ),
                                                ),
                                                metadata=models.DocumentMetadata(
                                                    datasource="datasource",
                                                    object_type="Feature Request",
                                                    container="container",
                                                    parent_id="JIRA_EN-1337",
                                                    mime_type="mimeType",
                                                    document_id="documentId",
                                                    create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                    update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                    author=models.Person(
                                                        name="name",
                                                        obfuscated_id="<id>",
                                                    ),
                                                    components=[
                                                        "Backend",
                                                        "Networking",
                                                    ],
                                                    status="[\"Done\"]",
                                                    custom_data={
                                                        "someCustomField": models.CustomDataValue(),
                                                    },
                                                ),
                                            ),
                                        ),
                                    ],
                                ),
                            ),
                        ),
                    ],
                }, audience_filters=[
                    {
                        "field_name": "type",
                        "values": [
                            {
                                "value": "Spreadsheet",
                                "relation_type": models.RelationType.EQUALS,
                            },
                            {
                                "value": "Presentation",
                                "relation_type": models.RelationType.EQUALS,
                            },
                        ],
                    },
                ])

                # Handle response
                print(res)
        - lang: typescript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.announcements.create({
                startTime: new Date("2023-05-01T12:02:10.816Z"),
                endTime: new Date("2024-03-17T14:19:30.278Z"),
                title: "<value>",
                body: {
                  text: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                  structuredList: [
                    {
                      link: "https://en.wikipedia.org/wiki/Diffuse_sky_radiation",
                      document: {
                        metadata: {
                          datasource: "datasource",
                          objectType: "Feature Request",
                          container: "container",
                          parentId: "JIRA_EN-1337",
                          mimeType: "mimeType",
                          documentId: "documentId",
                          createTime: new Date("2000-01-23T04:56:07.000Z"),
                          updateTime: new Date("2000-01-23T04:56:07.000Z"),
                          author: {
                            name: "name",
                            obfuscatedId: "<id>",
                          },
                          components: [
                            "Backend",
                            "Networking",
                          ],
                          status: "[\"Done\"]",
                          customData: {
                            "someCustomField": {},
                          },
                        },
                      },
                      text: "Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.",
                      structuredResult: {
                        document: {
                          metadata: {
                            datasource: "datasource",
                            objectType: "Feature Request",
                            container: "container",
                            parentId: "JIRA_EN-1337",
                            mimeType: "mimeType",
                            documentId: "documentId",
                            createTime: new Date("2000-01-23T04:56:07.000Z"),
                            updateTime: new Date("2000-01-23T04:56:07.000Z"),
                            author: {
                              name: "name",
                              obfuscatedId: "<id>",
                            },
                            components: [
                              "Backend",
                              "Networking",
                            ],
                            status: "[\"Done\"]",
                            customData: {
                              "someCustomField": {},
                            },
                          },
                        },
                        person: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                        customer: {
                          id: "<id>",
                          company: {
                            name: "<value>",
                            location: "New York City",
                            industry: "Finances",
                            about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                          },
                          poc: [
                            {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                          ],
                          mergedCustomers: [
                            {
                              id: "<id>",
                              company: {
                                name: "<value>",
                                location: "New York City",
                                industry: "Finances",
                                about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                              },
                              notes: "CIO is interested in trying out the product.",
                            },
                            {
                              id: "<id>",
                              company: {
                                name: "<value>",
                                location: "New York City",
                                industry: "Finances",
                                about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                              },
                              notes: "CIO is interested in trying out the product.",
                            },
                            {
                              id: "<id>",
                              company: {
                                name: "<value>",
                                location: "New York City",
                                industry: "Finances",
                                about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                              },
                              notes: "CIO is interested in trying out the product.",
                            },
                          ],
                          notes: "CIO is interested in trying out the product.",
                        },
                        team: {
                          id: "<id>",
                          name: "<value>",
                          members: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                            },
                          ],
                          customFields: [
                            {
                              label: "<value>",
                              values: [
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                            {
                              label: "<value>",
                              values: [
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                            {
                              label: "<value>",
                              values: [
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                          ],
                          datasourceProfiles: [
                            {
                              datasource: "github",
                              handle: "<value>",
                            },
                            {
                              datasource: "github",
                              handle: "<value>",
                            },
                            {
                              datasource: "github",
                              handle: "<value>",
                            },
                          ],
                        },
                        customEntity: {
                          roles: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                          ],
                        },
                        answer: {
                          id: 3,
                          docId: "ANSWERS_answer_3",
                          question: "Why is the sky blue?",
                          bodyText: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                          audienceFilters: [
                            {
                              fieldName: "type",
                              values: [
                                {
                                  value: "Spreadsheet",
                                  relationType: "EQUALS",
                                },
                                {
                                  value: "Presentation",
                                  relationType: "EQUALS",
                                },
                              ],
                            },
                          ],
                          addedRoles: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                          ],
                          removedRoles: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "VERIFIER",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "VERIFIER",
                            },
                          ],
                          likes: {
                            likedBy: [
                              {
                                user: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                              },
                              {
                                user: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                              },
                              {
                                user: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                              },
                            ],
                            likedByUser: false,
                            numLikes: 716571,
                          },
                          author: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          verification: {
                            state: "UNVERIFIED",
                            metadata: {
                              lastVerifier: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                              reminders: [
                                {
                                  assignee: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  requestor: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  remindAt: 852101,
                                },
                              ],
                              lastReminder: {
                                assignee: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                requestor: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                remindAt: 829206,
                              },
                              candidateVerifiers: [
                                {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                              ],
                            },
                          },
                          board: {
                            name: "<value>",
                            description: "pronoun whether likely likewise negative possession ape furthermore",
                            audienceFilters: [
                              {
                                fieldName: "type",
                                values: [
                                  {
                                    value: "Spreadsheet",
                                    relationType: "EQUALS",
                                  },
                                  {
                                    value: "Presentation",
                                    relationType: "EQUALS",
                                  },
                                ],
                              },
                            ],
                            id: 856490,
                            creator: {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                            updatedBy: {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                          },
                          collections: [
                            {
                              name: "<value>",
                              description: "tedious given quixotic",
                              audienceFilters: [
                                {
                                  fieldName: "type",
                                  values: [
                                    {
                                      value: "Spreadsheet",
                                      relationType: "EQUALS",
                                    },
                                    {
                                      value: "Presentation",
                                      relationType: "EQUALS",
                                    },
                                  ],
                                },
                              ],
                              id: 590805,
                              creator: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              updatedBy: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              items: [
                                {
                                  collectionId: 913703,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "COLLECTION",
                                },
                              ],
                              children: [
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                            {
                              name: "<value>",
                              description: "tedious given quixotic",
                              audienceFilters: [
                                {
                                  fieldName: "type",
                                  values: [
                                    {
                                      value: "Spreadsheet",
                                      relationType: "EQUALS",
                                    },
                                    {
                                      value: "Presentation",
                                      relationType: "EQUALS",
                                    },
                                  ],
                                },
                              ],
                              id: 590805,
                              creator: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              updatedBy: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              items: [
                                {
                                  collectionId: 913703,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "COLLECTION",
                                },
                              ],
                              children: [
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                            {
                              name: "<value>",
                              description: "tedious given quixotic",
                              audienceFilters: [
                                {
                                  fieldName: "type",
                                  values: [
                                    {
                                      value: "Spreadsheet",
                                      relationType: "EQUALS",
                                    },
                                    {
                                      value: "Presentation",
                                      relationType: "EQUALS",
                                    },
                                  ],
                                },
                              ],
                              id: 590805,
                              creator: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              updatedBy: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              items: [
                                {
                                  collectionId: 913703,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "COLLECTION",
                                },
                              ],
                              children: [
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                          ],
                          sourceDocument: {
                            metadata: {
                              datasource: "datasource",
                              objectType: "Feature Request",
                              container: "container",
                              parentId: "JIRA_EN-1337",
                              mimeType: "mimeType",
                              documentId: "documentId",
                              createTime: new Date("2000-01-23T04:56:07.000Z"),
                              updateTime: new Date("2000-01-23T04:56:07.000Z"),
                              author: {
                                name: "name",
                                obfuscatedId: "<id>",
                              },
                              components: [
                                "Backend",
                                "Networking",
                              ],
                              status: "[\"Done\"]",
                              customData: {
                                "someCustomField": {},
                              },
                            },
                          },
                        },
                        extractedQnA: {
                          questionResult: {
                            title: "title",
                            url: "https://example.com/foo/bar",
                            nativeAppUrl: "slack://foo/bar",
                            snippets: [
                              {
                                snippet: "snippet",
                                mimeType: "mimeType",
                              },
                            ],
                            mustIncludeSuggestions: {},
                          },
                        },
                        meeting: {
                          attendees: {
                            people: [
                              {
                                person: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                groupAttendees: [
                                  {
                                    person: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                  },
                                ],
                              },
                            ],
                          },
                        },
                        collection: {
                          name: "<value>",
                          description: "fortunate ha gazebo",
                          audienceFilters: [
                            {
                              fieldName: "type",
                              values: [
                                {
                                  value: "Spreadsheet",
                                  relationType: "EQUALS",
                                },
                                {
                                  value: "Presentation",
                                  relationType: "EQUALS",
                                },
                              ],
                            },
                          ],
                          id: 437915,
                          creator: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                        },
                        answerBoard: {
                          name: "<value>",
                          description: "grouper amidst pulse fowl swine that following adolescent yippee celsius",
                          audienceFilters: [
                            {
                              fieldName: "type",
                              values: [
                                {
                                  value: "Spreadsheet",
                                  relationType: "EQUALS",
                                },
                                {
                                  value: "Presentation",
                                  relationType: "EQUALS",
                                },
                              ],
                            },
                          ],
                          id: 751446,
                          creator: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                        },
                        code: {
                          repoName: "scio",
                          fileName: "README.md",
                        },
                        shortcut: {
                          inputAlias: "<value>",
                          createdBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          destinationDocument: {
                            metadata: {
                              datasource: "datasource",
                              objectType: "Feature Request",
                              container: "container",
                              parentId: "JIRA_EN-1337",
                              mimeType: "mimeType",
                              documentId: "documentId",
                              createTime: new Date("2000-01-23T04:56:07.000Z"),
                              updateTime: new Date("2000-01-23T04:56:07.000Z"),
                              author: {
                                name: "name",
                                obfuscatedId: "<id>",
                              },
                              components: [
                                "Backend",
                                "Networking",
                              ],
                              status: "[\"Done\"]",
                              customData: {
                                "someCustomField": {},
                              },
                            },
                          },
                        },
                        querySuggestions: {
                          suggestions: [
                            {
                              query: "app:github type:pull author:mortimer",
                              label: "Mortimer's PRs",
                              datasource: "github",
                            },
                          ],
                          person: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                        },
                        relatedDocuments: [
                          {
                            querySuggestion: {
                              query: "app:github type:pull author:mortimer",
                              label: "Mortimer's PRs",
                              datasource: "github",
                            },
                            results: [
                              {
                                title: "title",
                                url: "https://example.com/foo/bar",
                                nativeAppUrl: "slack://foo/bar",
                                snippets: [
                                  {
                                    snippet: "snippet",
                                    mimeType: "mimeType",
                                  },
                                ],
                                mustIncludeSuggestions: {},
                              },
                            ],
                          },
                          {
                            querySuggestion: {
                              query: "app:github type:pull author:mortimer",
                              label: "Mortimer's PRs",
                              datasource: "github",
                            },
                            results: [
                              {
                                title: "title",
                                url: "https://example.com/foo/bar",
                                nativeAppUrl: "slack://foo/bar",
                                snippets: [
                                  {
                                    snippet: "snippet",
                                    mimeType: "mimeType",
                                  },
                                ],
                                mustIncludeSuggestions: {},
                              },
                            ],
                          },
                          {
                            querySuggestion: {
                              query: "app:github type:pull author:mortimer",
                              label: "Mortimer's PRs",
                              datasource: "github",
                            },
                            results: [
                              {
                                title: "title",
                                url: "https://example.com/foo/bar",
                                nativeAppUrl: "slack://foo/bar",
                                snippets: [
                                  {
                                    snippet: "snippet",
                                    mimeType: "mimeType",
                                  },
                                ],
                                mustIncludeSuggestions: {},
                              },
                            ],
                          },
                        ],
                        relatedQuestion: {
                          ranges: [
                            {
                              startIndex: 913402,
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                            },
                            {
                              startIndex: 913402,
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                            },
                            {
                              startIndex: 913402,
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                            },
                          ],
                        },
                      },
                    },
                    {
                      link: "https://en.wikipedia.org/wiki/Diffuse_sky_radiation",
                      document: {
                        metadata: {
                          datasource: "datasource",
                          objectType: "Feature Request",
                          container: "container",
                          parentId: "JIRA_EN-1337",
                          mimeType: "mimeType",
                          documentId: "documentId",
                          createTime: new Date("2000-01-23T04:56:07.000Z"),
                          updateTime: new Date("2000-01-23T04:56:07.000Z"),
                          author: {
                            name: "name",
                            obfuscatedId: "<id>",
                          },
                          components: [
                            "Backend",
                            "Networking",
                          ],
                          status: "[\"Done\"]",
                          customData: {
                            "someCustomField": {},
                          },
                        },
                      },
                      text: "Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.",
                      structuredResult: {
                        document: {
                          metadata: {
                            datasource: "datasource",
                            objectType: "Feature Request",
                            container: "container",
                            parentId: "JIRA_EN-1337",
                            mimeType: "mimeType",
                            documentId: "documentId",
                            createTime: new Date("2000-01-23T04:56:07.000Z"),
                            updateTime: new Date("2000-01-23T04:56:07.000Z"),
                            author: {
                              name: "name",
                              obfuscatedId: "<id>",
                            },
                            components: [
                              "Backend",
                              "Networking",
                            ],
                            status: "[\"Done\"]",
                            customData: {
                              "someCustomField": {},
                            },
                          },
                        },
                        person: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                        customer: {
                          id: "<id>",
                          company: {
                            name: "<value>",
                            location: "New York City",
                            industry: "Finances",
                            about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                          },
                          poc: [
                            {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                          ],
                          mergedCustomers: [
                            {
                              id: "<id>",
                              company: {
                                name: "<value>",
                                location: "New York City",
                                industry: "Finances",
                                about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                              },
                              notes: "CIO is interested in trying out the product.",
                            },
                            {
                              id: "<id>",
                              company: {
                                name: "<value>",
                                location: "New York City",
                                industry: "Finances",
                                about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                              },
                              notes: "CIO is interested in trying out the product.",
                            },
                            {
                              id: "<id>",
                              company: {
                                name: "<value>",
                                location: "New York City",
                                industry: "Finances",
                                about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                              },
                              notes: "CIO is interested in trying out the product.",
                            },
                          ],
                          notes: "CIO is interested in trying out the product.",
                        },
                        team: {
                          id: "<id>",
                          name: "<value>",
                          members: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                            },
                          ],
                          customFields: [
                            {
                              label: "<value>",
                              values: [
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                            {
                              label: "<value>",
                              values: [
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                            {
                              label: "<value>",
                              values: [
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  person: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                          ],
                          datasourceProfiles: [
                            {
                              datasource: "github",
                              handle: "<value>",
                            },
                            {
                              datasource: "github",
                              handle: "<value>",
                            },
                            {
                              datasource: "github",
                              handle: "<value>",
                            },
                          ],
                        },
                        customEntity: {
                          roles: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                          ],
                        },
                        answer: {
                          id: 3,
                          docId: "ANSWERS_answer_3",
                          question: "Why is the sky blue?",
                          bodyText: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                          audienceFilters: [
                            {
                              fieldName: "type",
                              values: [
                                {
                                  value: "Spreadsheet",
                                  relationType: "EQUALS",
                                },
                                {
                                  value: "Presentation",
                                  relationType: "EQUALS",
                                },
                              ],
                            },
                          ],
                          addedRoles: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                          ],
                          removedRoles: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "VERIFIER",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "VERIFIER",
                            },
                          ],
                          likes: {
                            likedBy: [
                              {
                                user: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                              },
                              {
                                user: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                              },
                              {
                                user: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                              },
                            ],
                            likedByUser: false,
                            numLikes: 716571,
                          },
                          author: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          verification: {
                            state: "UNVERIFIED",
                            metadata: {
                              lastVerifier: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                              reminders: [
                                {
                                  assignee: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  requestor: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  remindAt: 852101,
                                },
                              ],
                              lastReminder: {
                                assignee: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                requestor: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                remindAt: 829206,
                              },
                              candidateVerifiers: [
                                {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                              ],
                            },
                          },
                          board: {
                            name: "<value>",
                            description: "pronoun whether likely likewise negative possession ape furthermore",
                            audienceFilters: [
                              {
                                fieldName: "type",
                                values: [
                                  {
                                    value: "Spreadsheet",
                                    relationType: "EQUALS",
                                  },
                                  {
                                    value: "Presentation",
                                    relationType: "EQUALS",
                                  },
                                ],
                              },
                            ],
                            id: 856490,
                            creator: {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                            updatedBy: {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                          },
                          collections: [
                            {
                              name: "<value>",
                              description: "tedious given quixotic",
                              audienceFilters: [
                                {
                                  fieldName: "type",
                                  values: [
                                    {
                                      value: "Spreadsheet",
                                      relationType: "EQUALS",
                                    },
                                    {
                                      value: "Presentation",
                                      relationType: "EQUALS",
                                    },
                                  ],
                                },
                              ],
                              id: 590805,
                              creator: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              updatedBy: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              items: [
                                {
                                  collectionId: 913703,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "COLLECTION",
                                },
                              ],
                              children: [
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                            {
                              name: "<value>",
                              description: "tedious given quixotic",
                              audienceFilters: [
                                {
                                  fieldName: "type",
                                  values: [
                                    {
                                      value: "Spreadsheet",
                                      relationType: "EQUALS",
                                    },
                                    {
                                      value: "Presentation",
                                      relationType: "EQUALS",
                                    },
                                  ],
                                },
                              ],
                              id: 590805,
                              creator: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              updatedBy: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              items: [
                                {
                                  collectionId: 913703,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "COLLECTION",
                                },
                              ],
                              children: [
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                            {
                              name: "<value>",
                              description: "tedious given quixotic",
                              audienceFilters: [
                                {
                                  fieldName: "type",
                                  values: [
                                    {
                                      value: "Spreadsheet",
                                      relationType: "EQUALS",
                                    },
                                    {
                                      value: "Presentation",
                                      relationType: "EQUALS",
                                    },
                                  ],
                                },
                              ],
                              id: 590805,
                              creator: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              updatedBy: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              items: [
                                {
                                  collectionId: 913703,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "COLLECTION",
                                },
                              ],
                              children: [
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "whoever vice reassuringly boo fess",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 953002,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                          ],
                          sourceDocument: {
                            metadata: {
                              datasource: "datasource",
                              objectType: "Feature Request",
                              container: "container",
                              parentId: "JIRA_EN-1337",
                              mimeType: "mimeType",
                              documentId: "documentId",
                              createTime: new Date("2000-01-23T04:56:07.000Z"),
                              updateTime: new Date("2000-01-23T04:56:07.000Z"),
                              author: {
                                name: "name",
                                obfuscatedId: "<id>",
                              },
                              components: [
                                "Backend",
                                "Networking",
                              ],
                              status: "[\"Done\"]",
                              customData: {
                                "someCustomField": {},
                              },
                            },
                          },
                        },
                        extractedQnA: {
                          questionResult: {
                            title: "title",
                            url: "https://example.com/foo/bar",
                            nativeAppUrl: "slack://foo/bar",
                            snippets: [
                              {
                                snippet: "snippet",
                                mimeType: "mimeType",
                              },
                            ],
                            mustIncludeSuggestions: {},
                          },
                        },
                        meeting: {
                          attendees: {
                            people: [
                              {
                                person: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                groupAttendees: [
                                  {
                                    person: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                  },
                                ],
                              },
                            ],
                          },
                        },
                        collection: {
                          name: "<value>",
                          description: "fortunate ha gazebo",
                          audienceFilters: [
                            {
                              fieldName: "type",
                              values: [
                                {
                                  value: "Spreadsheet",
                                  relationType: "EQUALS",
                                },
                                {
                                  value: "Presentation",
                                  relationType: "EQUALS",
                                },
                              ],
                            },
                          ],
                          id: 437915,
                          creator: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                        },
                        answerBoard: {
                          name: "<value>",
                          description: "grouper amidst pulse fowl swine that following adolescent yippee celsius",
                          audienceFilters: [
                            {
                              fieldName: "type",
                              values: [
                                {
                                  value: "Spreadsheet",
                                  relationType: "EQUALS",
                                },
                                {
                                  value: "Presentation",
                                  relationType: "EQUALS",
                                },
                              ],
                            },
                          ],
                          id: 751446,
                          creator: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                        },
                        code: {
                          repoName: "scio",
                          fileName: "README.md",
                        },
                        shortcut: {
                          inputAlias: "<value>",
                          createdBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          destinationDocument: {
                            metadata: {
                              datasource: "datasource",
                              objectType: "Feature Request",
                              container: "container",
                              parentId: "JIRA_EN-1337",
                              mimeType: "mimeType",
                              documentId: "documentId",
                              createTime: new Date("2000-01-23T04:56:07.000Z"),
                              updateTime: new Date("2000-01-23T04:56:07.000Z"),
                              author: {
                                name: "name",
                                obfuscatedId: "<id>",
                              },
                              components: [
                                "Backend",
                                "Networking",
                              ],
                              status: "[\"Done\"]",
                              customData: {
                                "someCustomField": {},
                              },
                            },
                          },
                        },
                        querySuggestions: {
                          suggestions: [
                            {
                              query: "app:github type:pull author:mortimer",
                              label: "Mortimer's PRs",
                              datasource: "github",
                            },
                          ],
                          person: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                        },
                        relatedDocuments: [
                          {
                            querySuggestion: {
                              query: "app:github type:pull author:mortimer",
                              label: "Mortimer's PRs",
                              datasource: "github",
                            },
                            results: [
                              {
                                title: "title",
                                url: "https://example.com/foo/bar",
                                nativeAppUrl: "slack://foo/bar",
                                snippets: [
                                  {
                                    snippet: "snippet",
                                    mimeType: "mimeType",
                                  },
                                ],
                                mustIncludeSuggestions: {},
                              },
                            ],
                          },
                          {
                            querySuggestion: {
                              query: "app:github type:pull author:mortimer",
                              label: "Mortimer's PRs",
                              datasource: "github",
                            },
                            results: [
                              {
                                title: "title",
                                url: "https://example.com/foo/bar",
                                nativeAppUrl: "slack://foo/bar",
                                snippets: [
                                  {
                                    snippet: "snippet",
                                    mimeType: "mimeType",
                                  },
                                ],
                                mustIncludeSuggestions: {},
                              },
                            ],
                          },
                          {
                            querySuggestion: {
                              query: "app:github type:pull author:mortimer",
                              label: "Mortimer's PRs",
                              datasource: "github",
                            },
                            results: [
                              {
                                title: "title",
                                url: "https://example.com/foo/bar",
                                nativeAppUrl: "slack://foo/bar",
                                snippets: [
                                  {
                                    snippet: "snippet",
                                    mimeType: "mimeType",
                                  },
                                ],
                                mustIncludeSuggestions: {},
                              },
                            ],
                          },
                        ],
                        relatedQuestion: {
                          ranges: [
                            {
                              startIndex: 913402,
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                            },
                            {
                              startIndex: 913402,
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                            },
                            {
                              startIndex: 913402,
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                            },
                          ],
                        },
                      },
                    },
                  ],
                },
                audienceFilters: [
                  {
                    fieldName: "type",
                    values: [
                      {
                        value: "Spreadsheet",
                        relationType: "EQUALS",
                      },
                      {
                        value: "Presentation",
                        relationType: "EQUALS",
                      },
                    ],
                  },
                ],
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/types\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Announcements.Create(ctx, components.CreateAnnouncementRequest{\n        StartTime: types.MustTimeFromString(\"2023-05-01T12:02:10.816Z\"),\n        EndTime: types.MustTimeFromString(\"2024-03-17T14:19:30.278Z\"),\n        Title: \"<value>\",\n        Body: &components.StructuredText{\n            Text: \"From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.\",\n            StructuredList: []components.StructuredTextItem{\n                components.StructuredTextItem{\n                    Link: apiclientgo.String(\"https://en.wikipedia.org/wiki/Diffuse_sky_radiation\"),\n                    Document: &components.Document{\n                        ContainerDocument: &components.Document{\n                            Metadata: &components.DocumentMetadata{\n                                Datasource: apiclientgo.String(\"datasource\"),\n                                ObjectType: apiclientgo.String(\"Feature Request\"),\n                                Container: apiclientgo.String(\"container\"),\n                                ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                MimeType: apiclientgo.String(\"mimeType\"),\n                                DocumentID: apiclientgo.String(\"documentId\"),\n                                CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                Author: &components.Person{\n                                    Name: \"name\",\n                                    ObfuscatedID: \"<id>\",\n                                },\n                                Components: []string{\n                                    \"Backend\",\n                                    \"Networking\",\n                                },\n                                Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                CustomData: map[string]components.CustomDataValue{\n                                    \"someCustomField\": components.CustomDataValue{},\n                                },\n                            },\n                        },\n                        ParentDocument: &components.Document{\n                            Metadata: &components.DocumentMetadata{\n                                Datasource: apiclientgo.String(\"datasource\"),\n                                ObjectType: apiclientgo.String(\"Feature Request\"),\n                                Container: apiclientgo.String(\"container\"),\n                                ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                MimeType: apiclientgo.String(\"mimeType\"),\n                                DocumentID: apiclientgo.String(\"documentId\"),\n                                CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                Author: &components.Person{\n                                    Name: \"name\",\n                                    ObfuscatedID: \"<id>\",\n                                },\n                                Components: []string{\n                                    \"Backend\",\n                                    \"Networking\",\n                                },\n                                Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                CustomData: map[string]components.CustomDataValue{\n                                    \"someCustomField\": components.CustomDataValue{},\n                                },\n                            },\n                        },\n                        Metadata: &components.DocumentMetadata{\n                            Datasource: apiclientgo.String(\"datasource\"),\n                            ObjectType: apiclientgo.String(\"Feature Request\"),\n                            Container: apiclientgo.String(\"container\"),\n                            ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                            MimeType: apiclientgo.String(\"mimeType\"),\n                            DocumentID: apiclientgo.String(\"documentId\"),\n                            CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                            UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                            Author: &components.Person{\n                                Name: \"name\",\n                                ObfuscatedID: \"<id>\",\n                            },\n                            Components: []string{\n                                \"Backend\",\n                                \"Networking\",\n                            },\n                            Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                            CustomData: map[string]components.CustomDataValue{\n                                \"someCustomField\": components.CustomDataValue{},\n                            },\n                        },\n                    },\n                    Text: apiclientgo.String(\"Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.\"),\n                    StructuredResult: &components.StructuredResult{\n                        Document: &components.Document{\n                            ContainerDocument: &components.Document{\n                                Metadata: &components.DocumentMetadata{\n                                    Datasource: apiclientgo.String(\"datasource\"),\n                                    ObjectType: apiclientgo.String(\"Feature Request\"),\n                                    Container: apiclientgo.String(\"container\"),\n                                    ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                    MimeType: apiclientgo.String(\"mimeType\"),\n                                    DocumentID: apiclientgo.String(\"documentId\"),\n                                    CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    Author: &components.Person{\n                                        Name: \"name\",\n                                        ObfuscatedID: \"<id>\",\n                                    },\n                                    Components: []string{\n                                        \"Backend\",\n                                        \"Networking\",\n                                    },\n                                    Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                    CustomData: map[string]components.CustomDataValue{\n                                        \"someCustomField\": components.CustomDataValue{},\n                                    },\n                                },\n                            },\n                            ParentDocument: &components.Document{\n                                Metadata: &components.DocumentMetadata{\n                                    Datasource: apiclientgo.String(\"datasource\"),\n                                    ObjectType: apiclientgo.String(\"Feature Request\"),\n                                    Container: apiclientgo.String(\"container\"),\n                                    ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                    MimeType: apiclientgo.String(\"mimeType\"),\n                                    DocumentID: apiclientgo.String(\"documentId\"),\n                                    CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    Author: &components.Person{\n                                        Name: \"name\",\n                                        ObfuscatedID: \"<id>\",\n                                    },\n                                    Components: []string{\n                                        \"Backend\",\n                                        \"Networking\",\n                                    },\n                                    Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                    CustomData: map[string]components.CustomDataValue{\n                                        \"someCustomField\": components.CustomDataValue{},\n                                    },\n                                },\n                            },\n                            Metadata: &components.DocumentMetadata{\n                                Datasource: apiclientgo.String(\"datasource\"),\n                                ObjectType: apiclientgo.String(\"Feature Request\"),\n                                Container: apiclientgo.String(\"container\"),\n                                ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                MimeType: apiclientgo.String(\"mimeType\"),\n                                DocumentID: apiclientgo.String(\"documentId\"),\n                                CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                Author: &components.Person{\n                                    Name: \"name\",\n                                    ObfuscatedID: \"<id>\",\n                                },\n                                Components: []string{\n                                    \"Backend\",\n                                    \"Networking\",\n                                },\n                                Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                CustomData: map[string]components.CustomDataValue{\n                                    \"someCustomField\": components.CustomDataValue{},\n                                },\n                            },\n                        },\n                        Person: &components.Person{\n                            Name: \"George Clooney\",\n                            ObfuscatedID: \"abc123\",\n                        },\n                        Customer: &components.Customer{\n                            ID: \"<id>\",\n                            Company: components.Company{\n                                Name: \"<value>\",\n                                Location: apiclientgo.String(\"New York City\"),\n                                Industry: apiclientgo.String(\"Finances\"),\n                                About: apiclientgo.String(\"Financial, software, data, and media company headquartered in Midtown Manhattan, New York City\"),\n                            },\n                            Poc: []components.Person{\n                                components.Person{\n                                    Name: \"George Clooney\",\n                                    ObfuscatedID: \"abc123\",\n                                },\n                            },\n                            MergedCustomers: []components.Customer{\n                                components.Customer{\n                                    ID: \"<id>\",\n                                    Company: components.Company{\n                                        Name: \"<value>\",\n                                        Location: apiclientgo.String(\"New York City\"),\n                                        Industry: apiclientgo.String(\"Finances\"),\n                                        About: apiclientgo.String(\"Financial, software, data, and media company headquartered in Midtown Manhattan, New York City\"),\n                                    },\n                                    Notes: apiclientgo.String(\"CIO is interested in trying out the product.\"),\n                                },\n                            },\n                            Notes: apiclientgo.String(\"CIO is interested in trying out the product.\"),\n                        },\n                        Team: &components.Team{\n                            ID: \"<id>\",\n                            Name: \"<value>\",\n                            Members: []components.PersonToTeamRelationship{\n                                components.PersonToTeamRelationship{\n                                    Person: components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                },\n                            },\n                            CustomFields: []components.CustomFieldData{\n                                components.CustomFieldData{\n                                    Label: \"<value>\",\n                                    Values: []components.CustomFieldValue{\n                                        components.CreateCustomFieldValueCustomFieldValuePerson(\n                                            components.CustomFieldValuePerson{\n                                                Person: &components.Person{\n                                                    Name: \"George Clooney\",\n                                                    ObfuscatedID: \"abc123\",\n                                                },\n                                            },\n                                        ),\n                                    },\n                                },\n                            },\n                            DatasourceProfiles: []components.DatasourceProfile{\n                                components.DatasourceProfile{\n                                    Datasource: \"github\",\n                                    Handle: \"<value>\",\n                                },\n                            },\n                        },\n                        CustomEntity: &components.CustomEntity{\n                            Roles: []components.UserRoleSpecification{\n                                components.UserRoleSpecification{\n                                    Person: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                    Role: components.UserRoleAnswerModerator,\n                                },\n                            },\n                        },\n                        Answer: &components.Answer{\n                            ID: 3,\n                            DocID: apiclientgo.String(\"ANSWERS_answer_3\"),\n                            Question: apiclientgo.String(\"Why is the sky blue?\"),\n                            BodyText: apiclientgo.String(\"From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.\"),\n                            AudienceFilters: []components.FacetFilter{\n                                components.FacetFilter{\n                                    FieldName: apiclientgo.String(\"type\"),\n                                    Values: []components.FacetFilterValue{\n                                        components.FacetFilterValue{\n                                            Value: apiclientgo.String(\"Spreadsheet\"),\n                                            RelationType: components.RelationTypeEquals.ToPointer(),\n                                        },\n                                        components.FacetFilterValue{\n                                            Value: apiclientgo.String(\"Presentation\"),\n                                            RelationType: components.RelationTypeEquals.ToPointer(),\n                                        },\n                                    },\n                                },\n                            },\n                            AddedRoles: []components.UserRoleSpecification{\n                                components.UserRoleSpecification{\n                                    Person: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                    Role: components.UserRoleVerifier,\n                                },\n                            },\n                            RemovedRoles: []components.UserRoleSpecification{\n                                components.UserRoleSpecification{\n                                    Person: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                    Role: components.UserRoleVerifier,\n                                },\n                            },\n                            CombinedAnswerText: &components.StructuredText{\n                                Text: \"From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.\",\n                            },\n                            Likes: &components.AnswerLikes{\n                                LikedBy: []components.AnswerLike{\n                                    components.AnswerLike{\n                                        User: &components.Person{\n                                            Name: \"George Clooney\",\n                                            ObfuscatedID: \"abc123\",\n                                        },\n                                    },\n                                },\n                                LikedByUser: false,\n                                NumLikes: 852982,\n                            },\n                            Author: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                            UpdatedBy: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                            Verification: &components.Verification{\n                                State: components.StateDeprecated,\n                                Metadata: &components.VerificationMetadata{\n                                    LastVerifier: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                    Document: &components.Document{\n                                        ContainerDocument: &components.Document{\n                                            Metadata: &components.DocumentMetadata{\n                                                Datasource: apiclientgo.String(\"datasource\"),\n                                                ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                Container: apiclientgo.String(\"container\"),\n                                                ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                MimeType: apiclientgo.String(\"mimeType\"),\n                                                DocumentID: apiclientgo.String(\"documentId\"),\n                                                CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                Author: &components.Person{\n                                                    Name: \"name\",\n                                                    ObfuscatedID: \"<id>\",\n                                                },\n                                                Components: []string{\n                                                    \"Backend\",\n                                                    \"Networking\",\n                                                },\n                                                Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                CustomData: map[string]components.CustomDataValue{\n                                                    \"someCustomField\": components.CustomDataValue{},\n                                                },\n                                            },\n                                        },\n                                        ParentDocument: &components.Document{\n                                            Metadata: &components.DocumentMetadata{\n                                                Datasource: apiclientgo.String(\"datasource\"),\n                                                ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                Container: apiclientgo.String(\"container\"),\n                                                ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                MimeType: apiclientgo.String(\"mimeType\"),\n                                                DocumentID: apiclientgo.String(\"documentId\"),\n                                                CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                Author: &components.Person{\n                                                    Name: \"name\",\n                                                    ObfuscatedID: \"<id>\",\n                                                },\n                                                Components: []string{\n                                                    \"Backend\",\n                                                    \"Networking\",\n                                                },\n                                                Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                CustomData: map[string]components.CustomDataValue{\n                                                    \"someCustomField\": components.CustomDataValue{},\n                                                },\n                                            },\n                                        },\n                                        Metadata: &components.DocumentMetadata{\n                                            Datasource: apiclientgo.String(\"datasource\"),\n                                            ObjectType: apiclientgo.String(\"Feature Request\"),\n                                            Container: apiclientgo.String(\"container\"),\n                                            ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                            MimeType: apiclientgo.String(\"mimeType\"),\n                                            DocumentID: apiclientgo.String(\"documentId\"),\n                                            CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                            UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                            Author: &components.Person{\n                                                Name: \"name\",\n                                                ObfuscatedID: \"<id>\",\n                                            },\n                                            Components: []string{\n                                                \"Backend\",\n                                                \"Networking\",\n                                            },\n                                            Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                            CustomData: map[string]components.CustomDataValue{\n                                                \"someCustomField\": components.CustomDataValue{},\n                                            },\n                                        },\n                                    },\n                                    Reminders: []components.Reminder{\n                                        components.Reminder{\n                                            Assignee: components.Person{\n                                                Name: \"George Clooney\",\n                                                ObfuscatedID: \"abc123\",\n                                            },\n                                            Requestor: &components.Person{\n                                                Name: \"George Clooney\",\n                                                ObfuscatedID: \"abc123\",\n                                            },\n                                            RemindAt: 627080,\n                                        },\n                                    },\n                                    LastReminder: &components.Reminder{\n                                        Assignee: components.Person{\n                                            Name: \"George Clooney\",\n                                            ObfuscatedID: \"abc123\",\n                                        },\n                                        Requestor: &components.Person{\n                                            Name: \"George Clooney\",\n                                            ObfuscatedID: \"abc123\",\n                                        },\n                                        RemindAt: 642543,\n                                    },\n                                    CandidateVerifiers: []components.Person{\n                                        components.Person{\n                                            Name: \"George Clooney\",\n                                            ObfuscatedID: \"abc123\",\n                                        },\n                                    },\n                                },\n                            },\n                            Board: &components.AnswerBoard{\n                                Name: \"<value>\",\n                                Description: \"actual even swift curse while puppet outlandish since urgently\",\n                                AudienceFilters: []components.FacetFilter{\n                                    components.FacetFilter{\n                                        FieldName: apiclientgo.String(\"type\"),\n                                        Values: []components.FacetFilterValue{\n                                            components.FacetFilterValue{\n                                                Value: apiclientgo.String(\"Spreadsheet\"),\n                                                RelationType: components.RelationTypeEquals.ToPointer(),\n                                            },\n                                            components.FacetFilterValue{\n                                                Value: apiclientgo.String(\"Presentation\"),\n                                                RelationType: components.RelationTypeEquals.ToPointer(),\n                                            },\n                                        },\n                                    },\n                                },\n                                ID: 812610,\n                                Creator: &components.Person{\n                                    Name: \"George Clooney\",\n                                    ObfuscatedID: \"abc123\",\n                                },\n                                UpdatedBy: &components.Person{\n                                    Name: \"George Clooney\",\n                                    ObfuscatedID: \"abc123\",\n                                },\n                            },\n                            Collections: []components.Collection{\n                                components.Collection{\n                                    Name: \"<value>\",\n                                    Description: \"minus mindless prudent better elderly\",\n                                    AudienceFilters: []components.FacetFilter{\n                                        components.FacetFilter{\n                                            FieldName: apiclientgo.String(\"type\"),\n                                            Values: []components.FacetFilterValue{\n                                                components.FacetFilterValue{\n                                                    Value: apiclientgo.String(\"Spreadsheet\"),\n                                                    RelationType: components.RelationTypeEquals.ToPointer(),\n                                                },\n                                                components.FacetFilterValue{\n                                                    Value: apiclientgo.String(\"Presentation\"),\n                                                    RelationType: components.RelationTypeEquals.ToPointer(),\n                                                },\n                                            },\n                                        },\n                                    },\n                                    ID: 953622,\n                                    Creator: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                    UpdatedBy: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                    Items: []components.CollectionItem{\n                                        components.CollectionItem{\n                                            CollectionID: 164413,\n                                            CreatedBy: &components.Person{\n                                                Name: \"George Clooney\",\n                                                ObfuscatedID: \"abc123\",\n                                            },\n                                            Document: &components.Document{\n                                                ContainerDocument: &components.Document{\n                                                    Metadata: &components.DocumentMetadata{\n                                                        Datasource: apiclientgo.String(\"datasource\"),\n                                                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                        Container: apiclientgo.String(\"container\"),\n                                                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                                        DocumentID: apiclientgo.String(\"documentId\"),\n                                                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                        Author: &components.Person{\n                                                            Name: \"name\",\n                                                            ObfuscatedID: \"<id>\",\n                                                        },\n                                                        Components: []string{\n                                                            \"Backend\",\n                                                            \"Networking\",\n                                                        },\n                                                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                        CustomData: map[string]components.CustomDataValue{\n                                                            \"someCustomField\": components.CustomDataValue{},\n                                                        },\n                                                    },\n                                                },\n                                                ParentDocument: &components.Document{\n                                                    Metadata: &components.DocumentMetadata{\n                                                        Datasource: apiclientgo.String(\"datasource\"),\n                                                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                        Container: apiclientgo.String(\"container\"),\n                                                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                                        DocumentID: apiclientgo.String(\"documentId\"),\n                                                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                        Author: &components.Person{\n                                                            Name: \"name\",\n                                                            ObfuscatedID: \"<id>\",\n                                                        },\n                                                        Components: []string{\n                                                            \"Backend\",\n                                                            \"Networking\",\n                                                        },\n                                                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                        CustomData: map[string]components.CustomDataValue{\n                                                            \"someCustomField\": components.CustomDataValue{},\n                                                        },\n                                                    },\n                                                },\n                                                Metadata: &components.DocumentMetadata{\n                                                    Datasource: apiclientgo.String(\"datasource\"),\n                                                    ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                    Container: apiclientgo.String(\"container\"),\n                                                    ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                    MimeType: apiclientgo.String(\"mimeType\"),\n                                                    DocumentID: apiclientgo.String(\"documentId\"),\n                                                    CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                    UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                    Author: &components.Person{\n                                                        Name: \"name\",\n                                                        ObfuscatedID: \"<id>\",\n                                                    },\n                                                    Components: []string{\n                                                        \"Backend\",\n                                                        \"Networking\",\n                                                    },\n                                                    Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                    CustomData: map[string]components.CustomDataValue{\n                                                        \"someCustomField\": components.CustomDataValue{},\n                                                    },\n                                                },\n                                            },\n                                            Shortcut: &components.Shortcut{\n                                                InputAlias: \"<value>\",\n                                                CreatedBy: &components.Person{\n                                                    Name: \"George Clooney\",\n                                                    ObfuscatedID: \"abc123\",\n                                                },\n                                                UpdatedBy: &components.Person{\n                                                    Name: \"George Clooney\",\n                                                    ObfuscatedID: \"abc123\",\n                                                },\n                                                DestinationDocument: &components.Document{\n                                                    ContainerDocument: &components.Document{\n                                                        Metadata: &components.DocumentMetadata{\n                                                            Datasource: apiclientgo.String(\"datasource\"),\n                                                            ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                            Container: apiclientgo.String(\"container\"),\n                                                            ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                            MimeType: apiclientgo.String(\"mimeType\"),\n                                                            DocumentID: apiclientgo.String(\"documentId\"),\n                                                            CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                            UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                            Author: &components.Person{\n                                                                Name: \"name\",\n                                                                ObfuscatedID: \"<id>\",\n                                                            },\n                                                            Components: []string{\n                                                                \"Backend\",\n                                                                \"Networking\",\n                                                            },\n                                                            Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                            CustomData: map[string]components.CustomDataValue{\n                                                                \"someCustomField\": components.CustomDataValue{},\n                                                            },\n                                                        },\n                                                    },\n                                                    ParentDocument: &components.Document{\n                                                        Metadata: &components.DocumentMetadata{\n                                                            Datasource: apiclientgo.String(\"datasource\"),\n                                                            ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                            Container: apiclientgo.String(\"container\"),\n                                                            ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                            MimeType: apiclientgo.String(\"mimeType\"),\n                                                            DocumentID: apiclientgo.String(\"documentId\"),\n                                                            CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                            UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                            Author: &components.Person{\n                                                                Name: \"name\",\n                                                                ObfuscatedID: \"<id>\",\n                                                            },\n                                                            Components: []string{\n                                                                \"Backend\",\n                                                                \"Networking\",\n                                                            },\n                                                            Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                            CustomData: map[string]components.CustomDataValue{\n                                                                \"someCustomField\": components.CustomDataValue{},\n                                                            },\n                                                        },\n                                                    },\n                                                    Metadata: &components.DocumentMetadata{\n                                                        Datasource: apiclientgo.String(\"datasource\"),\n                                                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                        Container: apiclientgo.String(\"container\"),\n                                                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                                        DocumentID: apiclientgo.String(\"documentId\"),\n                                                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                        Author: &components.Person{\n                                                            Name: \"name\",\n                                                            ObfuscatedID: \"<id>\",\n                                                        },\n                                                        Components: []string{\n                                                            \"Backend\",\n                                                            \"Networking\",\n                                                        },\n                                                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                        CustomData: map[string]components.CustomDataValue{\n                                                            \"someCustomField\": components.CustomDataValue{},\n                                                        },\n                                                    },\n                                                },\n                                            },\n                                            Collection: &components.Collection{\n                                                Name: \"<value>\",\n                                                Description: \"instead calmly after ick headline inasmuch forenenst westernize grouper amidst\",\n                                                AudienceFilters: []components.FacetFilter{\n                                                    components.FacetFilter{\n                                                        FieldName: apiclientgo.String(\"type\"),\n                                                        Values: []components.FacetFilterValue{\n                                                            components.FacetFilterValue{\n                                                                Value: apiclientgo.String(\"Spreadsheet\"),\n                                                                RelationType: components.RelationTypeEquals.ToPointer(),\n                                                            },\n                                                            components.FacetFilterValue{\n                                                                Value: apiclientgo.String(\"Presentation\"),\n                                                                RelationType: components.RelationTypeEquals.ToPointer(),\n                                                            },\n                                                        },\n                                                    },\n                                                },\n                                                ID: 345597,\n                                                Creator: &components.Person{\n                                                    Name: \"George Clooney\",\n                                                    ObfuscatedID: \"abc123\",\n                                                },\n                                                UpdatedBy: &components.Person{\n                                                    Name: \"George Clooney\",\n                                                    ObfuscatedID: \"abc123\",\n                                                },\n                                                Children: []components.Collection{\n                                                    components.Collection{\n                                                        Name: \"<value>\",\n                                                        Description: \"boulevard pale collaborate pertinent comparison drat yum rejigger nor finding\",\n                                                        AudienceFilters: []components.FacetFilter{\n                                                            components.FacetFilter{\n                                                                FieldName: apiclientgo.String(\"type\"),\n                                                                Values: []components.FacetFilterValue{\n                                                                    components.FacetFilterValue{\n                                                                        Value: apiclientgo.String(\"Spreadsheet\"),\n                                                                        RelationType: components.RelationTypeEquals.ToPointer(),\n                                                                    },\n                                                                    components.FacetFilterValue{\n                                                                        Value: apiclientgo.String(\"Presentation\"),\n                                                                        RelationType: components.RelationTypeEquals.ToPointer(),\n                                                                    },\n                                                                },\n                                                            },\n                                                        },\n                                                        ID: 654575,\n                                                        Creator: &components.Person{\n                                                            Name: \"George Clooney\",\n                                                            ObfuscatedID: \"abc123\",\n                                                        },\n                                                        UpdatedBy: &components.Person{\n                                                            Name: \"George Clooney\",\n                                                            ObfuscatedID: \"abc123\",\n                                                        },\n                                                    },\n                                                },\n                                            },\n                                            ItemType: components.CollectionItemItemTypeDocument,\n                                        },\n                                    },\n                                },\n                            },\n                            SourceDocument: &components.Document{\n                                ContainerDocument: &components.Document{\n                                    Metadata: &components.DocumentMetadata{\n                                        Datasource: apiclientgo.String(\"datasource\"),\n                                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                                        Container: apiclientgo.String(\"container\"),\n                                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                        DocumentID: apiclientgo.String(\"documentId\"),\n                                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        Author: &components.Person{\n                                            Name: \"name\",\n                                            ObfuscatedID: \"<id>\",\n                                        },\n                                        Components: []string{\n                                            \"Backend\",\n                                            \"Networking\",\n                                        },\n                                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                        CustomData: map[string]components.CustomDataValue{\n                                            \"someCustomField\": components.CustomDataValue{},\n                                        },\n                                    },\n                                },\n                                ParentDocument: &components.Document{\n                                    Metadata: &components.DocumentMetadata{\n                                        Datasource: apiclientgo.String(\"datasource\"),\n                                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                                        Container: apiclientgo.String(\"container\"),\n                                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                        DocumentID: apiclientgo.String(\"documentId\"),\n                                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        Author: &components.Person{\n                                            Name: \"name\",\n                                            ObfuscatedID: \"<id>\",\n                                        },\n                                        Components: []string{\n                                            \"Backend\",\n                                            \"Networking\",\n                                        },\n                                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                        CustomData: map[string]components.CustomDataValue{\n                                            \"someCustomField\": components.CustomDataValue{},\n                                        },\n                                    },\n                                },\n                                Metadata: &components.DocumentMetadata{\n                                    Datasource: apiclientgo.String(\"datasource\"),\n                                    ObjectType: apiclientgo.String(\"Feature Request\"),\n                                    Container: apiclientgo.String(\"container\"),\n                                    ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                    MimeType: apiclientgo.String(\"mimeType\"),\n                                    DocumentID: apiclientgo.String(\"documentId\"),\n                                    CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    Author: &components.Person{\n                                        Name: \"name\",\n                                        ObfuscatedID: \"<id>\",\n                                    },\n                                    Components: []string{\n                                        \"Backend\",\n                                        \"Networking\",\n                                    },\n                                    Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                    CustomData: map[string]components.CustomDataValue{\n                                        \"someCustomField\": components.CustomDataValue{},\n                                    },\n                                },\n                            },\n                        },\n                        ExtractedQnA: &components.ExtractedQnA{\n                            QuestionResult: &components.SearchResult{\n                                Title: apiclientgo.String(\"title\"),\n                                URL: \"https://example.com/foo/bar\",\n                                NativeAppURL: apiclientgo.String(\"slack://foo/bar\"),\n                                Snippets: []components.SearchResultSnippet{\n                                    components.SearchResultSnippet{\n                                        Snippet: \"snippet\",\n                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                    },\n                                },\n                                MustIncludeSuggestions: &components.QuerySuggestionList{\n                                    Suggestions: []components.QuerySuggestion{\n                                        components.QuerySuggestion{\n                                            Query: \"app:github type:pull author:mortimer\",\n                                            Label: apiclientgo.String(\"Mortimer's PRs\"),\n                                            Datasource: apiclientgo.String(\"github\"),\n                                        },\n                                    },\n                                    Person: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                },\n                            },\n                        },\n                        Meeting: &components.Meeting{\n                            Attendees: &components.CalendarAttendees{\n                                People: []components.CalendarAttendee{\n                                    components.CalendarAttendee{\n                                        Person: components.Person{\n                                            Name: \"George Clooney\",\n                                            ObfuscatedID: \"abc123\",\n                                        },\n                                        GroupAttendees: []components.CalendarAttendee{\n                                            components.CalendarAttendee{\n                                                Person: components.Person{\n                                                    Name: \"George Clooney\",\n                                                    ObfuscatedID: \"abc123\",\n                                                },\n                                            },\n                                        },\n                                    },\n                                },\n                            },\n                        },\n                        Collection: &components.Collection{\n                            Name: \"<value>\",\n                            Description: \"instead calmly after ick headline inasmuch forenenst westernize grouper amidst\",\n                            AudienceFilters: []components.FacetFilter{\n                                components.FacetFilter{\n                                    FieldName: apiclientgo.String(\"type\"),\n                                    Values: []components.FacetFilterValue{\n                                        components.FacetFilterValue{\n                                            Value: apiclientgo.String(\"Spreadsheet\"),\n                                            RelationType: components.RelationTypeEquals.ToPointer(),\n                                        },\n                                        components.FacetFilterValue{\n                                            Value: apiclientgo.String(\"Presentation\"),\n                                            RelationType: components.RelationTypeEquals.ToPointer(),\n                                        },\n                                    },\n                                },\n                            },\n                            ID: 345597,\n                            Creator: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                            UpdatedBy: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                            Children: []components.Collection{\n                                components.Collection{\n                                    Name: \"<value>\",\n                                    Description: \"boulevard pale collaborate pertinent comparison drat yum rejigger nor finding\",\n                                    AudienceFilters: []components.FacetFilter{\n                                        components.FacetFilter{\n                                            FieldName: apiclientgo.String(\"type\"),\n                                            Values: []components.FacetFilterValue{\n                                                components.FacetFilterValue{\n                                                    Value: apiclientgo.String(\"Spreadsheet\"),\n                                                    RelationType: components.RelationTypeEquals.ToPointer(),\n                                                },\n                                                components.FacetFilterValue{\n                                                    Value: apiclientgo.String(\"Presentation\"),\n                                                    RelationType: components.RelationTypeEquals.ToPointer(),\n                                                },\n                                            },\n                                        },\n                                    },\n                                    ID: 654575,\n                                    Creator: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                    UpdatedBy: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                },\n                            },\n                        },\n                        AnswerBoard: &components.AnswerBoard{\n                            Name: \"<value>\",\n                            Description: \"capitalise rubric championship snowplow\",\n                            AudienceFilters: []components.FacetFilter{\n                                components.FacetFilter{\n                                    FieldName: apiclientgo.String(\"type\"),\n                                    Values: []components.FacetFilterValue{\n                                        components.FacetFilterValue{\n                                            Value: apiclientgo.String(\"Spreadsheet\"),\n                                            RelationType: components.RelationTypeEquals.ToPointer(),\n                                        },\n                                        components.FacetFilterValue{\n                                            Value: apiclientgo.String(\"Presentation\"),\n                                            RelationType: components.RelationTypeEquals.ToPointer(),\n                                        },\n                                    },\n                                },\n                            },\n                            ID: 920771,\n                            Creator: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                            UpdatedBy: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                        },\n                        Code: &components.Code{\n                            RepoName: apiclientgo.String(\"scio\"),\n                            FileName: apiclientgo.String(\"README.md\"),\n                        },\n                        Shortcut: &components.Shortcut{\n                            InputAlias: \"<value>\",\n                            CreatedBy: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                            UpdatedBy: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                            DestinationDocument: &components.Document{\n                                ContainerDocument: &components.Document{\n                                    Metadata: &components.DocumentMetadata{\n                                        Datasource: apiclientgo.String(\"datasource\"),\n                                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                                        Container: apiclientgo.String(\"container\"),\n                                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                        DocumentID: apiclientgo.String(\"documentId\"),\n                                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        Author: &components.Person{\n                                            Name: \"name\",\n                                            ObfuscatedID: \"<id>\",\n                                        },\n                                        Components: []string{\n                                            \"Backend\",\n                                            \"Networking\",\n                                        },\n                                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                        CustomData: map[string]components.CustomDataValue{\n                                            \"someCustomField\": components.CustomDataValue{},\n                                        },\n                                    },\n                                },\n                                ParentDocument: &components.Document{\n                                    Metadata: &components.DocumentMetadata{\n                                        Datasource: apiclientgo.String(\"datasource\"),\n                                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                                        Container: apiclientgo.String(\"container\"),\n                                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                        DocumentID: apiclientgo.String(\"documentId\"),\n                                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        Author: &components.Person{\n                                            Name: \"name\",\n                                            ObfuscatedID: \"<id>\",\n                                        },\n                                        Components: []string{\n                                            \"Backend\",\n                                            \"Networking\",\n                                        },\n                                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                        CustomData: map[string]components.CustomDataValue{\n                                            \"someCustomField\": components.CustomDataValue{},\n                                        },\n                                    },\n                                },\n                                Metadata: &components.DocumentMetadata{\n                                    Datasource: apiclientgo.String(\"datasource\"),\n                                    ObjectType: apiclientgo.String(\"Feature Request\"),\n                                    Container: apiclientgo.String(\"container\"),\n                                    ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                    MimeType: apiclientgo.String(\"mimeType\"),\n                                    DocumentID: apiclientgo.String(\"documentId\"),\n                                    CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    Author: &components.Person{\n                                        Name: \"name\",\n                                        ObfuscatedID: \"<id>\",\n                                    },\n                                    Components: []string{\n                                        \"Backend\",\n                                        \"Networking\",\n                                    },\n                                    Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                    CustomData: map[string]components.CustomDataValue{\n                                        \"someCustomField\": components.CustomDataValue{},\n                                    },\n                                },\n                            },\n                        },\n                        QuerySuggestions: &components.QuerySuggestionList{\n                            Person: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                        },\n                        RelatedDocuments: []components.RelatedDocuments{\n                            components.RelatedDocuments{\n                                QuerySuggestion: &components.QuerySuggestion{\n                                    Query: \"app:github type:pull author:mortimer\",\n                                    Label: apiclientgo.String(\"Mortimer's PRs\"),\n                                    Datasource: apiclientgo.String(\"github\"),\n                                },\n                                Results: []components.SearchResult{\n                                    components.SearchResult{\n                                        Title: apiclientgo.String(\"title\"),\n                                        URL: \"https://example.com/foo/bar\",\n                                        NativeAppURL: apiclientgo.String(\"slack://foo/bar\"),\n                                        Snippets: []components.SearchResultSnippet{\n                                            components.SearchResultSnippet{\n                                                Snippet: \"snippet\",\n                                                MimeType: apiclientgo.String(\"mimeType\"),\n                                            },\n                                        },\n                                        MustIncludeSuggestions: &components.QuerySuggestionList{\n                                            Person: &components.Person{\n                                                Name: \"George Clooney\",\n                                                ObfuscatedID: \"abc123\",\n                                            },\n                                        },\n                                    },\n                                },\n                            },\n                        },\n                        RelatedQuestion: &components.RelatedQuestion{\n                            Ranges: []components.TextRange{\n                                components.TextRange{\n                                    StartIndex: 254608,\n                                    Document: &components.Document{\n                                        ContainerDocument: &components.Document{\n                                            Metadata: &components.DocumentMetadata{\n                                                Datasource: apiclientgo.String(\"datasource\"),\n                                                ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                Container: apiclientgo.String(\"container\"),\n                                                ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                MimeType: apiclientgo.String(\"mimeType\"),\n                                                DocumentID: apiclientgo.String(\"documentId\"),\n                                                CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                Author: &components.Person{\n                                                    Name: \"name\",\n                                                    ObfuscatedID: \"<id>\",\n                                                },\n                                                Components: []string{\n                                                    \"Backend\",\n                                                    \"Networking\",\n                                                },\n                                                Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                CustomData: map[string]components.CustomDataValue{\n                                                    \"someCustomField\": components.CustomDataValue{},\n                                                },\n                                            },\n                                        },\n                                        ParentDocument: &components.Document{\n                                            Metadata: &components.DocumentMetadata{\n                                                Datasource: apiclientgo.String(\"datasource\"),\n                                                ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                Container: apiclientgo.String(\"container\"),\n                                                ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                MimeType: apiclientgo.String(\"mimeType\"),\n                                                DocumentID: apiclientgo.String(\"documentId\"),\n                                                CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                Author: &components.Person{\n                                                    Name: \"name\",\n                                                    ObfuscatedID: \"<id>\",\n                                                },\n                                                Components: []string{\n                                                    \"Backend\",\n                                                    \"Networking\",\n                                                },\n                                                Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                CustomData: map[string]components.CustomDataValue{\n                                                    \"someCustomField\": components.CustomDataValue{},\n                                                },\n                                            },\n                                        },\n                                        Metadata: &components.DocumentMetadata{\n                                            Datasource: apiclientgo.String(\"datasource\"),\n                                            ObjectType: apiclientgo.String(\"Feature Request\"),\n                                            Container: apiclientgo.String(\"container\"),\n                                            ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                            MimeType: apiclientgo.String(\"mimeType\"),\n                                            DocumentID: apiclientgo.String(\"documentId\"),\n                                            CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                            UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                            Author: &components.Person{\n                                                Name: \"name\",\n                                                ObfuscatedID: \"<id>\",\n                                            },\n                                            Components: []string{\n                                                \"Backend\",\n                                                \"Networking\",\n                                            },\n                                            Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                            CustomData: map[string]components.CustomDataValue{\n                                                \"someCustomField\": components.CustomDataValue{},\n                                            },\n                                        },\n                                    },\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n        AudienceFilters: []components.FacetFilter{\n            components.FacetFilter{\n                FieldName: apiclientgo.String(\"type\"),\n                Values: []components.FacetFilterValue{\n                    components.FacetFilterValue{\n                        Value: apiclientgo.String(\"Spreadsheet\"),\n                        RelationType: components.RelationTypeEquals.ToPointer(),\n                    },\n                    components.FacetFilterValue{\n                        Value: apiclientgo.String(\"Presentation\"),\n                        RelationType: components.RelationTypeEquals.ToPointer(),\n                    },\n                },\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.Announcement != nil {\n        // handle response\n    }\n}"
        - lang: java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.time.OffsetDateTime;
            import java.util.List;
            import java.util.Map;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.*;
            import org.openapis.openapi.models.operations.CreateannouncementResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken("<YOUR_BEARER_TOKEN_HERE>")
                            .instance("<YOUR_GLEAN_INSTANCE_HERE>")
                        .build();

                    CreateAnnouncementRequest req = CreateAnnouncementRequest.builder()
                            .startTime(OffsetDateTime.parse("2023-05-01T12:02:10.816Z"))
                            .endTime(OffsetDateTime.parse("2024-03-17T14:19:30.278Z"))
                            .title("<value>")
                            .body(StructuredText.builder()
                                .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                .structuredList(List.of(
                                    StructuredTextItem.builder()
                                        .link("https://en.wikipedia.org/wiki/Diffuse_sky_radiation")
                                        .document(Document.builder()
                                            .containerDocument(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .parentDocument(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .metadata(DocumentMetadata.builder()
                                                .datasource("datasource")
                                                .objectType("Feature Request")
                                                .container("container")
                                                .parentId("JIRA_EN-1337")
                                                .mimeType("mimeType")
                                                .documentId("documentId")
                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                .author(Person.builder()
                                                    .name("name")
                                                    .obfuscatedId("<id>")
                                                    .build())
                                                .components(List.of(
                                                    "Backend",
                                                    "Networking"))
                                                .status("[\"Done\"]")
                                                .customData(Map.ofEntries(
                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                        .build())))
                                                .build())
                                            .build())
                                        .text("Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.")
                                        .structuredResult(StructuredResult.builder()
                                            .document(Document.builder()
                                                .containerDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .parentDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .poc(List.of(
                                                    Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build()))
                                                .mergedCustomers(List.of(
                                                    Customer.builder()
                                                        .id("<id>")
                                                        .company(Company.builder()
                                                            .name("<value>")
                                                            .location("New York City")
                                                            .industry("Finances")
                                                            .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                            .build())
                                                        .notes("CIO is interested in trying out the product.")
                                                        .build()))
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .members(List.of(
                                                    PersonToTeamRelationship.builder()
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .customFields(List.of(
                                                    CustomFieldData.builder()
                                                        .label("<value>")
                                                        .values(List.of(
                                                            CustomFieldValue.of(CustomFieldValuePerson.builder()
                                                                .person(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build())))
                                                        .build()))
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .roles(List.of(
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.ANSWER_MODERATOR)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .addedRoles(List.of(
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.VERIFIER)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .removedRoles(List.of(
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.VERIFIER)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of(
                                                        AnswerLike.builder()
                                                            .user(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build()))
                                                    .likedByUser(false)
                                                    .numLikes(852982L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.DEPRECATED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .containerDocument(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .parentDocument(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .reminders(List.of(
                                                            Reminder.builder()
                                                                .assignee(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .remindAt(627080L)
                                                                .requestor(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build()))
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(642543L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .candidateVerifiers(List.of(
                                                            Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("actual even swift curse while puppet outlandish since urgently")
                                                    .id(812610L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .collections(List.of(
                                                    Collection.builder()
                                                        .name("<value>")
                                                        .description("minus mindless prudent better elderly")
                                                        .id(953622L)
                                                        .audienceFilters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .creator(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .updatedBy(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .items(List.of(
                                                            CollectionItem.builder()
                                                                .collectionId(164413L)
                                                                .itemType(CollectionItemItemType.DOCUMENT)
                                                                .createdBy(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .document(Document.builder()
                                                                    .containerDocument(Document.builder()
                                                                        .metadata(DocumentMetadata.builder()
                                                                            .datasource("datasource")
                                                                            .objectType("Feature Request")
                                                                            .container("container")
                                                                            .parentId("JIRA_EN-1337")
                                                                            .mimeType("mimeType")
                                                                            .documentId("documentId")
                                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .author(Person.builder()
                                                                                .name("name")
                                                                                .obfuscatedId("<id>")
                                                                                .build())
                                                                            .components(List.of(
                                                                                "Backend",
                                                                                "Networking"))
                                                                            .status("[\"Done\"]")
                                                                            .customData(Map.ofEntries(
                                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                                    .build())))
                                                                            .build())
                                                                        .build())
                                                                    .parentDocument(Document.builder()
                                                                        .metadata(DocumentMetadata.builder()
                                                                            .datasource("datasource")
                                                                            .objectType("Feature Request")
                                                                            .container("container")
                                                                            .parentId("JIRA_EN-1337")
                                                                            .mimeType("mimeType")
                                                                            .documentId("documentId")
                                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .author(Person.builder()
                                                                                .name("name")
                                                                                .obfuscatedId("<id>")
                                                                                .build())
                                                                            .components(List.of(
                                                                                "Backend",
                                                                                "Networking"))
                                                                            .status("[\"Done\"]")
                                                                            .customData(Map.ofEntries(
                                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                                    .build())))
                                                                            .build())
                                                                        .build())
                                                                    .metadata(DocumentMetadata.builder()
                                                                        .datasource("datasource")
                                                                        .objectType("Feature Request")
                                                                        .container("container")
                                                                        .parentId("JIRA_EN-1337")
                                                                        .mimeType("mimeType")
                                                                        .documentId("documentId")
                                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                        .author(Person.builder()
                                                                            .name("name")
                                                                            .obfuscatedId("<id>")
                                                                            .build())
                                                                        .components(List.of(
                                                                            "Backend",
                                                                            "Networking"))
                                                                        .status("[\"Done\"]")
                                                                        .customData(Map.ofEntries(
                                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                                .build())))
                                                                        .build())
                                                                    .build())
                                                                .shortcut(Shortcut.builder()
                                                                    .inputAlias("<value>")
                                                                    .createdBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .updatedBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .destinationDocument(Document.builder()
                                                                        .containerDocument(Document.builder()
                                                                            .metadata(DocumentMetadata.builder()
                                                                                .datasource("datasource")
                                                                                .objectType("Feature Request")
                                                                                .container("container")
                                                                                .parentId("JIRA_EN-1337")
                                                                                .mimeType("mimeType")
                                                                                .documentId("documentId")
                                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                                .author(Person.builder()
                                                                                    .name("name")
                                                                                    .obfuscatedId("<id>")
                                                                                    .build())
                                                                                .components(List.of(
                                                                                    "Backend",
                                                                                    "Networking"))
                                                                                .status("[\"Done\"]")
                                                                                .customData(Map.ofEntries(
                                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                                        .build())))
                                                                                .build())
                                                                            .build())
                                                                        .parentDocument(Document.builder()
                                                                            .metadata(DocumentMetadata.builder()
                                                                                .datasource("datasource")
                                                                                .objectType("Feature Request")
                                                                                .container("container")
                                                                                .parentId("JIRA_EN-1337")
                                                                                .mimeType("mimeType")
                                                                                .documentId("documentId")
                                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                                .author(Person.builder()
                                                                                    .name("name")
                                                                                    .obfuscatedId("<id>")
                                                                                    .build())
                                                                                .components(List.of(
                                                                                    "Backend",
                                                                                    "Networking"))
                                                                                .status("[\"Done\"]")
                                                                                .customData(Map.ofEntries(
                                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                                        .build())))
                                                                                .build())
                                                                            .build())
                                                                        .metadata(DocumentMetadata.builder()
                                                                            .datasource("datasource")
                                                                            .objectType("Feature Request")
                                                                            .container("container")
                                                                            .parentId("JIRA_EN-1337")
                                                                            .mimeType("mimeType")
                                                                            .documentId("documentId")
                                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .author(Person.builder()
                                                                                .name("name")
                                                                                .obfuscatedId("<id>")
                                                                                .build())
                                                                            .components(List.of(
                                                                                "Backend",
                                                                                "Networking"))
                                                                            .status("[\"Done\"]")
                                                                            .customData(Map.ofEntries(
                                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                                    .build())))
                                                                            .build())
                                                                        .build())
                                                                    .build())
                                                                .collection(Collection.builder()
                                                                    .name("<value>")
                                                                    .description("instead calmly after ick headline inasmuch forenenst westernize grouper amidst")
                                                                    .id(345597L)
                                                                    .audienceFilters(List.of(
                                                                        FacetFilter.builder()
                                                                            .fieldName("type")
                                                                            .values(List.of(
                                                                                FacetFilterValue.builder()
                                                                                    .value("Spreadsheet")
                                                                                    .relationType(RelationType.EQUALS)
                                                                                    .build(),
                                                                                FacetFilterValue.builder()
                                                                                    .value("Presentation")
                                                                                    .relationType(RelationType.EQUALS)
                                                                                    .build()))
                                                                            .build()))
                                                                    .creator(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .updatedBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .children(List.of(
                                                                        Collection.builder()
                                                                            .name("<value>")
                                                                            .description("boulevard pale collaborate pertinent comparison drat yum rejigger nor finding")
                                                                            .id(654575L)
                                                                            .audienceFilters(List.of(
                                                                                FacetFilter.builder()
                                                                                    .fieldName("type")
                                                                                    .values(List.of(
                                                                                        FacetFilterValue.builder()
                                                                                            .value("Spreadsheet")
                                                                                            .relationType(RelationType.EQUALS)
                                                                                            .build(),
                                                                                        FacetFilterValue.builder()
                                                                                            .value("Presentation")
                                                                                            .relationType(RelationType.EQUALS)
                                                                                            .build()))
                                                                                    .build()))
                                                                            .creator(Person.builder()
                                                                                .name("George Clooney")
                                                                                .obfuscatedId("abc123")
                                                                                .build())
                                                                            .updatedBy(Person.builder()
                                                                                .name("George Clooney")
                                                                                .obfuscatedId("abc123")
                                                                                .build())
                                                                            .build()))
                                                                    .build())
                                                                .build()))
                                                        .build()))
                                                .sourceDocument(Document.builder()
                                                    .containerDocument(Document.builder()
                                                        .metadata(DocumentMetadata.builder()
                                                            .datasource("datasource")
                                                            .objectType("Feature Request")
                                                            .container("container")
                                                            .parentId("JIRA_EN-1337")
                                                            .mimeType("mimeType")
                                                            .documentId("documentId")
                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .author(Person.builder()
                                                                .name("name")
                                                                .obfuscatedId("<id>")
                                                                .build())
                                                            .components(List.of(
                                                                "Backend",
                                                                "Networking"))
                                                            .status("[\"Done\"]")
                                                            .customData(Map.ofEntries(
                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                    .build())))
                                                            .build())
                                                        .build())
                                                    .parentDocument(Document.builder()
                                                        .metadata(DocumentMetadata.builder()
                                                            .datasource("datasource")
                                                            .objectType("Feature Request")
                                                            .container("container")
                                                            .parentId("JIRA_EN-1337")
                                                            .mimeType("mimeType")
                                                            .documentId("documentId")
                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .author(Person.builder()
                                                                .name("name")
                                                                .obfuscatedId("<id>")
                                                                .build())
                                                            .components(List.of(
                                                                "Backend",
                                                                "Networking"))
                                                            .status("[\"Done\"]")
                                                            .customData(Map.ofEntries(
                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                    .build())))
                                                            .build())
                                                        .build())
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .snippets(List.of(
                                                        SearchResultSnippet.builder()
                                                            .snippet("snippet")
                                                            .mimeType("mimeType")
                                                            .build()))
                                                    .mustIncludeSuggestions(QuerySuggestionList.builder()
                                                        .suggestions(List.of(
                                                            QuerySuggestion.builder()
                                                                .query("app:github type:pull author:mortimer")
                                                                .label("Mortimer's PRs")
                                                                .datasource("github")
                                                                .build()))
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build())
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .people(List.of(
                                                        CalendarAttendee.builder()
                                                            .person(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .groupAttendees(List.of(
                                                                CalendarAttendee.builder()
                                                                    .person(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .build()))
                                                            .build()))
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("instead calmly after ick headline inasmuch forenenst westernize grouper amidst")
                                                .id(345597L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .children(List.of(
                                                    Collection.builder()
                                                        .name("<value>")
                                                        .description("boulevard pale collaborate pertinent comparison drat yum rejigger nor finding")
                                                        .id(654575L)
                                                        .audienceFilters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .creator(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .updatedBy(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("capitalise rubric championship snowplow")
                                                .id(920771L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .containerDocument(Document.builder()
                                                        .metadata(DocumentMetadata.builder()
                                                            .datasource("datasource")
                                                            .objectType("Feature Request")
                                                            .container("container")
                                                            .parentId("JIRA_EN-1337")
                                                            .mimeType("mimeType")
                                                            .documentId("documentId")
                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .author(Person.builder()
                                                                .name("name")
                                                                .obfuscatedId("<id>")
                                                                .build())
                                                            .components(List.of(
                                                                "Backend",
                                                                "Networking"))
                                                            .status("[\"Done\"]")
                                                            .customData(Map.ofEntries(
                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                    .build())))
                                                            .build())
                                                        .build())
                                                    .parentDocument(Document.builder()
                                                        .metadata(DocumentMetadata.builder()
                                                            .datasource("datasource")
                                                            .objectType("Feature Request")
                                                            .container("container")
                                                            .parentId("JIRA_EN-1337")
                                                            .mimeType("mimeType")
                                                            .documentId("documentId")
                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .author(Person.builder()
                                                                .name("name")
                                                                .obfuscatedId("<id>")
                                                                .build())
                                                            .components(List.of(
                                                                "Backend",
                                                                "Networking"))
                                                            .status("[\"Done\"]")
                                                            .customData(Map.ofEntries(
                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                    .build())))
                                                            .build())
                                                        .build())
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedDocuments(List.of(
                                                RelatedDocuments.builder()
                                                    .querySuggestion(QuerySuggestion.builder()
                                                        .query("app:github type:pull author:mortimer")
                                                        .label("Mortimer's PRs")
                                                        .datasource("github")
                                                        .build())
                                                    .results(List.of(
                                                        SearchResult.builder()
                                                            .url("https://example.com/foo/bar")
                                                            .title("title")
                                                            .nativeAppUrl("slack://foo/bar")
                                                            .snippets(List.of(
                                                                SearchResultSnippet.builder()
                                                                    .snippet("snippet")
                                                                    .mimeType("mimeType")
                                                                    .build()))
                                                            .mustIncludeSuggestions(QuerySuggestionList.builder()
                                                                .person(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build())
                                                            .build()))
                                                    .build()))
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .ranges(List.of(
                                                    TextRange.builder()
                                                        .startIndex(254608L)
                                                        .document(Document.builder()
                                                            .containerDocument(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .parentDocument(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .build()))
                                                .build())
                                            .build())
                                        .build()))
                                .build())
                            .audienceFilters(List.of(
                                FacetFilter.builder()
                                    .fieldName("type")
                                    .values(List.of(
                                        FacetFilterValue.builder()
                                            .value("Spreadsheet")
                                            .relationType(RelationType.EQUALS)
                                            .build(),
                                        FacetFilterValue.builder()
                                            .value("Presentation")
                                            .relationType(RelationType.EQUALS)
                                            .build()))
                                    .build()))
                            .build();

                    CreateannouncementResponse res = sdk.client().announcements().create()
                            .request(req)
                            .call();

                    if (res.announcement().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/deleteannouncement:
    post:
      tags:
        - Announcements
      summary: Delete Announcement
      description: Delete an existing user-generated announcement.
      operationId: deleteannouncement
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAnnouncementRequest'
        description: Delete announcement request
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: delete
      x-speakeasy-group: client.announcements
      x-codeSamples:
        - lang: python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as g_client:

                g_client.client.announcements.delete(id=458809)

                # Use the SDK ...
        - lang: typescript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              await glean.client.announcements.delete({
                id: 458809,
              });


            }

            run();
        - lang: go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Announcements.Delete(ctx, components.DeleteAnnouncementRequest{\n        ID: 458809,\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"
        - lang: java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.DeleteAnnouncementRequest;
            import org.openapis.openapi.models.operations.DeleteannouncementResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken("<YOUR_BEARER_TOKEN_HERE>")
                            .instance("<YOUR_GLEAN_INSTANCE_HERE>")
                        .build();

                    DeleteAnnouncementRequest req = DeleteAnnouncementRequest.builder()
                            .id(458809L)
                            .build();

                    DeleteannouncementResponse res = sdk.client().announcements().delete()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  /rest/api/v1/updateannouncement:
    post:
      tags:
        - Announcements
      summary: Update Announcement
      description: Update a textual announcement visible to some set of users based on department and location.
      operationId: updateannouncement
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAnnouncementRequest'
        description: Announcement content. Id need to be specified for the announcement.
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: update
      x-speakeasy-group: client.announcements
      x-codeSamples:
        - lang: python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean, models
            from glean.api_client.utils import parse_datetime
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as g_client:

                res = g_client.client.announcements.update(start_time=parse_datetime("2023-10-24T01:53:24.440Z"), end_time=parse_datetime("2024-10-30T07:24:12.087Z"), title="<value>", id=210913, body={
                    "text": "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                    "structured_list": [
                        models.StructuredTextItem(
                            link="https://en.wikipedia.org/wiki/Diffuse_sky_radiation",
                            document=models.Document(
                                container_document=models.Document(
                                    metadata=models.DocumentMetadata(
                                        datasource="datasource",
                                        object_type="Feature Request",
                                        container="container",
                                        parent_id="JIRA_EN-1337",
                                        mime_type="mimeType",
                                        document_id="documentId",
                                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                        author=models.Person(
                                            name="name",
                                            obfuscated_id="<id>",
                                        ),
                                        components=[
                                            "Backend",
                                            "Networking",
                                        ],
                                        status="[\"Done\"]",
                                        custom_data={
                                            "someCustomField": models.CustomDataValue(),
                                        },
                                    ),
                                ),
                                parent_document=models.Document(
                                    metadata=models.DocumentMetadata(
                                        datasource="datasource",
                                        object_type="Feature Request",
                                        container="container",
                                        parent_id="JIRA_EN-1337",
                                        mime_type="mimeType",
                                        document_id="documentId",
                                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                        author=models.Person(
                                            name="name",
                                            obfuscated_id="<id>",
                                        ),
                                        components=[
                                            "Backend",
                                            "Networking",
                                        ],
                                        status="[\"Done\"]",
                                        custom_data={
                                            "someCustomField": models.CustomDataValue(),
                                        },
                                    ),
                                ),
                                metadata=models.DocumentMetadata(
                                    datasource="datasource",
                                    object_type="Feature Request",
                                    container="container",
                                    parent_id="JIRA_EN-1337",
                                    mime_type="mimeType",
                                    document_id="documentId",
                                    create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                    update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                    author=models.Person(
                                        name="name",
                                        obfuscated_id="<id>",
                                    ),
                                    components=[
                                        "Backend",
                                        "Networking",
                                    ],
                                    status="[\"Done\"]",
                                    custom_data={
                                        "someCustomField": models.CustomDataValue(),
                                    },
                                ),
                            ),
                            text="Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.",
                            structured_result=models.StructuredResult(
                                document=models.Document(
                                    container_document=models.Document(
                                        metadata=models.DocumentMetadata(
                                            datasource="datasource",
                                            object_type="Feature Request",
                                            container="container",
                                            parent_id="JIRA_EN-1337",
                                            mime_type="mimeType",
                                            document_id="documentId",
                                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            author=models.Person(
                                                name="name",
                                                obfuscated_id="<id>",
                                            ),
                                            components=[
                                                "Backend",
                                                "Networking",
                                            ],
                                            status="[\"Done\"]",
                                            custom_data={
                                                "someCustomField": models.CustomDataValue(),
                                            },
                                        ),
                                    ),
                                    parent_document=models.Document(
                                        metadata=models.DocumentMetadata(
                                            datasource="datasource",
                                            object_type="Feature Request",
                                            container="container",
                                            parent_id="JIRA_EN-1337",
                                            mime_type="mimeType",
                                            document_id="documentId",
                                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            author=models.Person(
                                                name="name",
                                                obfuscated_id="<id>",
                                            ),
                                            components=[
                                                "Backend",
                                                "Networking",
                                            ],
                                            status="[\"Done\"]",
                                            custom_data={
                                                "someCustomField": models.CustomDataValue(),
                                            },
                                        ),
                                    ),
                                    metadata=models.DocumentMetadata(
                                        datasource="datasource",
                                        object_type="Feature Request",
                                        container="container",
                                        parent_id="JIRA_EN-1337",
                                        mime_type="mimeType",
                                        document_id="documentId",
                                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                        author=models.Person(
                                            name="name",
                                            obfuscated_id="<id>",
                                        ),
                                        components=[
                                            "Backend",
                                            "Networking",
                                        ],
                                        status="[\"Done\"]",
                                        custom_data={
                                            "someCustomField": models.CustomDataValue(),
                                        },
                                    ),
                                ),
                                person=models.Person(
                                    name="George Clooney",
                                    obfuscated_id="abc123",
                                ),
                                customer=models.Customer(
                                    id="<id>",
                                    company=models.Company(
                                        name="<value>",
                                        location="New York City",
                                        industry="Finances",
                                        about="Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                                    ),
                                    poc=[
                                        models.Person(
                                            name="George Clooney",
                                            obfuscated_id="abc123",
                                        ),
                                    ],
                                    merged_customers=[
                                        models.Customer(
                                            id="<id>",
                                            company=models.Company(
                                                name="<value>",
                                                location="New York City",
                                                industry="Finances",
                                                about="Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                                            ),
                                            notes="CIO is interested in trying out the product.",
                                        ),
                                    ],
                                    notes="CIO is interested in trying out the product.",
                                ),
                                team=models.Team(
                                    id="<id>",
                                    name="<value>",
                                    members=[
                                        models.PersonToTeamRelationship(
                                            person=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                        ),
                                    ],
                                    custom_fields=[
                                        models.CustomFieldData(
                                            label="<value>",
                                            values=[
                                                models.CustomFieldValuePerson(
                                                    person=models.Person(
                                                        name="George Clooney",
                                                        obfuscated_id="abc123",
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ],
                                    datasource_profiles=[
                                        models.DatasourceProfile(
                                            datasource="github",
                                            handle="<value>",
                                        ),
                                    ],
                                ),
                                custom_entity=models.CustomEntity(
                                    roles=[
                                        models.UserRoleSpecification(
                                            person=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                            role=models.UserRole.VIEWER,
                                        ),
                                    ],
                                ),
                                answer=models.Answer(
                                    id=3,
                                    doc_id="ANSWERS_answer_3",
                                    question="Why is the sky blue?",
                                    body_text="From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                                    audience_filters=[
                                        models.FacetFilter(
                                            field_name="type",
                                            values=[
                                                models.FacetFilterValue(
                                                    value="Spreadsheet",
                                                    relation_type=models.RelationType.EQUALS,
                                                ),
                                                models.FacetFilterValue(
                                                    value="Presentation",
                                                    relation_type=models.RelationType.EQUALS,
                                                ),
                                            ],
                                        ),
                                    ],
                                    added_roles=[
                                        models.UserRoleSpecification(
                                            person=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                            role=models.UserRole.ANSWER_MODERATOR,
                                        ),
                                    ],
                                    removed_roles=[
                                        models.UserRoleSpecification(
                                            person=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                            role=models.UserRole.OWNER,
                                        ),
                                    ],
                                    combined_answer_text=models.StructuredText(
                                        text="From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                                    ),
                                    likes=models.AnswerLikes(
                                        liked_by=[
                                            models.AnswerLike(
                                                user=models.Person(
                                                    name="George Clooney",
                                                    obfuscated_id="abc123",
                                                ),
                                            ),
                                        ],
                                        liked_by_user=True,
                                        num_likes=768439,
                                    ),
                                    author=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                    updated_by=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                    verification=models.Verification(
                                        state=models.State.VERIFIED,
                                        metadata=models.VerificationMetadata(
                                            last_verifier=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                            document=models.Document(
                                                container_document=models.Document(
                                                    metadata=models.DocumentMetadata(
                                                        datasource="datasource",
                                                        object_type="Feature Request",
                                                        container="container",
                                                        parent_id="JIRA_EN-1337",
                                                        mime_type="mimeType",
                                                        document_id="documentId",
                                                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        author=models.Person(
                                                            name="name",
                                                            obfuscated_id="<id>",
                                                        ),
                                                        components=[
                                                            "Backend",
                                                            "Networking",
                                                        ],
                                                        status="[\"Done\"]",
                                                        custom_data={
                                                            "someCustomField": models.CustomDataValue(),
                                                        },
                                                    ),
                                                ),
                                                parent_document=models.Document(
                                                    metadata=models.DocumentMetadata(
                                                        datasource="datasource",
                                                        object_type="Feature Request",
                                                        container="container",
                                                        parent_id="JIRA_EN-1337",
                                                        mime_type="mimeType",
                                                        document_id="documentId",
                                                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        author=models.Person(
                                                            name="name",
                                                            obfuscated_id="<id>",
                                                        ),
                                                        components=[
                                                            "Backend",
                                                            "Networking",
                                                        ],
                                                        status="[\"Done\"]",
                                                        custom_data={
                                                            "someCustomField": models.CustomDataValue(),
                                                        },
                                                    ),
                                                ),
                                                metadata=models.DocumentMetadata(
                                                    datasource="datasource",
                                                    object_type="Feature Request",
                                                    container="container",
                                                    parent_id="JIRA_EN-1337",
                                                    mime_type="mimeType",
                                                    document_id="documentId",
                                                    create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                    update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                    author=models.Person(
                                                        name="name",
                                                        obfuscated_id="<id>",
                                                    ),
                                                    components=[
                                                        "Backend",
                                                        "Networking",
                                                    ],
                                                    status="[\"Done\"]",
                                                    custom_data={
                                                        "someCustomField": models.CustomDataValue(),
                                                    },
                                                ),
                                            ),
                                            reminders=[
                                                models.Reminder(
                                                    assignee=models.Person(
                                                        name="George Clooney",
                                                        obfuscated_id="abc123",
                                                    ),
                                                    requestor=models.Person(
                                                        name="George Clooney",
                                                        obfuscated_id="abc123",
                                                    ),
                                                    remind_at=69479,
                                                ),
                                            ],
                                            last_reminder=models.Reminder(
                                                assignee=models.Person(
                                                    name="George Clooney",
                                                    obfuscated_id="abc123",
                                                ),
                                                requestor=models.Person(
                                                    name="George Clooney",
                                                    obfuscated_id="abc123",
                                                ),
                                                remind_at=877321,
                                            ),
                                            candidate_verifiers=[
                                                models.Person(
                                                    name="George Clooney",
                                                    obfuscated_id="abc123",
                                                ),
                                            ],
                                        ),
                                    ),
                                    board=models.AnswerBoard(
                                        name="<value>",
                                        description="litter anenst happy probable birdcage till",
                                        audience_filters=[
                                            models.FacetFilter(
                                                field_name="type",
                                                values=[
                                                    models.FacetFilterValue(
                                                        value="Spreadsheet",
                                                        relation_type=models.RelationType.EQUALS,
                                                    ),
                                                    models.FacetFilterValue(
                                                        value="Presentation",
                                                        relation_type=models.RelationType.EQUALS,
                                                    ),
                                                ],
                                            ),
                                        ],
                                        id=34422,
                                        creator=models.Person(
                                            name="George Clooney",
                                            obfuscated_id="abc123",
                                        ),
                                        updated_by=models.Person(
                                            name="George Clooney",
                                            obfuscated_id="abc123",
                                        ),
                                    ),
                                    collections=[
                                        models.Collection(
                                            name="<value>",
                                            description="ew or every verbally",
                                            audience_filters=[
                                                models.FacetFilter(
                                                    field_name="type",
                                                    values=[
                                                        models.FacetFilterValue(
                                                            value="Spreadsheet",
                                                            relation_type=models.RelationType.EQUALS,
                                                        ),
                                                        models.FacetFilterValue(
                                                            value="Presentation",
                                                            relation_type=models.RelationType.EQUALS,
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            id=297273,
                                            creator=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                            updated_by=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                            items=[
                                                models.CollectionItem(
                                                    collection_id=896121,
                                                    created_by=models.Person(
                                                        name="George Clooney",
                                                        obfuscated_id="abc123",
                                                    ),
                                                    document=models.Document(
                                                        container_document=models.Document(
                                                            metadata=models.DocumentMetadata(
                                                                datasource="datasource",
                                                                object_type="Feature Request",
                                                                container="container",
                                                                parent_id="JIRA_EN-1337",
                                                                mime_type="mimeType",
                                                                document_id="documentId",
                                                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                author=models.Person(
                                                                    name="name",
                                                                    obfuscated_id="<id>",
                                                                ),
                                                                components=[
                                                                    "Backend",
                                                                    "Networking",
                                                                ],
                                                                status="[\"Done\"]",
                                                                custom_data={
                                                                    "someCustomField": models.CustomDataValue(),
                                                                },
                                                            ),
                                                        ),
                                                        parent_document=models.Document(
                                                            metadata=models.DocumentMetadata(
                                                                datasource="datasource",
                                                                object_type="Feature Request",
                                                                container="container",
                                                                parent_id="JIRA_EN-1337",
                                                                mime_type="mimeType",
                                                                document_id="documentId",
                                                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                author=models.Person(
                                                                    name="name",
                                                                    obfuscated_id="<id>",
                                                                ),
                                                                components=[
                                                                    "Backend",
                                                                    "Networking",
                                                                ],
                                                                status="[\"Done\"]",
                                                                custom_data={
                                                                    "someCustomField": models.CustomDataValue(),
                                                                },
                                                            ),
                                                        ),
                                                        metadata=models.DocumentMetadata(
                                                            datasource="datasource",
                                                            object_type="Feature Request",
                                                            container="container",
                                                            parent_id="JIRA_EN-1337",
                                                            mime_type="mimeType",
                                                            document_id="documentId",
                                                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                            author=models.Person(
                                                                name="name",
                                                                obfuscated_id="<id>",
                                                            ),
                                                            components=[
                                                                "Backend",
                                                                "Networking",
                                                            ],
                                                            status="[\"Done\"]",
                                                            custom_data={
                                                                "someCustomField": models.CustomDataValue(),
                                                            },
                                                        ),
                                                    ),
                                                    shortcut=models.Shortcut(
                                                        input_alias="<value>",
                                                        created_by=models.Person(
                                                            name="George Clooney",
                                                            obfuscated_id="abc123",
                                                        ),
                                                        updated_by=models.Person(
                                                            name="George Clooney",
                                                            obfuscated_id="abc123",
                                                        ),
                                                        destination_document=models.Document(
                                                            container_document=models.Document(
                                                                metadata=models.DocumentMetadata(
                                                                    datasource="datasource",
                                                                    object_type="Feature Request",
                                                                    container="container",
                                                                    parent_id="JIRA_EN-1337",
                                                                    mime_type="mimeType",
                                                                    document_id="documentId",
                                                                    create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                    update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                    author=models.Person(
                                                                        name="name",
                                                                        obfuscated_id="<id>",
                                                                    ),
                                                                    components=[
                                                                        "Backend",
                                                                        "Networking",
                                                                    ],
                                                                    status="[\"Done\"]",
                                                                    custom_data={
                                                                        "someCustomField": models.CustomDataValue(),
                                                                    },
                                                                ),
                                                            ),
                                                            parent_document=models.Document(
                                                                metadata=models.DocumentMetadata(
                                                                    datasource="datasource",
                                                                    object_type="Feature Request",
                                                                    container="container",
                                                                    parent_id="JIRA_EN-1337",
                                                                    mime_type="mimeType",
                                                                    document_id="documentId",
                                                                    create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                    update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                    author=models.Person(
                                                                        name="name",
                                                                        obfuscated_id="<id>",
                                                                    ),
                                                                    components=[
                                                                        "Backend",
                                                                        "Networking",
                                                                    ],
                                                                    status="[\"Done\"]",
                                                                    custom_data={
                                                                        "someCustomField": models.CustomDataValue(),
                                                                    },
                                                                ),
                                                            ),
                                                            metadata=models.DocumentMetadata(
                                                                datasource="datasource",
                                                                object_type="Feature Request",
                                                                container="container",
                                                                parent_id="JIRA_EN-1337",
                                                                mime_type="mimeType",
                                                                document_id="documentId",
                                                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                                author=models.Person(
                                                                    name="name",
                                                                    obfuscated_id="<id>",
                                                                ),
                                                                components=[
                                                                    "Backend",
                                                                    "Networking",
                                                                ],
                                                                status="[\"Done\"]",
                                                                custom_data={
                                                                    "someCustomField": models.CustomDataValue(),
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                    collection=models.Collection(
                                                        name="<value>",
                                                        description="shy versus chunder monocle",
                                                        audience_filters=[
                                                            models.FacetFilter(
                                                                field_name="type",
                                                                values=[
                                                                    models.FacetFilterValue(
                                                                        value="Spreadsheet",
                                                                        relation_type=models.RelationType.EQUALS,
                                                                    ),
                                                                    models.FacetFilterValue(
                                                                        value="Presentation",
                                                                        relation_type=models.RelationType.EQUALS,
                                                                    ),
                                                                ],
                                                            ),
                                                        ],
                                                        id=455912,
                                                        creator=models.Person(
                                                            name="George Clooney",
                                                            obfuscated_id="abc123",
                                                        ),
                                                        updated_by=models.Person(
                                                            name="George Clooney",
                                                            obfuscated_id="abc123",
                                                        ),
                                                        children=[
                                                            models.Collection(
                                                                name="<value>",
                                                                description="though mismatch noisily jive worth meh following hmph analyse guidance",
                                                                audience_filters=[
                                                                    models.FacetFilter(
                                                                        field_name="type",
                                                                        values=[
                                                                            models.FacetFilterValue(
                                                                                value="Spreadsheet",
                                                                                relation_type=models.RelationType.EQUALS,
                                                                            ),
                                                                            models.FacetFilterValue(
                                                                                value="Presentation",
                                                                                relation_type=models.RelationType.EQUALS,
                                                                            ),
                                                                        ],
                                                                    ),
                                                                ],
                                                                id=432713,
                                                                creator=models.Person(
                                                                    name="George Clooney",
                                                                    obfuscated_id="abc123",
                                                                ),
                                                                updated_by=models.Person(
                                                                    name="George Clooney",
                                                                    obfuscated_id="abc123",
                                                                ),
                                                            ),
                                                        ],
                                                    ),
                                                    item_type=models.CollectionItemItemType.URL,
                                                ),
                                            ],
                                        ),
                                    ],
                                    source_document=models.Document(
                                        container_document=models.Document(
                                            metadata=models.DocumentMetadata(
                                                datasource="datasource",
                                                object_type="Feature Request",
                                                container="container",
                                                parent_id="JIRA_EN-1337",
                                                mime_type="mimeType",
                                                document_id="documentId",
                                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                author=models.Person(
                                                    name="name",
                                                    obfuscated_id="<id>",
                                                ),
                                                components=[
                                                    "Backend",
                                                    "Networking",
                                                ],
                                                status="[\"Done\"]",
                                                custom_data={
                                                    "someCustomField": models.CustomDataValue(),
                                                },
                                            ),
                                        ),
                                        parent_document=models.Document(
                                            metadata=models.DocumentMetadata(
                                                datasource="datasource",
                                                object_type="Feature Request",
                                                container="container",
                                                parent_id="JIRA_EN-1337",
                                                mime_type="mimeType",
                                                document_id="documentId",
                                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                author=models.Person(
                                                    name="name",
                                                    obfuscated_id="<id>",
                                                ),
                                                components=[
                                                    "Backend",
                                                    "Networking",
                                                ],
                                                status="[\"Done\"]",
                                                custom_data={
                                                    "someCustomField": models.CustomDataValue(),
                                                },
                                            ),
                                        ),
                                        metadata=models.DocumentMetadata(
                                            datasource="datasource",
                                            object_type="Feature Request",
                                            container="container",
                                            parent_id="JIRA_EN-1337",
                                            mime_type="mimeType",
                                            document_id="documentId",
                                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            author=models.Person(
                                                name="name",
                                                obfuscated_id="<id>",
                                            ),
                                            components=[
                                                "Backend",
                                                "Networking",
                                            ],
                                            status="[\"Done\"]",
                                            custom_data={
                                                "someCustomField": models.CustomDataValue(),
                                            },
                                        ),
                                    ),
                                ),
                                extracted_qn_a=models.ExtractedQnA(
                                    question_result=models.SearchResult(
                                        title="title",
                                        url="https://example.com/foo/bar",
                                        native_app_url="slack://foo/bar",
                                        snippets=[
                                            models.SearchResultSnippet(
                                                snippet="snippet",
                                                mime_type="mimeType",
                                            ),
                                        ],
                                        must_include_suggestions=models.QuerySuggestionList(
                                            suggestions=[
                                                models.QuerySuggestion(
                                                    query="app:github type:pull author:mortimer",
                                                    label="Mortimer's PRs",
                                                    datasource="github",
                                                ),
                                            ],
                                            person=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                        ),
                                    ),
                                ),
                                meeting=models.Meeting(
                                    attendees=models.CalendarAttendees(
                                        people=[
                                            models.CalendarAttendee(
                                                person=models.Person(
                                                    name="George Clooney",
                                                    obfuscated_id="abc123",
                                                ),
                                                group_attendees=[
                                                    models.CalendarAttendee(
                                                        person=models.Person(
                                                            name="George Clooney",
                                                            obfuscated_id="abc123",
                                                        ),
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ),
                                ),
                                collection=models.Collection(
                                    name="<value>",
                                    description="shy versus chunder monocle",
                                    audience_filters=[
                                        models.FacetFilter(
                                            field_name="type",
                                            values=[
                                                models.FacetFilterValue(
                                                    value="Spreadsheet",
                                                    relation_type=models.RelationType.EQUALS,
                                                ),
                                                models.FacetFilterValue(
                                                    value="Presentation",
                                                    relation_type=models.RelationType.EQUALS,
                                                ),
                                            ],
                                        ),
                                    ],
                                    id=455912,
                                    creator=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                    updated_by=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                    children=[
                                        models.Collection(
                                            name="<value>",
                                            description="though mismatch noisily jive worth meh following hmph analyse guidance",
                                            audience_filters=[
                                                models.FacetFilter(
                                                    field_name="type",
                                                    values=[
                                                        models.FacetFilterValue(
                                                            value="Spreadsheet",
                                                            relation_type=models.RelationType.EQUALS,
                                                        ),
                                                        models.FacetFilterValue(
                                                            value="Presentation",
                                                            relation_type=models.RelationType.EQUALS,
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            id=432713,
                                            creator=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                            updated_by=models.Person(
                                                name="George Clooney",
                                                obfuscated_id="abc123",
                                            ),
                                        ),
                                    ],
                                ),
                                answer_board=models.AnswerBoard(
                                    name="<value>",
                                    description="bookend dense second-hand",
                                    audience_filters=[
                                        models.FacetFilter(
                                            field_name="type",
                                            values=[
                                                models.FacetFilterValue(
                                                    value="Spreadsheet",
                                                    relation_type=models.RelationType.EQUALS,
                                                ),
                                                models.FacetFilterValue(
                                                    value="Presentation",
                                                    relation_type=models.RelationType.EQUALS,
                                                ),
                                            ],
                                        ),
                                    ],
                                    id=964771,
                                    creator=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                    updated_by=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                ),
                                code=models.Code(
                                    repo_name="scio",
                                    file_name="README.md",
                                ),
                                shortcut=models.Shortcut(
                                    input_alias="<value>",
                                    created_by=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                    updated_by=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                    destination_document=models.Document(
                                        container_document=models.Document(
                                            metadata=models.DocumentMetadata(
                                                datasource="datasource",
                                                object_type="Feature Request",
                                                container="container",
                                                parent_id="JIRA_EN-1337",
                                                mime_type="mimeType",
                                                document_id="documentId",
                                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                author=models.Person(
                                                    name="name",
                                                    obfuscated_id="<id>",
                                                ),
                                                components=[
                                                    "Backend",
                                                    "Networking",
                                                ],
                                                status="[\"Done\"]",
                                                custom_data={
                                                    "someCustomField": models.CustomDataValue(),
                                                },
                                            ),
                                        ),
                                        parent_document=models.Document(
                                            metadata=models.DocumentMetadata(
                                                datasource="datasource",
                                                object_type="Feature Request",
                                                container="container",
                                                parent_id="JIRA_EN-1337",
                                                mime_type="mimeType",
                                                document_id="documentId",
                                                create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                author=models.Person(
                                                    name="name",
                                                    obfuscated_id="<id>",
                                                ),
                                                components=[
                                                    "Backend",
                                                    "Networking",
                                                ],
                                                status="[\"Done\"]",
                                                custom_data={
                                                    "someCustomField": models.CustomDataValue(),
                                                },
                                            ),
                                        ),
                                        metadata=models.DocumentMetadata(
                                            datasource="datasource",
                                            object_type="Feature Request",
                                            container="container",
                                            parent_id="JIRA_EN-1337",
                                            mime_type="mimeType",
                                            document_id="documentId",
                                            create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                            author=models.Person(
                                                name="name",
                                                obfuscated_id="<id>",
                                            ),
                                            components=[
                                                "Backend",
                                                "Networking",
                                            ],
                                            status="[\"Done\"]",
                                            custom_data={
                                                "someCustomField": models.CustomDataValue(),
                                            },
                                        ),
                                    ),
                                ),
                                query_suggestions=models.QuerySuggestionList(
                                    person=models.Person(
                                        name="George Clooney",
                                        obfuscated_id="abc123",
                                    ),
                                ),
                                related_documents=[
                                    models.RelatedDocuments(
                                        query_suggestion=models.QuerySuggestion(
                                            query="app:github type:pull author:mortimer",
                                            label="Mortimer's PRs",
                                            datasource="github",
                                        ),
                                        results=[
                                            models.SearchResult(
                                                title="title",
                                                url="https://example.com/foo/bar",
                                                native_app_url="slack://foo/bar",
                                                snippets=[
                                                    models.SearchResultSnippet(
                                                        snippet="snippet",
                                                        mime_type="mimeType",
                                                    ),
                                                ],
                                                must_include_suggestions=models.QuerySuggestionList(
                                                    person=models.Person(
                                                        name="George Clooney",
                                                        obfuscated_id="abc123",
                                                    ),
                                                ),
                                            ),
                                        ],
                                    ),
                                ],
                                related_question=models.RelatedQuestion(
                                    ranges=[
                                        models.TextRange(
                                            start_index=766177,
                                            document=models.Document(
                                                container_document=models.Document(
                                                    metadata=models.DocumentMetadata(
                                                        datasource="datasource",
                                                        object_type="Feature Request",
                                                        container="container",
                                                        parent_id="JIRA_EN-1337",
                                                        mime_type="mimeType",
                                                        document_id="documentId",
                                                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        author=models.Person(
                                                            name="name",
                                                            obfuscated_id="<id>",
                                                        ),
                                                        components=[
                                                            "Backend",
                                                            "Networking",
                                                        ],
                                                        status="[\"Done\"]",
                                                        custom_data={
                                                            "someCustomField": models.CustomDataValue(),
                                                        },
                                                    ),
                                                ),
                                                parent_document=models.Document(
                                                    metadata=models.DocumentMetadata(
                                                        datasource="datasource",
                                                        object_type="Feature Request",
                                                        container="container",
                                                        parent_id="JIRA_EN-1337",
                                                        mime_type="mimeType",
                                                        document_id="documentId",
                                                        create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                        author=models.Person(
                                                            name="name",
                                                            obfuscated_id="<id>",
                                                        ),
                                                        components=[
                                                            "Backend",
                                                            "Networking",
                                                        ],
                                                        status="[\"Done\"]",
                                                        custom_data={
                                                            "someCustomField": models.CustomDataValue(),
                                                        },
                                                    ),
                                                ),
                                                metadata=models.DocumentMetadata(
                                                    datasource="datasource",
                                                    object_type="Feature Request",
                                                    container="container",
                                                    parent_id="JIRA_EN-1337",
                                                    mime_type="mimeType",
                                                    document_id="documentId",
                                                    create_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                    update_time=parse_datetime("2000-01-23T04:56:07.000Z"),
                                                    author=models.Person(
                                                        name="name",
                                                        obfuscated_id="<id>",
                                                    ),
                                                    components=[
                                                        "Backend",
                                                        "Networking",
                                                    ],
                                                    status="[\"Done\"]",
                                                    custom_data={
                                                        "someCustomField": models.CustomDataValue(),
                                                    },
                                                ),
                                            ),
                                        ),
                                    ],
                                ),
                            ),
                        ),
                    ],
                }, audience_filters=[
                    {
                        "field_name": "type",
                        "values": [
                            {
                                "value": "Spreadsheet",
                                "relation_type": models.RelationType.EQUALS,
                            },
                            {
                                "value": "Presentation",
                                "relation_type": models.RelationType.EQUALS,
                            },
                        ],
                    },
                ])

                # Handle response
                print(res)
        - lang: typescript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.announcements.update({
                startTime: new Date("2023-10-24T01:53:24.440Z"),
                endTime: new Date("2024-10-30T07:24:12.087Z"),
                title: "<value>",
                body: {
                  text: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                  structuredList: [
                    {
                      link: "https://en.wikipedia.org/wiki/Diffuse_sky_radiation",
                      document: {
                        metadata: {
                          datasource: "datasource",
                          objectType: "Feature Request",
                          container: "container",
                          parentId: "JIRA_EN-1337",
                          mimeType: "mimeType",
                          documentId: "documentId",
                          createTime: new Date("2000-01-23T04:56:07.000Z"),
                          updateTime: new Date("2000-01-23T04:56:07.000Z"),
                          author: {
                            name: "name",
                            obfuscatedId: "<id>",
                          },
                          components: [
                            "Backend",
                            "Networking",
                          ],
                          status: "[\"Done\"]",
                          customData: {
                            "someCustomField": {},
                          },
                        },
                      },
                      text: "Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.",
                      structuredResult: {
                        document: {
                          metadata: {
                            datasource: "datasource",
                            objectType: "Feature Request",
                            container: "container",
                            parentId: "JIRA_EN-1337",
                            mimeType: "mimeType",
                            documentId: "documentId",
                            createTime: new Date("2000-01-23T04:56:07.000Z"),
                            updateTime: new Date("2000-01-23T04:56:07.000Z"),
                            author: {
                              name: "name",
                              obfuscatedId: "<id>",
                            },
                            components: [
                              "Backend",
                              "Networking",
                            ],
                            status: "[\"Done\"]",
                            customData: {
                              "someCustomField": {},
                            },
                          },
                        },
                        person: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                        customer: {
                          id: "<id>",
                          company: {
                            name: "<value>",
                            location: "New York City",
                            industry: "Finances",
                            about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                          },
                          poc: [
                            {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                          ],
                          mergedCustomers: [
                            {
                              id: "<id>",
                              company: {
                                name: "<value>",
                                location: "New York City",
                                industry: "Finances",
                                about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                              },
                              notes: "CIO is interested in trying out the product.",
                            },
                            {
                              id: "<id>",
                              company: {
                                name: "<value>",
                                location: "New York City",
                                industry: "Finances",
                                about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                              },
                              notes: "CIO is interested in trying out the product.",
                            },
                            {
                              id: "<id>",
                              company: {
                                name: "<value>",
                                location: "New York City",
                                industry: "Finances",
                                about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                              },
                              notes: "CIO is interested in trying out the product.",
                            },
                          ],
                          notes: "CIO is interested in trying out the product.",
                        },
                        team: {
                          id: "<id>",
                          name: "<value>",
                          members: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                            },
                          ],
                          customFields: [
                            {
                              label: "<value>",
                              values: [],
                            },
                            {
                              label: "<value>",
                              values: [],
                            },
                          ],
                          datasourceProfiles: [
                            {
                              datasource: "github",
                              handle: "<value>",
                            },
                            {
                              datasource: "github",
                              handle: "<value>",
                            },
                            {
                              datasource: "github",
                              handle: "<value>",
                            },
                          ],
                        },
                        customEntity: {
                          roles: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                          ],
                        },
                        answer: {
                          id: 3,
                          docId: "ANSWERS_answer_3",
                          question: "Why is the sky blue?",
                          bodyText: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                          audienceFilters: [
                            {
                              fieldName: "type",
                              values: [
                                {
                                  value: "Spreadsheet",
                                  relationType: "EQUALS",
                                },
                                {
                                  value: "Presentation",
                                  relationType: "EQUALS",
                                },
                              ],
                            },
                          ],
                          addedRoles: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "OWNER",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "OWNER",
                            },
                          ],
                          removedRoles: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "ANSWER_MODERATOR",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "ANSWER_MODERATOR",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "ANSWER_MODERATOR",
                            },
                          ],
                          likes: {
                            likedBy: [
                              {
                                user: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                              },
                            ],
                            likedByUser: true,
                            numLikes: 38608,
                          },
                          author: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          verification: {
                            state: "DEPRECATED",
                            metadata: {
                              lastVerifier: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                              reminders: [
                                {
                                  assignee: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  requestor: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  remindAt: 735135,
                                },
                                {
                                  assignee: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  requestor: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  remindAt: 735135,
                                },
                              ],
                              lastReminder: {
                                assignee: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                requestor: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                remindAt: 528697,
                              },
                              candidateVerifiers: [
                                {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                              ],
                            },
                          },
                          board: {
                            name: "<value>",
                            description: "treasure phrase meaty",
                            audienceFilters: [
                              {
                                fieldName: "type",
                                values: [
                                  {
                                    value: "Spreadsheet",
                                    relationType: "EQUALS",
                                  },
                                  {
                                    value: "Presentation",
                                    relationType: "EQUALS",
                                  },
                                ],
                              },
                            ],
                            id: 355296,
                            creator: {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                            updatedBy: {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                          },
                          collections: [
                            {
                              name: "<value>",
                              description: "thunderbolt acidly warmly hence zowie",
                              audienceFilters: [
                                {
                                  fieldName: "type",
                                  values: [
                                    {
                                      value: "Spreadsheet",
                                      relationType: "EQUALS",
                                    },
                                    {
                                      value: "Presentation",
                                      relationType: "EQUALS",
                                    },
                                  ],
                                },
                              ],
                              id: 416180,
                              creator: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              updatedBy: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              items: [
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                              ],
                              children: [
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                            {
                              name: "<value>",
                              description: "thunderbolt acidly warmly hence zowie",
                              audienceFilters: [
                                {
                                  fieldName: "type",
                                  values: [
                                    {
                                      value: "Spreadsheet",
                                      relationType: "EQUALS",
                                    },
                                    {
                                      value: "Presentation",
                                      relationType: "EQUALS",
                                    },
                                  ],
                                },
                              ],
                              id: 416180,
                              creator: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              updatedBy: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              items: [
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                              ],
                              children: [
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                          ],
                          sourceDocument: {
                            metadata: {
                              datasource: "datasource",
                              objectType: "Feature Request",
                              container: "container",
                              parentId: "JIRA_EN-1337",
                              mimeType: "mimeType",
                              documentId: "documentId",
                              createTime: new Date("2000-01-23T04:56:07.000Z"),
                              updateTime: new Date("2000-01-23T04:56:07.000Z"),
                              author: {
                                name: "name",
                                obfuscatedId: "<id>",
                              },
                              components: [
                                "Backend",
                                "Networking",
                              ],
                              status: "[\"Done\"]",
                              customData: {
                                "someCustomField": {},
                              },
                            },
                          },
                        },
                        extractedQnA: {
                          questionResult: {
                            title: "title",
                            url: "https://example.com/foo/bar",
                            nativeAppUrl: "slack://foo/bar",
                            snippets: [
                              {
                                snippet: "snippet",
                                mimeType: "mimeType",
                              },
                            ],
                            mustIncludeSuggestions: {},
                          },
                        },
                        meeting: {
                          attendees: {
                            people: [
                              {
                                person: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                groupAttendees: [
                                  {
                                    person: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                  },
                                  {
                                    person: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                  },
                                ],
                              },
                              {
                                person: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                groupAttendees: [
                                  {
                                    person: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                  },
                                  {
                                    person: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                  },
                                ],
                              },
                            ],
                          },
                        },
                        collection: {
                          name: "<value>",
                          description: "mismatch noisily jive worth meh following hmph analyse",
                          audienceFilters: [
                            {
                              fieldName: "type",
                              values: [
                                {
                                  value: "Spreadsheet",
                                  relationType: "EQUALS",
                                },
                                {
                                  value: "Presentation",
                                  relationType: "EQUALS",
                                },
                              ],
                            },
                          ],
                          id: 5797,
                          creator: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                        },
                        answerBoard: {
                          name: "<value>",
                          description: "pulse yum shakily notwithstanding faithfully boohoo urgently exterior before um",
                          audienceFilters: [
                            {
                              fieldName: "type",
                              values: [
                                {
                                  value: "Spreadsheet",
                                  relationType: "EQUALS",
                                },
                                {
                                  value: "Presentation",
                                  relationType: "EQUALS",
                                },
                              ],
                            },
                          ],
                          id: 609567,
                          creator: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                        },
                        code: {
                          repoName: "scio",
                          fileName: "README.md",
                        },
                        shortcut: {
                          inputAlias: "<value>",
                          createdBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          destinationDocument: {
                            metadata: {
                              datasource: "datasource",
                              objectType: "Feature Request",
                              container: "container",
                              parentId: "JIRA_EN-1337",
                              mimeType: "mimeType",
                              documentId: "documentId",
                              createTime: new Date("2000-01-23T04:56:07.000Z"),
                              updateTime: new Date("2000-01-23T04:56:07.000Z"),
                              author: {
                                name: "name",
                                obfuscatedId: "<id>",
                              },
                              components: [
                                "Backend",
                                "Networking",
                              ],
                              status: "[\"Done\"]",
                              customData: {
                                "someCustomField": {},
                              },
                            },
                          },
                        },
                        querySuggestions: {
                          suggestions: [
                            {
                              query: "app:github type:pull author:mortimer",
                              label: "Mortimer's PRs",
                              datasource: "github",
                            },
                          ],
                          person: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                        },
                        relatedDocuments: [
                          {
                            querySuggestion: {
                              query: "app:github type:pull author:mortimer",
                              label: "Mortimer's PRs",
                              datasource: "github",
                            },
                            results: [
                              {
                                title: "title",
                                url: "https://example.com/foo/bar",
                                nativeAppUrl: "slack://foo/bar",
                                snippets: [
                                  {
                                    snippet: "snippet",
                                    mimeType: "mimeType",
                                  },
                                ],
                                mustIncludeSuggestions: {},
                              },
                            ],
                          },
                        ],
                        relatedQuestion: {
                          ranges: [
                            {
                              startIndex: 896307,
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                            },
                            {
                              startIndex: 896307,
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                            },
                          ],
                        },
                      },
                    },
                    {
                      link: "https://en.wikipedia.org/wiki/Diffuse_sky_radiation",
                      document: {
                        metadata: {
                          datasource: "datasource",
                          objectType: "Feature Request",
                          container: "container",
                          parentId: "JIRA_EN-1337",
                          mimeType: "mimeType",
                          documentId: "documentId",
                          createTime: new Date("2000-01-23T04:56:07.000Z"),
                          updateTime: new Date("2000-01-23T04:56:07.000Z"),
                          author: {
                            name: "name",
                            obfuscatedId: "<id>",
                          },
                          components: [
                            "Backend",
                            "Networking",
                          ],
                          status: "[\"Done\"]",
                          customData: {
                            "someCustomField": {},
                          },
                        },
                      },
                      text: "Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.",
                      structuredResult: {
                        document: {
                          metadata: {
                            datasource: "datasource",
                            objectType: "Feature Request",
                            container: "container",
                            parentId: "JIRA_EN-1337",
                            mimeType: "mimeType",
                            documentId: "documentId",
                            createTime: new Date("2000-01-23T04:56:07.000Z"),
                            updateTime: new Date("2000-01-23T04:56:07.000Z"),
                            author: {
                              name: "name",
                              obfuscatedId: "<id>",
                            },
                            components: [
                              "Backend",
                              "Networking",
                            ],
                            status: "[\"Done\"]",
                            customData: {
                              "someCustomField": {},
                            },
                          },
                        },
                        person: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                        customer: {
                          id: "<id>",
                          company: {
                            name: "<value>",
                            location: "New York City",
                            industry: "Finances",
                            about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                          },
                          poc: [
                            {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                          ],
                          mergedCustomers: [
                            {
                              id: "<id>",
                              company: {
                                name: "<value>",
                                location: "New York City",
                                industry: "Finances",
                                about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                              },
                              notes: "CIO is interested in trying out the product.",
                            },
                            {
                              id: "<id>",
                              company: {
                                name: "<value>",
                                location: "New York City",
                                industry: "Finances",
                                about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                              },
                              notes: "CIO is interested in trying out the product.",
                            },
                            {
                              id: "<id>",
                              company: {
                                name: "<value>",
                                location: "New York City",
                                industry: "Finances",
                                about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                              },
                              notes: "CIO is interested in trying out the product.",
                            },
                          ],
                          notes: "CIO is interested in trying out the product.",
                        },
                        team: {
                          id: "<id>",
                          name: "<value>",
                          members: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                            },
                          ],
                          customFields: [
                            {
                              label: "<value>",
                              values: [],
                            },
                            {
                              label: "<value>",
                              values: [],
                            },
                          ],
                          datasourceProfiles: [
                            {
                              datasource: "github",
                              handle: "<value>",
                            },
                            {
                              datasource: "github",
                              handle: "<value>",
                            },
                            {
                              datasource: "github",
                              handle: "<value>",
                            },
                          ],
                        },
                        customEntity: {
                          roles: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                          ],
                        },
                        answer: {
                          id: 3,
                          docId: "ANSWERS_answer_3",
                          question: "Why is the sky blue?",
                          bodyText: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                          audienceFilters: [
                            {
                              fieldName: "type",
                              values: [
                                {
                                  value: "Spreadsheet",
                                  relationType: "EQUALS",
                                },
                                {
                                  value: "Presentation",
                                  relationType: "EQUALS",
                                },
                              ],
                            },
                          ],
                          addedRoles: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "OWNER",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "OWNER",
                            },
                          ],
                          removedRoles: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "ANSWER_MODERATOR",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "ANSWER_MODERATOR",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "ANSWER_MODERATOR",
                            },
                          ],
                          likes: {
                            likedBy: [
                              {
                                user: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                              },
                            ],
                            likedByUser: true,
                            numLikes: 38608,
                          },
                          author: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          verification: {
                            state: "DEPRECATED",
                            metadata: {
                              lastVerifier: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                              reminders: [
                                {
                                  assignee: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  requestor: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  remindAt: 735135,
                                },
                                {
                                  assignee: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  requestor: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  remindAt: 735135,
                                },
                              ],
                              lastReminder: {
                                assignee: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                requestor: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                remindAt: 528697,
                              },
                              candidateVerifiers: [
                                {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                              ],
                            },
                          },
                          board: {
                            name: "<value>",
                            description: "treasure phrase meaty",
                            audienceFilters: [
                              {
                                fieldName: "type",
                                values: [
                                  {
                                    value: "Spreadsheet",
                                    relationType: "EQUALS",
                                  },
                                  {
                                    value: "Presentation",
                                    relationType: "EQUALS",
                                  },
                                ],
                              },
                            ],
                            id: 355296,
                            creator: {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                            updatedBy: {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                          },
                          collections: [
                            {
                              name: "<value>",
                              description: "thunderbolt acidly warmly hence zowie",
                              audienceFilters: [
                                {
                                  fieldName: "type",
                                  values: [
                                    {
                                      value: "Spreadsheet",
                                      relationType: "EQUALS",
                                    },
                                    {
                                      value: "Presentation",
                                      relationType: "EQUALS",
                                    },
                                  ],
                                },
                              ],
                              id: 416180,
                              creator: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              updatedBy: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              items: [
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                              ],
                              children: [
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                            {
                              name: "<value>",
                              description: "thunderbolt acidly warmly hence zowie",
                              audienceFilters: [
                                {
                                  fieldName: "type",
                                  values: [
                                    {
                                      value: "Spreadsheet",
                                      relationType: "EQUALS",
                                    },
                                    {
                                      value: "Presentation",
                                      relationType: "EQUALS",
                                    },
                                  ],
                                },
                              ],
                              id: 416180,
                              creator: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              updatedBy: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              items: [
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                              ],
                              children: [
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                          ],
                          sourceDocument: {
                            metadata: {
                              datasource: "datasource",
                              objectType: "Feature Request",
                              container: "container",
                              parentId: "JIRA_EN-1337",
                              mimeType: "mimeType",
                              documentId: "documentId",
                              createTime: new Date("2000-01-23T04:56:07.000Z"),
                              updateTime: new Date("2000-01-23T04:56:07.000Z"),
                              author: {
                                name: "name",
                                obfuscatedId: "<id>",
                              },
                              components: [
                                "Backend",
                                "Networking",
                              ],
                              status: "[\"Done\"]",
                              customData: {
                                "someCustomField": {},
                              },
                            },
                          },
                        },
                        extractedQnA: {
                          questionResult: {
                            title: "title",
                            url: "https://example.com/foo/bar",
                            nativeAppUrl: "slack://foo/bar",
                            snippets: [
                              {
                                snippet: "snippet",
                                mimeType: "mimeType",
                              },
                            ],
                            mustIncludeSuggestions: {},
                          },
                        },
                        meeting: {
                          attendees: {
                            people: [
                              {
                                person: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                groupAttendees: [
                                  {
                                    person: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                  },
                                  {
                                    person: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                  },
                                ],
                              },
                              {
                                person: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                groupAttendees: [
                                  {
                                    person: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                  },
                                  {
                                    person: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                  },
                                ],
                              },
                            ],
                          },
                        },
                        collection: {
                          name: "<value>",
                          description: "mismatch noisily jive worth meh following hmph analyse",
                          audienceFilters: [
                            {
                              fieldName: "type",
                              values: [
                                {
                                  value: "Spreadsheet",
                                  relationType: "EQUALS",
                                },
                                {
                                  value: "Presentation",
                                  relationType: "EQUALS",
                                },
                              ],
                            },
                          ],
                          id: 5797,
                          creator: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                        },
                        answerBoard: {
                          name: "<value>",
                          description: "pulse yum shakily notwithstanding faithfully boohoo urgently exterior before um",
                          audienceFilters: [
                            {
                              fieldName: "type",
                              values: [
                                {
                                  value: "Spreadsheet",
                                  relationType: "EQUALS",
                                },
                                {
                                  value: "Presentation",
                                  relationType: "EQUALS",
                                },
                              ],
                            },
                          ],
                          id: 609567,
                          creator: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                        },
                        code: {
                          repoName: "scio",
                          fileName: "README.md",
                        },
                        shortcut: {
                          inputAlias: "<value>",
                          createdBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          destinationDocument: {
                            metadata: {
                              datasource: "datasource",
                              objectType: "Feature Request",
                              container: "container",
                              parentId: "JIRA_EN-1337",
                              mimeType: "mimeType",
                              documentId: "documentId",
                              createTime: new Date("2000-01-23T04:56:07.000Z"),
                              updateTime: new Date("2000-01-23T04:56:07.000Z"),
                              author: {
                                name: "name",
                                obfuscatedId: "<id>",
                              },
                              components: [
                                "Backend",
                                "Networking",
                              ],
                              status: "[\"Done\"]",
                              customData: {
                                "someCustomField": {},
                              },
                            },
                          },
                        },
                        querySuggestions: {
                          suggestions: [
                            {
                              query: "app:github type:pull author:mortimer",
                              label: "Mortimer's PRs",
                              datasource: "github",
                            },
                          ],
                          person: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                        },
                        relatedDocuments: [
                          {
                            querySuggestion: {
                              query: "app:github type:pull author:mortimer",
                              label: "Mortimer's PRs",
                              datasource: "github",
                            },
                            results: [
                              {
                                title: "title",
                                url: "https://example.com/foo/bar",
                                nativeAppUrl: "slack://foo/bar",
                                snippets: [
                                  {
                                    snippet: "snippet",
                                    mimeType: "mimeType",
                                  },
                                ],
                                mustIncludeSuggestions: {},
                              },
                            ],
                          },
                        ],
                        relatedQuestion: {
                          ranges: [
                            {
                              startIndex: 896307,
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                            },
                            {
                              startIndex: 896307,
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                            },
                          ],
                        },
                      },
                    },
                    {
                      link: "https://en.wikipedia.org/wiki/Diffuse_sky_radiation",
                      document: {
                        metadata: {
                          datasource: "datasource",
                          objectType: "Feature Request",
                          container: "container",
                          parentId: "JIRA_EN-1337",
                          mimeType: "mimeType",
                          documentId: "documentId",
                          createTime: new Date("2000-01-23T04:56:07.000Z"),
                          updateTime: new Date("2000-01-23T04:56:07.000Z"),
                          author: {
                            name: "name",
                            obfuscatedId: "<id>",
                          },
                          components: [
                            "Backend",
                            "Networking",
                          ],
                          status: "[\"Done\"]",
                          customData: {
                            "someCustomField": {},
                          },
                        },
                      },
                      text: "Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.",
                      structuredResult: {
                        document: {
                          metadata: {
                            datasource: "datasource",
                            objectType: "Feature Request",
                            container: "container",
                            parentId: "JIRA_EN-1337",
                            mimeType: "mimeType",
                            documentId: "documentId",
                            createTime: new Date("2000-01-23T04:56:07.000Z"),
                            updateTime: new Date("2000-01-23T04:56:07.000Z"),
                            author: {
                              name: "name",
                              obfuscatedId: "<id>",
                            },
                            components: [
                              "Backend",
                              "Networking",
                            ],
                            status: "[\"Done\"]",
                            customData: {
                              "someCustomField": {},
                            },
                          },
                        },
                        person: {
                          name: "George Clooney",
                          obfuscatedId: "abc123",
                        },
                        customer: {
                          id: "<id>",
                          company: {
                            name: "<value>",
                            location: "New York City",
                            industry: "Finances",
                            about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                          },
                          poc: [
                            {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                          ],
                          mergedCustomers: [
                            {
                              id: "<id>",
                              company: {
                                name: "<value>",
                                location: "New York City",
                                industry: "Finances",
                                about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                              },
                              notes: "CIO is interested in trying out the product.",
                            },
                            {
                              id: "<id>",
                              company: {
                                name: "<value>",
                                location: "New York City",
                                industry: "Finances",
                                about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                              },
                              notes: "CIO is interested in trying out the product.",
                            },
                            {
                              id: "<id>",
                              company: {
                                name: "<value>",
                                location: "New York City",
                                industry: "Finances",
                                about: "Financial, software, data, and media company headquartered in Midtown Manhattan, New York City",
                              },
                              notes: "CIO is interested in trying out the product.",
                            },
                          ],
                          notes: "CIO is interested in trying out the product.",
                        },
                        team: {
                          id: "<id>",
                          name: "<value>",
                          members: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                            },
                          ],
                          customFields: [
                            {
                              label: "<value>",
                              values: [],
                            },
                            {
                              label: "<value>",
                              values: [],
                            },
                          ],
                          datasourceProfiles: [
                            {
                              datasource: "github",
                              handle: "<value>",
                            },
                            {
                              datasource: "github",
                              handle: "<value>",
                            },
                            {
                              datasource: "github",
                              handle: "<value>",
                            },
                          ],
                        },
                        customEntity: {
                          roles: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "EDITOR",
                            },
                          ],
                        },
                        answer: {
                          id: 3,
                          docId: "ANSWERS_answer_3",
                          question: "Why is the sky blue?",
                          bodyText: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.",
                          audienceFilters: [
                            {
                              fieldName: "type",
                              values: [
                                {
                                  value: "Spreadsheet",
                                  relationType: "EQUALS",
                                },
                                {
                                  value: "Presentation",
                                  relationType: "EQUALS",
                                },
                              ],
                            },
                          ],
                          addedRoles: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "OWNER",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "OWNER",
                            },
                          ],
                          removedRoles: [
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "ANSWER_MODERATOR",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "ANSWER_MODERATOR",
                            },
                            {
                              person: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              role: "ANSWER_MODERATOR",
                            },
                          ],
                          likes: {
                            likedBy: [
                              {
                                user: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                              },
                            ],
                            likedByUser: true,
                            numLikes: 38608,
                          },
                          author: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          verification: {
                            state: "DEPRECATED",
                            metadata: {
                              lastVerifier: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                              reminders: [
                                {
                                  assignee: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  requestor: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  remindAt: 735135,
                                },
                                {
                                  assignee: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  requestor: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  remindAt: 735135,
                                },
                              ],
                              lastReminder: {
                                assignee: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                requestor: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                remindAt: 528697,
                              },
                              candidateVerifiers: [
                                {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                              ],
                            },
                          },
                          board: {
                            name: "<value>",
                            description: "treasure phrase meaty",
                            audienceFilters: [
                              {
                                fieldName: "type",
                                values: [
                                  {
                                    value: "Spreadsheet",
                                    relationType: "EQUALS",
                                  },
                                  {
                                    value: "Presentation",
                                    relationType: "EQUALS",
                                  },
                                ],
                              },
                            ],
                            id: 355296,
                            creator: {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                            updatedBy: {
                              name: "George Clooney",
                              obfuscatedId: "abc123",
                            },
                          },
                          collections: [
                            {
                              name: "<value>",
                              description: "thunderbolt acidly warmly hence zowie",
                              audienceFilters: [
                                {
                                  fieldName: "type",
                                  values: [
                                    {
                                      value: "Spreadsheet",
                                      relationType: "EQUALS",
                                    },
                                    {
                                      value: "Presentation",
                                      relationType: "EQUALS",
                                    },
                                  ],
                                },
                              ],
                              id: 416180,
                              creator: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              updatedBy: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              items: [
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                              ],
                              children: [
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                            {
                              name: "<value>",
                              description: "thunderbolt acidly warmly hence zowie",
                              audienceFilters: [
                                {
                                  fieldName: "type",
                                  values: [
                                    {
                                      value: "Spreadsheet",
                                      relationType: "EQUALS",
                                    },
                                    {
                                      value: "Presentation",
                                      relationType: "EQUALS",
                                    },
                                  ],
                                },
                              ],
                              id: 416180,
                              creator: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              updatedBy: {
                                name: "George Clooney",
                                obfuscatedId: "abc123",
                              },
                              items: [
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                                {
                                  collectionId: 213025,
                                  createdBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  document: {
                                    metadata: {
                                      datasource: "datasource",
                                      objectType: "Feature Request",
                                      container: "container",
                                      parentId: "JIRA_EN-1337",
                                      mimeType: "mimeType",
                                      documentId: "documentId",
                                      createTime: new Date("2000-01-23T04:56:07.000Z"),
                                      updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                      author: {
                                        name: "name",
                                        obfuscatedId: "<id>",
                                      },
                                      components: [
                                        "Backend",
                                        "Networking",
                                      ],
                                      status: "[\"Done\"]",
                                      customData: {
                                        "someCustomField": {},
                                      },
                                    },
                                  },
                                  shortcut: {
                                    inputAlias: "<value>",
                                    createdBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    updatedBy: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                    destinationDocument: {
                                      metadata: {
                                        datasource: "datasource",
                                        objectType: "Feature Request",
                                        container: "container",
                                        parentId: "JIRA_EN-1337",
                                        mimeType: "mimeType",
                                        documentId: "documentId",
                                        createTime: new Date("2000-01-23T04:56:07.000Z"),
                                        updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                        author: {
                                          name: "name",
                                          obfuscatedId: "<id>",
                                        },
                                        components: [
                                          "Backend",
                                          "Networking",
                                        ],
                                        status: "[\"Done\"]",
                                        customData: {
                                          "someCustomField": {},
                                        },
                                      },
                                    },
                                  },
                                  itemType: "TEXT",
                                },
                              ],
                              children: [
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                                {
                                  name: "<value>",
                                  description: "likewise blindly mooch travel pinion",
                                  audienceFilters: [
                                    {
                                      fieldName: "type",
                                      values: [
                                        {
                                          value: "Spreadsheet",
                                          relationType: "EQUALS",
                                        },
                                        {
                                          value: "Presentation",
                                          relationType: "EQUALS",
                                        },
                                      ],
                                    },
                                  ],
                                  id: 184689,
                                  creator: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                  updatedBy: {
                                    name: "George Clooney",
                                    obfuscatedId: "abc123",
                                  },
                                },
                              ],
                            },
                          ],
                          sourceDocument: {
                            metadata: {
                              datasource: "datasource",
                              objectType: "Feature Request",
                              container: "container",
                              parentId: "JIRA_EN-1337",
                              mimeType: "mimeType",
                              documentId: "documentId",
                              createTime: new Date("2000-01-23T04:56:07.000Z"),
                              updateTime: new Date("2000-01-23T04:56:07.000Z"),
                              author: {
                                name: "name",
                                obfuscatedId: "<id>",
                              },
                              components: [
                                "Backend",
                                "Networking",
                              ],
                              status: "[\"Done\"]",
                              customData: {
                                "someCustomField": {},
                              },
                            },
                          },
                        },
                        extractedQnA: {
                          questionResult: {
                            title: "title",
                            url: "https://example.com/foo/bar",
                            nativeAppUrl: "slack://foo/bar",
                            snippets: [
                              {
                                snippet: "snippet",
                                mimeType: "mimeType",
                              },
                            ],
                            mustIncludeSuggestions: {},
                          },
                        },
                        meeting: {
                          attendees: {
                            people: [
                              {
                                person: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                groupAttendees: [
                                  {
                                    person: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                  },
                                  {
                                    person: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                  },
                                ],
                              },
                              {
                                person: {
                                  name: "George Clooney",
                                  obfuscatedId: "abc123",
                                },
                                groupAttendees: [
                                  {
                                    person: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                  },
                                  {
                                    person: {
                                      name: "George Clooney",
                                      obfuscatedId: "abc123",
                                    },
                                  },
                                ],
                              },
                            ],
                          },
                        },
                        collection: {
                          name: "<value>",
                          description: "mismatch noisily jive worth meh following hmph analyse",
                          audienceFilters: [
                            {
                              fieldName: "type",
                              values: [
                                {
                                  value: "Spreadsheet",
                                  relationType: "EQUALS",
                                },
                                {
                                  value: "Presentation",
                                  relationType: "EQUALS",
                                },
                              ],
                            },
                          ],
                          id: 5797,
                          creator: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                        },
                        answerBoard: {
                          name: "<value>",
                          description: "pulse yum shakily notwithstanding faithfully boohoo urgently exterior before um",
                          audienceFilters: [
                            {
                              fieldName: "type",
                              values: [
                                {
                                  value: "Spreadsheet",
                                  relationType: "EQUALS",
                                },
                                {
                                  value: "Presentation",
                                  relationType: "EQUALS",
                                },
                              ],
                            },
                          ],
                          id: 609567,
                          creator: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                        },
                        code: {
                          repoName: "scio",
                          fileName: "README.md",
                        },
                        shortcut: {
                          inputAlias: "<value>",
                          createdBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          updatedBy: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                          destinationDocument: {
                            metadata: {
                              datasource: "datasource",
                              objectType: "Feature Request",
                              container: "container",
                              parentId: "JIRA_EN-1337",
                              mimeType: "mimeType",
                              documentId: "documentId",
                              createTime: new Date("2000-01-23T04:56:07.000Z"),
                              updateTime: new Date("2000-01-23T04:56:07.000Z"),
                              author: {
                                name: "name",
                                obfuscatedId: "<id>",
                              },
                              components: [
                                "Backend",
                                "Networking",
                              ],
                              status: "[\"Done\"]",
                              customData: {
                                "someCustomField": {},
                              },
                            },
                          },
                        },
                        querySuggestions: {
                          suggestions: [
                            {
                              query: "app:github type:pull author:mortimer",
                              label: "Mortimer's PRs",
                              datasource: "github",
                            },
                          ],
                          person: {
                            name: "George Clooney",
                            obfuscatedId: "abc123",
                          },
                        },
                        relatedDocuments: [
                          {
                            querySuggestion: {
                              query: "app:github type:pull author:mortimer",
                              label: "Mortimer's PRs",
                              datasource: "github",
                            },
                            results: [
                              {
                                title: "title",
                                url: "https://example.com/foo/bar",
                                nativeAppUrl: "slack://foo/bar",
                                snippets: [
                                  {
                                    snippet: "snippet",
                                    mimeType: "mimeType",
                                  },
                                ],
                                mustIncludeSuggestions: {},
                              },
                            ],
                          },
                        ],
                        relatedQuestion: {
                          ranges: [
                            {
                              startIndex: 896307,
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                            },
                            {
                              startIndex: 896307,
                              document: {
                                metadata: {
                                  datasource: "datasource",
                                  objectType: "Feature Request",
                                  container: "container",
                                  parentId: "JIRA_EN-1337",
                                  mimeType: "mimeType",
                                  documentId: "documentId",
                                  createTime: new Date("2000-01-23T04:56:07.000Z"),
                                  updateTime: new Date("2000-01-23T04:56:07.000Z"),
                                  author: {
                                    name: "name",
                                    obfuscatedId: "<id>",
                                  },
                                  components: [
                                    "Backend",
                                    "Networking",
                                  ],
                                  status: "[\"Done\"]",
                                  customData: {
                                    "someCustomField": {},
                                  },
                                },
                              },
                            },
                          ],
                        },
                      },
                    },
                  ],
                },
                audienceFilters: [
                  {
                    fieldName: "type",
                    values: [
                      {
                        value: "Spreadsheet",
                        relationType: "EQUALS",
                      },
                      {
                        value: "Presentation",
                        relationType: "EQUALS",
                      },
                    ],
                  },
                ],
                id: 121004,
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/types\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Announcements.Update(ctx, components.UpdateAnnouncementRequest{\n        StartTime: types.MustTimeFromString(\"2023-10-24T01:53:24.440Z\"),\n        EndTime: types.MustTimeFromString(\"2024-10-30T07:24:12.087Z\"),\n        Title: \"<value>\",\n        Body: &components.StructuredText{\n            Text: \"From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.\",\n            StructuredList: []components.StructuredTextItem{\n                components.StructuredTextItem{\n                    Link: apiclientgo.String(\"https://en.wikipedia.org/wiki/Diffuse_sky_radiation\"),\n                    Document: &components.Document{\n                        ContainerDocument: &components.Document{\n                            Metadata: &components.DocumentMetadata{\n                                Datasource: apiclientgo.String(\"datasource\"),\n                                ObjectType: apiclientgo.String(\"Feature Request\"),\n                                Container: apiclientgo.String(\"container\"),\n                                ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                MimeType: apiclientgo.String(\"mimeType\"),\n                                DocumentID: apiclientgo.String(\"documentId\"),\n                                CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                Author: &components.Person{\n                                    Name: \"name\",\n                                    ObfuscatedID: \"<id>\",\n                                },\n                                Components: []string{\n                                    \"Backend\",\n                                    \"Networking\",\n                                },\n                                Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                CustomData: map[string]components.CustomDataValue{\n                                    \"someCustomField\": components.CustomDataValue{},\n                                },\n                            },\n                        },\n                        ParentDocument: &components.Document{\n                            Metadata: &components.DocumentMetadata{\n                                Datasource: apiclientgo.String(\"datasource\"),\n                                ObjectType: apiclientgo.String(\"Feature Request\"),\n                                Container: apiclientgo.String(\"container\"),\n                                ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                MimeType: apiclientgo.String(\"mimeType\"),\n                                DocumentID: apiclientgo.String(\"documentId\"),\n                                CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                Author: &components.Person{\n                                    Name: \"name\",\n                                    ObfuscatedID: \"<id>\",\n                                },\n                                Components: []string{\n                                    \"Backend\",\n                                    \"Networking\",\n                                },\n                                Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                CustomData: map[string]components.CustomDataValue{\n                                    \"someCustomField\": components.CustomDataValue{},\n                                },\n                            },\n                        },\n                        Metadata: &components.DocumentMetadata{\n                            Datasource: apiclientgo.String(\"datasource\"),\n                            ObjectType: apiclientgo.String(\"Feature Request\"),\n                            Container: apiclientgo.String(\"container\"),\n                            ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                            MimeType: apiclientgo.String(\"mimeType\"),\n                            DocumentID: apiclientgo.String(\"documentId\"),\n                            CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                            UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                            Author: &components.Person{\n                                Name: \"name\",\n                                ObfuscatedID: \"<id>\",\n                            },\n                            Components: []string{\n                                \"Backend\",\n                                \"Networking\",\n                            },\n                            Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                            CustomData: map[string]components.CustomDataValue{\n                                \"someCustomField\": components.CustomDataValue{},\n                            },\n                        },\n                    },\n                    Text: apiclientgo.String(\"Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.\"),\n                    StructuredResult: &components.StructuredResult{\n                        Document: &components.Document{\n                            ContainerDocument: &components.Document{\n                                Metadata: &components.DocumentMetadata{\n                                    Datasource: apiclientgo.String(\"datasource\"),\n                                    ObjectType: apiclientgo.String(\"Feature Request\"),\n                                    Container: apiclientgo.String(\"container\"),\n                                    ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                    MimeType: apiclientgo.String(\"mimeType\"),\n                                    DocumentID: apiclientgo.String(\"documentId\"),\n                                    CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    Author: &components.Person{\n                                        Name: \"name\",\n                                        ObfuscatedID: \"<id>\",\n                                    },\n                                    Components: []string{\n                                        \"Backend\",\n                                        \"Networking\",\n                                    },\n                                    Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                    CustomData: map[string]components.CustomDataValue{\n                                        \"someCustomField\": components.CustomDataValue{},\n                                    },\n                                },\n                            },\n                            ParentDocument: &components.Document{\n                                Metadata: &components.DocumentMetadata{\n                                    Datasource: apiclientgo.String(\"datasource\"),\n                                    ObjectType: apiclientgo.String(\"Feature Request\"),\n                                    Container: apiclientgo.String(\"container\"),\n                                    ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                    MimeType: apiclientgo.String(\"mimeType\"),\n                                    DocumentID: apiclientgo.String(\"documentId\"),\n                                    CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    Author: &components.Person{\n                                        Name: \"name\",\n                                        ObfuscatedID: \"<id>\",\n                                    },\n                                    Components: []string{\n                                        \"Backend\",\n                                        \"Networking\",\n                                    },\n                                    Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                    CustomData: map[string]components.CustomDataValue{\n                                        \"someCustomField\": components.CustomDataValue{},\n                                    },\n                                },\n                            },\n                            Metadata: &components.DocumentMetadata{\n                                Datasource: apiclientgo.String(\"datasource\"),\n                                ObjectType: apiclientgo.String(\"Feature Request\"),\n                                Container: apiclientgo.String(\"container\"),\n                                ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                MimeType: apiclientgo.String(\"mimeType\"),\n                                DocumentID: apiclientgo.String(\"documentId\"),\n                                CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                Author: &components.Person{\n                                    Name: \"name\",\n                                    ObfuscatedID: \"<id>\",\n                                },\n                                Components: []string{\n                                    \"Backend\",\n                                    \"Networking\",\n                                },\n                                Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                CustomData: map[string]components.CustomDataValue{\n                                    \"someCustomField\": components.CustomDataValue{},\n                                },\n                            },\n                        },\n                        Person: &components.Person{\n                            Name: \"George Clooney\",\n                            ObfuscatedID: \"abc123\",\n                        },\n                        Customer: &components.Customer{\n                            ID: \"<id>\",\n                            Company: components.Company{\n                                Name: \"<value>\",\n                                Location: apiclientgo.String(\"New York City\"),\n                                Industry: apiclientgo.String(\"Finances\"),\n                                About: apiclientgo.String(\"Financial, software, data, and media company headquartered in Midtown Manhattan, New York City\"),\n                            },\n                            Poc: []components.Person{\n                                components.Person{\n                                    Name: \"George Clooney\",\n                                    ObfuscatedID: \"abc123\",\n                                },\n                            },\n                            MergedCustomers: []components.Customer{\n                                components.Customer{\n                                    ID: \"<id>\",\n                                    Company: components.Company{\n                                        Name: \"<value>\",\n                                        Location: apiclientgo.String(\"New York City\"),\n                                        Industry: apiclientgo.String(\"Finances\"),\n                                        About: apiclientgo.String(\"Financial, software, data, and media company headquartered in Midtown Manhattan, New York City\"),\n                                    },\n                                    Notes: apiclientgo.String(\"CIO is interested in trying out the product.\"),\n                                },\n                            },\n                            Notes: apiclientgo.String(\"CIO is interested in trying out the product.\"),\n                        },\n                        Team: &components.Team{\n                            ID: \"<id>\",\n                            Name: \"<value>\",\n                            Members: []components.PersonToTeamRelationship{\n                                components.PersonToTeamRelationship{\n                                    Person: components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                },\n                            },\n                            CustomFields: []components.CustomFieldData{\n                                components.CustomFieldData{\n                                    Label: \"<value>\",\n                                    Values: []components.CustomFieldValue{\n                                        components.CreateCustomFieldValueCustomFieldValuePerson(\n                                            components.CustomFieldValuePerson{\n                                                Person: &components.Person{\n                                                    Name: \"George Clooney\",\n                                                    ObfuscatedID: \"abc123\",\n                                                },\n                                            },\n                                        ),\n                                    },\n                                },\n                            },\n                            DatasourceProfiles: []components.DatasourceProfile{\n                                components.DatasourceProfile{\n                                    Datasource: \"github\",\n                                    Handle: \"<value>\",\n                                },\n                            },\n                        },\n                        CustomEntity: &components.CustomEntity{\n                            Roles: []components.UserRoleSpecification{\n                                components.UserRoleSpecification{\n                                    Person: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                    Role: components.UserRoleViewer,\n                                },\n                            },\n                        },\n                        Answer: &components.Answer{\n                            ID: 3,\n                            DocID: apiclientgo.String(\"ANSWERS_answer_3\"),\n                            Question: apiclientgo.String(\"Why is the sky blue?\"),\n                            BodyText: apiclientgo.String(\"From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.\"),\n                            AudienceFilters: []components.FacetFilter{\n                                components.FacetFilter{\n                                    FieldName: apiclientgo.String(\"type\"),\n                                    Values: []components.FacetFilterValue{\n                                        components.FacetFilterValue{\n                                            Value: apiclientgo.String(\"Spreadsheet\"),\n                                            RelationType: components.RelationTypeEquals.ToPointer(),\n                                        },\n                                        components.FacetFilterValue{\n                                            Value: apiclientgo.String(\"Presentation\"),\n                                            RelationType: components.RelationTypeEquals.ToPointer(),\n                                        },\n                                    },\n                                },\n                            },\n                            AddedRoles: []components.UserRoleSpecification{\n                                components.UserRoleSpecification{\n                                    Person: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                    Role: components.UserRoleAnswerModerator,\n                                },\n                            },\n                            RemovedRoles: []components.UserRoleSpecification{\n                                components.UserRoleSpecification{\n                                    Person: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                    Role: components.UserRoleOwner,\n                                },\n                            },\n                            CombinedAnswerText: &components.StructuredText{\n                                Text: \"From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.\",\n                            },\n                            Likes: &components.AnswerLikes{\n                                LikedBy: []components.AnswerLike{\n                                    components.AnswerLike{\n                                        User: &components.Person{\n                                            Name: \"George Clooney\",\n                                            ObfuscatedID: \"abc123\",\n                                        },\n                                    },\n                                },\n                                LikedByUser: true,\n                                NumLikes: 768439,\n                            },\n                            Author: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                            UpdatedBy: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                            Verification: &components.Verification{\n                                State: components.StateVerified,\n                                Metadata: &components.VerificationMetadata{\n                                    LastVerifier: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                    Document: &components.Document{\n                                        ContainerDocument: &components.Document{\n                                            Metadata: &components.DocumentMetadata{\n                                                Datasource: apiclientgo.String(\"datasource\"),\n                                                ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                Container: apiclientgo.String(\"container\"),\n                                                ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                MimeType: apiclientgo.String(\"mimeType\"),\n                                                DocumentID: apiclientgo.String(\"documentId\"),\n                                                CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                Author: &components.Person{\n                                                    Name: \"name\",\n                                                    ObfuscatedID: \"<id>\",\n                                                },\n                                                Components: []string{\n                                                    \"Backend\",\n                                                    \"Networking\",\n                                                },\n                                                Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                CustomData: map[string]components.CustomDataValue{\n                                                    \"someCustomField\": components.CustomDataValue{},\n                                                },\n                                            },\n                                        },\n                                        ParentDocument: &components.Document{\n                                            Metadata: &components.DocumentMetadata{\n                                                Datasource: apiclientgo.String(\"datasource\"),\n                                                ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                Container: apiclientgo.String(\"container\"),\n                                                ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                MimeType: apiclientgo.String(\"mimeType\"),\n                                                DocumentID: apiclientgo.String(\"documentId\"),\n                                                CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                Author: &components.Person{\n                                                    Name: \"name\",\n                                                    ObfuscatedID: \"<id>\",\n                                                },\n                                                Components: []string{\n                                                    \"Backend\",\n                                                    \"Networking\",\n                                                },\n                                                Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                CustomData: map[string]components.CustomDataValue{\n                                                    \"someCustomField\": components.CustomDataValue{},\n                                                },\n                                            },\n                                        },\n                                        Metadata: &components.DocumentMetadata{\n                                            Datasource: apiclientgo.String(\"datasource\"),\n                                            ObjectType: apiclientgo.String(\"Feature Request\"),\n                                            Container: apiclientgo.String(\"container\"),\n                                            ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                            MimeType: apiclientgo.String(\"mimeType\"),\n                                            DocumentID: apiclientgo.String(\"documentId\"),\n                                            CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                            UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                            Author: &components.Person{\n                                                Name: \"name\",\n                                                ObfuscatedID: \"<id>\",\n                                            },\n                                            Components: []string{\n                                                \"Backend\",\n                                                \"Networking\",\n                                            },\n                                            Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                            CustomData: map[string]components.CustomDataValue{\n                                                \"someCustomField\": components.CustomDataValue{},\n                                            },\n                                        },\n                                    },\n                                    Reminders: []components.Reminder{\n                                        components.Reminder{\n                                            Assignee: components.Person{\n                                                Name: \"George Clooney\",\n                                                ObfuscatedID: \"abc123\",\n                                            },\n                                            Requestor: &components.Person{\n                                                Name: \"George Clooney\",\n                                                ObfuscatedID: \"abc123\",\n                                            },\n                                            RemindAt: 69479,\n                                        },\n                                    },\n                                    LastReminder: &components.Reminder{\n                                        Assignee: components.Person{\n                                            Name: \"George Clooney\",\n                                            ObfuscatedID: \"abc123\",\n                                        },\n                                        Requestor: &components.Person{\n                                            Name: \"George Clooney\",\n                                            ObfuscatedID: \"abc123\",\n                                        },\n                                        RemindAt: 877321,\n                                    },\n                                    CandidateVerifiers: []components.Person{\n                                        components.Person{\n                                            Name: \"George Clooney\",\n                                            ObfuscatedID: \"abc123\",\n                                        },\n                                    },\n                                },\n                            },\n                            Board: &components.AnswerBoard{\n                                Name: \"<value>\",\n                                Description: \"litter anenst happy probable birdcage till\",\n                                AudienceFilters: []components.FacetFilter{\n                                    components.FacetFilter{\n                                        FieldName: apiclientgo.String(\"type\"),\n                                        Values: []components.FacetFilterValue{\n                                            components.FacetFilterValue{\n                                                Value: apiclientgo.String(\"Spreadsheet\"),\n                                                RelationType: components.RelationTypeEquals.ToPointer(),\n                                            },\n                                            components.FacetFilterValue{\n                                                Value: apiclientgo.String(\"Presentation\"),\n                                                RelationType: components.RelationTypeEquals.ToPointer(),\n                                            },\n                                        },\n                                    },\n                                },\n                                ID: 34422,\n                                Creator: &components.Person{\n                                    Name: \"George Clooney\",\n                                    ObfuscatedID: \"abc123\",\n                                },\n                                UpdatedBy: &components.Person{\n                                    Name: \"George Clooney\",\n                                    ObfuscatedID: \"abc123\",\n                                },\n                            },\n                            Collections: []components.Collection{\n                                components.Collection{\n                                    Name: \"<value>\",\n                                    Description: \"ew or every verbally\",\n                                    AudienceFilters: []components.FacetFilter{\n                                        components.FacetFilter{\n                                            FieldName: apiclientgo.String(\"type\"),\n                                            Values: []components.FacetFilterValue{\n                                                components.FacetFilterValue{\n                                                    Value: apiclientgo.String(\"Spreadsheet\"),\n                                                    RelationType: components.RelationTypeEquals.ToPointer(),\n                                                },\n                                                components.FacetFilterValue{\n                                                    Value: apiclientgo.String(\"Presentation\"),\n                                                    RelationType: components.RelationTypeEquals.ToPointer(),\n                                                },\n                                            },\n                                        },\n                                    },\n                                    ID: 297273,\n                                    Creator: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                    UpdatedBy: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                    Items: []components.CollectionItem{\n                                        components.CollectionItem{\n                                            CollectionID: 896121,\n                                            CreatedBy: &components.Person{\n                                                Name: \"George Clooney\",\n                                                ObfuscatedID: \"abc123\",\n                                            },\n                                            Document: &components.Document{\n                                                ContainerDocument: &components.Document{\n                                                    Metadata: &components.DocumentMetadata{\n                                                        Datasource: apiclientgo.String(\"datasource\"),\n                                                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                        Container: apiclientgo.String(\"container\"),\n                                                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                                        DocumentID: apiclientgo.String(\"documentId\"),\n                                                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                        Author: &components.Person{\n                                                            Name: \"name\",\n                                                            ObfuscatedID: \"<id>\",\n                                                        },\n                                                        Components: []string{\n                                                            \"Backend\",\n                                                            \"Networking\",\n                                                        },\n                                                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                        CustomData: map[string]components.CustomDataValue{\n                                                            \"someCustomField\": components.CustomDataValue{},\n                                                        },\n                                                    },\n                                                },\n                                                ParentDocument: &components.Document{\n                                                    Metadata: &components.DocumentMetadata{\n                                                        Datasource: apiclientgo.String(\"datasource\"),\n                                                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                        Container: apiclientgo.String(\"container\"),\n                                                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                                        DocumentID: apiclientgo.String(\"documentId\"),\n                                                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                        Author: &components.Person{\n                                                            Name: \"name\",\n                                                            ObfuscatedID: \"<id>\",\n                                                        },\n                                                        Components: []string{\n                                                            \"Backend\",\n                                                            \"Networking\",\n                                                        },\n                                                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                        CustomData: map[string]components.CustomDataValue{\n                                                            \"someCustomField\": components.CustomDataValue{},\n                                                        },\n                                                    },\n                                                },\n                                                Metadata: &components.DocumentMetadata{\n                                                    Datasource: apiclientgo.String(\"datasource\"),\n                                                    ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                    Container: apiclientgo.String(\"container\"),\n                                                    ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                    MimeType: apiclientgo.String(\"mimeType\"),\n                                                    DocumentID: apiclientgo.String(\"documentId\"),\n                                                    CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                    UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                    Author: &components.Person{\n                                                        Name: \"name\",\n                                                        ObfuscatedID: \"<id>\",\n                                                    },\n                                                    Components: []string{\n                                                        \"Backend\",\n                                                        \"Networking\",\n                                                    },\n                                                    Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                    CustomData: map[string]components.CustomDataValue{\n                                                        \"someCustomField\": components.CustomDataValue{},\n                                                    },\n                                                },\n                                            },\n                                            Shortcut: &components.Shortcut{\n                                                InputAlias: \"<value>\",\n                                                CreatedBy: &components.Person{\n                                                    Name: \"George Clooney\",\n                                                    ObfuscatedID: \"abc123\",\n                                                },\n                                                UpdatedBy: &components.Person{\n                                                    Name: \"George Clooney\",\n                                                    ObfuscatedID: \"abc123\",\n                                                },\n                                                DestinationDocument: &components.Document{\n                                                    ContainerDocument: &components.Document{\n                                                        Metadata: &components.DocumentMetadata{\n                                                            Datasource: apiclientgo.String(\"datasource\"),\n                                                            ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                            Container: apiclientgo.String(\"container\"),\n                                                            ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                            MimeType: apiclientgo.String(\"mimeType\"),\n                                                            DocumentID: apiclientgo.String(\"documentId\"),\n                                                            CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                            UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                            Author: &components.Person{\n                                                                Name: \"name\",\n                                                                ObfuscatedID: \"<id>\",\n                                                            },\n                                                            Components: []string{\n                                                                \"Backend\",\n                                                                \"Networking\",\n                                                            },\n                                                            Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                            CustomData: map[string]components.CustomDataValue{\n                                                                \"someCustomField\": components.CustomDataValue{},\n                                                            },\n                                                        },\n                                                    },\n                                                    ParentDocument: &components.Document{\n                                                        Metadata: &components.DocumentMetadata{\n                                                            Datasource: apiclientgo.String(\"datasource\"),\n                                                            ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                            Container: apiclientgo.String(\"container\"),\n                                                            ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                            MimeType: apiclientgo.String(\"mimeType\"),\n                                                            DocumentID: apiclientgo.String(\"documentId\"),\n                                                            CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                            UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                            Author: &components.Person{\n                                                                Name: \"name\",\n                                                                ObfuscatedID: \"<id>\",\n                                                            },\n                                                            Components: []string{\n                                                                \"Backend\",\n                                                                \"Networking\",\n                                                            },\n                                                            Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                            CustomData: map[string]components.CustomDataValue{\n                                                                \"someCustomField\": components.CustomDataValue{},\n                                                            },\n                                                        },\n                                                    },\n                                                    Metadata: &components.DocumentMetadata{\n                                                        Datasource: apiclientgo.String(\"datasource\"),\n                                                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                        Container: apiclientgo.String(\"container\"),\n                                                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                                        DocumentID: apiclientgo.String(\"documentId\"),\n                                                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                        Author: &components.Person{\n                                                            Name: \"name\",\n                                                            ObfuscatedID: \"<id>\",\n                                                        },\n                                                        Components: []string{\n                                                            \"Backend\",\n                                                            \"Networking\",\n                                                        },\n                                                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                        CustomData: map[string]components.CustomDataValue{\n                                                            \"someCustomField\": components.CustomDataValue{},\n                                                        },\n                                                    },\n                                                },\n                                            },\n                                            Collection: &components.Collection{\n                                                Name: \"<value>\",\n                                                Description: \"shy versus chunder monocle\",\n                                                AudienceFilters: []components.FacetFilter{\n                                                    components.FacetFilter{\n                                                        FieldName: apiclientgo.String(\"type\"),\n                                                        Values: []components.FacetFilterValue{\n                                                            components.FacetFilterValue{\n                                                                Value: apiclientgo.String(\"Spreadsheet\"),\n                                                                RelationType: components.RelationTypeEquals.ToPointer(),\n                                                            },\n                                                            components.FacetFilterValue{\n                                                                Value: apiclientgo.String(\"Presentation\"),\n                                                                RelationType: components.RelationTypeEquals.ToPointer(),\n                                                            },\n                                                        },\n                                                    },\n                                                },\n                                                ID: 455912,\n                                                Creator: &components.Person{\n                                                    Name: \"George Clooney\",\n                                                    ObfuscatedID: \"abc123\",\n                                                },\n                                                UpdatedBy: &components.Person{\n                                                    Name: \"George Clooney\",\n                                                    ObfuscatedID: \"abc123\",\n                                                },\n                                                Children: []components.Collection{\n                                                    components.Collection{\n                                                        Name: \"<value>\",\n                                                        Description: \"though mismatch noisily jive worth meh following hmph analyse guidance\",\n                                                        AudienceFilters: []components.FacetFilter{\n                                                            components.FacetFilter{\n                                                                FieldName: apiclientgo.String(\"type\"),\n                                                                Values: []components.FacetFilterValue{\n                                                                    components.FacetFilterValue{\n                                                                        Value: apiclientgo.String(\"Spreadsheet\"),\n                                                                        RelationType: components.RelationTypeEquals.ToPointer(),\n                                                                    },\n                                                                    components.FacetFilterValue{\n                                                                        Value: apiclientgo.String(\"Presentation\"),\n                                                                        RelationType: components.RelationTypeEquals.ToPointer(),\n                                                                    },\n                                                                },\n                                                            },\n                                                        },\n                                                        ID: 432713,\n                                                        Creator: &components.Person{\n                                                            Name: \"George Clooney\",\n                                                            ObfuscatedID: \"abc123\",\n                                                        },\n                                                        UpdatedBy: &components.Person{\n                                                            Name: \"George Clooney\",\n                                                            ObfuscatedID: \"abc123\",\n                                                        },\n                                                    },\n                                                },\n                                            },\n                                            ItemType: components.CollectionItemItemTypeURL,\n                                        },\n                                    },\n                                },\n                            },\n                            SourceDocument: &components.Document{\n                                ContainerDocument: &components.Document{\n                                    Metadata: &components.DocumentMetadata{\n                                        Datasource: apiclientgo.String(\"datasource\"),\n                                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                                        Container: apiclientgo.String(\"container\"),\n                                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                        DocumentID: apiclientgo.String(\"documentId\"),\n                                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        Author: &components.Person{\n                                            Name: \"name\",\n                                            ObfuscatedID: \"<id>\",\n                                        },\n                                        Components: []string{\n                                            \"Backend\",\n                                            \"Networking\",\n                                        },\n                                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                        CustomData: map[string]components.CustomDataValue{\n                                            \"someCustomField\": components.CustomDataValue{},\n                                        },\n                                    },\n                                },\n                                ParentDocument: &components.Document{\n                                    Metadata: &components.DocumentMetadata{\n                                        Datasource: apiclientgo.String(\"datasource\"),\n                                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                                        Container: apiclientgo.String(\"container\"),\n                                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                        DocumentID: apiclientgo.String(\"documentId\"),\n                                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        Author: &components.Person{\n                                            Name: \"name\",\n                                            ObfuscatedID: \"<id>\",\n                                        },\n                                        Components: []string{\n                                            \"Backend\",\n                                            \"Networking\",\n                                        },\n                                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                        CustomData: map[string]components.CustomDataValue{\n                                            \"someCustomField\": components.CustomDataValue{},\n                                        },\n                                    },\n                                },\n                                Metadata: &components.DocumentMetadata{\n                                    Datasource: apiclientgo.String(\"datasource\"),\n                                    ObjectType: apiclientgo.String(\"Feature Request\"),\n                                    Container: apiclientgo.String(\"container\"),\n                                    ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                    MimeType: apiclientgo.String(\"mimeType\"),\n                                    DocumentID: apiclientgo.String(\"documentId\"),\n                                    CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    Author: &components.Person{\n                                        Name: \"name\",\n                                        ObfuscatedID: \"<id>\",\n                                    },\n                                    Components: []string{\n                                        \"Backend\",\n                                        \"Networking\",\n                                    },\n                                    Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                    CustomData: map[string]components.CustomDataValue{\n                                        \"someCustomField\": components.CustomDataValue{},\n                                    },\n                                },\n                            },\n                        },\n                        ExtractedQnA: &components.ExtractedQnA{\n                            QuestionResult: &components.SearchResult{\n                                Title: apiclientgo.String(\"title\"),\n                                URL: \"https://example.com/foo/bar\",\n                                NativeAppURL: apiclientgo.String(\"slack://foo/bar\"),\n                                Snippets: []components.SearchResultSnippet{\n                                    components.SearchResultSnippet{\n                                        Snippet: \"snippet\",\n                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                    },\n                                },\n                                MustIncludeSuggestions: &components.QuerySuggestionList{\n                                    Suggestions: []components.QuerySuggestion{\n                                        components.QuerySuggestion{\n                                            Query: \"app:github type:pull author:mortimer\",\n                                            Label: apiclientgo.String(\"Mortimer's PRs\"),\n                                            Datasource: apiclientgo.String(\"github\"),\n                                        },\n                                    },\n                                    Person: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                },\n                            },\n                        },\n                        Meeting: &components.Meeting{\n                            Attendees: &components.CalendarAttendees{\n                                People: []components.CalendarAttendee{\n                                    components.CalendarAttendee{\n                                        Person: components.Person{\n                                            Name: \"George Clooney\",\n                                            ObfuscatedID: \"abc123\",\n                                        },\n                                        GroupAttendees: []components.CalendarAttendee{\n                                            components.CalendarAttendee{\n                                                Person: components.Person{\n                                                    Name: \"George Clooney\",\n                                                    ObfuscatedID: \"abc123\",\n                                                },\n                                            },\n                                        },\n                                    },\n                                },\n                            },\n                        },\n                        Collection: &components.Collection{\n                            Name: \"<value>\",\n                            Description: \"shy versus chunder monocle\",\n                            AudienceFilters: []components.FacetFilter{\n                                components.FacetFilter{\n                                    FieldName: apiclientgo.String(\"type\"),\n                                    Values: []components.FacetFilterValue{\n                                        components.FacetFilterValue{\n                                            Value: apiclientgo.String(\"Spreadsheet\"),\n                                            RelationType: components.RelationTypeEquals.ToPointer(),\n                                        },\n                                        components.FacetFilterValue{\n                                            Value: apiclientgo.String(\"Presentation\"),\n                                            RelationType: components.RelationTypeEquals.ToPointer(),\n                                        },\n                                    },\n                                },\n                            },\n                            ID: 455912,\n                            Creator: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                            UpdatedBy: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                            Children: []components.Collection{\n                                components.Collection{\n                                    Name: \"<value>\",\n                                    Description: \"though mismatch noisily jive worth meh following hmph analyse guidance\",\n                                    AudienceFilters: []components.FacetFilter{\n                                        components.FacetFilter{\n                                            FieldName: apiclientgo.String(\"type\"),\n                                            Values: []components.FacetFilterValue{\n                                                components.FacetFilterValue{\n                                                    Value: apiclientgo.String(\"Spreadsheet\"),\n                                                    RelationType: components.RelationTypeEquals.ToPointer(),\n                                                },\n                                                components.FacetFilterValue{\n                                                    Value: apiclientgo.String(\"Presentation\"),\n                                                    RelationType: components.RelationTypeEquals.ToPointer(),\n                                                },\n                                            },\n                                        },\n                                    },\n                                    ID: 432713,\n                                    Creator: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                    UpdatedBy: &components.Person{\n                                        Name: \"George Clooney\",\n                                        ObfuscatedID: \"abc123\",\n                                    },\n                                },\n                            },\n                        },\n                        AnswerBoard: &components.AnswerBoard{\n                            Name: \"<value>\",\n                            Description: \"bookend dense second-hand\",\n                            AudienceFilters: []components.FacetFilter{\n                                components.FacetFilter{\n                                    FieldName: apiclientgo.String(\"type\"),\n                                    Values: []components.FacetFilterValue{\n                                        components.FacetFilterValue{\n                                            Value: apiclientgo.String(\"Spreadsheet\"),\n                                            RelationType: components.RelationTypeEquals.ToPointer(),\n                                        },\n                                        components.FacetFilterValue{\n                                            Value: apiclientgo.String(\"Presentation\"),\n                                            RelationType: components.RelationTypeEquals.ToPointer(),\n                                        },\n                                    },\n                                },\n                            },\n                            ID: 964771,\n                            Creator: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                            UpdatedBy: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                        },\n                        Code: &components.Code{\n                            RepoName: apiclientgo.String(\"scio\"),\n                            FileName: apiclientgo.String(\"README.md\"),\n                        },\n                        Shortcut: &components.Shortcut{\n                            InputAlias: \"<value>\",\n                            CreatedBy: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                            UpdatedBy: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                            DestinationDocument: &components.Document{\n                                ContainerDocument: &components.Document{\n                                    Metadata: &components.DocumentMetadata{\n                                        Datasource: apiclientgo.String(\"datasource\"),\n                                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                                        Container: apiclientgo.String(\"container\"),\n                                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                        DocumentID: apiclientgo.String(\"documentId\"),\n                                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        Author: &components.Person{\n                                            Name: \"name\",\n                                            ObfuscatedID: \"<id>\",\n                                        },\n                                        Components: []string{\n                                            \"Backend\",\n                                            \"Networking\",\n                                        },\n                                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                        CustomData: map[string]components.CustomDataValue{\n                                            \"someCustomField\": components.CustomDataValue{},\n                                        },\n                                    },\n                                },\n                                ParentDocument: &components.Document{\n                                    Metadata: &components.DocumentMetadata{\n                                        Datasource: apiclientgo.String(\"datasource\"),\n                                        ObjectType: apiclientgo.String(\"Feature Request\"),\n                                        Container: apiclientgo.String(\"container\"),\n                                        ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                        MimeType: apiclientgo.String(\"mimeType\"),\n                                        DocumentID: apiclientgo.String(\"documentId\"),\n                                        CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                        Author: &components.Person{\n                                            Name: \"name\",\n                                            ObfuscatedID: \"<id>\",\n                                        },\n                                        Components: []string{\n                                            \"Backend\",\n                                            \"Networking\",\n                                        },\n                                        Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                        CustomData: map[string]components.CustomDataValue{\n                                            \"someCustomField\": components.CustomDataValue{},\n                                        },\n                                    },\n                                },\n                                Metadata: &components.DocumentMetadata{\n                                    Datasource: apiclientgo.String(\"datasource\"),\n                                    ObjectType: apiclientgo.String(\"Feature Request\"),\n                                    Container: apiclientgo.String(\"container\"),\n                                    ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                    MimeType: apiclientgo.String(\"mimeType\"),\n                                    DocumentID: apiclientgo.String(\"documentId\"),\n                                    CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                    Author: &components.Person{\n                                        Name: \"name\",\n                                        ObfuscatedID: \"<id>\",\n                                    },\n                                    Components: []string{\n                                        \"Backend\",\n                                        \"Networking\",\n                                    },\n                                    Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                    CustomData: map[string]components.CustomDataValue{\n                                        \"someCustomField\": components.CustomDataValue{},\n                                    },\n                                },\n                            },\n                        },\n                        QuerySuggestions: &components.QuerySuggestionList{\n                            Person: &components.Person{\n                                Name: \"George Clooney\",\n                                ObfuscatedID: \"abc123\",\n                            },\n                        },\n                        RelatedDocuments: []components.RelatedDocuments{\n                            components.RelatedDocuments{\n                                QuerySuggestion: &components.QuerySuggestion{\n                                    Query: \"app:github type:pull author:mortimer\",\n                                    Label: apiclientgo.String(\"Mortimer's PRs\"),\n                                    Datasource: apiclientgo.String(\"github\"),\n                                },\n                                Results: []components.SearchResult{\n                                    components.SearchResult{\n                                        Title: apiclientgo.String(\"title\"),\n                                        URL: \"https://example.com/foo/bar\",\n                                        NativeAppURL: apiclientgo.String(\"slack://foo/bar\"),\n                                        Snippets: []components.SearchResultSnippet{\n                                            components.SearchResultSnippet{\n                                                Snippet: \"snippet\",\n                                                MimeType: apiclientgo.String(\"mimeType\"),\n                                            },\n                                        },\n                                        MustIncludeSuggestions: &components.QuerySuggestionList{\n                                            Person: &components.Person{\n                                                Name: \"George Clooney\",\n                                                ObfuscatedID: \"abc123\",\n                                            },\n                                        },\n                                    },\n                                },\n                            },\n                        },\n                        RelatedQuestion: &components.RelatedQuestion{\n                            Ranges: []components.TextRange{\n                                components.TextRange{\n                                    StartIndex: 766177,\n                                    Document: &components.Document{\n                                        ContainerDocument: &components.Document{\n                                            Metadata: &components.DocumentMetadata{\n                                                Datasource: apiclientgo.String(\"datasource\"),\n                                                ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                Container: apiclientgo.String(\"container\"),\n                                                ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                MimeType: apiclientgo.String(\"mimeType\"),\n                                                DocumentID: apiclientgo.String(\"documentId\"),\n                                                CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                Author: &components.Person{\n                                                    Name: \"name\",\n                                                    ObfuscatedID: \"<id>\",\n                                                },\n                                                Components: []string{\n                                                    \"Backend\",\n                                                    \"Networking\",\n                                                },\n                                                Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                CustomData: map[string]components.CustomDataValue{\n                                                    \"someCustomField\": components.CustomDataValue{},\n                                                },\n                                            },\n                                        },\n                                        ParentDocument: &components.Document{\n                                            Metadata: &components.DocumentMetadata{\n                                                Datasource: apiclientgo.String(\"datasource\"),\n                                                ObjectType: apiclientgo.String(\"Feature Request\"),\n                                                Container: apiclientgo.String(\"container\"),\n                                                ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                                MimeType: apiclientgo.String(\"mimeType\"),\n                                                DocumentID: apiclientgo.String(\"documentId\"),\n                                                CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                                Author: &components.Person{\n                                                    Name: \"name\",\n                                                    ObfuscatedID: \"<id>\",\n                                                },\n                                                Components: []string{\n                                                    \"Backend\",\n                                                    \"Networking\",\n                                                },\n                                                Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                                CustomData: map[string]components.CustomDataValue{\n                                                    \"someCustomField\": components.CustomDataValue{},\n                                                },\n                                            },\n                                        },\n                                        Metadata: &components.DocumentMetadata{\n                                            Datasource: apiclientgo.String(\"datasource\"),\n                                            ObjectType: apiclientgo.String(\"Feature Request\"),\n                                            Container: apiclientgo.String(\"container\"),\n                                            ParentID: apiclientgo.String(\"JIRA_EN-1337\"),\n                                            MimeType: apiclientgo.String(\"mimeType\"),\n                                            DocumentID: apiclientgo.String(\"documentId\"),\n                                            CreateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                            UpdateTime: types.MustNewTimeFromString(\"2000-01-23T04:56:07.000Z\"),\n                                            Author: &components.Person{\n                                                Name: \"name\",\n                                                ObfuscatedID: \"<id>\",\n                                            },\n                                            Components: []string{\n                                                \"Backend\",\n                                                \"Networking\",\n                                            },\n                                            Status: apiclientgo.String(\"[\\\"Done\\\"]\"),\n                                            CustomData: map[string]components.CustomDataValue{\n                                                \"someCustomField\": components.CustomDataValue{},\n                                            },\n                                        },\n                                    },\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n        AudienceFilters: []components.FacetFilter{\n            components.FacetFilter{\n                FieldName: apiclientgo.String(\"type\"),\n                Values: []components.FacetFilterValue{\n                    components.FacetFilterValue{\n                        Value: apiclientgo.String(\"Spreadsheet\"),\n                        RelationType: components.RelationTypeEquals.ToPointer(),\n                    },\n                    components.FacetFilterValue{\n                        Value: apiclientgo.String(\"Presentation\"),\n                        RelationType: components.RelationTypeEquals.ToPointer(),\n                    },\n                },\n            },\n        },\n        ID: 210913,\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.Announcement != nil {\n        // handle response\n    }\n}"
        - lang: java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.time.OffsetDateTime;
            import java.util.List;
            import java.util.Map;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.*;
            import org.openapis.openapi.models.operations.UpdateannouncementResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken("<YOUR_BEARER_TOKEN_HERE>")
                            .instance("<YOUR_GLEAN_INSTANCE_HERE>")
                        .build();

                    UpdateAnnouncementRequest req = UpdateAnnouncementRequest.builder()
                            .startTime(OffsetDateTime.parse("2023-10-24T01:53:24.440Z"))
                            .endTime(OffsetDateTime.parse("2024-10-30T07:24:12.087Z"))
                            .title("<value>")
                            .id(210913L)
                            .body(StructuredText.builder()
                                .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                .structuredList(List.of(
                                    StructuredTextItem.builder()
                                        .link("https://en.wikipedia.org/wiki/Diffuse_sky_radiation")
                                        .document(Document.builder()
                                            .containerDocument(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .parentDocument(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .metadata(DocumentMetadata.builder()
                                                .datasource("datasource")
                                                .objectType("Feature Request")
                                                .container("container")
                                                .parentId("JIRA_EN-1337")
                                                .mimeType("mimeType")
                                                .documentId("documentId")
                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                .author(Person.builder()
                                                    .name("name")
                                                    .obfuscatedId("<id>")
                                                    .build())
                                                .components(List.of(
                                                    "Backend",
                                                    "Networking"))
                                                .status("[\"Done\"]")
                                                .customData(Map.ofEntries(
                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                        .build())))
                                                .build())
                                            .build())
                                        .text("Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.")
                                        .structuredResult(StructuredResult.builder()
                                            .document(Document.builder()
                                                .containerDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .parentDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .poc(List.of(
                                                    Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build()))
                                                .mergedCustomers(List.of(
                                                    Customer.builder()
                                                        .id("<id>")
                                                        .company(Company.builder()
                                                            .name("<value>")
                                                            .location("New York City")
                                                            .industry("Finances")
                                                            .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                            .build())
                                                        .notes("CIO is interested in trying out the product.")
                                                        .build()))
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .members(List.of(
                                                    PersonToTeamRelationship.builder()
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .customFields(List.of(
                                                    CustomFieldData.builder()
                                                        .label("<value>")
                                                        .values(List.of(
                                                            CustomFieldValue.of(CustomFieldValuePerson.builder()
                                                                .person(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build())))
                                                        .build()))
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .roles(List.of(
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.VIEWER)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .addedRoles(List.of(
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.ANSWER_MODERATOR)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .removedRoles(List.of(
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.OWNER)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of(
                                                        AnswerLike.builder()
                                                            .user(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build()))
                                                    .likedByUser(true)
                                                    .numLikes(768439L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.VERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .containerDocument(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .parentDocument(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .reminders(List.of(
                                                            Reminder.builder()
                                                                .assignee(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .remindAt(69479L)
                                                                .requestor(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build()))
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(877321L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .candidateVerifiers(List.of(
                                                            Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("litter anenst happy probable birdcage till")
                                                    .id(34422L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .collections(List.of(
                                                    Collection.builder()
                                                        .name("<value>")
                                                        .description("ew or every verbally")
                                                        .id(297273L)
                                                        .audienceFilters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .creator(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .updatedBy(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .items(List.of(
                                                            CollectionItem.builder()
                                                                .collectionId(896121L)
                                                                .itemType(CollectionItemItemType.URL)
                                                                .createdBy(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .document(Document.builder()
                                                                    .containerDocument(Document.builder()
                                                                        .metadata(DocumentMetadata.builder()
                                                                            .datasource("datasource")
                                                                            .objectType("Feature Request")
                                                                            .container("container")
                                                                            .parentId("JIRA_EN-1337")
                                                                            .mimeType("mimeType")
                                                                            .documentId("documentId")
                                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .author(Person.builder()
                                                                                .name("name")
                                                                                .obfuscatedId("<id>")
                                                                                .build())
                                                                            .components(List.of(
                                                                                "Backend",
                                                                                "Networking"))
                                                                            .status("[\"Done\"]")
                                                                            .customData(Map.ofEntries(
                                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                                    .build())))
                                                                            .build())
                                                                        .build())
                                                                    .parentDocument(Document.builder()
                                                                        .metadata(DocumentMetadata.builder()
                                                                            .datasource("datasource")
                                                                            .objectType("Feature Request")
                                                                            .container("container")
                                                                            .parentId("JIRA_EN-1337")
                                                                            .mimeType("mimeType")
                                                                            .documentId("documentId")
                                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .author(Person.builder()
                                                                                .name("name")
                                                                                .obfuscatedId("<id>")
                                                                                .build())
                                                                            .components(List.of(
                                                                                "Backend",
                                                                                "Networking"))
                                                                            .status("[\"Done\"]")
                                                                            .customData(Map.ofEntries(
                                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                                    .build())))
                                                                            .build())
                                                                        .build())
                                                                    .metadata(DocumentMetadata.builder()
                                                                        .datasource("datasource")
                                                                        .objectType("Feature Request")
                                                                        .container("container")
                                                                        .parentId("JIRA_EN-1337")
                                                                        .mimeType("mimeType")
                                                                        .documentId("documentId")
                                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                        .author(Person.builder()
                                                                            .name("name")
                                                                            .obfuscatedId("<id>")
                                                                            .build())
                                                                        .components(List.of(
                                                                            "Backend",
                                                                            "Networking"))
                                                                        .status("[\"Done\"]")
                                                                        .customData(Map.ofEntries(
                                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                                .build())))
                                                                        .build())
                                                                    .build())
                                                                .shortcut(Shortcut.builder()
                                                                    .inputAlias("<value>")
                                                                    .createdBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .updatedBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .destinationDocument(Document.builder()
                                                                        .containerDocument(Document.builder()
                                                                            .metadata(DocumentMetadata.builder()
                                                                                .datasource("datasource")
                                                                                .objectType("Feature Request")
                                                                                .container("container")
                                                                                .parentId("JIRA_EN-1337")
                                                                                .mimeType("mimeType")
                                                                                .documentId("documentId")
                                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                                .author(Person.builder()
                                                                                    .name("name")
                                                                                    .obfuscatedId("<id>")
                                                                                    .build())
                                                                                .components(List.of(
                                                                                    "Backend",
                                                                                    "Networking"))
                                                                                .status("[\"Done\"]")
                                                                                .customData(Map.ofEntries(
                                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                                        .build())))
                                                                                .build())
                                                                            .build())
                                                                        .parentDocument(Document.builder()
                                                                            .metadata(DocumentMetadata.builder()
                                                                                .datasource("datasource")
                                                                                .objectType("Feature Request")
                                                                                .container("container")
                                                                                .parentId("JIRA_EN-1337")
                                                                                .mimeType("mimeType")
                                                                                .documentId("documentId")
                                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                                .author(Person.builder()
                                                                                    .name("name")
                                                                                    .obfuscatedId("<id>")
                                                                                    .build())
                                                                                .components(List.of(
                                                                                    "Backend",
                                                                                    "Networking"))
                                                                                .status("[\"Done\"]")
                                                                                .customData(Map.ofEntries(
                                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                                        .build())))
                                                                                .build())
                                                                            .build())
                                                                        .metadata(DocumentMetadata.builder()
                                                                            .datasource("datasource")
                                                                            .objectType("Feature Request")
                                                                            .container("container")
                                                                            .parentId("JIRA_EN-1337")
                                                                            .mimeType("mimeType")
                                                                            .documentId("documentId")
                                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .author(Person.builder()
                                                                                .name("name")
                                                                                .obfuscatedId("<id>")
                                                                                .build())
                                                                            .components(List.of(
                                                                                "Backend",
                                                                                "Networking"))
                                                                            .status("[\"Done\"]")
                                                                            .customData(Map.ofEntries(
                                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                                    .build())))
                                                                            .build())
                                                                        .build())
                                                                    .build())
                                                                .collection(Collection.builder()
                                                                    .name("<value>")
                                                                    .description("shy versus chunder monocle")
                                                                    .id(455912L)
                                                                    .audienceFilters(List.of(
                                                                        FacetFilter.builder()
                                                                            .fieldName("type")
                                                                            .values(List.of(
                                                                                FacetFilterValue.builder()
                                                                                    .value("Spreadsheet")
                                                                                    .relationType(RelationType.EQUALS)
                                                                                    .build(),
                                                                                FacetFilterValue.builder()
                                                                                    .value("Presentation")
                                                                                    .relationType(RelationType.EQUALS)
                                                                                    .build()))
                                                                            .build()))
                                                                    .creator(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .updatedBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .children(List.of(
                                                                        Collection.builder()
                                                                            .name("<value>")
                                                                            .description("though mismatch noisily jive worth meh following hmph analyse guidance")
                                                                            .id(432713L)
                                                                            .audienceFilters(List.of(
                                                                                FacetFilter.builder()
                                                                                    .fieldName("type")
                                                                                    .values(List.of(
                                                                                        FacetFilterValue.builder()
                                                                                            .value("Spreadsheet")
                                                                                            .relationType(RelationType.EQUALS)
                                                                                            .build(),
                                                                                        FacetFilterValue.builder()
                                                                                            .value("Presentation")
                                                                                            .relationType(RelationType.EQUALS)
                                                                                            .build()))
                                                                                    .build()))
                                                                            .creator(Person.builder()
                                                                                .name("George Clooney")
                                                                                .obfuscatedId("abc123")
                                                                                .build())
                                                                            .updatedBy(Person.builder()
                                                                                .name("George Clooney")
                                                                                .obfuscatedId("abc123")
                                                                                .build())
                                                                            .build()))
                                                                    .build())
                                                                .build()))
                                                        .build()))
                                                .sourceDocument(Document.builder()
                                                    .containerDocument(Document.builder()
                                                        .metadata(DocumentMetadata.builder()
                                                            .datasource("datasource")
                                                            .objectType("Feature Request")
                                                            .container("container")
                                                            .parentId("JIRA_EN-1337")
                                                            .mimeType("mimeType")
                                                            .documentId("documentId")
                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .author(Person.builder()
                                                                .name("name")
                                                                .obfuscatedId("<id>")
                                                                .build())
                                                            .components(List.of(
                                                                "Backend",
                                                                "Networking"))
                                                            .status("[\"Done\"]")
                                                            .customData(Map.ofEntries(
                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                    .build())))
                                                            .build())
                                                        .build())
                                                    .parentDocument(Document.builder()
                                                        .metadata(DocumentMetadata.builder()
                                                            .datasource("datasource")
                                                            .objectType("Feature Request")
                                                            .container("container")
                                                            .parentId("JIRA_EN-1337")
                                                            .mimeType("mimeType")
                                                            .documentId("documentId")
                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .author(Person.builder()
                                                                .name("name")
                                                                .obfuscatedId("<id>")
                                                                .build())
                                                            .components(List.of(
                                                                "Backend",
                                                                "Networking"))
                                                            .status("[\"Done\"]")
                                                            .customData(Map.ofEntries(
                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                    .build())))
                                                            .build())
                                                        .build())
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .snippets(List.of(
                                                        SearchResultSnippet.builder()
                                                            .snippet("snippet")
                                                            .mimeType("mimeType")
                                                            .build()))
                                                    .mustIncludeSuggestions(QuerySuggestionList.builder()
                                                        .suggestions(List.of(
                                                            QuerySuggestion.builder()
                                                                .query("app:github type:pull author:mortimer")
                                                                .label("Mortimer's PRs")
                                                                .datasource("github")
                                                                .build()))
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build())
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .people(List.of(
                                                        CalendarAttendee.builder()
                                                            .person(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .groupAttendees(List.of(
                                                                CalendarAttendee.builder()
                                                                    .person(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .build()))
                                                            .build()))
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("shy versus chunder monocle")
                                                .id(455912L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .children(List.of(
                                                    Collection.builder()
                                                        .name("<value>")
                                                        .description("though mismatch noisily jive worth meh following hmph analyse guidance")
                                                        .id(432713L)
                                                        .audienceFilters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .creator(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .updatedBy(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("bookend dense second-hand")
                                                .id(964771L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .containerDocument(Document.builder()
                                                        .metadata(DocumentMetadata.builder()
                                                            .datasource("datasource")
                                                            .objectType("Feature Request")
                                                            .container("container")
                                                            .parentId("JIRA_EN-1337")
                                                            .mimeType("mimeType")
                                                            .documentId("documentId")
                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .author(Person.builder()
                                                                .name("name")
                                                                .obfuscatedId("<id>")
                                                                .build())
                                                            .components(List.of(
                                                                "Backend",
                                                                "Networking"))
                                                            .status("[\"Done\"]")
                                                            .customData(Map.ofEntries(
                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                    .build())))
                                                            .build())
                                                        .build())
                                                    .parentDocument(Document.builder()
                                                        .metadata(DocumentMetadata.builder()
                                                            .datasource("datasource")
                                                            .objectType("Feature Request")
                                                            .container("container")
                                                            .parentId("JIRA_EN-1337")
                                                            .mimeType("mimeType")
                                                            .documentId("documentId")
                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .author(Person.builder()
                                                                .name("name")
                                                                .obfuscatedId("<id>")
                                                                .build())
                                                            .components(List.of(
                                                                "Backend",
                                                                "Networking"))
                                                            .status("[\"Done\"]")
                                                            .customData(Map.ofEntries(
                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                    .build())))
                                                            .build())
                                                        .build())
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedDocuments(List.of(
                                                RelatedDocuments.builder()
                                                    .querySuggestion(QuerySuggestion.builder()
                                                        .query("app:github type:pull author:mortimer")
                                                        .label("Mortimer's PRs")
                                                        .datasource("github")
                                                        .build())
                                                    .results(List.of(
                                                        SearchResult.builder()
                                                            .url("https://example.com/foo/bar")
                                                            .title("title")
                                                            .nativeAppUrl("slack://foo/bar")
                                                            .snippets(List.of(
                                                                SearchResultSnippet.builder()
                                                                    .snippet("snippet")
                                                                    .mimeType("mimeType")
                                                                    .build()))
                                                            .mustIncludeSuggestions(QuerySuggestionList.builder()
                                                                .person(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build())
                                                            .build()))
                                                    .build()))
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .ranges(List.of(
                                                    TextRange.builder()
                                                        .startIndex(766177L)
                                                        .document(Document.builder()
                                                            .containerDocument(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .parentDocument(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .build()))
                                                .build())
                                            .build())
                                        .build()))
                                .build())
                            .audienceFilters(List.of(
                                FacetFilter.builder()
                                    .fieldName("type")
                                    .values(List.of(
                                        FacetFilterValue.builder()
                                            .value("Spreadsheet")
                                            .relationType(RelationType.EQUALS)
                                            .build(),
                                        FacetFilterValue.builder()
                                            .value("Presentation")
                                            .relationType(RelationType.EQUALS)
                                            .build()))
                                    .build()))
                            .build();

                    UpdateannouncementResponse res = sdk.client().announcements().update()
                            .request(req)
                            .call();

                    if (res.announcement().isPresent()) {
                        // handle response
                    }
                }
            }
components:
  schemas:
    CreateAnnouncementRequest:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
          description: The date and time at which the announcement becomes active.
        endTime:
          type: string
          format: date-time
          description: The date and time at which the announcement expires.
        title:
          type: string
          description: The headline of the announcement.
        body:
          type: object
          properties:
            text:
              type: string
              example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
            structuredList:
              type: array
              description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
              items:
                properties:
                  link:
                    type: string
                    example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
                  document:
                    properties:
                      id:
                        type: string
                        description: The Glean Document ID.
                      datasource:
                        type: string
                        description: The app or other repository type from which the document was extracted
                      connectorType:
                        type: string
                        description: The source from which document content was pulled, e.g. an API crawl or browser history
                        enum:
                          - API_CRAWL
                          - BROWSER_CRAWL
                          - BROWSER_HISTORY
                          - BUILTIN
                          - FEDERATED_SEARCH
                          - PUSH_API
                          - WEB_CRAWL
                          - NATIVE_HISTORY
                      docType:
                        type: string
                        description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                      content:
                        properties:
                          fullTextList:
                            type: array
                            description: The plaintext content of the document.
                            items:
                              type: string
                        type: object
                      containerDocument:
                        type: object
                        description: Document object
                      parentDocument:
                        type: object
                        description: Document object
                      title:
                        type: string
                        description: The title of the document.
                      url:
                        type: string
                        description: A permalink for the document.
                      metadata:
                        type: object
                        description: DocumentMetadata object
                      sections:
                        type: array
                        description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                              description: The title of the document section (e.g. the section header).
                            url:
                              type: string
                              description: The permalink of the document section.
                    type: object
                  text:
                    type: string
                    example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
                  structuredResult:
                    description: A single object that can support any object in the work graph. Only a single object will be populated.
                    properties:
                      document:
                        properties:
                          id:
                            type: string
                            description: The Glean Document ID.
                          datasource:
                            type: string
                            description: The app or other repository type from which the document was extracted
                          connectorType:
                            type: string
                            description: The source from which document content was pulled, e.g. an API crawl or browser history
                            enum:
                              - API_CRAWL
                              - BROWSER_CRAWL
                              - BROWSER_HISTORY
                              - BUILTIN
                              - FEDERATED_SEARCH
                              - PUSH_API
                              - WEB_CRAWL
                              - NATIVE_HISTORY
                          docType:
                            type: string
                            description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                          content:
                            properties:
                              fullTextList:
                                type: array
                                description: The plaintext content of the document.
                                items:
                                  type: string
                            type: object
                          containerDocument:
                            type: object
                            description: Document object
                          parentDocument:
                            type: object
                            description: Document object
                          title:
                            type: string
                            description: The title of the document.
                          url:
                            type: string
                            description: A permalink for the document.
                          metadata:
                            type: object
                            description: DocumentMetadata object
                          sections:
                            type: array
                            description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                            items:
                              type: object
                              properties:
                                title:
                                  type: string
                                  description: The title of the document section (e.g. the section header).
                                url:
                                  type: string
                                  description: The permalink of the document section.
                        type: object
                      person:
                        required:
                          - name
                          - obfuscatedId
                        example:
                          name: George Clooney
                          obfuscatedId: abc123
                        properties:
                          name:
                            type: string
                            description: The display name.
                          obfuscatedId:
                            type: string
                            description: An opaque identifier that can be used to request metadata for a Person.
                          relatedDocuments:
                            type: array
                            description: A list of documents related to this person.
                            items:
                              type: object
                              description: RelatedDocuments object
                              additionalProperties: true
                          metadata:
                            type: object
                            description: PersonMetadata object
                        type: object
                      customer:
                        required:
                          - id
                          - company
                        properties:
                          id:
                            type: string
                            description: Unique identifier.
                          domains:
                            type: array
                            description: Link to company's associated website domains.
                            items:
                              type: string
                          company:
                            required:
                              - name
                            properties:
                              name:
                                type: string
                                description: User-friendly display name.
                              profileUrl:
                                type: string
                                description: Link to internal company company profile.
                              websiteUrls:
                                type: array
                                description: Link to company's associated websites.
                                items:
                                  type: string
                              logoUrl:
                                type: string
                                description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                              location:
                                type: string
                                description: User facing string representing the company's location.
                                example: New York City
                              phone:
                                type: string
                                description: Phone number as a number string.
                              fax:
                                type: string
                                description: Fax number as a number string.
                              industry:
                                type: string
                                description: User facing string representing the company's industry.
                                example: Finances
                              annualRevenue:
                                type: number
                                format: double
                                description: Average company's annual revenue for reference.
                              numberOfEmployees:
                                type: integer
                                format: int64
                                description: Average company's number of employees for reference.
                              stockSymbol:
                                type: string
                                description: Company's stock symbol if company is public.
                              foundedDate:
                                type: string
                                format: date
                                description: The date when the company was founded.
                              about:
                                type: string
                                description: User facing description of company.
                                example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                            type: object
                          documentCounts:
                            type: object
                            description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                            additionalProperties:
                              type: integer
                          poc:
                            type: array
                            description: A list of POC for company.
                            items:
                              required:
                                - name
                                - obfuscatedId
                              example:
                                name: George Clooney
                                obfuscatedId: abc123
                              properties:
                                name:
                                  type: string
                                  description: The display name.
                                obfuscatedId:
                                  type: string
                                  description: An opaque identifier that can be used to request metadata for a Person.
                                relatedDocuments:
                                  type: array
                                  description: A list of documents related to this person.
                                  items:
                                    type: object
                                    description: RelatedDocuments object
                                    additionalProperties: true
                                metadata:
                                  type: object
                                  description: PersonMetadata object
                              type: object
                          metadata:
                            properties:
                              datasourceId:
                                type: string
                                description: The user visible id of the salesforce customer account.
                              customData:
                                type: object
                                description: Custom fields specific to individual datasources
                                additionalProperties:
                                  $ref: '#/components/schemas/CustomDataValue'
                            type: object
                          mergedCustomers:
                            type: array
                            description: A list of Customers.
                            items:
                              type: object
                              description: Customer object
                              additionalProperties: true
                          startDate:
                            type: string
                            format: date
                            description: The date when the interaction with customer started.
                          contractAnnualRevenue:
                            type: number
                            format: double
                            description: Average contract annual revenue with that customer.
                          notes:
                            type: string
                            description: User facing (potentially generated) notes about company.
                            example: CIO is interested in trying out the product.
                        type: object
                      team:
                        type: object
                        properties:
                          relatedObjects:
                            type: object
                            description: A list of objects related to a source object.
                            additionalProperties:
                              $ref: '#/components/schemas/RelatedObjectEdge'
                          permissions:
                            properties:
                              write:
                                description: Describes the write permissions levels that a user has for a specific feature
                                properties:
                                  scopeType:
                                    type: string
                                    description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                    enum:
                                      - GLOBAL
                                      - OWN
                                  create:
                                    type: boolean
                                    description: True if user has create permission for this feature and scope
                                  update:
                                    type: boolean
                                    description: True if user has update permission for this feature and scope
                                  delete:
                                    type: boolean
                                    description: True if user has delete permission for this feature and scope
                                type: object
                            type: object
                          id:
                            type: string
                            description: Unique identifier
                          name:
                            type: string
                            description: Team name
                          description:
                            type: string
                            description: A description of the team
                          businessUnit:
                            type: string
                            description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                          department:
                            type: string
                            description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                          photoUrl:
                            type: string
                            format: url
                            description: A link to the team's photo.
                          bannerUrl:
                            type: string
                            format: url
                            description: A link to the team's banner photo.
                          externalLink:
                            type: string
                            format: uri
                            description: Link to a team page on the internet or your company's intranet
                          members:
                            type: array
                            description: The members on this team
                            items:
                              required:
                                - person
                              type: object
                              description: Metadata about the relationship of a person to a team.
                              properties:
                                person:
                                  required:
                                    - name
                                    - obfuscatedId
                                  example:
                                    name: George Clooney
                                    obfuscatedId: abc123
                                  properties:
                                    name:
                                      type: string
                                      description: The display name.
                                    obfuscatedId:
                                      type: string
                                      description: An opaque identifier that can be used to request metadata for a Person.
                                    relatedDocuments:
                                      type: array
                                      description: A list of documents related to this person.
                                      items:
                                        type: object
                                        description: RelatedDocuments object
                                        additionalProperties: true
                                    metadata:
                                      type: object
                                      description: PersonMetadata object
                                  type: object
                                relationship:
                                  type: string
                                  description: The team member's relationship to the team. This defaults to MEMBER if not set.
                                  default: MEMBER
                                  enum:
                                    - MEMBER
                                    - MANAGER
                                    - LEAD
                                    - POINT_OF_CONTACT
                                    - OTHER
                                customRelationshipStr:
                                  type: string
                                  description: Displayed name for the relationship if relationship is set to `OTHER`.
                                joinDate:
                                  type: string
                                  format: date-time
                                  description: The team member's start date
                          memberCount:
                            type: integer
                            description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                          emails:
                            type: array
                            description: The emails for this team
                            items:
                              properties:
                                email:
                                  type: string
                                  format: email
                                  description: An email address
                                type:
                                  type: string
                                  enum:
                                    - PRIMARY
                                    - SECONDARY
                                    - ONCALL
                                    - OTHER
                                  default: OTHER
                                isUserGenerated:
                                  type: boolean
                                  description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                              type: object
                          customFields:
                            type: array
                            description: Customizable fields for additional team information.
                            items:
                              required:
                                - label
                                - values
                                - displayable
                              properties:
                                label:
                                  type: string
                                  description: A user-facing label for this field.
                                values:
                                  type: array
                                  items:
                                    oneOf:
                                      - properties:
                                          strText:
                                            type: string
                                            description: Text field for string value.
                                        type: object
                                      - properties:
                                          urlAnchor:
                                            type: string
                                            description: Anchor text for hyperlink.
                                          urlLink:
                                            type: string
                                            description: Link for this URL.
                                        type: object
                                      - properties:
                                          person:
                                            required:
                                              - name
                                              - obfuscatedId
                                            example:
                                              name: George Clooney
                                              obfuscatedId: abc123
                                            properties:
                                              name:
                                                type: string
                                                description: The display name.
                                              obfuscatedId:
                                                type: string
                                                description: An opaque identifier that can be used to request metadata for a Person.
                                              relatedDocuments:
                                                type: array
                                                description: A list of documents related to this person.
                                                items:
                                                  type: object
                                                  description: RelatedDocuments object
                                                  additionalProperties: true
                                              metadata:
                                                type: object
                                                description: PersonMetadata object
                                            type: object
                                        type: object
                                displayable:
                                  type: boolean
                                  description: Determines whether the client should display this custom field
                                  default: true
                              type: object
                          datasourceProfiles:
                            type: array
                            description: The datasource profiles of the team
                            items:
                              required:
                                - datasource
                                - handle
                              properties:
                                datasource:
                                  type: string
                                  example: github
                                  description: The datasource the profile is of.
                                handle:
                                  type: string
                                  description: The display name of the entity in the given datasource.
                                url:
                                  type: string
                                  description: URL to view the entity's profile.
                                nativeAppUrl:
                                  type: string
                                  description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                                isUserGenerated:
                                  type: boolean
                                  description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                              type: object
                          datasource:
                            type: string
                            description: the data source of the team, e.g. GDRIVE
                          createdFrom:
                            type: string
                            description: For teams created from docs, the doc title. Otherwise empty.
                          lastUpdatedAt:
                            type: string
                            format: date-time
                            description: when this team was last updated.
                          status:
                            type: string
                            description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                            default: PROCESSED
                            enum:
                              - PROCESSED
                              - QUEUED_FOR_CREATION
                              - QUEUED_FOR_DELETION
                          canBeDeleted:
                            type: boolean
                            description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                            default: true
                          loggingId:
                            type: string
                            description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                        required:
                          - id
                          - name
                      customEntity:
                        type: object
                        properties:
                          permissions:
                            properties:
                              write:
                                description: Describes the write permissions levels that a user has for a specific feature
                                properties:
                                  scopeType:
                                    type: string
                                    description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                    enum:
                                      - GLOBAL
                                      - OWN
                                  create:
                                    type: boolean
                                    description: True if user has create permission for this feature and scope
                                  update:
                                    type: boolean
                                    description: True if user has update permission for this feature and scope
                                  delete:
                                    type: boolean
                                    description: True if user has delete permission for this feature and scope
                                type: object
                            type: object
                          id:
                            type: string
                            description: Unique identifier.
                          title:
                            type: string
                            description: Title or name of the custom entity.
                          datasource:
                            type: string
                            description: The datasource the custom entity is from.
                          objectType:
                            type: string
                            description: The type of the entity. Interpretation is specific to each datasource
                          metadata:
                            properties:
                              customData:
                                type: object
                                description: Custom fields specific to individual datasources
                                additionalProperties:
                                  $ref: '#/components/schemas/CustomDataValue'
                            type: object
                          roles:
                            type: array
                            description: A list of user roles for the custom entity explicitly granted by the owner.
                            items:
                              required:
                                - role
                              properties:
                                sourceDocumentSpec:
                                  oneOf:
                                    - type: object
                                      properties:
                                        url:
                                          type: string
                                          description: The URL of the document.
                                    - type: object
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of the document.
                                    - type: object
                                      properties:
                                        ugcType:
                                          type: string
                                          enum:
                                            - ANNOUNCEMENTS
                                            - ANSWERS
                                            - COLLECTIONS
                                            - SHORTCUTS
                                          description: The type of the user generated content (UGC datasource).
                                        contentId:
                                          type: integer
                                          description: The id for user generated content.
                                        docType:
                                          type: string
                                          description: The specific type of the user generated content type.
                                person:
                                  required:
                                    - name
                                    - obfuscatedId
                                  example:
                                    name: George Clooney
                                    obfuscatedId: abc123
                                  properties:
                                    name:
                                      type: string
                                      description: The display name.
                                    obfuscatedId:
                                      type: string
                                      description: An opaque identifier that can be used to request metadata for a Person.
                                    relatedDocuments:
                                      type: array
                                      description: A list of documents related to this person.
                                      items:
                                        type: object
                                        description: RelatedDocuments object
                                        additionalProperties: true
                                    metadata:
                                      type: object
                                      description: PersonMetadata object
                                  type: object
                                group:
                                  required:
                                    - type
                                    - id
                                  properties:
                                    type:
                                      type: string
                                      description: The type of user group
                                      enum:
                                        - DEPARTMENT
                                        - ALL
                                        - TEAM
                                        - JOB_TITLE
                                        - ROLE_TYPE
                                        - LOCATION
                                        - REGION
                                        - EXTERNAL_GROUP
                                    id:
                                      type: string
                                      description: A unique identifier for the group. May be the same as name.
                                    name:
                                      type: string
                                      description: Name of the group.
                                  type: object
                                role:
                                  type: string
                                  description: A user's role with respect to a specific document.
                                  enum:
                                    - OWNER
                                    - VIEWER
                                    - ANSWER_MODERATOR
                                    - EDITOR
                                    - VERIFIER
                              type: object
                      answer:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The opaque ID of the Answer.
                            example: 3
                          docId:
                            type: string
                            description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
                            example: ANSWERS_answer_3
                          question:
                            type: string
                            example: Why is the sky blue?
                          questionVariations:
                            type: array
                            description: Additional ways of phrasing this question.
                            items:
                              type: string
                          bodyText:
                            type: string
                            description: The plain text answer to the question.
                            example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
                          boardId:
                            type: integer
                            description: The parent board ID of this Answer, or 0 if it's a floating Answer.
                          audienceFilters:
                            type: array
                            description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
                            items:
                              example:
                                fieldName: type
                                values:
                                  - value: Spreadsheet
                                    relationType: EQUALS
                                  - value: Presentation
                                    relationType: EQUALS
                              properties:
                                fieldName:
                                  type: string
                                  example: owner
                                values:
                                  type: array
                                  description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                  items:
                                    properties:
                                      value:
                                        type: string
                                        example: Spreadsheet
                                      relationType:
                                        type: string
                                        enum:
                                          - EQUALS
                                          - ID_EQUALS
                                          - LT
                                          - GT
                                        example: EQUALS
                                      isNegated:
                                        type: boolean
                                        deprecated: true
                                        description: DEPRECATED - please use relationType instead
                                    type: object
                                groupName:
                                  type: string
                                  example: Spreadsheet
                                  description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                              type: object
                          addedRoles:
                            type: array
                            description: A list of user roles for the answer added by the owner.
                            items:
                              required:
                                - role
                              properties:
                                sourceDocumentSpec:
                                  oneOf:
                                    - type: object
                                      properties:
                                        url:
                                          type: string
                                          description: The URL of the document.
                                    - type: object
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of the document.
                                    - type: object
                                      properties:
                                        ugcType:
                                          type: string
                                          enum:
                                            - ANNOUNCEMENTS
                                            - ANSWERS
                                            - COLLECTIONS
                                            - SHORTCUTS
                                          description: The type of the user generated content (UGC datasource).
                                        contentId:
                                          type: integer
                                          description: The id for user generated content.
                                        docType:
                                          type: string
                                          description: The specific type of the user generated content type.
                                person:
                                  required:
                                    - name
                                    - obfuscatedId
                                  example:
                                    name: George Clooney
                                    obfuscatedId: abc123
                                  properties:
                                    name:
                                      type: string
                                      description: The display name.
                                    obfuscatedId:
                                      type: string
                                      description: An opaque identifier that can be used to request metadata for a Person.
                                    relatedDocuments:
                                      type: array
                                      description: A list of documents related to this person.
                                      items:
                                        type: object
                                        description: RelatedDocuments object
                                        additionalProperties: true
                                    metadata:
                                      type: object
                                      description: PersonMetadata object
                                  type: object
                                group:
                                  required:
                                    - type
                                    - id
                                  properties:
                                    type:
                                      type: string
                                      description: The type of user group
                                      enum:
                                        - DEPARTMENT
                                        - ALL
                                        - TEAM
                                        - JOB_TITLE
                                        - ROLE_TYPE
                                        - LOCATION
                                        - REGION
                                        - EXTERNAL_GROUP
                                    id:
                                      type: string
                                      description: A unique identifier for the group. May be the same as name.
                                    name:
                                      type: string
                                      description: Name of the group.
                                  type: object
                                role:
                                  type: string
                                  description: A user's role with respect to a specific document.
                                  enum:
                                    - OWNER
                                    - VIEWER
                                    - ANSWER_MODERATOR
                                    - EDITOR
                                    - VERIFIER
                              type: object
                          removedRoles:
                            type: array
                            description: A list of user roles for the answer removed by the owner.
                            items:
                              required:
                                - role
                              properties:
                                sourceDocumentSpec:
                                  oneOf:
                                    - type: object
                                      properties:
                                        url:
                                          type: string
                                          description: The URL of the document.
                                    - type: object
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of the document.
                                    - type: object
                                      properties:
                                        ugcType:
                                          type: string
                                          enum:
                                            - ANNOUNCEMENTS
                                            - ANSWERS
                                            - COLLECTIONS
                                            - SHORTCUTS
                                          description: The type of the user generated content (UGC datasource).
                                        contentId:
                                          type: integer
                                          description: The id for user generated content.
                                        docType:
                                          type: string
                                          description: The specific type of the user generated content type.
                                person:
                                  required:
                                    - name
                                    - obfuscatedId
                                  example:
                                    name: George Clooney
                                    obfuscatedId: abc123
                                  properties:
                                    name:
                                      type: string
                                      description: The display name.
                                    obfuscatedId:
                                      type: string
                                      description: An opaque identifier that can be used to request metadata for a Person.
                                    relatedDocuments:
                                      type: array
                                      description: A list of documents related to this person.
                                      items:
                                        type: object
                                        description: RelatedDocuments object
                                        additionalProperties: true
                                    metadata:
                                      type: object
                                      description: PersonMetadata object
                                  type: object
                                group:
                                  required:
                                    - type
                                    - id
                                  properties:
                                    type:
                                      type: string
                                      description: The type of user group
                                      enum:
                                        - DEPARTMENT
                                        - ALL
                                        - TEAM
                                        - JOB_TITLE
                                        - ROLE_TYPE
                                        - LOCATION
                                        - REGION
                                        - EXTERNAL_GROUP
                                    id:
                                      type: string
                                      description: A unique identifier for the group. May be the same as name.
                                    name:
                                      type: string
                                      description: Name of the group.
                                  type: object
                                role:
                                  type: string
                                  description: A user's role with respect to a specific document.
                                  enum:
                                    - OWNER
                                    - VIEWER
                                    - ANSWER_MODERATOR
                                    - EDITOR
                                    - VERIFIER
                              type: object
                          roles:
                            type: array
                            description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
                            items:
                              required:
                                - role
                              properties:
                                sourceDocumentSpec:
                                  oneOf:
                                    - type: object
                                      properties:
                                        url:
                                          type: string
                                          description: The URL of the document.
                                    - type: object
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of the document.
                                    - type: object
                                      properties:
                                        ugcType:
                                          type: string
                                          enum:
                                            - ANNOUNCEMENTS
                                            - ANSWERS
                                            - COLLECTIONS
                                            - SHORTCUTS
                                          description: The type of the user generated content (UGC datasource).
                                        contentId:
                                          type: integer
                                          description: The id for user generated content.
                                        docType:
                                          type: string
                                          description: The specific type of the user generated content type.
                                person:
                                  required:
                                    - name
                                    - obfuscatedId
                                  example:
                                    name: George Clooney
                                    obfuscatedId: abc123
                                  properties:
                                    name:
                                      type: string
                                      description: The display name.
                                    obfuscatedId:
                                      type: string
                                      description: An opaque identifier that can be used to request metadata for a Person.
                                    relatedDocuments:
                                      type: array
                                      description: A list of documents related to this person.
                                      items:
                                        type: object
                                        description: RelatedDocuments object
                                        additionalProperties: true
                                    metadata:
                                      type: object
                                      description: PersonMetadata object
                                  type: object
                                group:
                                  required:
                                    - type
                                    - id
                                  properties:
                                    type:
                                      type: string
                                      description: The type of user group
                                      enum:
                                        - DEPARTMENT
                                        - ALL
                                        - TEAM
                                        - JOB_TITLE
                                        - ROLE_TYPE
                                        - LOCATION
                                        - REGION
                                        - EXTERNAL_GROUP
                                    id:
                                      type: string
                                      description: A unique identifier for the group. May be the same as name.
                                    name:
                                      type: string
                                      description: Name of the group.
                                  type: object
                                role:
                                  type: string
                                  description: A user's role with respect to a specific document.
                                  enum:
                                    - OWNER
                                    - VIEWER
                                    - ANSWER_MODERATOR
                                    - EDITOR
                                    - VERIFIER
                              type: object
                          sourceDocumentSpec:
                            oneOf:
                              - type: object
                                properties:
                                  url:
                                    type: string
                                    description: The URL of the document.
                              - type: object
                                properties:
                                  id:
                                    type: string
                                    description: The ID of the document.
                              - type: object
                                properties:
                                  ugcType:
                                    type: string
                                    enum:
                                      - ANNOUNCEMENTS
                                      - ANSWERS
                                      - COLLECTIONS
                                      - SHORTCUTS
                                    description: The type of the user generated content (UGC datasource).
                                  contentId:
                                    type: integer
                                    description: The id for user generated content.
                                  docType:
                                    type: string
                                    description: The specific type of the user generated content type.
                          sourceType:
                            type: string
                            enum:
                              - DOCUMENT
                              - ASSISTANT
                          permissions:
                            properties:
                              write:
                                description: Describes the write permissions levels that a user has for a specific feature
                                properties:
                                  scopeType:
                                    type: string
                                    description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                    enum:
                                      - GLOBAL
                                      - OWN
                                  create:
                                    type: boolean
                                    description: True if user has create permission for this feature and scope
                                  update:
                                    type: boolean
                                    description: True if user has update permission for this feature and scope
                                  delete:
                                    type: boolean
                                    description: True if user has delete permission for this feature and scope
                                type: object
                            type: object
                          combinedAnswerText:
                            type: object
                            description: StructuredText object (circular reference)
                            additionalProperties: true
                          likes:
                            required:
                              - likedBy
                              - likedByUser
                              - numLikes
                            properties:
                              likedBy:
                                type: array
                                items:
                                  properties:
                                    user:
                                      required:
                                        - name
                                        - obfuscatedId
                                      example:
                                        name: George Clooney
                                        obfuscatedId: abc123
                                      properties:
                                        name:
                                          type: string
                                          description: The display name.
                                        obfuscatedId:
                                          type: string
                                          description: An opaque identifier that can be used to request metadata for a Person.
                                        relatedDocuments:
                                          type: array
                                          description: A list of documents related to this person.
                                          items:
                                            type: object
                                            description: RelatedDocuments object
                                            additionalProperties: true
                                        metadata:
                                          type: object
                                          description: PersonMetadata object
                                      type: object
                                    createTime:
                                      type: string
                                      format: date-time
                                      description: The time the user liked the answer in ISO format (ISO 8601).
                                  type: object
                              likedByUser:
                                type: boolean
                                description: Whether the user in context liked the answer.
                              numLikes:
                                type: integer
                                description: The total number of likes for the answer.
                            type: object
                          author:
                            required:
                              - name
                              - obfuscatedId
                            example:
                              name: George Clooney
                              obfuscatedId: abc123
                            properties:
                              name:
                                type: string
                                description: The display name.
                              obfuscatedId:
                                type: string
                                description: An opaque identifier that can be used to request metadata for a Person.
                              relatedDocuments:
                                type: array
                                description: A list of documents related to this person.
                                items:
                                  type: object
                                  description: RelatedDocuments object
                                  additionalProperties: true
                              metadata:
                                type: object
                                description: PersonMetadata object
                            type: object
                          createTime:
                            type: string
                            format: date-time
                            description: The time the answer was created in ISO format (ISO 8601).
                          updateTime:
                            type: string
                            format: date-time
                            description: The time the answer was last updated in ISO format (ISO 8601).
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          verification:
                            required:
                              - state
                            properties:
                              state:
                                type: string
                                enum:
                                  - UNVERIFIED
                                  - VERIFIED
                                  - DEPRECATED
                                description: The verification state for the document.
                              metadata:
                                required:
                                  - documentId
                                properties:
                                  lastVerifier:
                                    type: object
                                    description: Person object
                                    additionalProperties: true
                                  lastVerificationTs:
                                    type: integer
                                    description: The unix timestamp of the verification (in seconds since epoch UTC).
                                  expirationTs:
                                    type: integer
                                    description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
                                  document:
                                    properties:
                                      id:
                                        type: string
                                        description: The Glean Document ID.
                                      datasource:
                                        type: string
                                        description: The app or other repository type from which the document was extracted
                                      connectorType:
                                        type: string
                                        description: The source from which document content was pulled, e.g. an API crawl or browser history
                                        enum:
                                          - API_CRAWL
                                          - BROWSER_CRAWL
                                          - BROWSER_HISTORY
                                          - BUILTIN
                                          - FEDERATED_SEARCH
                                          - PUSH_API
                                          - WEB_CRAWL
                                          - NATIVE_HISTORY
                                      docType:
                                        type: string
                                        description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                      content:
                                        properties:
                                          fullTextList:
                                            type: array
                                            description: The plaintext content of the document.
                                            items:
                                              type: string
                                        type: object
                                      containerDocument:
                                        type: object
                                        description: Document object
                                      parentDocument:
                                        type: object
                                        description: Document object
                                      title:
                                        type: string
                                        description: The title of the document.
                                      url:
                                        type: string
                                        description: A permalink for the document.
                                      metadata:
                                        type: object
                                        description: DocumentMetadata object
                                      sections:
                                        type: array
                                        description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              description: The title of the document section (e.g. the section header).
                                            url:
                                              type: string
                                              description: The permalink of the document section.
                                    type: object
                                  reminders:
                                    type: array
                                    description: Info about all outstanding verification reminders for the document if exists.
                                    items:
                                      required:
                                        - assignee
                                        - remindAt
                                      properties:
                                        assignee:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                        requestor:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                        remindAt:
                                          type: integer
                                          description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                                        createdAt:
                                          type: integer
                                          description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                                        reason:
                                          type: string
                                          description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                                      type: object
                                  lastReminder:
                                    required:
                                      - assignee
                                      - remindAt
                                    properties:
                                      assignee:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      requestor:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      remindAt:
                                        type: integer
                                        description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                                      createdAt:
                                        type: integer
                                        description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                                      reason:
                                        type: string
                                        description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                                    type: object
                                  visitorCount:
                                    type: array
                                    description: Number of visitors to the document during included time periods.
                                    items:
                                      required:
                                        - count
                                      properties:
                                        count:
                                          type: integer
                                          description: The counter value
                                        period:
                                          properties:
                                            minDaysFromNow:
                                              type: integer
                                              description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                                              deprecated: true
                                            maxDaysFromNow:
                                              type: integer
                                              description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                                              deprecated: true
                                            start:
                                              properties:
                                                epochSeconds:
                                                  type: integer
                                                  description: Epoch seconds. Has precedence over daysFromNow.
                                                daysFromNow:
                                                  type: integer
                                                  description: The number of days from now. Specification relative to current time. Can be negative.
                                              type: object
                                            end:
                                              properties:
                                                epochSeconds:
                                                  type: integer
                                                  description: Epoch seconds. Has precedence over daysFromNow.
                                                daysFromNow:
                                                  type: integer
                                                  description: The number of days from now. Specification relative to current time. Can be negative.
                                              type: object
                                          type: object
                                        org:
                                          type: string
                                          description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                                      type: object
                                  candidateVerifiers:
                                    type: array
                                    description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
                                    items:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                type: object
                            type: object
                          board:
                            type: object
                            properties:
                              name:
                                type: string
                                description: The unique name of the Collection.
                              description:
                                type: string
                                description: A brief summary of the Collection's contents.
                              addedRoles:
                                type: array
                                description: A list of added user roles for the Collection.
                                items:
                                  required:
                                    - role
                                  properties:
                                    sourceDocumentSpec:
                                      oneOf:
                                        - type: object
                                          properties:
                                            url:
                                              type: string
                                              description: The URL of the document.
                                        - type: object
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of the document.
                                        - type: object
                                          properties:
                                            ugcType:
                                              type: string
                                              enum:
                                                - ANNOUNCEMENTS
                                                - ANSWERS
                                                - COLLECTIONS
                                                - SHORTCUTS
                                              description: The type of the user generated content (UGC datasource).
                                            contentId:
                                              type: integer
                                              description: The id for user generated content.
                                            docType:
                                              type: string
                                              description: The specific type of the user generated content type.
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    group:
                                      required:
                                        - type
                                        - id
                                      properties:
                                        type:
                                          type: string
                                          description: The type of user group
                                          enum:
                                            - DEPARTMENT
                                            - ALL
                                            - TEAM
                                            - JOB_TITLE
                                            - ROLE_TYPE
                                            - LOCATION
                                            - REGION
                                            - EXTERNAL_GROUP
                                        id:
                                          type: string
                                          description: A unique identifier for the group. May be the same as name.
                                        name:
                                          type: string
                                          description: Name of the group.
                                      type: object
                                    role:
                                      type: string
                                      description: A user's role with respect to a specific document.
                                      enum:
                                        - OWNER
                                        - VIEWER
                                        - ANSWER_MODERATOR
                                        - EDITOR
                                        - VERIFIER
                                  type: object
                              removedRoles:
                                type: array
                                description: A list of removed user roles for the Collection.
                                items:
                                  required:
                                    - role
                                  properties:
                                    sourceDocumentSpec:
                                      oneOf:
                                        - type: object
                                          properties:
                                            url:
                                              type: string
                                              description: The URL of the document.
                                        - type: object
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of the document.
                                        - type: object
                                          properties:
                                            ugcType:
                                              type: string
                                              enum:
                                                - ANNOUNCEMENTS
                                                - ANSWERS
                                                - COLLECTIONS
                                                - SHORTCUTS
                                              description: The type of the user generated content (UGC datasource).
                                            contentId:
                                              type: integer
                                              description: The id for user generated content.
                                            docType:
                                              type: string
                                              description: The specific type of the user generated content type.
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    group:
                                      required:
                                        - type
                                        - id
                                      properties:
                                        type:
                                          type: string
                                          description: The type of user group
                                          enum:
                                            - DEPARTMENT
                                            - ALL
                                            - TEAM
                                            - JOB_TITLE
                                            - ROLE_TYPE
                                            - LOCATION
                                            - REGION
                                            - EXTERNAL_GROUP
                                        id:
                                          type: string
                                          description: A unique identifier for the group. May be the same as name.
                                        name:
                                          type: string
                                          description: Name of the group.
                                      type: object
                                    role:
                                      type: string
                                      description: A user's role with respect to a specific document.
                                      enum:
                                        - OWNER
                                        - VIEWER
                                        - ANSWER_MODERATOR
                                        - EDITOR
                                        - VERIFIER
                                  type: object
                              audienceFilters:
                                type: array
                                description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                items:
                                  example:
                                    fieldName: type
                                    values:
                                      - value: Spreadsheet
                                        relationType: EQUALS
                                      - value: Presentation
                                        relationType: EQUALS
                                  properties:
                                    fieldName:
                                      type: string
                                      example: owner
                                    values:
                                      type: array
                                      description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                      items:
                                        properties:
                                          value:
                                            type: string
                                            example: Spreadsheet
                                          relationType:
                                            type: string
                                            enum:
                                              - EQUALS
                                              - ID_EQUALS
                                              - LT
                                              - GT
                                            example: EQUALS
                                          isNegated:
                                            type: boolean
                                            deprecated: true
                                            description: DEPRECATED - please use relationType instead
                                        type: object
                                    groupName:
                                      type: string
                                      example: Spreadsheet
                                      description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                  type: object
                              permissions:
                                properties:
                                  write:
                                    description: Describes the write permissions levels that a user has for a specific feature
                                    properties:
                                      scopeType:
                                        type: string
                                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                        enum:
                                          - GLOBAL
                                          - OWN
                                      create:
                                        type: boolean
                                        description: True if user has create permission for this feature and scope
                                      update:
                                        type: boolean
                                        description: True if user has update permission for this feature and scope
                                      delete:
                                        type: boolean
                                        description: True if user has delete permission for this feature and scope
                                    type: object
                                type: object
                              id:
                                type: integer
                                description: The unique ID of the Answer Board.
                              createTime:
                                type: string
                                format: date-time
                              updateTime:
                                type: string
                                format: date-time
                              creator:
                                type: object
                                description: Person object
                                additionalProperties: true
                              updatedBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              itemCount:
                                type: integer
                                description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                              roles:
                                type: array
                                description: A list of user roles for the Answer Board.
                                items:
                                  required:
                                    - role
                                  properties:
                                    sourceDocumentSpec:
                                      oneOf:
                                        - type: object
                                          properties:
                                            url:
                                              type: string
                                              description: The URL of the document.
                                        - type: object
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of the document.
                                        - type: object
                                          properties:
                                            ugcType:
                                              type: string
                                              enum:
                                                - ANNOUNCEMENTS
                                                - ANSWERS
                                                - COLLECTIONS
                                                - SHORTCUTS
                                              description: The type of the user generated content (UGC datasource).
                                            contentId:
                                              type: integer
                                              description: The id for user generated content.
                                            docType:
                                              type: string
                                              description: The specific type of the user generated content type.
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    group:
                                      required:
                                        - type
                                        - id
                                      properties:
                                        type:
                                          type: string
                                          description: The type of user group
                                          enum:
                                            - DEPARTMENT
                                            - ALL
                                            - TEAM
                                            - JOB_TITLE
                                            - ROLE_TYPE
                                            - LOCATION
                                            - REGION
                                            - EXTERNAL_GROUP
                                        id:
                                          type: string
                                          description: A unique identifier for the group. May be the same as name.
                                        name:
                                          type: string
                                          description: Name of the group.
                                      type: object
                                    role:
                                      type: string
                                      description: A user's role with respect to a specific document.
                                      enum:
                                        - OWNER
                                        - VIEWER
                                        - ANSWER_MODERATOR
                                        - EDITOR
                                        - VERIFIER
                                  type: object
                            required:
                              - name
                              - id
                              - description
                          collections:
                            type: array
                            description: The collections to which the answer belongs.
                            items:
                              type: object
                              description: Flattened Collection
                              properties:
                                name:
                                  type: string
                                  description: The unique name of the Collection.
                                description:
                                  type: string
                                  description: A brief summary of the Collection's contents.
                                addedRoles:
                                  type: array
                                  description: A list of added user roles for the Collection.
                                  items:
                                    required:
                                      - role
                                    properties:
                                      sourceDocumentSpec:
                                        oneOf:
                                          - type: object
                                            properties:
                                              url:
                                                type: string
                                                description: The URL of the document.
                                          - type: object
                                            properties:
                                              id:
                                                type: string
                                                description: The ID of the document.
                                          - type: object
                                            properties:
                                              ugcType:
                                                type: string
                                                enum:
                                                  - ANNOUNCEMENTS
                                                  - ANSWERS
                                                  - COLLECTIONS
                                                  - SHORTCUTS
                                                description: The type of the user generated content (UGC datasource).
                                              contentId:
                                                type: integer
                                                description: The id for user generated content.
                                              docType:
                                                type: string
                                                description: The specific type of the user generated content type.
                                      person:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      group:
                                        required:
                                          - type
                                          - id
                                        properties:
                                          type:
                                            type: string
                                            description: The type of user group
                                            enum:
                                              - DEPARTMENT
                                              - ALL
                                              - TEAM
                                              - JOB_TITLE
                                              - ROLE_TYPE
                                              - LOCATION
                                              - REGION
                                              - EXTERNAL_GROUP
                                          id:
                                            type: string
                                            description: A unique identifier for the group. May be the same as name.
                                          name:
                                            type: string
                                            description: Name of the group.
                                        type: object
                                      role:
                                        type: string
                                        description: A user's role with respect to a specific document.
                                        enum:
                                          - OWNER
                                          - VIEWER
                                          - ANSWER_MODERATOR
                                          - EDITOR
                                          - VERIFIER
                                    type: object
                                removedRoles:
                                  type: array
                                  description: A list of removed user roles for the Collection.
                                  items:
                                    required:
                                      - role
                                    properties:
                                      sourceDocumentSpec:
                                        oneOf:
                                          - type: object
                                            properties:
                                              url:
                                                type: string
                                                description: The URL of the document.
                                          - type: object
                                            properties:
                                              id:
                                                type: string
                                                description: The ID of the document.
                                          - type: object
                                            properties:
                                              ugcType:
                                                type: string
                                                enum:
                                                  - ANNOUNCEMENTS
                                                  - ANSWERS
                                                  - COLLECTIONS
                                                  - SHORTCUTS
                                                description: The type of the user generated content (UGC datasource).
                                              contentId:
                                                type: integer
                                                description: The id for user generated content.
                                              docType:
                                                type: string
                                                description: The specific type of the user generated content type.
                                      person:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      group:
                                        required:
                                          - type
                                          - id
                                        properties:
                                          type:
                                            type: string
                                            description: The type of user group
                                            enum:
                                              - DEPARTMENT
                                              - ALL
                                              - TEAM
                                              - JOB_TITLE
                                              - ROLE_TYPE
                                              - LOCATION
                                              - REGION
                                              - EXTERNAL_GROUP
                                          id:
                                            type: string
                                            description: A unique identifier for the group. May be the same as name.
                                          name:
                                            type: string
                                            description: Name of the group.
                                        type: object
                                      role:
                                        type: string
                                        description: A user's role with respect to a specific document.
                                        enum:
                                          - OWNER
                                          - VIEWER
                                          - ANSWER_MODERATOR
                                          - EDITOR
                                          - VERIFIER
                                    type: object
                                audienceFilters:
                                  type: array
                                  description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                  items:
                                    example:
                                      fieldName: type
                                      values:
                                        - value: Spreadsheet
                                          relationType: EQUALS
                                        - value: Presentation
                                          relationType: EQUALS
                                    properties:
                                      fieldName:
                                        type: string
                                        example: owner
                                      values:
                                        type: array
                                        description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                        items:
                                          properties:
                                            value:
                                              type: string
                                              example: Spreadsheet
                                            relationType:
                                              type: string
                                              enum:
                                                - EQUALS
                                                - ID_EQUALS
                                                - LT
                                                - GT
                                              example: EQUALS
                                            isNegated:
                                              type: boolean
                                              deprecated: true
                                              description: DEPRECATED - please use relationType instead
                                          type: object
                                      groupName:
                                        type: string
                                        example: Spreadsheet
                                        description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                    type: object
                                icon:
                                  type: string
                                  description: The emoji icon of this Collection.
                                adminLocked:
                                  type: boolean
                                  description: Indicates whether edits are allowed for everyone or only admins.
                                parentId:
                                  type: integer
                                  description: The parent of this Collection, or 0 if it's a top-level Collection.
                                thumbnail:
                                  properties:
                                    photoId:
                                      type: string
                                      description: Photo id if the thumbnail is from splash.
                                    url:
                                      type: string
                                      description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                                  type: object
                                allowedDatasource:
                                  type: string
                                  description: The datasource type this Collection can hold.
                                permissions:
                                  type: object
                                  description: Flattened ObjectPermissions
                                  properties:
                                    write:
                                      type: object
                                      description: Describes the write permissions levels that a user has for a specific feature
                                      properties:
                                        scopeType:
                                          type: string
                                          description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                          enum:
                                            - GLOBAL
                                            - OWN
                                          properties: {}
                                        create:
                                          type: boolean
                                          description: True if user has create permission for this feature and scope
                                        update:
                                          type: boolean
                                          description: True if user has update permission for this feature and scope
                                        delete:
                                          type: boolean
                                          description: True if user has delete permission for this feature and scope
                                id:
                                  type: integer
                                  description: The unique ID of the Collection.
                                createTime:
                                  type: string
                                  format: date-time
                                updateTime:
                                  type: string
                                  format: date-time
                                creator:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                                updatedBy:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                                itemCount:
                                  type: integer
                                  description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                                childCount:
                                  type: integer
                                  description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                                items:
                                  type: array
                                  description: The items in this Collection.
                                  items:
                                    type: object
                                    description: CollectionItem object
                                    additionalProperties: true
                                pinMetadata:
                                  required:
                                    - pinnedCategories
                                    - eligibleCategoriesForPinning
                                  properties:
                                    existingPins:
                                      type: array
                                      description: List of targets this Collection is pinned to.
                                      items:
                                        required:
                                          - category
                                        properties:
                                          category:
                                            type: string
                                            description: Categories a Collection can be pinned to.
                                            enum:
                                              - COMPANY_RESOURCE
                                              - DEPARTMENT_RESOURCE
                                              - TEAM_RESOURCE
                                          value:
                                            type: string
                                            description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                          target:
                                            type: string
                                            description: What targets can a Collection be pinned to.
                                            enum:
                                              - RESOURCE_CARD
                                              - TEAM_PROFILE_PAGE
                                        type: object
                                    eligiblePins:
                                      type: array
                                      description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                                      items:
                                        required:
                                          - id
                                          - target
                                        properties:
                                          id:
                                            type: integer
                                            description: The ID of the Collection.
                                          target:
                                            required:
                                              - category
                                            properties:
                                              category:
                                                type: string
                                                description: Categories a Collection can be pinned to.
                                                enum:
                                                  - COMPANY_RESOURCE
                                                  - DEPARTMENT_RESOURCE
                                                  - TEAM_RESOURCE
                                              value:
                                                type: string
                                                description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                              target:
                                                type: string
                                                description: What targets can a Collection be pinned to.
                                                enum:
                                                  - RESOURCE_CARD
                                                  - TEAM_PROFILE_PAGE
                                            type: object
                                        type: object
                                  type: object
                                shortcuts:
                                  type: array
                                  description: The names of the shortcuts (Go Links) that point to this Collection.
                                  items:
                                    type: string
                                children:
                                  type: array
                                  description: The children Collections of this Collection.
                                  items:
                                    type: object
                                    description: Collection object
                                    additionalProperties: true
                                roles:
                                  type: array
                                  description: A list of user roles for the Collection.
                                  items:
                                    required:
                                      - role
                                    properties:
                                      sourceDocumentSpec:
                                        type: object
                                        description: DocumentSpec object
                                        additionalProperties: true
                                      person:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      group:
                                        required:
                                          - type
                                          - id
                                        properties:
                                          type:
                                            type: string
                                            description: The type of user group
                                            enum:
                                              - DEPARTMENT
                                              - ALL
                                              - TEAM
                                              - JOB_TITLE
                                              - ROLE_TYPE
                                              - LOCATION
                                              - REGION
                                              - EXTERNAL_GROUP
                                          id:
                                            type: string
                                            description: A unique identifier for the group. May be the same as name.
                                          name:
                                            type: string
                                            description: Name of the group.
                                        type: object
                                      role:
                                        type: string
                                        description: A user's role with respect to a specific document.
                                        enum:
                                          - OWNER
                                          - VIEWER
                                          - ANSWER_MODERATOR
                                          - EDITOR
                                          - VERIFIER
                                    type: object
                          documentCategory:
                            type: string
                            description: The document's document_category(.proto).
                          sourceDocument:
                            properties:
                              id:
                                type: string
                                description: The Glean Document ID.
                              datasource:
                                type: string
                                description: The app or other repository type from which the document was extracted
                              connectorType:
                                type: string
                                description: The source from which document content was pulled, e.g. an API crawl or browser history
                                enum:
                                  - API_CRAWL
                                  - BROWSER_CRAWL
                                  - BROWSER_HISTORY
                                  - BUILTIN
                                  - FEDERATED_SEARCH
                                  - PUSH_API
                                  - WEB_CRAWL
                                  - NATIVE_HISTORY
                              docType:
                                type: string
                                description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                              content:
                                properties:
                                  fullTextList:
                                    type: array
                                    description: The plaintext content of the document.
                                    items:
                                      type: string
                                type: object
                              containerDocument:
                                type: object
                                description: Document object
                              parentDocument:
                                type: object
                                description: Document object
                              title:
                                type: string
                                description: The title of the document.
                              url:
                                type: string
                                description: A permalink for the document.
                              metadata:
                                type: object
                                description: DocumentMetadata object
                              sections:
                                type: array
                                description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                items:
                                  type: object
                                  properties:
                                    title:
                                      type: string
                                      description: The title of the document section (e.g. the section header).
                                    url:
                                      type: string
                                      description: The permalink of the document section.
                            type: object
                        required:
                          - id
                      extractedQnA:
                        properties:
                          heading:
                            type: string
                            description: Heading text that was matched to produce this result.
                          question:
                            type: string
                            description: Question text that was matched to produce this result.
                          questionResult:
                            type: object
                            description: Flattened SearchResult
                            example:
                              snippets:
                                - snippet: snippet
                                  mimeType: mimeType
                              metadata:
                                container: container
                                createTime: '2000-01-23T04:56:07.000Z'
                                datasource: datasource
                                author:
                                  name: name
                                documentId: documentId
                                updateTime: '2000-01-23T04:56:07.000Z'
                                mimeType: mimeType
                                objectType: objectType
                              title: title
                              url: https://example.com/foo/bar
                              nativeAppUrl: slack://foo/bar
                              mustIncludeSuggestions:
                                - missingTerm: container
                                  query: container
                            properties:
                              structuredResults:
                                type: array
                                description: An array of entities in the work graph retrieved via a data request.
                                items:
                                  type: object
                                  description: StructuredResult object (circular reference)
                                  additionalProperties: true
                              trackingToken:
                                type: string
                                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                              document:
                                properties:
                                  id:
                                    type: string
                                    description: The Glean Document ID.
                                  datasource:
                                    type: string
                                    description: The app or other repository type from which the document was extracted
                                  connectorType:
                                    type: string
                                    description: The source from which document content was pulled, e.g. an API crawl or browser history
                                    enum:
                                      - API_CRAWL
                                      - BROWSER_CRAWL
                                      - BROWSER_HISTORY
                                      - BUILTIN
                                      - FEDERATED_SEARCH
                                      - PUSH_API
                                      - WEB_CRAWL
                                      - NATIVE_HISTORY
                                  docType:
                                    type: string
                                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                  content:
                                    properties:
                                      fullTextList:
                                        type: array
                                        description: The plaintext content of the document.
                                        items:
                                          type: string
                                    type: object
                                  containerDocument:
                                    type: object
                                    description: Document object
                                  parentDocument:
                                    type: object
                                    description: Document object
                                  title:
                                    type: string
                                    description: The title of the document.
                                  url:
                                    type: string
                                    description: A permalink for the document.
                                  metadata:
                                    type: object
                                    description: DocumentMetadata object
                                  sections:
                                    type: array
                                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                    items:
                                      type: object
                                      properties:
                                        title:
                                          type: string
                                          description: The title of the document section (e.g. the section header).
                                        url:
                                          type: string
                                          description: The permalink of the document section.
                                type: object
                              title:
                                type: string
                              url:
                                type: string
                              nativeAppUrl:
                                type: string
                                description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                              snippets:
                                type: array
                                description: Text content from the result document which contains search query terms, if available.
                                items:
                                  required:
                                    - snippet
                                  example:
                                    snippet: snippet
                                    mimeType: mimeType
                                  properties:
                                    snippet:
                                      type: string
                                      description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                                    mimeType:
                                      type: string
                                      description: The mime type of the snippets, currently either text/plain or text/html.
                                    text:
                                      type: string
                                      description: A matching snippet from the document with no highlights.
                                    snippetTextOrdering:
                                      type: integer
                                      description: Used for sorting based off the snippet's location within all_snippetable_text
                                    ranges:
                                      type: array
                                      description: The bolded ranges within text.
                                      items:
                                        required:
                                          - startIndex
                                        description: A subsection of a given string to which some special formatting should be applied.
                                        properties:
                                          startIndex:
                                            type: integer
                                            description: The inclusive start index of the range.
                                          endIndex:
                                            type: integer
                                            description: The exclusive end index of the range.
                                          type:
                                            type: string
                                            enum:
                                              - BOLD
                                              - CITATION
                                              - HIGHLIGHT
                                              - LINK
                                          url:
                                            type: string
                                            description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                          document:
                                            properties:
                                              id:
                                                type: string
                                                description: The Glean Document ID.
                                              datasource:
                                                type: string
                                                description: The app or other repository type from which the document was extracted
                                              connectorType:
                                                type: string
                                                description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                enum:
                                                  - API_CRAWL
                                                  - BROWSER_CRAWL
                                                  - BROWSER_HISTORY
                                                  - BUILTIN
                                                  - FEDERATED_SEARCH
                                                  - PUSH_API
                                                  - WEB_CRAWL
                                                  - NATIVE_HISTORY
                                              docType:
                                                type: string
                                                description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                              content:
                                                properties:
                                                  fullTextList:
                                                    type: array
                                                    description: The plaintext content of the document.
                                                    items:
                                                      type: string
                                                type: object
                                              containerDocument:
                                                type: object
                                                description: Document object
                                              parentDocument:
                                                type: object
                                                description: Document object
                                              title:
                                                type: string
                                                description: The title of the document.
                                              url:
                                                type: string
                                                description: A permalink for the document.
                                              metadata:
                                                type: object
                                                description: DocumentMetadata object
                                              sections:
                                                type: array
                                                description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                items:
                                                  type: object
                                                  properties:
                                                    title:
                                                      type: string
                                                      description: The title of the document section (e.g. the section header).
                                                    url:
                                                      type: string
                                                      description: The permalink of the document section.
                                            type: object
                                        type: object
                                    url:
                                      type: string
                                      description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                                  type: object
                              fullText:
                                type: string
                                description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                              fullTextList:
                                type: array
                                description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                                items:
                                  type: string
                              relatedResults:
                                type: array
                                description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                                items:
                                  properties:
                                    relation:
                                      type: string
                                      description: How this document relates to the including entity.
                                      enum:
                                        - ATTACHMENT
                                        - CANONICAL
                                        - CASE
                                        - CONTACT
                                        - CONVERSATION_MESSAGES
                                        - EXPERT
                                        - FROM
                                        - HIGHLIGHT
                                        - OPPORTUNITY
                                        - RECENT
                                        - SOURCE
                                        - TICKET
                                        - TRANSCRIPT
                                        - WITH
                                      x-enumDescriptions:
                                        CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                    associatedEntityId:
                                      type: string
                                      description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                    querySuggestion:
                                      required:
                                        - query
                                      example:
                                        query: app:github type:pull author:mortimer
                                        label: Mortimer's PRs
                                        datasource: github
                                      properties:
                                        missingTerm:
                                          type: string
                                          description: A query term missing from the original query on which this suggestion is based.
                                        query:
                                          type: string
                                          description: The query being suggested (e.g. enforcing the missing term from the original query).
                                        searchProviderInfo:
                                          example:
                                            name: Google
                                            logo: https://app.glean.com/images/feather/globe.svg
                                            searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                          properties:
                                            name:
                                              type: string
                                              description: Name of the search provider.
                                            logoUrl:
                                              type: string
                                              description: URL to the provider's logo.
                                            searchLinkUrlTemplate:
                                              type: string
                                              description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                          type: object
                                        label:
                                          type: string
                                          description: A user-facing description to display for the suggestion.
                                        datasource:
                                          type: string
                                          description: The datasource associated with the suggestion.
                                        requestOptions:
                                          required:
                                            - facetBucketSize
                                          example:
                                            datasourceFilter: JIRA
                                            datasourcesFilter:
                                              - JIRA
                                            queryOverridesFacetFilters: true
                                            facetFilters:
                                              - fieldName: fieldName
                                                values:
                                                  - fieldValues
                                                  - fieldValues
                                              - fieldName: fieldName
                                                values:
                                                  - fieldValues
                                                  - fieldValues
                                          properties:
                                            datasourceFilter:
                                              type: string
                                              description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                            datasourcesFilter:
                                              type: array
                                              description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                              items:
                                                type: string
                                            queryOverridesFacetFilters:
                                              type: boolean
                                              description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                            facetFilters:
                                              type: array
                                              description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                              items:
                                                example:
                                                  fieldName: type
                                                  values:
                                                    - value: Spreadsheet
                                                      relationType: EQUALS
                                                    - value: Presentation
                                                      relationType: EQUALS
                                                properties:
                                                  fieldName:
                                                    type: string
                                                    example: owner
                                                  values:
                                                    type: array
                                                    description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                    items:
                                                      properties:
                                                        value:
                                                          type: string
                                                          example: Spreadsheet
                                                        relationType:
                                                          type: string
                                                          enum:
                                                            - EQUALS
                                                            - ID_EQUALS
                                                            - LT
                                                            - GT
                                                          example: EQUALS
                                                        isNegated:
                                                          type: boolean
                                                          deprecated: true
                                                          description: DEPRECATED - please use relationType instead
                                                      type: object
                                                  groupName:
                                                    type: string
                                                    example: Spreadsheet
                                                    description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                type: object
                                            facetFilterSets:
                                              type: array
                                              description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                              items:
                                                description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                properties:
                                                  filters:
                                                    type: array
                                                    items:
                                                      example:
                                                        fieldName: type
                                                        values:
                                                          - value: Spreadsheet
                                                            relationType: EQUALS
                                                          - value: Presentation
                                                            relationType: EQUALS
                                                      properties:
                                                        fieldName:
                                                          type: string
                                                          example: owner
                                                        values:
                                                          type: array
                                                          description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                          items:
                                                            properties:
                                                              value:
                                                                type: string
                                                                example: Spreadsheet
                                                              relationType:
                                                                type: string
                                                                enum:
                                                                  - EQUALS
                                                                  - ID_EQUALS
                                                                  - LT
                                                                  - GT
                                                                example: EQUALS
                                                              isNegated:
                                                                type: boolean
                                                                deprecated: true
                                                                description: DEPRECATED - please use relationType instead
                                                            type: object
                                                        groupName:
                                                          type: string
                                                          example: Spreadsheet
                                                          description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                      type: object
                                                type: object
                                            facetBucketFilter:
                                              properties:
                                                facet:
                                                  type: string
                                                  description: The facet whose buckets should be filtered.
                                                prefix:
                                                  type: string
                                                  description: The per-term prefix that facet buckets should be filtered on.
                                              type: object
                                            facetBucketSize:
                                              type: integer
                                              description: The maximum number of FacetBuckets to return in each FacetResult.
                                            defaultFacets:
                                              type: array
                                              description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                              items:
                                                type: string
                                            authTokens:
                                              type: array
                                              description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                              items:
                                                required:
                                                  - accessToken
                                                  - datasource
                                                example:
                                                  accessToken: 123abc
                                                  datasource: gmail
                                                  scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                  tokenType: Bearer
                                                  authUser: '1'
                                                properties:
                                                  accessToken:
                                                    type: string
                                                  datasource:
                                                    type: string
                                                  scope:
                                                    type: string
                                                  tokenType:
                                                    type: string
                                                  authUser:
                                                    description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                    type: string
                                                  expiration:
                                                    description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                    type: integer
                                                    format: int64
                                                type: object
                                            fetchAllDatasourceCounts:
                                              type: boolean
                                              description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                            responseHints:
                                              type: array
                                              description: Array of hints containing which fields should be populated in the response.
                                              items:
                                                type: string
                                                description: Hints for the response content.
                                                x-enumDescriptions:
                                                  ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                  FACET_RESULTS: Return only facet results.
                                                  QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                  RESULTS: Return search result documents.
                                                  SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                enum:
                                                  - ALL_RESULT_COUNTS
                                                  - FACET_RESULTS
                                                  - QUERY_METADATA
                                                  - RESULTS
                                                  - SPELLCHECK_METADATA
                                            timezoneOffset:
                                              type: integer
                                              description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                            disableSpellcheck:
                                              type: boolean
                                              description: Whether or not to disable spellcheck.
                                            disableQueryAutocorrect:
                                              type: boolean
                                              description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                            returnLlmContentOverSnippets:
                                              type: boolean
                                              description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                            inclusions:
                                              properties:
                                                containerSpecs:
                                                  description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                  type: array
                                                  items:
                                                    type: object
                                                    description: DocumentSpec object
                                                    additionalProperties: true
                                              type: object
                                            exclusions:
                                              properties:
                                                containerSpecs:
                                                  description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                  type: array
                                                  items:
                                                    type: object
                                                    description: DocumentSpec object
                                                    additionalProperties: true
                                              type: object
                                          type: object
                                        ranges:
                                          type: array
                                          description: The bolded ranges within the query of the QuerySuggestion.
                                          items:
                                            required:
                                              - startIndex
                                            description: A subsection of a given string to which some special formatting should be applied.
                                            properties:
                                              startIndex:
                                                type: integer
                                                description: The inclusive start index of the range.
                                              endIndex:
                                                type: integer
                                                description: The exclusive end index of the range.
                                              type:
                                                type: string
                                                enum:
                                                  - BOLD
                                                  - CITATION
                                                  - HIGHLIGHT
                                                  - LINK
                                              url:
                                                type: string
                                                description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                              document:
                                                properties:
                                                  id:
                                                    type: string
                                                    description: The Glean Document ID.
                                                  datasource:
                                                    type: string
                                                    description: The app or other repository type from which the document was extracted
                                                  connectorType:
                                                    type: string
                                                    description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                    enum:
                                                      - API_CRAWL
                                                      - BROWSER_CRAWL
                                                      - BROWSER_HISTORY
                                                      - BUILTIN
                                                      - FEDERATED_SEARCH
                                                      - PUSH_API
                                                      - WEB_CRAWL
                                                      - NATIVE_HISTORY
                                                  docType:
                                                    type: string
                                                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                                  content:
                                                    properties:
                                                      fullTextList:
                                                        type: array
                                                        description: The plaintext content of the document.
                                                        items:
                                                          type: string
                                                    type: object
                                                  containerDocument:
                                                    type: object
                                                    description: Document object
                                                  parentDocument:
                                                    type: object
                                                    description: Document object
                                                  title:
                                                    type: string
                                                    description: The title of the document.
                                                  url:
                                                    type: string
                                                    description: A permalink for the document.
                                                  metadata:
                                                    type: object
                                                    description: DocumentMetadata object
                                                  sections:
                                                    type: array
                                                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                    items:
                                                      type: object
                                                      properties:
                                                        title:
                                                          type: string
                                                          description: The title of the document section (e.g. the section header).
                                                        url:
                                                          type: string
                                                          description: The permalink of the document section.
                                                type: object
                                            type: object
                                        inputDetails:
                                          example:
                                            hasCopyPaste: true
                                          properties:
                                            hasCopyPaste:
                                              type: boolean
                                              description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                          type: object
                                      type: object
                                    documents:
                                      type: array
                                      description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                      deprecated: true
                                      items:
                                        properties:
                                          id:
                                            type: string
                                            description: The Glean Document ID.
                                          datasource:
                                            type: string
                                            description: The app or other repository type from which the document was extracted
                                          connectorType:
                                            type: string
                                            description: The source from which document content was pulled, e.g. an API crawl or browser history
                                            enum:
                                              - API_CRAWL
                                              - BROWSER_CRAWL
                                              - BROWSER_HISTORY
                                              - BUILTIN
                                              - FEDERATED_SEARCH
                                              - PUSH_API
                                              - WEB_CRAWL
                                              - NATIVE_HISTORY
                                          docType:
                                            type: string
                                            description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                          content:
                                            properties:
                                              fullTextList:
                                                type: array
                                                description: The plaintext content of the document.
                                                items:
                                                  type: string
                                            type: object
                                          containerDocument:
                                            type: object
                                            description: Document object
                                          parentDocument:
                                            type: object
                                            description: Document object
                                          title:
                                            type: string
                                            description: The title of the document.
                                          url:
                                            type: string
                                            description: A permalink for the document.
                                          metadata:
                                            type: object
                                            description: DocumentMetadata object
                                          sections:
                                            type: array
                                            description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                            items:
                                              type: object
                                              properties:
                                                title:
                                                  type: string
                                                  description: The title of the document section (e.g. the section header).
                                                url:
                                                  type: string
                                                  description: The permalink of the document section.
                                        type: object
                                    results:
                                      type: array
                                      description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                      items:
                                        type: object
                                        description: SearchResult object
                                        additionalProperties: true
                                  type: object
                              clusteredResults:
                                type: array
                                description: A list of results that should be displayed as associated with this result.
                                items:
                                  type: object
                                  description: SearchResult object
                                  additionalProperties: true
                              allClusteredResults:
                                type: array
                                description: A list of results that should be displayed as associated with this result.
                                items:
                                  type: object
                                  description: ClusterGroup object
                                  additionalProperties: true
                              attachmentCount:
                                type: integer
                                description: The total number of attachments.
                              attachments:
                                type: array
                                description: A (potentially partial) list of results representing documents attached to the main result document.
                                items:
                                  type: object
                                  description: SearchResult object
                                  additionalProperties: true
                              backlinkResults:
                                type: array
                                description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                                items:
                                  type: object
                                  description: SearchResult object
                                  additionalProperties: true
                              clusterType:
                                type: string
                                description: The reason for inclusion of clusteredResults.
                                enum:
                                  - SIMILAR
                                  - FRESHNESS
                                  - TITLE
                                  - CONTENT
                                  - NONE
                                  - THREAD_REPLY
                                  - THREAD_ROOT
                                  - PREFIX
                                  - SUFFIX
                              mustIncludeSuggestions:
                                properties:
                                  suggestions:
                                    type: array
                                    items:
                                      required:
                                        - query
                                      example:
                                        query: app:github type:pull author:mortimer
                                        label: Mortimer's PRs
                                        datasource: github
                                      properties:
                                        missingTerm:
                                          type: string
                                          description: A query term missing from the original query on which this suggestion is based.
                                        query:
                                          type: string
                                          description: The query being suggested (e.g. enforcing the missing term from the original query).
                                        searchProviderInfo:
                                          example:
                                            name: Google
                                            logo: https://app.glean.com/images/feather/globe.svg
                                            searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                          properties:
                                            name:
                                              type: string
                                              description: Name of the search provider.
                                            logoUrl:
                                              type: string
                                              description: URL to the provider's logo.
                                            searchLinkUrlTemplate:
                                              type: string
                                              description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                          type: object
                                        label:
                                          type: string
                                          description: A user-facing description to display for the suggestion.
                                        datasource:
                                          type: string
                                          description: The datasource associated with the suggestion.
                                        requestOptions:
                                          required:
                                            - facetBucketSize
                                          example:
                                            datasourceFilter: JIRA
                                            datasourcesFilter:
                                              - JIRA
                                            queryOverridesFacetFilters: true
                                            facetFilters:
                                              - fieldName: fieldName
                                                values:
                                                  - fieldValues
                                                  - fieldValues
                                              - fieldName: fieldName
                                                values:
                                                  - fieldValues
                                                  - fieldValues
                                          properties:
                                            datasourceFilter:
                                              type: string
                                              description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                            datasourcesFilter:
                                              type: array
                                              description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                              items:
                                                type: string
                                            queryOverridesFacetFilters:
                                              type: boolean
                                              description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                            facetFilters:
                                              type: array
                                              description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                              items:
                                                example:
                                                  fieldName: type
                                                  values:
                                                    - value: Spreadsheet
                                                      relationType: EQUALS
                                                    - value: Presentation
                                                      relationType: EQUALS
                                                properties:
                                                  fieldName:
                                                    type: string
                                                    example: owner
                                                  values:
                                                    type: array
                                                    description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                    items:
                                                      properties:
                                                        value:
                                                          type: string
                                                          example: Spreadsheet
                                                        relationType:
                                                          type: string
                                                          enum:
                                                            - EQUALS
                                                            - ID_EQUALS
                                                            - LT
                                                            - GT
                                                          example: EQUALS
                                                        isNegated:
                                                          type: boolean
                                                          deprecated: true
                                                          description: DEPRECATED - please use relationType instead
                                                      type: object
                                                  groupName:
                                                    type: string
                                                    example: Spreadsheet
                                                    description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                type: object
                                            facetFilterSets:
                                              type: array
                                              description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                              items:
                                                description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                properties:
                                                  filters:
                                                    type: array
                                                    items:
                                                      example:
                                                        fieldName: type
                                                        values:
                                                          - value: Spreadsheet
                                                            relationType: EQUALS
                                                          - value: Presentation
                                                            relationType: EQUALS
                                                      properties:
                                                        fieldName:
                                                          type: string
                                                          example: owner
                                                        values:
                                                          type: array
                                                          description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                          items:
                                                            properties:
                                                              value:
                                                                type: string
                                                                example: Spreadsheet
                                                              relationType:
                                                                type: string
                                                                enum:
                                                                  - EQUALS
                                                                  - ID_EQUALS
                                                                  - LT
                                                                  - GT
                                                                example: EQUALS
                                                              isNegated:
                                                                type: boolean
                                                                deprecated: true
                                                                description: DEPRECATED - please use relationType instead
                                                            type: object
                                                        groupName:
                                                          type: string
                                                          example: Spreadsheet
                                                          description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                      type: object
                                                type: object
                                            facetBucketFilter:
                                              properties:
                                                facet:
                                                  type: string
                                                  description: The facet whose buckets should be filtered.
                                                prefix:
                                                  type: string
                                                  description: The per-term prefix that facet buckets should be filtered on.
                                              type: object
                                            facetBucketSize:
                                              type: integer
                                              description: The maximum number of FacetBuckets to return in each FacetResult.
                                            defaultFacets:
                                              type: array
                                              description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                              items:
                                                type: string
                                            authTokens:
                                              type: array
                                              description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                              items:
                                                required:
                                                  - accessToken
                                                  - datasource
                                                example:
                                                  accessToken: 123abc
                                                  datasource: gmail
                                                  scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                  tokenType: Bearer
                                                  authUser: '1'
                                                properties:
                                                  accessToken:
                                                    type: string
                                                  datasource:
                                                    type: string
                                                  scope:
                                                    type: string
                                                  tokenType:
                                                    type: string
                                                  authUser:
                                                    description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                    type: string
                                                  expiration:
                                                    description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                    type: integer
                                                    format: int64
                                                type: object
                                            fetchAllDatasourceCounts:
                                              type: boolean
                                              description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                            responseHints:
                                              type: array
                                              description: Array of hints containing which fields should be populated in the response.
                                              items:
                                                type: string
                                                description: Hints for the response content.
                                                x-enumDescriptions:
                                                  ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                  FACET_RESULTS: Return only facet results.
                                                  QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                  RESULTS: Return search result documents.
                                                  SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                enum:
                                                  - ALL_RESULT_COUNTS
                                                  - FACET_RESULTS
                                                  - QUERY_METADATA
                                                  - RESULTS
                                                  - SPELLCHECK_METADATA
                                            timezoneOffset:
                                              type: integer
                                              description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                            disableSpellcheck:
                                              type: boolean
                                              description: Whether or not to disable spellcheck.
                                            disableQueryAutocorrect:
                                              type: boolean
                                              description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                            returnLlmContentOverSnippets:
                                              type: boolean
                                              description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                            inclusions:
                                              properties:
                                                containerSpecs:
                                                  description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                  type: array
                                                  items:
                                                    type: object
                                                    description: DocumentSpec object
                                                    additionalProperties: true
                                              type: object
                                            exclusions:
                                              properties:
                                                containerSpecs:
                                                  description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                  type: array
                                                  items:
                                                    type: object
                                                    description: DocumentSpec object
                                                    additionalProperties: true
                                              type: object
                                          type: object
                                        ranges:
                                          type: array
                                          description: The bolded ranges within the query of the QuerySuggestion.
                                          items:
                                            required:
                                              - startIndex
                                            description: A subsection of a given string to which some special formatting should be applied.
                                            properties:
                                              startIndex:
                                                type: integer
                                                description: The inclusive start index of the range.
                                              endIndex:
                                                type: integer
                                                description: The exclusive end index of the range.
                                              type:
                                                type: string
                                                enum:
                                                  - BOLD
                                                  - CITATION
                                                  - HIGHLIGHT
                                                  - LINK
                                              url:
                                                type: string
                                                description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                              document:
                                                properties:
                                                  id:
                                                    type: string
                                                    description: The Glean Document ID.
                                                  datasource:
                                                    type: string
                                                    description: The app or other repository type from which the document was extracted
                                                  connectorType:
                                                    type: string
                                                    description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                    enum:
                                                      - API_CRAWL
                                                      - BROWSER_CRAWL
                                                      - BROWSER_HISTORY
                                                      - BUILTIN
                                                      - FEDERATED_SEARCH
                                                      - PUSH_API
                                                      - WEB_CRAWL
                                                      - NATIVE_HISTORY
                                                  docType:
                                                    type: string
                                                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                                  content:
                                                    properties:
                                                      fullTextList:
                                                        type: array
                                                        description: The plaintext content of the document.
                                                        items:
                                                          type: string
                                                    type: object
                                                  containerDocument:
                                                    type: object
                                                    description: Document object
                                                  parentDocument:
                                                    type: object
                                                    description: Document object
                                                  title:
                                                    type: string
                                                    description: The title of the document.
                                                  url:
                                                    type: string
                                                    description: A permalink for the document.
                                                  metadata:
                                                    type: object
                                                    description: DocumentMetadata object
                                                  sections:
                                                    type: array
                                                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                    items:
                                                      type: object
                                                      properties:
                                                        title:
                                                          type: string
                                                          description: The title of the document section (e.g. the section header).
                                                        url:
                                                          type: string
                                                          description: The permalink of the document section.
                                                type: object
                                            type: object
                                        inputDetails:
                                          example:
                                            hasCopyPaste: true
                                          properties:
                                            hasCopyPaste:
                                              type: boolean
                                              description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                          type: object
                                      type: object
                                  person:
                                    type: object
                                    description: Person object
                                    additionalProperties: true
                                type: object
                              querySuggestion:
                                required:
                                  - query
                                example:
                                  query: app:github type:pull author:mortimer
                                  label: Mortimer's PRs
                                  datasource: github
                                properties:
                                  missingTerm:
                                    type: string
                                    description: A query term missing from the original query on which this suggestion is based.
                                  query:
                                    type: string
                                    description: The query being suggested (e.g. enforcing the missing term from the original query).
                                  searchProviderInfo:
                                    example:
                                      name: Google
                                      logo: https://app.glean.com/images/feather/globe.svg
                                      searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                    properties:
                                      name:
                                        type: string
                                        description: Name of the search provider.
                                      logoUrl:
                                        type: string
                                        description: URL to the provider's logo.
                                      searchLinkUrlTemplate:
                                        type: string
                                        description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                    type: object
                                  label:
                                    type: string
                                    description: A user-facing description to display for the suggestion.
                                  datasource:
                                    type: string
                                    description: The datasource associated with the suggestion.
                                  requestOptions:
                                    required:
                                      - facetBucketSize
                                    example:
                                      datasourceFilter: JIRA
                                      datasourcesFilter:
                                        - JIRA
                                      queryOverridesFacetFilters: true
                                      facetFilters:
                                        - fieldName: fieldName
                                          values:
                                            - fieldValues
                                            - fieldValues
                                        - fieldName: fieldName
                                          values:
                                            - fieldValues
                                            - fieldValues
                                    properties:
                                      datasourceFilter:
                                        type: string
                                        description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                      datasourcesFilter:
                                        type: array
                                        description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                        items:
                                          type: string
                                      queryOverridesFacetFilters:
                                        type: boolean
                                        description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                      facetFilters:
                                        type: array
                                        description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                        items:
                                          example:
                                            fieldName: type
                                            values:
                                              - value: Spreadsheet
                                                relationType: EQUALS
                                              - value: Presentation
                                                relationType: EQUALS
                                          properties:
                                            fieldName:
                                              type: string
                                              example: owner
                                            values:
                                              type: array
                                              description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                              items:
                                                properties:
                                                  value:
                                                    type: string
                                                    example: Spreadsheet
                                                  relationType:
                                                    type: string
                                                    enum:
                                                      - EQUALS
                                                      - ID_EQUALS
                                                      - LT
                                                      - GT
                                                    example: EQUALS
                                                  isNegated:
                                                    type: boolean
                                                    deprecated: true
                                                    description: DEPRECATED - please use relationType instead
                                                type: object
                                            groupName:
                                              type: string
                                              example: Spreadsheet
                                              description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                          type: object
                                      facetFilterSets:
                                        type: array
                                        description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                        items:
                                          description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                          properties:
                                            filters:
                                              type: array
                                              items:
                                                example:
                                                  fieldName: type
                                                  values:
                                                    - value: Spreadsheet
                                                      relationType: EQUALS
                                                    - value: Presentation
                                                      relationType: EQUALS
                                                properties:
                                                  fieldName:
                                                    type: string
                                                    example: owner
                                                  values:
                                                    type: array
                                                    description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                    items:
                                                      properties:
                                                        value:
                                                          type: string
                                                          example: Spreadsheet
                                                        relationType:
                                                          type: string
                                                          enum:
                                                            - EQUALS
                                                            - ID_EQUALS
                                                            - LT
                                                            - GT
                                                          example: EQUALS
                                                        isNegated:
                                                          type: boolean
                                                          deprecated: true
                                                          description: DEPRECATED - please use relationType instead
                                                      type: object
                                                  groupName:
                                                    type: string
                                                    example: Spreadsheet
                                                    description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                type: object
                                          type: object
                                      facetBucketFilter:
                                        properties:
                                          facet:
                                            type: string
                                            description: The facet whose buckets should be filtered.
                                          prefix:
                                            type: string
                                            description: The per-term prefix that facet buckets should be filtered on.
                                        type: object
                                      facetBucketSize:
                                        type: integer
                                        description: The maximum number of FacetBuckets to return in each FacetResult.
                                      defaultFacets:
                                        type: array
                                        description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                        items:
                                          type: string
                                      authTokens:
                                        type: array
                                        description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                        items:
                                          required:
                                            - accessToken
                                            - datasource
                                          example:
                                            accessToken: 123abc
                                            datasource: gmail
                                            scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                            tokenType: Bearer
                                            authUser: '1'
                                          properties:
                                            accessToken:
                                              type: string
                                            datasource:
                                              type: string
                                            scope:
                                              type: string
                                            tokenType:
                                              type: string
                                            authUser:
                                              description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                              type: string
                                            expiration:
                                              description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                              type: integer
                                              format: int64
                                          type: object
                                      fetchAllDatasourceCounts:
                                        type: boolean
                                        description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                      responseHints:
                                        type: array
                                        description: Array of hints containing which fields should be populated in the response.
                                        items:
                                          type: string
                                          description: Hints for the response content.
                                          x-enumDescriptions:
                                            ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                            FACET_RESULTS: Return only facet results.
                                            QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                            RESULTS: Return search result documents.
                                            SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                          enum:
                                            - ALL_RESULT_COUNTS
                                            - FACET_RESULTS
                                            - QUERY_METADATA
                                            - RESULTS
                                            - SPELLCHECK_METADATA
                                      timezoneOffset:
                                        type: integer
                                        description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                      disableSpellcheck:
                                        type: boolean
                                        description: Whether or not to disable spellcheck.
                                      disableQueryAutocorrect:
                                        type: boolean
                                        description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                      returnLlmContentOverSnippets:
                                        type: boolean
                                        description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                      inclusions:
                                        properties:
                                          containerSpecs:
                                            description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                            type: array
                                            items:
                                              type: object
                                              description: DocumentSpec object
                                              additionalProperties: true
                                        type: object
                                      exclusions:
                                        properties:
                                          containerSpecs:
                                            description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                            type: array
                                            items:
                                              type: object
                                              description: DocumentSpec object
                                              additionalProperties: true
                                        type: object
                                    type: object
                                  ranges:
                                    type: array
                                    description: The bolded ranges within the query of the QuerySuggestion.
                                    items:
                                      required:
                                        - startIndex
                                      description: A subsection of a given string to which some special formatting should be applied.
                                      properties:
                                        startIndex:
                                          type: integer
                                          description: The inclusive start index of the range.
                                        endIndex:
                                          type: integer
                                          description: The exclusive end index of the range.
                                        type:
                                          type: string
                                          enum:
                                            - BOLD
                                            - CITATION
                                            - HIGHLIGHT
                                            - LINK
                                        url:
                                          type: string
                                          description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                        document:
                                          properties:
                                            id:
                                              type: string
                                              description: The Glean Document ID.
                                            datasource:
                                              type: string
                                              description: The app or other repository type from which the document was extracted
                                            connectorType:
                                              type: string
                                              description: The source from which document content was pulled, e.g. an API crawl or browser history
                                              enum:
                                                - API_CRAWL
                                                - BROWSER_CRAWL
                                                - BROWSER_HISTORY
                                                - BUILTIN
                                                - FEDERATED_SEARCH
                                                - PUSH_API
                                                - WEB_CRAWL
                                                - NATIVE_HISTORY
                                            docType:
                                              type: string
                                              description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                            content:
                                              properties:
                                                fullTextList:
                                                  type: array
                                                  description: The plaintext content of the document.
                                                  items:
                                                    type: string
                                              type: object
                                            containerDocument:
                                              type: object
                                              description: Document object
                                            parentDocument:
                                              type: object
                                              description: Document object
                                            title:
                                              type: string
                                              description: The title of the document.
                                            url:
                                              type: string
                                              description: A permalink for the document.
                                            metadata:
                                              type: object
                                              description: DocumentMetadata object
                                            sections:
                                              type: array
                                              description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                              items:
                                                type: object
                                                properties:
                                                  title:
                                                    type: string
                                                    description: The title of the document section (e.g. the section header).
                                                  url:
                                                    type: string
                                                    description: The permalink of the document section.
                                          type: object
                                      type: object
                                  inputDetails:
                                    example:
                                      hasCopyPaste: true
                                    properties:
                                      hasCopyPaste:
                                        type: boolean
                                        description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                    type: object
                                type: object
                              prominence:
                                type: string
                                description: |
                                  The level of visual distinction that should be given to a result.
                                x-enumDescriptions:
                                  HERO: A high-confidence result that should feature prominently on the page.
                                  PROMOTED: May not be the best result but should be given additional visual distinction.
                                  STANDARD: Should not be distinct from any other results.
                                enum:
                                  - HERO
                                  - PROMOTED
                                  - STANDARD
                              attachmentContext:
                                type: string
                                description: Additional context for the relationship between the result and the document it's attached to.
                              pins:
                                type: array
                                description: A list of pins associated with this search result.
                                items:
                                  type: object
                                  properties:
                                    queries:
                                      type: array
                                      description: The query strings for which the pinned result will show.
                                      items:
                                        type: string
                                    audienceFilters:
                                      type: array
                                      description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                                      items:
                                        type: object
                                        description: FacetFilter object
                                        additionalProperties: true
                                    id:
                                      type: string
                                      description: The opaque id of the pin.
                                    documentId:
                                      type: string
                                      description: The document which should be a pinned result.
                                    attribution:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    updatedBy:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    createTime:
                                      type: string
                                      format: date-time
                                    updateTime:
                                      type: string
                                      format: date-time
                                  required:
                                    - documentId
                        type: object
                      meeting:
                        properties:
                          id:
                            type: string
                          title:
                            type: string
                          description:
                            type: string
                          url:
                            type: string
                          startTime:
                            type: string
                            format: date-time
                          endTime:
                            type: string
                            format: date-time
                          attendees:
                            properties:
                              people:
                                type: array
                                description: Full details of some of the attendees of this event
                                items:
                                  required:
                                    - person
                                  properties:
                                    isOrganizer:
                                      type: boolean
                                      description: Whether or not this attendee is an organizer.
                                    isInGroup:
                                      type: boolean
                                      description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    groupAttendees:
                                      type: array
                                      description: If this attendee is a group, represents the list of individual attendees in the group.
                                      items:
                                        type: object
                                        description: CalendarAttendee object
                                        additionalProperties: true
                                    responseStatus:
                                      type: string
                                      enum:
                                        - ACCEPTED
                                        - DECLINED
                                        - NO_RESPONSE
                                        - TENTATIVE
                                  type: object
                              isLimit:
                                type: boolean
                                description: Whether the total count of the people returned is at the retrieval limit.
                              total:
                                type: integer
                                description: Total number of attendees in this event.
                              numAccepted:
                                type: integer
                                description: Total number of attendees who have accepted this event.
                              numDeclined:
                                type: integer
                                description: Total number of attendees who have declined this event.
                              numNoResponse:
                                type: integer
                                description: Total number of attendees who have not responded to this event.
                              numTentative:
                                type: integer
                                description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                            type: object
                        type: object
                      app:
                        required:
                          - datasource
                        properties:
                          datasource:
                            type: string
                            description: The app or other repository type this represents
                          docType:
                            type: string
                            description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                          mimeType:
                            type: string
                            description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                          iconUrl:
                            type: string
                            description: If there is available icon URL.
                        type: object
                      collection:
                        type: object
                        description: Flattened Collection
                        properties:
                          name:
                            type: string
                            description: The unique name of the Collection.
                          description:
                            type: string
                            description: A brief summary of the Collection's contents.
                          addedRoles:
                            type: array
                            description: A list of added user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of removed user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          audienceFilters:
                            type: array
                            description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                            items:
                              type: object
                              description: FacetFilter object
                              additionalProperties: true
                          icon:
                            type: string
                            description: The emoji icon of this Collection.
                          adminLocked:
                            type: boolean
                            description: Indicates whether edits are allowed for everyone or only admins.
                          parentId:
                            type: integer
                            description: The parent of this Collection, or 0 if it's a top-level Collection.
                          thumbnail:
                            properties:
                              photoId:
                                type: string
                                description: Photo id if the thumbnail is from splash.
                              url:
                                type: string
                                description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                            type: object
                          allowedDatasource:
                            type: string
                            description: The datasource type this Collection can hold.
                          permissions:
                            type: object
                            description: Flattened ObjectPermissions
                            properties:
                              write:
                                type: object
                                description: Describes the write permissions levels that a user has for a specific feature
                                properties:
                                  scopeType:
                                    type: string
                                    description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                    enum:
                                      - GLOBAL
                                      - OWN
                                    properties: {}
                                  create:
                                    type: boolean
                                    description: True if user has create permission for this feature and scope
                                  update:
                                    type: boolean
                                    description: True if user has update permission for this feature and scope
                                  delete:
                                    type: boolean
                                    description: True if user has delete permission for this feature and scope
                          id:
                            type: integer
                            description: The unique ID of the Collection.
                          createTime:
                            type: string
                            format: date-time
                          updateTime:
                            type: string
                            format: date-time
                          creator:
                            type: object
                            description: Person object
                            additionalProperties: true
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          itemCount:
                            type: integer
                            description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                          childCount:
                            type: integer
                            description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                          items:
                            type: array
                            description: The items in this Collection.
                            items:
                              type: object
                              description: CollectionItem object
                              additionalProperties: true
                          pinMetadata:
                            required:
                              - pinnedCategories
                              - eligibleCategoriesForPinning
                            properties:
                              existingPins:
                                type: array
                                description: List of targets this Collection is pinned to.
                                items:
                                  required:
                                    - category
                                  properties:
                                    category:
                                      type: string
                                      description: Categories a Collection can be pinned to.
                                      enum:
                                        - COMPANY_RESOURCE
                                        - DEPARTMENT_RESOURCE
                                        - TEAM_RESOURCE
                                    value:
                                      type: string
                                      description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                    target:
                                      type: string
                                      description: What targets can a Collection be pinned to.
                                      enum:
                                        - RESOURCE_CARD
                                        - TEAM_PROFILE_PAGE
                                  type: object
                              eligiblePins:
                                type: array
                                description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                                items:
                                  required:
                                    - id
                                    - target
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the Collection.
                                    target:
                                      required:
                                        - category
                                      properties:
                                        category:
                                          type: string
                                          description: Categories a Collection can be pinned to.
                                          enum:
                                            - COMPANY_RESOURCE
                                            - DEPARTMENT_RESOURCE
                                            - TEAM_RESOURCE
                                        value:
                                          type: string
                                          description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                        target:
                                          type: string
                                          description: What targets can a Collection be pinned to.
                                          enum:
                                            - RESOURCE_CARD
                                            - TEAM_PROFILE_PAGE
                                      type: object
                                  type: object
                            type: object
                          shortcuts:
                            type: array
                            description: The names of the shortcuts (Go Links) that point to this Collection.
                            items:
                              type: string
                          children:
                            type: array
                            description: The children Collections of this Collection.
                            items:
                              type: object
                              description: Collection object
                              additionalProperties: true
                          roles:
                            type: array
                            description: A list of user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                      answerBoard:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The unique name of the Collection.
                          description:
                            type: string
                            description: A brief summary of the Collection's contents.
                          addedRoles:
                            type: array
                            description: A list of added user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of removed user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          audienceFilters:
                            type: array
                            description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                            items:
                              type: object
                              description: FacetFilter object
                              additionalProperties: true
                          permissions:
                            properties:
                              write:
                                description: Describes the write permissions levels that a user has for a specific feature
                                properties:
                                  scopeType:
                                    type: string
                                    description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                    enum:
                                      - GLOBAL
                                      - OWN
                                  create:
                                    type: boolean
                                    description: True if user has create permission for this feature and scope
                                  update:
                                    type: boolean
                                    description: True if user has update permission for this feature and scope
                                  delete:
                                    type: boolean
                                    description: True if user has delete permission for this feature and scope
                                type: object
                            type: object
                          id:
                            type: integer
                            description: The unique ID of the Answer Board.
                          createTime:
                            type: string
                            format: date-time
                          updateTime:
                            type: string
                            format: date-time
                          creator:
                            type: object
                            description: Person object
                            additionalProperties: true
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          itemCount:
                            type: integer
                            description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                          roles:
                            type: array
                            description: A list of user roles for the Answer Board.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                        required:
                          - name
                          - id
                          - description
                      code:
                        example:
                          repoName: scio
                          fileName: README.md
                          matches:
                            - lineNumber: 1
                              content: Welcome to the beginning
                              ranges: []
                            - lineNumber: 2
                              content: Second line of the file
                              ranges: []
                            - lineNumber: 3
                              content: hello world hello world
                              ranges:
                                - startindex: 0
                                  endIndex: 5
                                - startIndex: 12
                                  endIndex: 17
                        properties:
                          repoName:
                            type: string
                          fileName:
                            type: string
                          fileUrl:
                            type: string
                          lines:
                            type: array
                            items:
                              properties:
                                lineNumber:
                                  type: integer
                                content:
                                  type: string
                                ranges:
                                  type: array
                                  description: Index ranges depicting matched sections of the line
                                  items:
                                    required:
                                      - startIndex
                                    description: A subsection of a given string to which some special formatting should be applied.
                                    properties:
                                      startIndex:
                                        type: integer
                                        description: The inclusive start index of the range.
                                      endIndex:
                                        type: integer
                                        description: The exclusive end index of the range.
                                      type:
                                        type: string
                                        enum:
                                          - BOLD
                                          - CITATION
                                          - HIGHLIGHT
                                          - LINK
                                      url:
                                        type: string
                                        description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                      document:
                                        type: object
                                        description: Document object
                                        additionalProperties: true
                                    type: object
                              type: object
                          isLastMatch:
                            type: boolean
                            description: Last file match for a repo
                        type: object
                      shortcut:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The opaque id of the user generated content.
                          inputAlias:
                            type: string
                            description: Link text following go/ prefix as entered by the user.
                          destinationUrl:
                            type: string
                            description: Destination URL for the shortcut.
                          destinationDocumentId:
                            type: string
                            description: Glean Document ID for the URL, if known.
                          description:
                            type: string
                            description: A short, plain text blurb to help people understand the intent of the shortcut.
                          unlisted:
                            type: boolean
                            description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                          urlTemplate:
                            type: string
                            description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                          addedRoles:
                            type: array
                            description: A list of user roles added for the Shortcut.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of user roles removed for the Shortcut.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          permissions:
                            properties:
                              write:
                                description: Describes the write permissions levels that a user has for a specific feature
                                properties:
                                  scopeType:
                                    type: string
                                    description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                    enum:
                                      - GLOBAL
                                      - OWN
                                  create:
                                    type: boolean
                                    description: True if user has create permission for this feature and scope
                                  update:
                                    type: boolean
                                    description: True if user has update permission for this feature and scope
                                  delete:
                                    type: boolean
                                    description: True if user has delete permission for this feature and scope
                                type: object
                            type: object
                          createdBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          createTime:
                            type: string
                            format: date-time
                            description: The time the shortcut was created in ISO format (ISO 8601).
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          updateTime:
                            type: string
                            format: date-time
                            description: The time the shortcut was updated in ISO format (ISO 8601).
                          destinationDocument:
                            type: object
                            description: Document object
                            additionalProperties: true
                          intermediateUrl:
                            type: string
                            description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                          viewPrefix:
                            type: string
                            description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                          isExternal:
                            type: boolean
                            description: Indicates whether a shortcut is native or external.
                          editUrl:
                            type: string
                            description: The URL using which the user can access the edit page of the shortcut.
                          alias:
                            type: string
                            description: canonical link text following go/ prefix where hyphen/underscore is removed.
                          title:
                            type: string
                            description: Title for the Go Link
                          roles:
                            type: array
                            description: A list of user roles for the Go Link.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                        required:
                          - inputAlias
                      querySuggestions:
                        properties:
                          suggestions:
                            type: array
                            items:
                              required:
                                - query
                              example:
                                query: app:github type:pull author:mortimer
                                label: Mortimer's PRs
                                datasource: github
                              properties:
                                missingTerm:
                                  type: string
                                  description: A query term missing from the original query on which this suggestion is based.
                                query:
                                  type: string
                                  description: The query being suggested (e.g. enforcing the missing term from the original query).
                                searchProviderInfo:
                                  example:
                                    name: Google
                                    logo: https://app.glean.com/images/feather/globe.svg
                                    searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the search provider.
                                    logoUrl:
                                      type: string
                                      description: URL to the provider's logo.
                                    searchLinkUrlTemplate:
                                      type: string
                                      description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                  type: object
                                label:
                                  type: string
                                  description: A user-facing description to display for the suggestion.
                                datasource:
                                  type: string
                                  description: The datasource associated with the suggestion.
                                requestOptions:
                                  required:
                                    - facetBucketSize
                                  example:
                                    datasourceFilter: JIRA
                                    datasourcesFilter:
                                      - JIRA
                                    queryOverridesFacetFilters: true
                                    facetFilters:
                                      - fieldName: fieldName
                                        values:
                                          - fieldValues
                                          - fieldValues
                                      - fieldName: fieldName
                                        values:
                                          - fieldValues
                                          - fieldValues
                                  properties:
                                    datasourceFilter:
                                      type: string
                                      description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                    datasourcesFilter:
                                      type: array
                                      description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                      items:
                                        type: string
                                    queryOverridesFacetFilters:
                                      type: boolean
                                      description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                    facetFilters:
                                      type: array
                                      description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                      items:
                                        type: object
                                        description: FacetFilter object
                                        additionalProperties: true
                                    facetFilterSets:
                                      type: array
                                      description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                      items:
                                        description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                        properties:
                                          filters:
                                            type: array
                                            items:
                                              type: object
                                              description: FacetFilter object
                                              additionalProperties: true
                                        type: object
                                    facetBucketFilter:
                                      properties:
                                        facet:
                                          type: string
                                          description: The facet whose buckets should be filtered.
                                        prefix:
                                          type: string
                                          description: The per-term prefix that facet buckets should be filtered on.
                                      type: object
                                    facetBucketSize:
                                      type: integer
                                      description: The maximum number of FacetBuckets to return in each FacetResult.
                                    defaultFacets:
                                      type: array
                                      description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                      items:
                                        type: string
                                    authTokens:
                                      type: array
                                      description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                      items:
                                        required:
                                          - accessToken
                                          - datasource
                                        example:
                                          accessToken: 123abc
                                          datasource: gmail
                                          scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                          tokenType: Bearer
                                          authUser: '1'
                                        properties:
                                          accessToken:
                                            type: string
                                          datasource:
                                            type: string
                                          scope:
                                            type: string
                                          tokenType:
                                            type: string
                                          authUser:
                                            description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                            type: string
                                          expiration:
                                            description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                            type: integer
                                            format: int64
                                        type: object
                                    fetchAllDatasourceCounts:
                                      type: boolean
                                      description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                    responseHints:
                                      type: array
                                      description: Array of hints containing which fields should be populated in the response.
                                      items:
                                        type: string
                                        description: Hints for the response content.
                                        x-enumDescriptions:
                                          ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                          FACET_RESULTS: Return only facet results.
                                          QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                          RESULTS: Return search result documents.
                                          SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                        enum:
                                          - ALL_RESULT_COUNTS
                                          - FACET_RESULTS
                                          - QUERY_METADATA
                                          - RESULTS
                                          - SPELLCHECK_METADATA
                                    timezoneOffset:
                                      type: integer
                                      description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                    disableSpellcheck:
                                      type: boolean
                                      description: Whether or not to disable spellcheck.
                                    disableQueryAutocorrect:
                                      type: boolean
                                      description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                    returnLlmContentOverSnippets:
                                      type: boolean
                                      description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                    inclusions:
                                      properties:
                                        containerSpecs:
                                          description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                          type: array
                                          items:
                                            type: object
                                            description: DocumentSpec object
                                            additionalProperties: true
                                      type: object
                                    exclusions:
                                      properties:
                                        containerSpecs:
                                          description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                          type: array
                                          items:
                                            type: object
                                            description: DocumentSpec object
                                            additionalProperties: true
                                      type: object
                                  type: object
                                ranges:
                                  type: array
                                  description: The bolded ranges within the query of the QuerySuggestion.
                                  items:
                                    required:
                                      - startIndex
                                    description: A subsection of a given string to which some special formatting should be applied.
                                    properties:
                                      startIndex:
                                        type: integer
                                        description: The inclusive start index of the range.
                                      endIndex:
                                        type: integer
                                        description: The exclusive end index of the range.
                                      type:
                                        type: string
                                        enum:
                                          - BOLD
                                          - CITATION
                                          - HIGHLIGHT
                                          - LINK
                                      url:
                                        type: string
                                        description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                      document:
                                        type: object
                                        description: Document object
                                        additionalProperties: true
                                    type: object
                                inputDetails:
                                  example:
                                    hasCopyPaste: true
                                  properties:
                                    hasCopyPaste:
                                      type: boolean
                                      description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                  type: object
                              type: object
                          person:
                            type: object
                            description: Person object
                            additionalProperties: true
                        type: object
                      relatedDocuments:
                        type: array
                        description: A list of documents related to this structured result.
                        items:
                          properties:
                            relation:
                              type: string
                              description: How this document relates to the including entity.
                              enum:
                                - ATTACHMENT
                                - CANONICAL
                                - CASE
                                - CONTACT
                                - CONVERSATION_MESSAGES
                                - EXPERT
                                - FROM
                                - HIGHLIGHT
                                - OPPORTUNITY
                                - RECENT
                                - SOURCE
                                - TICKET
                                - TRANSCRIPT
                                - WITH
                              x-enumDescriptions:
                                CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                            associatedEntityId:
                              type: string
                              description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                            querySuggestion:
                              required:
                                - query
                              example:
                                query: app:github type:pull author:mortimer
                                label: Mortimer's PRs
                                datasource: github
                              properties:
                                missingTerm:
                                  type: string
                                  description: A query term missing from the original query on which this suggestion is based.
                                query:
                                  type: string
                                  description: The query being suggested (e.g. enforcing the missing term from the original query).
                                searchProviderInfo:
                                  example:
                                    name: Google
                                    logo: https://app.glean.com/images/feather/globe.svg
                                    searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the search provider.
                                    logoUrl:
                                      type: string
                                      description: URL to the provider's logo.
                                    searchLinkUrlTemplate:
                                      type: string
                                      description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                  type: object
                                label:
                                  type: string
                                  description: A user-facing description to display for the suggestion.
                                datasource:
                                  type: string
                                  description: The datasource associated with the suggestion.
                                requestOptions:
                                  required:
                                    - facetBucketSize
                                  example:
                                    datasourceFilter: JIRA
                                    datasourcesFilter:
                                      - JIRA
                                    queryOverridesFacetFilters: true
                                    facetFilters:
                                      - fieldName: fieldName
                                        values:
                                          - fieldValues
                                          - fieldValues
                                      - fieldName: fieldName
                                        values:
                                          - fieldValues
                                          - fieldValues
                                  properties:
                                    datasourceFilter:
                                      type: string
                                      description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                    datasourcesFilter:
                                      type: array
                                      description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                      items:
                                        type: string
                                    queryOverridesFacetFilters:
                                      type: boolean
                                      description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                    facetFilters:
                                      type: array
                                      description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                      items:
                                        type: object
                                        description: FacetFilter object
                                        additionalProperties: true
                                    facetFilterSets:
                                      type: array
                                      description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                      items:
                                        description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                        properties:
                                          filters:
                                            type: array
                                            items:
                                              type: object
                                              description: FacetFilter object
                                              additionalProperties: true
                                        type: object
                                    facetBucketFilter:
                                      properties:
                                        facet:
                                          type: string
                                          description: The facet whose buckets should be filtered.
                                        prefix:
                                          type: string
                                          description: The per-term prefix that facet buckets should be filtered on.
                                      type: object
                                    facetBucketSize:
                                      type: integer
                                      description: The maximum number of FacetBuckets to return in each FacetResult.
                                    defaultFacets:
                                      type: array
                                      description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                      items:
                                        type: string
                                    authTokens:
                                      type: array
                                      description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                      items:
                                        required:
                                          - accessToken
                                          - datasource
                                        example:
                                          accessToken: 123abc
                                          datasource: gmail
                                          scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                          tokenType: Bearer
                                          authUser: '1'
                                        properties:
                                          accessToken:
                                            type: string
                                          datasource:
                                            type: string
                                          scope:
                                            type: string
                                          tokenType:
                                            type: string
                                          authUser:
                                            description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                            type: string
                                          expiration:
                                            description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                            type: integer
                                            format: int64
                                        type: object
                                    fetchAllDatasourceCounts:
                                      type: boolean
                                      description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                    responseHints:
                                      type: array
                                      description: Array of hints containing which fields should be populated in the response.
                                      items:
                                        type: string
                                        description: Hints for the response content.
                                        x-enumDescriptions:
                                          ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                          FACET_RESULTS: Return only facet results.
                                          QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                          RESULTS: Return search result documents.
                                          SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                        enum:
                                          - ALL_RESULT_COUNTS
                                          - FACET_RESULTS
                                          - QUERY_METADATA
                                          - RESULTS
                                          - SPELLCHECK_METADATA
                                    timezoneOffset:
                                      type: integer
                                      description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                    disableSpellcheck:
                                      type: boolean
                                      description: Whether or not to disable spellcheck.
                                    disableQueryAutocorrect:
                                      type: boolean
                                      description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                    returnLlmContentOverSnippets:
                                      type: boolean
                                      description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                    inclusions:
                                      properties:
                                        containerSpecs:
                                          description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                          type: array
                                          items:
                                            type: object
                                            description: DocumentSpec object
                                            additionalProperties: true
                                      type: object
                                    exclusions:
                                      properties:
                                        containerSpecs:
                                          description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                          type: array
                                          items:
                                            type: object
                                            description: DocumentSpec object
                                            additionalProperties: true
                                      type: object
                                  type: object
                                ranges:
                                  type: array
                                  description: The bolded ranges within the query of the QuerySuggestion.
                                  items:
                                    required:
                                      - startIndex
                                    description: A subsection of a given string to which some special formatting should be applied.
                                    properties:
                                      startIndex:
                                        type: integer
                                        description: The inclusive start index of the range.
                                      endIndex:
                                        type: integer
                                        description: The exclusive end index of the range.
                                      type:
                                        type: string
                                        enum:
                                          - BOLD
                                          - CITATION
                                          - HIGHLIGHT
                                          - LINK
                                      url:
                                        type: string
                                        description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                      document:
                                        type: object
                                        description: Document object
                                        additionalProperties: true
                                    type: object
                                inputDetails:
                                  example:
                                    hasCopyPaste: true
                                  properties:
                                    hasCopyPaste:
                                      type: boolean
                                      description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                  type: object
                              type: object
                            documents:
                              type: array
                              description: A truncated list of documents with this relation. TO BE DEPRECATED.
                              deprecated: true
                              items:
                                type: object
                                description: Document object
                                additionalProperties: true
                            results:
                              type: array
                              description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                              items:
                                type: object
                                description: SearchResult object
                                additionalProperties: true
                          type: object
                      relatedQuestion:
                        properties:
                          question:
                            type: string
                            description: The text of the related question
                          answer:
                            type: string
                            description: The answer for the related question
                          ranges:
                            type: array
                            description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                            items:
                              required:
                                - startIndex
                              description: A subsection of a given string to which some special formatting should be applied.
                              properties:
                                startIndex:
                                  type: integer
                                  description: The inclusive start index of the range.
                                endIndex:
                                  type: integer
                                  description: The exclusive end index of the range.
                                type:
                                  type: string
                                  enum:
                                    - BOLD
                                    - CITATION
                                    - HIGHLIGHT
                                    - LINK
                                url:
                                  type: string
                                  description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                document:
                                  type: object
                                  description: Document object
                                  additionalProperties: true
                              type: object
                        type: object
                      disambiguation:
                        type: object
                        description: A disambiguation between multiple entities with the same name
                        properties:
                          name:
                            type: string
                            description: Name of the ambiguous entity
                          id:
                            type: string
                            description: The unique id of the entity in the knowledge graph
                          type:
                            type: string
                            description: The type of entity.
                            x-include-enum-class-prefix: true
                            enum:
                              - PERSON
                              - PROJECT
                              - CUSTOMER
                      snippets:
                        description: Any snippets associated to the populated object.
                        type: array
                        items:
                          required:
                            - snippet
                          example:
                            snippet: snippet
                            mimeType: mimeType
                          properties:
                            snippet:
                              type: string
                              description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                            mimeType:
                              type: string
                              description: The mime type of the snippets, currently either text/plain or text/html.
                            text:
                              type: string
                              description: A matching snippet from the document with no highlights.
                            snippetTextOrdering:
                              type: integer
                              description: Used for sorting based off the snippet's location within all_snippetable_text
                            ranges:
                              type: array
                              description: The bolded ranges within text.
                              items:
                                required:
                                  - startIndex
                                description: A subsection of a given string to which some special formatting should be applied.
                                properties:
                                  startIndex:
                                    type: integer
                                    description: The inclusive start index of the range.
                                  endIndex:
                                    type: integer
                                    description: The exclusive end index of the range.
                                  type:
                                    type: string
                                    enum:
                                      - BOLD
                                      - CITATION
                                      - HIGHLIGHT
                                      - LINK
                                  url:
                                    type: string
                                    description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                  document:
                                    type: object
                                    description: Document object
                                    additionalProperties: true
                                type: object
                            url:
                              type: string
                              description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                          type: object
                      trackingToken:
                        type: string
                        description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                      prominence:
                        type: string
                        description: The level of visual distinction that should be given to a result.
                        x-enumDescriptions:
                          HERO: A high-confidence result that should feature prominently on the page.
                          PROMOTED: May not be the best result but should be given additional visual distinction.
                          STANDARD: Should not be distinct from any other results.
                        enum:
                          - HERO
                          - PROMOTED
                          - STANDARD
                      source:
                        type: string
                        description: Source context for this result. Possible values depend on the result type.
                        enum:
                          - EXPERT_DETECTION
                          - ENTITY_NLQ
                    type: object
                type: object
          required:
            - text
        emoji:
          type: string
          description: An emoji used to indicate the nature of the announcement.
        thumbnail:
          properties:
            photoId:
              type: string
              description: Photo id if the thumbnail is from splash.
            url:
              type: string
              description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
          type: object
        banner:
          properties:
            photoId:
              type: string
              description: Photo id if the thumbnail is from splash.
            url:
              type: string
              description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
          type: object
        audienceFilters:
          type: array
          description: Filters which restrict who should see the announcement. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
        sourceDocumentId:
          type: string
          description: The Glean Document ID of the source document this Announcement was created from (e.g. Slack thread).
        hideAttribution:
          type: boolean
          description: Whether or not to hide an author attribution.
        channel:
          type: string
          enum:
            - MAIN
            - SOCIAL_FEED
          description: This determines whether this is a Social Feed post or a regular announcement.
        postType:
          type: string
          enum:
            - TEXT
            - LINK
          description: This determines whether this is an external-link post or a regular announcement post. TEXT - Regular announcement that can contain rich text. LINK - Announcement that is linked to an external site.
        isPrioritized:
          type: boolean
          description: Used by the Social Feed to pin posts to the front of the feed.
        viewUrl:
          type: string
          description: URL for viewing the announcement. It will be set to document URL for announcements from other datasources e.g. simpplr. Can only be written when channel="SOCIAL_FEED".
      required:
        - title
        - startTime
        - endTime
    Announcement:
      type: object
      example:
        draftId: 342
      description: PermissionedObject object
      properties:
        startTime:
          type: string
          format: date-time
          description: The date and time at which the announcement becomes active.
        endTime:
          type: string
          format: date-time
          description: The date and time at which the announcement expires.
        title:
          type: string
          description: The headline of the announcement.
        body:
          type: object
          properties:
            text:
              type: string
              example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
            structuredList:
              type: array
              description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
              items:
                properties:
                  link:
                    type: string
                    example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
                  document:
                    type: object
                    description: Document object
                    additionalProperties: true
                  text:
                    type: string
                    example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
                  structuredResult:
                    description: A single object that can support any object in the work graph. Only a single object will be populated.
                    properties:
                      document:
                        type: object
                        description: Document object
                        additionalProperties: true
                      person:
                        type: object
                        description: Person object
                        additionalProperties: true
                      customer:
                        required:
                          - id
                          - company
                        properties:
                          id:
                            type: string
                            description: Unique identifier.
                          domains:
                            type: array
                            description: Link to company's associated website domains.
                            items:
                              type: string
                          company:
                            required:
                              - name
                            properties:
                              name:
                                type: string
                                description: User-friendly display name.
                              profileUrl:
                                type: string
                                description: Link to internal company company profile.
                              websiteUrls:
                                type: array
                                description: Link to company's associated websites.
                                items:
                                  type: string
                              logoUrl:
                                type: string
                                description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                              location:
                                type: string
                                description: User facing string representing the company's location.
                                example: New York City
                              phone:
                                type: string
                                description: Phone number as a number string.
                              fax:
                                type: string
                                description: Fax number as a number string.
                              industry:
                                type: string
                                description: User facing string representing the company's industry.
                                example: Finances
                              annualRevenue:
                                type: number
                                format: double
                                description: Average company's annual revenue for reference.
                              numberOfEmployees:
                                type: integer
                                format: int64
                                description: Average company's number of employees for reference.
                              stockSymbol:
                                type: string
                                description: Company's stock symbol if company is public.
                              foundedDate:
                                type: string
                                format: date
                                description: The date when the company was founded.
                              about:
                                type: string
                                description: User facing description of company.
                                example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                            type: object
                          documentCounts:
                            type: object
                            description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                            additionalProperties:
                              type: integer
                          poc:
                            type: array
                            description: A list of POC for company.
                            items:
                              type: object
                              description: Person object
                              additionalProperties: true
                          metadata:
                            properties:
                              datasourceId:
                                type: string
                                description: The user visible id of the salesforce customer account.
                              customData:
                                type: object
                                description: Custom fields specific to individual datasources
                                additionalProperties:
                                  $ref: '#/components/schemas/CustomDataValue'
                            type: object
                          mergedCustomers:
                            type: array
                            description: A list of Customers.
                            items:
                              type: object
                              description: Customer object
                              additionalProperties: true
                          startDate:
                            type: string
                            format: date
                            description: The date when the interaction with customer started.
                          contractAnnualRevenue:
                            type: number
                            format: double
                            description: Average contract annual revenue with that customer.
                          notes:
                            type: string
                            description: User facing (potentially generated) notes about company.
                            example: CIO is interested in trying out the product.
                        type: object
                      team:
                        type: object
                        properties:
                          relatedObjects:
                            type: object
                            description: A list of objects related to a source object.
                            additionalProperties:
                              $ref: '#/components/schemas/RelatedObjectEdge'
                          permissions:
                            properties:
                              write:
                                description: Describes the write permissions levels that a user has for a specific feature
                                properties:
                                  scopeType:
                                    type: string
                                    description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                    enum:
                                      - GLOBAL
                                      - OWN
                                  create:
                                    type: boolean
                                    description: True if user has create permission for this feature and scope
                                  update:
                                    type: boolean
                                    description: True if user has update permission for this feature and scope
                                  delete:
                                    type: boolean
                                    description: True if user has delete permission for this feature and scope
                                type: object
                            type: object
                          id:
                            type: string
                            description: Unique identifier
                          name:
                            type: string
                            description: Team name
                          description:
                            type: string
                            description: A description of the team
                          businessUnit:
                            type: string
                            description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                          department:
                            type: string
                            description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                          photoUrl:
                            type: string
                            format: url
                            description: A link to the team's photo.
                          bannerUrl:
                            type: string
                            format: url
                            description: A link to the team's banner photo.
                          externalLink:
                            type: string
                            format: uri
                            description: Link to a team page on the internet or your company's intranet
                          members:
                            type: array
                            description: The members on this team
                            items:
                              required:
                                - person
                              type: object
                              description: Metadata about the relationship of a person to a team.
                              properties:
                                person:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                                relationship:
                                  type: string
                                  description: The team member's relationship to the team. This defaults to MEMBER if not set.
                                  default: MEMBER
                                  enum:
                                    - MEMBER
                                    - MANAGER
                                    - LEAD
                                    - POINT_OF_CONTACT
                                    - OTHER
                                customRelationshipStr:
                                  type: string
                                  description: Displayed name for the relationship if relationship is set to `OTHER`.
                                joinDate:
                                  type: string
                                  format: date-time
                                  description: The team member's start date
                          memberCount:
                            type: integer
                            description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                          emails:
                            type: array
                            description: The emails for this team
                            items:
                              properties:
                                email:
                                  type: string
                                  format: email
                                  description: An email address
                                type:
                                  type: string
                                  enum:
                                    - PRIMARY
                                    - SECONDARY
                                    - ONCALL
                                    - OTHER
                                  default: OTHER
                                isUserGenerated:
                                  type: boolean
                                  description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                              type: object
                          customFields:
                            type: array
                            description: Customizable fields for additional team information.
                            items:
                              required:
                                - label
                                - values
                                - displayable
                              properties:
                                label:
                                  type: string
                                  description: A user-facing label for this field.
                                values:
                                  type: array
                                  items:
                                    oneOf:
                                      - properties:
                                          strText:
                                            type: string
                                            description: Text field for string value.
                                        type: object
                                      - properties:
                                          urlAnchor:
                                            type: string
                                            description: Anchor text for hyperlink.
                                          urlLink:
                                            type: string
                                            description: Link for this URL.
                                        type: object
                                      - properties:
                                          person:
                                            type: object
                                            description: Person object
                                            additionalProperties: true
                                        type: object
                                displayable:
                                  type: boolean
                                  description: Determines whether the client should display this custom field
                                  default: true
                              type: object
                          datasourceProfiles:
                            type: array
                            description: The datasource profiles of the team
                            items:
                              required:
                                - datasource
                                - handle
                              properties:
                                datasource:
                                  type: string
                                  example: github
                                  description: The datasource the profile is of.
                                handle:
                                  type: string
                                  description: The display name of the entity in the given datasource.
                                url:
                                  type: string
                                  description: URL to view the entity's profile.
                                nativeAppUrl:
                                  type: string
                                  description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                                isUserGenerated:
                                  type: boolean
                                  description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                              type: object
                          datasource:
                            type: string
                            description: the data source of the team, e.g. GDRIVE
                          createdFrom:
                            type: string
                            description: For teams created from docs, the doc title. Otherwise empty.
                          lastUpdatedAt:
                            type: string
                            format: date-time
                            description: when this team was last updated.
                          status:
                            type: string
                            description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                            default: PROCESSED
                            enum:
                              - PROCESSED
                              - QUEUED_FOR_CREATION
                              - QUEUED_FOR_DELETION
                          canBeDeleted:
                            type: boolean
                            description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                            default: true
                          loggingId:
                            type: string
                            description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                        required:
                          - id
                          - name
                      customEntity:
                        type: object
                        properties:
                          permissions:
                            properties:
                              write:
                                description: Describes the write permissions levels that a user has for a specific feature
                                properties:
                                  scopeType:
                                    type: string
                                    description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                    enum:
                                      - GLOBAL
                                      - OWN
                                  create:
                                    type: boolean
                                    description: True if user has create permission for this feature and scope
                                  update:
                                    type: boolean
                                    description: True if user has update permission for this feature and scope
                                  delete:
                                    type: boolean
                                    description: True if user has delete permission for this feature and scope
                                type: object
                            type: object
                          id:
                            type: string
                            description: Unique identifier.
                          title:
                            type: string
                            description: Title or name of the custom entity.
                          datasource:
                            type: string
                            description: The datasource the custom entity is from.
                          objectType:
                            type: string
                            description: The type of the entity. Interpretation is specific to each datasource
                          metadata:
                            properties:
                              customData:
                                type: object
                                description: Custom fields specific to individual datasources
                                additionalProperties:
                                  $ref: '#/components/schemas/CustomDataValue'
                            type: object
                          roles:
                            type: array
                            description: A list of user roles for the custom entity explicitly granted by the owner.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                      answer:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The opaque ID of the Answer.
                            example: 3
                          docId:
                            type: string
                            description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
                            example: ANSWERS_answer_3
                          question:
                            type: string
                            example: Why is the sky blue?
                          questionVariations:
                            type: array
                            description: Additional ways of phrasing this question.
                            items:
                              type: string
                          bodyText:
                            type: string
                            description: The plain text answer to the question.
                            example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
                          boardId:
                            type: integer
                            description: The parent board ID of this Answer, or 0 if it's a floating Answer.
                          audienceFilters:
                            type: array
                            description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
                            items:
                              type: object
                              description: FacetFilter object
                              additionalProperties: true
                          addedRoles:
                            type: array
                            description: A list of user roles for the answer added by the owner.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of user roles for the answer removed by the owner.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          roles:
                            type: array
                            description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          sourceDocumentSpec:
                            type: object
                            description: DocumentSpec object
                            additionalProperties: true
                          sourceType:
                            type: string
                            enum:
                              - DOCUMENT
                              - ASSISTANT
                          permissions:
                            properties:
                              write:
                                description: Describes the write permissions levels that a user has for a specific feature
                                properties:
                                  scopeType:
                                    type: string
                                    description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                    enum:
                                      - GLOBAL
                                      - OWN
                                  create:
                                    type: boolean
                                    description: True if user has create permission for this feature and scope
                                  update:
                                    type: boolean
                                    description: True if user has update permission for this feature and scope
                                  delete:
                                    type: boolean
                                    description: True if user has delete permission for this feature and scope
                                type: object
                            type: object
                          combinedAnswerText:
                            type: object
                            description: StructuredText object (circular reference)
                            additionalProperties: true
                          likes:
                            required:
                              - likedBy
                              - likedByUser
                              - numLikes
                            properties:
                              likedBy:
                                type: array
                                items:
                                  properties:
                                    user:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    createTime:
                                      type: string
                                      format: date-time
                                      description: The time the user liked the answer in ISO format (ISO 8601).
                                  type: object
                              likedByUser:
                                type: boolean
                                description: Whether the user in context liked the answer.
                              numLikes:
                                type: integer
                                description: The total number of likes for the answer.
                            type: object
                          author:
                            type: object
                            description: Person object
                            additionalProperties: true
                          createTime:
                            type: string
                            format: date-time
                            description: The time the answer was created in ISO format (ISO 8601).
                          updateTime:
                            type: string
                            format: date-time
                            description: The time the answer was last updated in ISO format (ISO 8601).
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          verification:
                            required:
                              - state
                            properties:
                              state:
                                type: string
                                enum:
                                  - UNVERIFIED
                                  - VERIFIED
                                  - DEPRECATED
                                description: The verification state for the document.
                              metadata:
                                required:
                                  - documentId
                                properties:
                                  lastVerifier:
                                    type: object
                                    description: Person object
                                    additionalProperties: true
                                  lastVerificationTs:
                                    type: integer
                                    description: The unix timestamp of the verification (in seconds since epoch UTC).
                                  expirationTs:
                                    type: integer
                                    description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
                                  document:
                                    type: object
                                    description: Document object
                                    additionalProperties: true
                                  reminders:
                                    type: array
                                    description: Info about all outstanding verification reminders for the document if exists.
                                    items:
                                      required:
                                        - assignee
                                        - remindAt
                                      properties:
                                        assignee:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                        requestor:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                        remindAt:
                                          type: integer
                                          description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                                        createdAt:
                                          type: integer
                                          description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                                        reason:
                                          type: string
                                          description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                                      type: object
                                  lastReminder:
                                    required:
                                      - assignee
                                      - remindAt
                                    properties:
                                      assignee:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      requestor:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      remindAt:
                                        type: integer
                                        description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                                      createdAt:
                                        type: integer
                                        description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                                      reason:
                                        type: string
                                        description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                                    type: object
                                  visitorCount:
                                    type: array
                                    description: Number of visitors to the document during included time periods.
                                    items:
                                      required:
                                        - count
                                      properties:
                                        count:
                                          type: integer
                                          description: The counter value
                                        period:
                                          properties:
                                            minDaysFromNow:
                                              type: integer
                                              description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                                              deprecated: true
                                            maxDaysFromNow:
                                              type: integer
                                              description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                                              deprecated: true
                                            start:
                                              properties:
                                                epochSeconds:
                                                  type: integer
                                                  description: Epoch seconds. Has precedence over daysFromNow.
                                                daysFromNow:
                                                  type: integer
                                                  description: The number of days from now. Specification relative to current time. Can be negative.
                                              type: object
                                            end:
                                              properties:
                                                epochSeconds:
                                                  type: integer
                                                  description: Epoch seconds. Has precedence over daysFromNow.
                                                daysFromNow:
                                                  type: integer
                                                  description: The number of days from now. Specification relative to current time. Can be negative.
                                              type: object
                                          type: object
                                        org:
                                          type: string
                                          description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                                      type: object
                                  candidateVerifiers:
                                    type: array
                                    description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
                                    items:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                type: object
                            type: object
                          board:
                            type: object
                            properties:
                              name:
                                type: string
                                description: The unique name of the Collection.
                              description:
                                type: string
                                description: A brief summary of the Collection's contents.
                              addedRoles:
                                type: array
                                description: A list of added user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              removedRoles:
                                type: array
                                description: A list of removed user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              audienceFilters:
                                type: array
                                description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                items:
                                  type: object
                                  description: FacetFilter object
                                  additionalProperties: true
                              permissions:
                                properties:
                                  write:
                                    description: Describes the write permissions levels that a user has for a specific feature
                                    properties:
                                      scopeType:
                                        type: string
                                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                        enum:
                                          - GLOBAL
                                          - OWN
                                      create:
                                        type: boolean
                                        description: True if user has create permission for this feature and scope
                                      update:
                                        type: boolean
                                        description: True if user has update permission for this feature and scope
                                      delete:
                                        type: boolean
                                        description: True if user has delete permission for this feature and scope
                                    type: object
                                type: object
                              id:
                                type: integer
                                description: The unique ID of the Answer Board.
                              createTime:
                                type: string
                                format: date-time
                              updateTime:
                                type: string
                                format: date-time
                              creator:
                                type: object
                                description: Person object
                                additionalProperties: true
                              updatedBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              itemCount:
                                type: integer
                                description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                              roles:
                                type: array
                                description: A list of user roles for the Answer Board.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                            required:
                              - name
                              - id
                              - description
                          collections:
                            type: array
                            description: The collections to which the answer belongs.
                            items:
                              type: object
                              description: Flattened Collection
                              properties:
                                name:
                                  type: string
                                  description: The unique name of the Collection.
                                description:
                                  type: string
                                  description: A brief summary of the Collection's contents.
                                addedRoles:
                                  type: array
                                  description: A list of added user roles for the Collection.
                                  items:
                                    type: object
                                    description: UserRoleSpecification object
                                    additionalProperties: true
                                removedRoles:
                                  type: array
                                  description: A list of removed user roles for the Collection.
                                  items:
                                    type: object
                                    description: UserRoleSpecification object
                                    additionalProperties: true
                                audienceFilters:
                                  type: array
                                  description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                  items:
                                    type: object
                                    description: FacetFilter object
                                    additionalProperties: true
                                icon:
                                  type: string
                                  description: The emoji icon of this Collection.
                                adminLocked:
                                  type: boolean
                                  description: Indicates whether edits are allowed for everyone or only admins.
                                parentId:
                                  type: integer
                                  description: The parent of this Collection, or 0 if it's a top-level Collection.
                                thumbnail:
                                  properties:
                                    photoId:
                                      type: string
                                      description: Photo id if the thumbnail is from splash.
                                    url:
                                      type: string
                                      description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                                  type: object
                                allowedDatasource:
                                  type: string
                                  description: The datasource type this Collection can hold.
                                permissions:
                                  type: object
                                  description: Flattened ObjectPermissions
                                  properties:
                                    write:
                                      type: object
                                      description: Describes the write permissions levels that a user has for a specific feature
                                      properties:
                                        scopeType:
                                          type: string
                                          description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                          enum:
                                            - GLOBAL
                                            - OWN
                                          properties: {}
                                        create:
                                          type: boolean
                                          description: True if user has create permission for this feature and scope
                                        update:
                                          type: boolean
                                          description: True if user has update permission for this feature and scope
                                        delete:
                                          type: boolean
                                          description: True if user has delete permission for this feature and scope
                                id:
                                  type: integer
                                  description: The unique ID of the Collection.
                                createTime:
                                  type: string
                                  format: date-time
                                updateTime:
                                  type: string
                                  format: date-time
                                creator:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                                updatedBy:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                                itemCount:
                                  type: integer
                                  description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                                childCount:
                                  type: integer
                                  description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                                items:
                                  type: array
                                  description: The items in this Collection.
                                  items:
                                    type: object
                                    description: CollectionItem object
                                    additionalProperties: true
                                pinMetadata:
                                  required:
                                    - pinnedCategories
                                    - eligibleCategoriesForPinning
                                  properties:
                                    existingPins:
                                      type: array
                                      description: List of targets this Collection is pinned to.
                                      items:
                                        required:
                                          - category
                                        properties:
                                          category:
                                            type: string
                                            description: Categories a Collection can be pinned to.
                                            enum:
                                              - COMPANY_RESOURCE
                                              - DEPARTMENT_RESOURCE
                                              - TEAM_RESOURCE
                                          value:
                                            type: string
                                            description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                          target:
                                            type: string
                                            description: What targets can a Collection be pinned to.
                                            enum:
                                              - RESOURCE_CARD
                                              - TEAM_PROFILE_PAGE
                                        type: object
                                    eligiblePins:
                                      type: array
                                      description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                                      items:
                                        required:
                                          - id
                                          - target
                                        properties:
                                          id:
                                            type: integer
                                            description: The ID of the Collection.
                                          target:
                                            required:
                                              - category
                                            properties:
                                              category:
                                                type: string
                                                description: Categories a Collection can be pinned to.
                                                enum:
                                                  - COMPANY_RESOURCE
                                                  - DEPARTMENT_RESOURCE
                                                  - TEAM_RESOURCE
                                              value:
                                                type: string
                                                description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                              target:
                                                type: string
                                                description: What targets can a Collection be pinned to.
                                                enum:
                                                  - RESOURCE_CARD
                                                  - TEAM_PROFILE_PAGE
                                            type: object
                                        type: object
                                  type: object
                                shortcuts:
                                  type: array
                                  description: The names of the shortcuts (Go Links) that point to this Collection.
                                  items:
                                    type: string
                                children:
                                  type: array
                                  description: The children Collections of this Collection.
                                  items:
                                    type: object
                                    description: Collection object
                                    additionalProperties: true
                                roles:
                                  type: array
                                  description: A list of user roles for the Collection.
                                  items:
                                    type: object
                                    description: UserRoleSpecification object
                                    additionalProperties: true
                          documentCategory:
                            type: string
                            description: The document's document_category(.proto).
                          sourceDocument:
                            type: object
                            description: Document object
                            additionalProperties: true
                        required:
                          - id
                      extractedQnA:
                        properties:
                          heading:
                            type: string
                            description: Heading text that was matched to produce this result.
                          question:
                            type: string
                            description: Question text that was matched to produce this result.
                          questionResult:
                            type: object
                            description: Flattened SearchResult
                            example:
                              snippets:
                                - snippet: snippet
                                  mimeType: mimeType
                              metadata:
                                container: container
                                createTime: '2000-01-23T04:56:07.000Z'
                                datasource: datasource
                                author:
                                  name: name
                                documentId: documentId
                                updateTime: '2000-01-23T04:56:07.000Z'
                                mimeType: mimeType
                                objectType: objectType
                              title: title
                              url: https://example.com/foo/bar
                              nativeAppUrl: slack://foo/bar
                              mustIncludeSuggestions:
                                - missingTerm: container
                                  query: container
                            properties:
                              structuredResults:
                                type: array
                                description: An array of entities in the work graph retrieved via a data request.
                                items:
                                  type: object
                                  description: StructuredResult object (circular reference)
                                  additionalProperties: true
                              trackingToken:
                                type: string
                                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                              document:
                                type: object
                                description: Document object
                                additionalProperties: true
                              title:
                                type: string
                              url:
                                type: string
                              nativeAppUrl:
                                type: string
                                description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                              snippets:
                                type: array
                                description: Text content from the result document which contains search query terms, if available.
                                items:
                                  required:
                                    - snippet
                                  example:
                                    snippet: snippet
                                    mimeType: mimeType
                                  properties:
                                    snippet:
                                      type: string
                                      description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                                    mimeType:
                                      type: string
                                      description: The mime type of the snippets, currently either text/plain or text/html.
                                    text:
                                      type: string
                                      description: A matching snippet from the document with no highlights.
                                    snippetTextOrdering:
                                      type: integer
                                      description: Used for sorting based off the snippet's location within all_snippetable_text
                                    ranges:
                                      type: array
                                      description: The bolded ranges within text.
                                      items:
                                        required:
                                          - startIndex
                                        description: A subsection of a given string to which some special formatting should be applied.
                                        properties:
                                          startIndex:
                                            type: integer
                                            description: The inclusive start index of the range.
                                          endIndex:
                                            type: integer
                                            description: The exclusive end index of the range.
                                          type:
                                            type: string
                                            enum:
                                              - BOLD
                                              - CITATION
                                              - HIGHLIGHT
                                              - LINK
                                          url:
                                            type: string
                                            description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                          document:
                                            type: object
                                            description: Document object
                                            additionalProperties: true
                                        type: object
                                    url:
                                      type: string
                                      description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                                  type: object
                              fullText:
                                type: string
                                description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                              fullTextList:
                                type: array
                                description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                                items:
                                  type: string
                              relatedResults:
                                type: array
                                description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                                items:
                                  properties:
                                    relation:
                                      type: string
                                      description: How this document relates to the including entity.
                                      enum:
                                        - ATTACHMENT
                                        - CANONICAL
                                        - CASE
                                        - CONTACT
                                        - CONVERSATION_MESSAGES
                                        - EXPERT
                                        - FROM
                                        - HIGHLIGHT
                                        - OPPORTUNITY
                                        - RECENT
                                        - SOURCE
                                        - TICKET
                                        - TRANSCRIPT
                                        - WITH
                                      x-enumDescriptions:
                                        CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                    associatedEntityId:
                                      type: string
                                      description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                    querySuggestion:
                                      required:
                                        - query
                                      example:
                                        query: app:github type:pull author:mortimer
                                        label: Mortimer's PRs
                                        datasource: github
                                      properties:
                                        missingTerm:
                                          type: string
                                          description: A query term missing from the original query on which this suggestion is based.
                                        query:
                                          type: string
                                          description: The query being suggested (e.g. enforcing the missing term from the original query).
                                        searchProviderInfo:
                                          example:
                                            name: Google
                                            logo: https://app.glean.com/images/feather/globe.svg
                                            searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                          properties:
                                            name:
                                              type: string
                                              description: Name of the search provider.
                                            logoUrl:
                                              type: string
                                              description: URL to the provider's logo.
                                            searchLinkUrlTemplate:
                                              type: string
                                              description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                          type: object
                                        label:
                                          type: string
                                          description: A user-facing description to display for the suggestion.
                                        datasource:
                                          type: string
                                          description: The datasource associated with the suggestion.
                                        requestOptions:
                                          required:
                                            - facetBucketSize
                                          example:
                                            datasourceFilter: JIRA
                                            datasourcesFilter:
                                              - JIRA
                                            queryOverridesFacetFilters: true
                                            facetFilters:
                                              - fieldName: fieldName
                                                values:
                                                  - fieldValues
                                                  - fieldValues
                                              - fieldName: fieldName
                                                values:
                                                  - fieldValues
                                                  - fieldValues
                                          properties:
                                            datasourceFilter:
                                              type: string
                                              description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                            datasourcesFilter:
                                              type: array
                                              description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                              items:
                                                type: string
                                            queryOverridesFacetFilters:
                                              type: boolean
                                              description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                            facetFilters:
                                              type: array
                                              description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                              items:
                                                type: object
                                                description: FacetFilter object
                                                additionalProperties: true
                                            facetFilterSets:
                                              type: array
                                              description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                              items:
                                                description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                properties:
                                                  filters:
                                                    type: array
                                                    items:
                                                      type: object
                                                      description: FacetFilter object
                                                      additionalProperties: true
                                                type: object
                                            facetBucketFilter:
                                              properties:
                                                facet:
                                                  type: string
                                                  description: The facet whose buckets should be filtered.
                                                prefix:
                                                  type: string
                                                  description: The per-term prefix that facet buckets should be filtered on.
                                              type: object
                                            facetBucketSize:
                                              type: integer
                                              description: The maximum number of FacetBuckets to return in each FacetResult.
                                            defaultFacets:
                                              type: array
                                              description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                              items:
                                                type: string
                                            authTokens:
                                              type: array
                                              description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                              items:
                                                required:
                                                  - accessToken
                                                  - datasource
                                                example:
                                                  accessToken: 123abc
                                                  datasource: gmail
                                                  scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                  tokenType: Bearer
                                                  authUser: '1'
                                                properties:
                                                  accessToken:
                                                    type: string
                                                  datasource:
                                                    type: string
                                                  scope:
                                                    type: string
                                                  tokenType:
                                                    type: string
                                                  authUser:
                                                    description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                    type: string
                                                  expiration:
                                                    description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                    type: integer
                                                    format: int64
                                                type: object
                                            fetchAllDatasourceCounts:
                                              type: boolean
                                              description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                            responseHints:
                                              type: array
                                              description: Array of hints containing which fields should be populated in the response.
                                              items:
                                                type: string
                                                description: Hints for the response content.
                                                x-enumDescriptions:
                                                  ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                  FACET_RESULTS: Return only facet results.
                                                  QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                  RESULTS: Return search result documents.
                                                  SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                enum:
                                                  - ALL_RESULT_COUNTS
                                                  - FACET_RESULTS
                                                  - QUERY_METADATA
                                                  - RESULTS
                                                  - SPELLCHECK_METADATA
                                            timezoneOffset:
                                              type: integer
                                              description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                            disableSpellcheck:
                                              type: boolean
                                              description: Whether or not to disable spellcheck.
                                            disableQueryAutocorrect:
                                              type: boolean
                                              description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                            returnLlmContentOverSnippets:
                                              type: boolean
                                              description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                            inclusions:
                                              type: object
                                              description: RestrictionFilters object
                                              additionalProperties: true
                                            exclusions:
                                              type: object
                                              description: RestrictionFilters object
                                              additionalProperties: true
                                          type: object
                                        ranges:
                                          type: array
                                          description: The bolded ranges within the query of the QuerySuggestion.
                                          items:
                                            type: object
                                            description: TextRange object
                                            additionalProperties: true
                                        inputDetails:
                                          example:
                                            hasCopyPaste: true
                                          properties:
                                            hasCopyPaste:
                                              type: boolean
                                              description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                          type: object
                                      type: object
                                    documents:
                                      type: array
                                      description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                      deprecated: true
                                      items:
                                        type: object
                                        description: Document object
                                        additionalProperties: true
                                    results:
                                      type: array
                                      description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                      items:
                                        type: object
                                        description: SearchResult object
                                        additionalProperties: true
                                  type: object
                              clusteredResults:
                                type: array
                                description: A list of results that should be displayed as associated with this result.
                                items:
                                  type: object
                                  description: SearchResult object
                                  additionalProperties: true
                              allClusteredResults:
                                type: array
                                description: A list of results that should be displayed as associated with this result.
                                items:
                                  type: object
                                  description: ClusterGroup object
                                  additionalProperties: true
                              attachmentCount:
                                type: integer
                                description: The total number of attachments.
                              attachments:
                                type: array
                                description: A (potentially partial) list of results representing documents attached to the main result document.
                                items:
                                  type: object
                                  description: SearchResult object
                                  additionalProperties: true
                              backlinkResults:
                                type: array
                                description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                                items:
                                  type: object
                                  description: SearchResult object
                                  additionalProperties: true
                              clusterType:
                                type: string
                                description: The reason for inclusion of clusteredResults.
                                enum:
                                  - SIMILAR
                                  - FRESHNESS
                                  - TITLE
                                  - CONTENT
                                  - NONE
                                  - THREAD_REPLY
                                  - THREAD_ROOT
                                  - PREFIX
                                  - SUFFIX
                              mustIncludeSuggestions:
                                properties:
                                  suggestions:
                                    type: array
                                    items:
                                      required:
                                        - query
                                      example:
                                        query: app:github type:pull author:mortimer
                                        label: Mortimer's PRs
                                        datasource: github
                                      properties:
                                        missingTerm:
                                          type: string
                                          description: A query term missing from the original query on which this suggestion is based.
                                        query:
                                          type: string
                                          description: The query being suggested (e.g. enforcing the missing term from the original query).
                                        searchProviderInfo:
                                          example:
                                            name: Google
                                            logo: https://app.glean.com/images/feather/globe.svg
                                            searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                          properties:
                                            name:
                                              type: string
                                              description: Name of the search provider.
                                            logoUrl:
                                              type: string
                                              description: URL to the provider's logo.
                                            searchLinkUrlTemplate:
                                              type: string
                                              description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                          type: object
                                        label:
                                          type: string
                                          description: A user-facing description to display for the suggestion.
                                        datasource:
                                          type: string
                                          description: The datasource associated with the suggestion.
                                        requestOptions:
                                          required:
                                            - facetBucketSize
                                          example:
                                            datasourceFilter: JIRA
                                            datasourcesFilter:
                                              - JIRA
                                            queryOverridesFacetFilters: true
                                            facetFilters:
                                              - fieldName: fieldName
                                                values:
                                                  - fieldValues
                                                  - fieldValues
                                              - fieldName: fieldName
                                                values:
                                                  - fieldValues
                                                  - fieldValues
                                          properties:
                                            datasourceFilter:
                                              type: string
                                              description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                            datasourcesFilter:
                                              type: array
                                              description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                              items:
                                                type: string
                                            queryOverridesFacetFilters:
                                              type: boolean
                                              description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                            facetFilters:
                                              type: array
                                              description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                              items:
                                                type: object
                                                description: FacetFilter object
                                                additionalProperties: true
                                            facetFilterSets:
                                              type: array
                                              description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                              items:
                                                description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                properties:
                                                  filters:
                                                    type: array
                                                    items:
                                                      type: object
                                                      description: FacetFilter object
                                                      additionalProperties: true
                                                type: object
                                            facetBucketFilter:
                                              properties:
                                                facet:
                                                  type: string
                                                  description: The facet whose buckets should be filtered.
                                                prefix:
                                                  type: string
                                                  description: The per-term prefix that facet buckets should be filtered on.
                                              type: object
                                            facetBucketSize:
                                              type: integer
                                              description: The maximum number of FacetBuckets to return in each FacetResult.
                                            defaultFacets:
                                              type: array
                                              description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                              items:
                                                type: string
                                            authTokens:
                                              type: array
                                              description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                              items:
                                                required:
                                                  - accessToken
                                                  - datasource
                                                example:
                                                  accessToken: 123abc
                                                  datasource: gmail
                                                  scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                  tokenType: Bearer
                                                  authUser: '1'
                                                properties:
                                                  accessToken:
                                                    type: string
                                                  datasource:
                                                    type: string
                                                  scope:
                                                    type: string
                                                  tokenType:
                                                    type: string
                                                  authUser:
                                                    description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                    type: string
                                                  expiration:
                                                    description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                    type: integer
                                                    format: int64
                                                type: object
                                            fetchAllDatasourceCounts:
                                              type: boolean
                                              description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                            responseHints:
                                              type: array
                                              description: Array of hints containing which fields should be populated in the response.
                                              items:
                                                type: string
                                                description: Hints for the response content.
                                                x-enumDescriptions:
                                                  ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                  FACET_RESULTS: Return only facet results.
                                                  QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                  RESULTS: Return search result documents.
                                                  SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                enum:
                                                  - ALL_RESULT_COUNTS
                                                  - FACET_RESULTS
                                                  - QUERY_METADATA
                                                  - RESULTS
                                                  - SPELLCHECK_METADATA
                                            timezoneOffset:
                                              type: integer
                                              description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                            disableSpellcheck:
                                              type: boolean
                                              description: Whether or not to disable spellcheck.
                                            disableQueryAutocorrect:
                                              type: boolean
                                              description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                            returnLlmContentOverSnippets:
                                              type: boolean
                                              description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                            inclusions:
                                              type: object
                                              description: RestrictionFilters object
                                              additionalProperties: true
                                            exclusions:
                                              type: object
                                              description: RestrictionFilters object
                                              additionalProperties: true
                                          type: object
                                        ranges:
                                          type: array
                                          description: The bolded ranges within the query of the QuerySuggestion.
                                          items:
                                            type: object
                                            description: TextRange object
                                            additionalProperties: true
                                        inputDetails:
                                          example:
                                            hasCopyPaste: true
                                          properties:
                                            hasCopyPaste:
                                              type: boolean
                                              description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                          type: object
                                      type: object
                                  person:
                                    type: object
                                    description: Person object
                                    additionalProperties: true
                                type: object
                              querySuggestion:
                                required:
                                  - query
                                example:
                                  query: app:github type:pull author:mortimer
                                  label: Mortimer's PRs
                                  datasource: github
                                properties:
                                  missingTerm:
                                    type: string
                                    description: A query term missing from the original query on which this suggestion is based.
                                  query:
                                    type: string
                                    description: The query being suggested (e.g. enforcing the missing term from the original query).
                                  searchProviderInfo:
                                    example:
                                      name: Google
                                      logo: https://app.glean.com/images/feather/globe.svg
                                      searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                    properties:
                                      name:
                                        type: string
                                        description: Name of the search provider.
                                      logoUrl:
                                        type: string
                                        description: URL to the provider's logo.
                                      searchLinkUrlTemplate:
                                        type: string
                                        description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                    type: object
                                  label:
                                    type: string
                                    description: A user-facing description to display for the suggestion.
                                  datasource:
                                    type: string
                                    description: The datasource associated with the suggestion.
                                  requestOptions:
                                    required:
                                      - facetBucketSize
                                    example:
                                      datasourceFilter: JIRA
                                      datasourcesFilter:
                                        - JIRA
                                      queryOverridesFacetFilters: true
                                      facetFilters:
                                        - fieldName: fieldName
                                          values:
                                            - fieldValues
                                            - fieldValues
                                        - fieldName: fieldName
                                          values:
                                            - fieldValues
                                            - fieldValues
                                    properties:
                                      datasourceFilter:
                                        type: string
                                        description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                      datasourcesFilter:
                                        type: array
                                        description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                        items:
                                          type: string
                                      queryOverridesFacetFilters:
                                        type: boolean
                                        description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                      facetFilters:
                                        type: array
                                        description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                        items:
                                          type: object
                                          description: FacetFilter object
                                          additionalProperties: true
                                      facetFilterSets:
                                        type: array
                                        description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                        items:
                                          description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                          properties:
                                            filters:
                                              type: array
                                              items:
                                                type: object
                                                description: FacetFilter object
                                                additionalProperties: true
                                          type: object
                                      facetBucketFilter:
                                        properties:
                                          facet:
                                            type: string
                                            description: The facet whose buckets should be filtered.
                                          prefix:
                                            type: string
                                            description: The per-term prefix that facet buckets should be filtered on.
                                        type: object
                                      facetBucketSize:
                                        type: integer
                                        description: The maximum number of FacetBuckets to return in each FacetResult.
                                      defaultFacets:
                                        type: array
                                        description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                        items:
                                          type: string
                                      authTokens:
                                        type: array
                                        description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                        items:
                                          required:
                                            - accessToken
                                            - datasource
                                          example:
                                            accessToken: 123abc
                                            datasource: gmail
                                            scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                            tokenType: Bearer
                                            authUser: '1'
                                          properties:
                                            accessToken:
                                              type: string
                                            datasource:
                                              type: string
                                            scope:
                                              type: string
                                            tokenType:
                                              type: string
                                            authUser:
                                              description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                              type: string
                                            expiration:
                                              description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                              type: integer
                                              format: int64
                                          type: object
                                      fetchAllDatasourceCounts:
                                        type: boolean
                                        description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                      responseHints:
                                        type: array
                                        description: Array of hints containing which fields should be populated in the response.
                                        items:
                                          type: string
                                          description: Hints for the response content.
                                          x-enumDescriptions:
                                            ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                            FACET_RESULTS: Return only facet results.
                                            QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                            RESULTS: Return search result documents.
                                            SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                          enum:
                                            - ALL_RESULT_COUNTS
                                            - FACET_RESULTS
                                            - QUERY_METADATA
                                            - RESULTS
                                            - SPELLCHECK_METADATA
                                      timezoneOffset:
                                        type: integer
                                        description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                      disableSpellcheck:
                                        type: boolean
                                        description: Whether or not to disable spellcheck.
                                      disableQueryAutocorrect:
                                        type: boolean
                                        description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                      returnLlmContentOverSnippets:
                                        type: boolean
                                        description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                      inclusions:
                                        type: object
                                        description: RestrictionFilters object
                                        additionalProperties: true
                                      exclusions:
                                        type: object
                                        description: RestrictionFilters object
                                        additionalProperties: true
                                    type: object
                                  ranges:
                                    type: array
                                    description: The bolded ranges within the query of the QuerySuggestion.
                                    items:
                                      type: object
                                      description: TextRange object
                                      additionalProperties: true
                                  inputDetails:
                                    example:
                                      hasCopyPaste: true
                                    properties:
                                      hasCopyPaste:
                                        type: boolean
                                        description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                    type: object
                                type: object
                              prominence:
                                type: string
                                description: |
                                  The level of visual distinction that should be given to a result.
                                x-enumDescriptions:
                                  HERO: A high-confidence result that should feature prominently on the page.
                                  PROMOTED: May not be the best result but should be given additional visual distinction.
                                  STANDARD: Should not be distinct from any other results.
                                enum:
                                  - HERO
                                  - PROMOTED
                                  - STANDARD
                              attachmentContext:
                                type: string
                                description: Additional context for the relationship between the result and the document it's attached to.
                              pins:
                                type: array
                                description: A list of pins associated with this search result.
                                items:
                                  type: object
                                  properties:
                                    queries:
                                      type: array
                                      description: The query strings for which the pinned result will show.
                                      items:
                                        type: string
                                    audienceFilters:
                                      type: array
                                      description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                                      items:
                                        type: object
                                        description: FacetFilter object
                                        additionalProperties: true
                                    id:
                                      type: string
                                      description: The opaque id of the pin.
                                    documentId:
                                      type: string
                                      description: The document which should be a pinned result.
                                    attribution:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    updatedBy:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    createTime:
                                      type: string
                                      format: date-time
                                    updateTime:
                                      type: string
                                      format: date-time
                                  required:
                                    - documentId
                        type: object
                      meeting:
                        properties:
                          id:
                            type: string
                          title:
                            type: string
                          description:
                            type: string
                          url:
                            type: string
                          startTime:
                            type: string
                            format: date-time
                          endTime:
                            type: string
                            format: date-time
                          attendees:
                            properties:
                              people:
                                type: array
                                description: Full details of some of the attendees of this event
                                items:
                                  required:
                                    - person
                                  properties:
                                    isOrganizer:
                                      type: boolean
                                      description: Whether or not this attendee is an organizer.
                                    isInGroup:
                                      type: boolean
                                      description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    groupAttendees:
                                      type: array
                                      description: If this attendee is a group, represents the list of individual attendees in the group.
                                      items:
                                        type: object
                                        description: CalendarAttendee object
                                        additionalProperties: true
                                    responseStatus:
                                      type: string
                                      enum:
                                        - ACCEPTED
                                        - DECLINED
                                        - NO_RESPONSE
                                        - TENTATIVE
                                  type: object
                              isLimit:
                                type: boolean
                                description: Whether the total count of the people returned is at the retrieval limit.
                              total:
                                type: integer
                                description: Total number of attendees in this event.
                              numAccepted:
                                type: integer
                                description: Total number of attendees who have accepted this event.
                              numDeclined:
                                type: integer
                                description: Total number of attendees who have declined this event.
                              numNoResponse:
                                type: integer
                                description: Total number of attendees who have not responded to this event.
                              numTentative:
                                type: integer
                                description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                            type: object
                        type: object
                      app:
                        required:
                          - datasource
                        properties:
                          datasource:
                            type: string
                            description: The app or other repository type this represents
                          docType:
                            type: string
                            description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                          mimeType:
                            type: string
                            description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                          iconUrl:
                            type: string
                            description: If there is available icon URL.
                        type: object
                      collection:
                        type: object
                        description: Flattened Collection
                        properties:
                          name:
                            type: string
                            description: The unique name of the Collection.
                          description:
                            type: string
                            description: A brief summary of the Collection's contents.
                          addedRoles:
                            type: array
                            description: A list of added user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of removed user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          audienceFilters:
                            type: array
                            description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                            items:
                              type: object
                              description: FacetFilter object
                              additionalProperties: true
                          icon:
                            type: string
                            description: The emoji icon of this Collection.
                          adminLocked:
                            type: boolean
                            description: Indicates whether edits are allowed for everyone or only admins.
                          parentId:
                            type: integer
                            description: The parent of this Collection, or 0 if it's a top-level Collection.
                          thumbnail:
                            properties:
                              photoId:
                                type: string
                                description: Photo id if the thumbnail is from splash.
                              url:
                                type: string
                                description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                            type: object
                          allowedDatasource:
                            type: string
                            description: The datasource type this Collection can hold.
                          permissions:
                            type: object
                            description: Flattened ObjectPermissions
                            properties:
                              write:
                                type: object
                                description: Describes the write permissions levels that a user has for a specific feature
                                properties:
                                  scopeType:
                                    type: string
                                    description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                    enum:
                                      - GLOBAL
                                      - OWN
                                    properties: {}
                                  create:
                                    type: boolean
                                    description: True if user has create permission for this feature and scope
                                  update:
                                    type: boolean
                                    description: True if user has update permission for this feature and scope
                                  delete:
                                    type: boolean
                                    description: True if user has delete permission for this feature and scope
                          id:
                            type: integer
                            description: The unique ID of the Collection.
                          createTime:
                            type: string
                            format: date-time
                          updateTime:
                            type: string
                            format: date-time
                          creator:
                            type: object
                            description: Person object
                            additionalProperties: true
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          itemCount:
                            type: integer
                            description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                          childCount:
                            type: integer
                            description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                          items:
                            type: array
                            description: The items in this Collection.
                            items:
                              type: object
                              description: CollectionItem object
                              additionalProperties: true
                          pinMetadata:
                            required:
                              - pinnedCategories
                              - eligibleCategoriesForPinning
                            properties:
                              existingPins:
                                type: array
                                description: List of targets this Collection is pinned to.
                                items:
                                  required:
                                    - category
                                  properties:
                                    category:
                                      type: string
                                      description: Categories a Collection can be pinned to.
                                      enum:
                                        - COMPANY_RESOURCE
                                        - DEPARTMENT_RESOURCE
                                        - TEAM_RESOURCE
                                    value:
                                      type: string
                                      description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                    target:
                                      type: string
                                      description: What targets can a Collection be pinned to.
                                      enum:
                                        - RESOURCE_CARD
                                        - TEAM_PROFILE_PAGE
                                  type: object
                              eligiblePins:
                                type: array
                                description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                                items:
                                  required:
                                    - id
                                    - target
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the Collection.
                                    target:
                                      required:
                                        - category
                                      properties:
                                        category:
                                          type: string
                                          description: Categories a Collection can be pinned to.
                                          enum:
                                            - COMPANY_RESOURCE
                                            - DEPARTMENT_RESOURCE
                                            - TEAM_RESOURCE
                                        value:
                                          type: string
                                          description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                        target:
                                          type: string
                                          description: What targets can a Collection be pinned to.
                                          enum:
                                            - RESOURCE_CARD
                                            - TEAM_PROFILE_PAGE
                                      type: object
                                  type: object
                            type: object
                          shortcuts:
                            type: array
                            description: The names of the shortcuts (Go Links) that point to this Collection.
                            items:
                              type: string
                          children:
                            type: array
                            description: The children Collections of this Collection.
                            items:
                              type: object
                              description: Collection object
                              additionalProperties: true
                          roles:
                            type: array
                            description: A list of user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                      answerBoard:
                        type: object
                        description: PermissionedObject object
                        properties:
                          name:
                            type: string
                            description: The unique name of the Collection.
                          description:
                            type: string
                            description: A brief summary of the Collection's contents.
                          addedRoles:
                            type: array
                            description: A list of added user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of removed user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          audienceFilters:
                            type: array
                            description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                            items:
                              type: object
                              description: FacetFilter object
                              additionalProperties: true
                          id:
                            type: integer
                            description: The unique ID of the Answer Board.
                          createTime:
                            type: string
                            format: date-time
                          updateTime:
                            type: string
                            format: date-time
                          creator:
                            type: object
                            description: Person object
                            additionalProperties: true
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          itemCount:
                            type: integer
                            description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                          roles:
                            type: array
                            description: A list of user roles for the Answer Board.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                        required:
                          - name
                          - id
                          - description
                      code:
                        example:
                          repoName: scio
                          fileName: README.md
                          matches:
                            - lineNumber: 1
                              content: Welcome to the beginning
                              ranges: []
                            - lineNumber: 2
                              content: Second line of the file
                              ranges: []
                            - lineNumber: 3
                              content: hello world hello world
                              ranges:
                                - startindex: 0
                                  endIndex: 5
                                - startIndex: 12
                                  endIndex: 17
                        properties:
                          repoName:
                            type: string
                          fileName:
                            type: string
                          fileUrl:
                            type: string
                          lines:
                            type: array
                            items:
                              properties:
                                lineNumber:
                                  type: integer
                                content:
                                  type: string
                                ranges:
                                  type: array
                                  description: Index ranges depicting matched sections of the line
                                  items:
                                    type: object
                                    description: TextRange object
                                    additionalProperties: true
                              type: object
                          isLastMatch:
                            type: boolean
                            description: Last file match for a repo
                        type: object
                      shortcut:
                        type: object
                        description: PermissionedObject object
                        properties:
                          id:
                            type: integer
                            description: The opaque id of the user generated content.
                          inputAlias:
                            type: string
                            description: Link text following go/ prefix as entered by the user.
                          destinationUrl:
                            type: string
                            description: Destination URL for the shortcut.
                          destinationDocumentId:
                            type: string
                            description: Glean Document ID for the URL, if known.
                          description:
                            type: string
                            description: A short, plain text blurb to help people understand the intent of the shortcut.
                          unlisted:
                            type: boolean
                            description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                          urlTemplate:
                            type: string
                            description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                          addedRoles:
                            type: array
                            description: A list of user roles added for the Shortcut.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of user roles removed for the Shortcut.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          createdBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          createTime:
                            type: string
                            format: date-time
                            description: The time the shortcut was created in ISO format (ISO 8601).
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          updateTime:
                            type: string
                            format: date-time
                            description: The time the shortcut was updated in ISO format (ISO 8601).
                          destinationDocument:
                            type: object
                            description: Document object
                            additionalProperties: true
                          intermediateUrl:
                            type: string
                            description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                          viewPrefix:
                            type: string
                            description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                          isExternal:
                            type: boolean
                            description: Indicates whether a shortcut is native or external.
                          editUrl:
                            type: string
                            description: The URL using which the user can access the edit page of the shortcut.
                          alias:
                            type: string
                            description: canonical link text following go/ prefix where hyphen/underscore is removed.
                          title:
                            type: string
                            description: Title for the Go Link
                          roles:
                            type: array
                            description: A list of user roles for the Go Link.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                        required:
                          - inputAlias
                      querySuggestions:
                        properties:
                          suggestions:
                            type: array
                            items:
                              required:
                                - query
                              example:
                                query: app:github type:pull author:mortimer
                                label: Mortimer's PRs
                                datasource: github
                              properties:
                                missingTerm:
                                  type: string
                                  description: A query term missing from the original query on which this suggestion is based.
                                query:
                                  type: string
                                  description: The query being suggested (e.g. enforcing the missing term from the original query).
                                searchProviderInfo:
                                  example:
                                    name: Google
                                    logo: https://app.glean.com/images/feather/globe.svg
                                    searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the search provider.
                                    logoUrl:
                                      type: string
                                      description: URL to the provider's logo.
                                    searchLinkUrlTemplate:
                                      type: string
                                      description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                  type: object
                                label:
                                  type: string
                                  description: A user-facing description to display for the suggestion.
                                datasource:
                                  type: string
                                  description: The datasource associated with the suggestion.
                                requestOptions:
                                  required:
                                    - facetBucketSize
                                  example:
                                    datasourceFilter: JIRA
                                    datasourcesFilter:
                                      - JIRA
                                    queryOverridesFacetFilters: true
                                    facetFilters:
                                      - fieldName: fieldName
                                        values:
                                          - fieldValues
                                          - fieldValues
                                      - fieldName: fieldName
                                        values:
                                          - fieldValues
                                          - fieldValues
                                  properties:
                                    datasourceFilter:
                                      type: string
                                      description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                    datasourcesFilter:
                                      type: array
                                      description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                      items:
                                        type: string
                                    queryOverridesFacetFilters:
                                      type: boolean
                                      description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                    facetFilters:
                                      type: array
                                      description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                      items:
                                        type: object
                                        description: FacetFilter object
                                        additionalProperties: true
                                    facetFilterSets:
                                      type: array
                                      description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                      items:
                                        description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                        properties:
                                          filters:
                                            type: array
                                            items:
                                              type: object
                                              description: FacetFilter object
                                              additionalProperties: true
                                        type: object
                                    facetBucketFilter:
                                      properties:
                                        facet:
                                          type: string
                                          description: The facet whose buckets should be filtered.
                                        prefix:
                                          type: string
                                          description: The per-term prefix that facet buckets should be filtered on.
                                      type: object
                                    facetBucketSize:
                                      type: integer
                                      description: The maximum number of FacetBuckets to return in each FacetResult.
                                    defaultFacets:
                                      type: array
                                      description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                      items:
                                        type: string
                                    authTokens:
                                      type: array
                                      description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                      items:
                                        required:
                                          - accessToken
                                          - datasource
                                        example:
                                          accessToken: 123abc
                                          datasource: gmail
                                          scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                          tokenType: Bearer
                                          authUser: '1'
                                        properties:
                                          accessToken:
                                            type: string
                                          datasource:
                                            type: string
                                          scope:
                                            type: string
                                          tokenType:
                                            type: string
                                          authUser:
                                            description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                            type: string
                                          expiration:
                                            description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                            type: integer
                                            format: int64
                                        type: object
                                    fetchAllDatasourceCounts:
                                      type: boolean
                                      description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                    responseHints:
                                      type: array
                                      description: Array of hints containing which fields should be populated in the response.
                                      items:
                                        type: string
                                        description: Hints for the response content.
                                        x-enumDescriptions:
                                          ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                          FACET_RESULTS: Return only facet results.
                                          QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                          RESULTS: Return search result documents.
                                          SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                        enum:
                                          - ALL_RESULT_COUNTS
                                          - FACET_RESULTS
                                          - QUERY_METADATA
                                          - RESULTS
                                          - SPELLCHECK_METADATA
                                    timezoneOffset:
                                      type: integer
                                      description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                    disableSpellcheck:
                                      type: boolean
                                      description: Whether or not to disable spellcheck.
                                    disableQueryAutocorrect:
                                      type: boolean
                                      description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                    returnLlmContentOverSnippets:
                                      type: boolean
                                      description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                    inclusions:
                                      type: object
                                      description: RestrictionFilters object
                                      additionalProperties: true
                                    exclusions:
                                      type: object
                                      description: RestrictionFilters object
                                      additionalProperties: true
                                  type: object
                                ranges:
                                  type: array
                                  description: The bolded ranges within the query of the QuerySuggestion.
                                  items:
                                    type: object
                                    description: TextRange object
                                    additionalProperties: true
                                inputDetails:
                                  example:
                                    hasCopyPaste: true
                                  properties:
                                    hasCopyPaste:
                                      type: boolean
                                      description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                  type: object
                              type: object
                          person:
                            type: object
                            description: Person object
                            additionalProperties: true
                        type: object
                      relatedDocuments:
                        type: array
                        description: A list of documents related to this structured result.
                        items:
                          properties:
                            relation:
                              type: string
                              description: How this document relates to the including entity.
                              enum:
                                - ATTACHMENT
                                - CANONICAL
                                - CASE
                                - CONTACT
                                - CONVERSATION_MESSAGES
                                - EXPERT
                                - FROM
                                - HIGHLIGHT
                                - OPPORTUNITY
                                - RECENT
                                - SOURCE
                                - TICKET
                                - TRANSCRIPT
                                - WITH
                              x-enumDescriptions:
                                CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                            associatedEntityId:
                              type: string
                              description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                            querySuggestion:
                              required:
                                - query
                              example:
                                query: app:github type:pull author:mortimer
                                label: Mortimer's PRs
                                datasource: github
                              properties:
                                missingTerm:
                                  type: string
                                  description: A query term missing from the original query on which this suggestion is based.
                                query:
                                  type: string
                                  description: The query being suggested (e.g. enforcing the missing term from the original query).
                                searchProviderInfo:
                                  example:
                                    name: Google
                                    logo: https://app.glean.com/images/feather/globe.svg
                                    searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the search provider.
                                    logoUrl:
                                      type: string
                                      description: URL to the provider's logo.
                                    searchLinkUrlTemplate:
                                      type: string
                                      description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                  type: object
                                label:
                                  type: string
                                  description: A user-facing description to display for the suggestion.
                                datasource:
                                  type: string
                                  description: The datasource associated with the suggestion.
                                requestOptions:
                                  required:
                                    - facetBucketSize
                                  example:
                                    datasourceFilter: JIRA
                                    datasourcesFilter:
                                      - JIRA
                                    queryOverridesFacetFilters: true
                                    facetFilters:
                                      - fieldName: fieldName
                                        values:
                                          - fieldValues
                                          - fieldValues
                                      - fieldName: fieldName
                                        values:
                                          - fieldValues
                                          - fieldValues
                                  properties:
                                    datasourceFilter:
                                      type: string
                                      description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                    datasourcesFilter:
                                      type: array
                                      description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                      items:
                                        type: string
                                    queryOverridesFacetFilters:
                                      type: boolean
                                      description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                    facetFilters:
                                      type: array
                                      description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                      items:
                                        type: object
                                        description: FacetFilter object
                                        additionalProperties: true
                                    facetFilterSets:
                                      type: array
                                      description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                      items:
                                        description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                        properties:
                                          filters:
                                            type: array
                                            items:
                                              type: object
                                              description: FacetFilter object
                                              additionalProperties: true
                                        type: object
                                    facetBucketFilter:
                                      properties:
                                        facet:
                                          type: string
                                          description: The facet whose buckets should be filtered.
                                        prefix:
                                          type: string
                                          description: The per-term prefix that facet buckets should be filtered on.
                                      type: object
                                    facetBucketSize:
                                      type: integer
                                      description: The maximum number of FacetBuckets to return in each FacetResult.
                                    defaultFacets:
                                      type: array
                                      description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                      items:
                                        type: string
                                    authTokens:
                                      type: array
                                      description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                      items:
                                        required:
                                          - accessToken
                                          - datasource
                                        example:
                                          accessToken: 123abc
                                          datasource: gmail
                                          scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                          tokenType: Bearer
                                          authUser: '1'
                                        properties:
                                          accessToken:
                                            type: string
                                          datasource:
                                            type: string
                                          scope:
                                            type: string
                                          tokenType:
                                            type: string
                                          authUser:
                                            description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                            type: string
                                          expiration:
                                            description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                            type: integer
                                            format: int64
                                        type: object
                                    fetchAllDatasourceCounts:
                                      type: boolean
                                      description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                    responseHints:
                                      type: array
                                      description: Array of hints containing which fields should be populated in the response.
                                      items:
                                        type: string
                                        description: Hints for the response content.
                                        x-enumDescriptions:
                                          ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                          FACET_RESULTS: Return only facet results.
                                          QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                          RESULTS: Return search result documents.
                                          SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                        enum:
                                          - ALL_RESULT_COUNTS
                                          - FACET_RESULTS
                                          - QUERY_METADATA
                                          - RESULTS
                                          - SPELLCHECK_METADATA
                                    timezoneOffset:
                                      type: integer
                                      description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                    disableSpellcheck:
                                      type: boolean
                                      description: Whether or not to disable spellcheck.
                                    disableQueryAutocorrect:
                                      type: boolean
                                      description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                    returnLlmContentOverSnippets:
                                      type: boolean
                                      description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                    inclusions:
                                      type: object
                                      description: RestrictionFilters object
                                      additionalProperties: true
                                    exclusions:
                                      type: object
                                      description: RestrictionFilters object
                                      additionalProperties: true
                                  type: object
                                ranges:
                                  type: array
                                  description: The bolded ranges within the query of the QuerySuggestion.
                                  items:
                                    type: object
                                    description: TextRange object
                                    additionalProperties: true
                                inputDetails:
                                  example:
                                    hasCopyPaste: true
                                  properties:
                                    hasCopyPaste:
                                      type: boolean
                                      description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                  type: object
                              type: object
                            documents:
                              type: array
                              description: A truncated list of documents with this relation. TO BE DEPRECATED.
                              deprecated: true
                              items:
                                type: object
                                description: Document object
                                additionalProperties: true
                            results:
                              type: array
                              description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                              items:
                                type: object
                                description: SearchResult object
                                additionalProperties: true
                          type: object
                      relatedQuestion:
                        properties:
                          question:
                            type: string
                            description: The text of the related question
                          answer:
                            type: string
                            description: The answer for the related question
                          ranges:
                            type: array
                            description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                            items:
                              type: object
                              description: TextRange object
                              additionalProperties: true
                        type: object
                      disambiguation:
                        type: object
                        description: A disambiguation between multiple entities with the same name
                        properties:
                          name:
                            type: string
                            description: Name of the ambiguous entity
                          id:
                            type: string
                            description: The unique id of the entity in the knowledge graph
                          type:
                            type: string
                            description: The type of entity.
                            x-include-enum-class-prefix: true
                            enum:
                              - PERSON
                              - PROJECT
                              - CUSTOMER
                      snippets:
                        description: Any snippets associated to the populated object.
                        type: array
                        items:
                          required:
                            - snippet
                          example:
                            snippet: snippet
                            mimeType: mimeType
                          properties:
                            snippet:
                              type: string
                              description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                            mimeType:
                              type: string
                              description: The mime type of the snippets, currently either text/plain or text/html.
                            text:
                              type: string
                              description: A matching snippet from the document with no highlights.
                            snippetTextOrdering:
                              type: integer
                              description: Used for sorting based off the snippet's location within all_snippetable_text
                            ranges:
                              type: array
                              description: The bolded ranges within text.
                              items:
                                type: object
                                description: TextRange object
                                additionalProperties: true
                            url:
                              type: string
                              description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                          type: object
                      trackingToken:
                        type: string
                        description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                      prominence:
                        type: string
                        description: The level of visual distinction that should be given to a result.
                        x-enumDescriptions:
                          HERO: A high-confidence result that should feature prominently on the page.
                          PROMOTED: May not be the best result but should be given additional visual distinction.
                          STANDARD: Should not be distinct from any other results.
                        enum:
                          - HERO
                          - PROMOTED
                          - STANDARD
                      source:
                        type: string
                        description: Source context for this result. Possible values depend on the result type.
                        enum:
                          - EXPERT_DETECTION
                          - ENTITY_NLQ
                    type: object
                type: object
          required:
            - text
        emoji:
          type: string
          description: An emoji used to indicate the nature of the announcement.
        thumbnail:
          properties:
            photoId:
              type: string
              description: Photo id if the thumbnail is from splash.
            url:
              type: string
              description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
          type: object
        banner:
          properties:
            photoId:
              type: string
              description: Photo id if the thumbnail is from splash.
            url:
              type: string
              description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
          type: object
        audienceFilters:
          type: array
          description: Filters which restrict who should see the announcement. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
        sourceDocumentId:
          type: string
          description: The Glean Document ID of the source document this Announcement was created from (e.g. Slack thread).
        hideAttribution:
          type: boolean
          description: Whether or not to hide an author attribution.
        channel:
          type: string
          enum:
            - MAIN
            - SOCIAL_FEED
          description: This determines whether this is a Social Feed post or a regular announcement.
        postType:
          type: string
          enum:
            - TEXT
            - LINK
          description: This determines whether this is an external-link post or a regular announcement post. TEXT - Regular announcement that can contain rich text. LINK - Announcement that is linked to an external site.
        isPrioritized:
          type: boolean
          description: Used by the Social Feed to pin posts to the front of the feed.
        viewUrl:
          type: string
          description: URL for viewing the announcement. It will be set to document URL for announcements from other datasources e.g. simpplr. Can only be written when channel="SOCIAL_FEED".
        draftId:
          type: integer
          description: The opaque id of the associated draft.
        id:
          type: integer
          description: The opaque id of the announcement.
        author:
          type: object
          description: Person object
          additionalProperties: true
        createTimestamp:
          type: integer
          description: Server Unix timestamp of the creation time (in seconds since epoch UTC).
        lastUpdateTimestamp:
          type: integer
          description: Server Unix timestamp of the last update time (in seconds since epoch UTC).
        updatedBy:
          type: object
          description: Person object
          additionalProperties: true
        viewerInfo:
          type: object
          properties:
            isDismissed:
              type: boolean
              description: Whether the viewer has dismissed the announcement.
            isRead:
              type: boolean
              description: Whether the viewer has read the announcement.
        sourceDocument:
          type: object
          description: Document object
          additionalProperties: true
        isPublished:
          type: boolean
          description: Whether or not the announcement is published.
    DeleteAnnouncementRequest:
      required:
        - id
      properties:
        id:
          type: integer
          description: The opaque id of the announcement to be deleted.
      type: object
    UpdateAnnouncementRequest:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
          description: The date and time at which the announcement becomes active.
        endTime:
          type: string
          format: date-time
          description: The date and time at which the announcement expires.
        title:
          type: string
          description: The headline of the announcement.
        body:
          type: object
          properties:
            text:
              type: string
              example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
            structuredList:
              type: array
              description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
              items:
                properties:
                  link:
                    type: string
                    example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
                  document:
                    type: object
                    description: Document object
                    additionalProperties: true
                  text:
                    type: string
                    example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
                  structuredResult:
                    description: A single object that can support any object in the work graph. Only a single object will be populated.
                    properties:
                      document:
                        type: object
                        description: Document object
                        additionalProperties: true
                      person:
                        type: object
                        description: Person object
                        additionalProperties: true
                      customer:
                        required:
                          - id
                          - company
                        properties:
                          id:
                            type: string
                            description: Unique identifier.
                          domains:
                            type: array
                            description: Link to company's associated website domains.
                            items:
                              type: string
                          company:
                            required:
                              - name
                            properties:
                              name:
                                type: string
                                description: User-friendly display name.
                              profileUrl:
                                type: string
                                description: Link to internal company company profile.
                              websiteUrls:
                                type: array
                                description: Link to company's associated websites.
                                items:
                                  type: string
                              logoUrl:
                                type: string
                                description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                              location:
                                type: string
                                description: User facing string representing the company's location.
                                example: New York City
                              phone:
                                type: string
                                description: Phone number as a number string.
                              fax:
                                type: string
                                description: Fax number as a number string.
                              industry:
                                type: string
                                description: User facing string representing the company's industry.
                                example: Finances
                              annualRevenue:
                                type: number
                                format: double
                                description: Average company's annual revenue for reference.
                              numberOfEmployees:
                                type: integer
                                format: int64
                                description: Average company's number of employees for reference.
                              stockSymbol:
                                type: string
                                description: Company's stock symbol if company is public.
                              foundedDate:
                                type: string
                                format: date
                                description: The date when the company was founded.
                              about:
                                type: string
                                description: User facing description of company.
                                example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                            type: object
                          documentCounts:
                            type: object
                            description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                            additionalProperties:
                              type: integer
                          poc:
                            type: array
                            description: A list of POC for company.
                            items:
                              type: object
                              description: Person object
                              additionalProperties: true
                          metadata:
                            properties:
                              datasourceId:
                                type: string
                                description: The user visible id of the salesforce customer account.
                              customData:
                                type: object
                                description: Custom fields specific to individual datasources
                                additionalProperties:
                                  $ref: '#/components/schemas/CustomDataValue'
                            type: object
                          mergedCustomers:
                            type: array
                            description: A list of Customers.
                            items:
                              type: object
                              description: Customer object
                              additionalProperties: true
                          startDate:
                            type: string
                            format: date
                            description: The date when the interaction with customer started.
                          contractAnnualRevenue:
                            type: number
                            format: double
                            description: Average contract annual revenue with that customer.
                          notes:
                            type: string
                            description: User facing (potentially generated) notes about company.
                            example: CIO is interested in trying out the product.
                        type: object
                      team:
                        type: object
                        description: PermissionedObject object
                        properties:
                          relatedObjects:
                            type: object
                            description: A list of objects related to a source object.
                            additionalProperties:
                              $ref: '#/components/schemas/RelatedObjectEdge'
                          id:
                            type: string
                            description: Unique identifier
                          name:
                            type: string
                            description: Team name
                          description:
                            type: string
                            description: A description of the team
                          businessUnit:
                            type: string
                            description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                          department:
                            type: string
                            description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                          photoUrl:
                            type: string
                            format: url
                            description: A link to the team's photo.
                          bannerUrl:
                            type: string
                            format: url
                            description: A link to the team's banner photo.
                          externalLink:
                            type: string
                            format: uri
                            description: Link to a team page on the internet or your company's intranet
                          members:
                            type: array
                            description: The members on this team
                            items:
                              required:
                                - person
                              type: object
                              description: Metadata about the relationship of a person to a team.
                              properties:
                                person:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                                relationship:
                                  type: string
                                  description: The team member's relationship to the team. This defaults to MEMBER if not set.
                                  default: MEMBER
                                  enum:
                                    - MEMBER
                                    - MANAGER
                                    - LEAD
                                    - POINT_OF_CONTACT
                                    - OTHER
                                customRelationshipStr:
                                  type: string
                                  description: Displayed name for the relationship if relationship is set to `OTHER`.
                                joinDate:
                                  type: string
                                  format: date-time
                                  description: The team member's start date
                          memberCount:
                            type: integer
                            description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                          emails:
                            type: array
                            description: The emails for this team
                            items:
                              properties:
                                email:
                                  type: string
                                  format: email
                                  description: An email address
                                type:
                                  type: string
                                  enum:
                                    - PRIMARY
                                    - SECONDARY
                                    - ONCALL
                                    - OTHER
                                  default: OTHER
                                isUserGenerated:
                                  type: boolean
                                  description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                              type: object
                          customFields:
                            type: array
                            description: Customizable fields for additional team information.
                            items:
                              required:
                                - label
                                - values
                                - displayable
                              properties:
                                label:
                                  type: string
                                  description: A user-facing label for this field.
                                values:
                                  type: array
                                  items:
                                    oneOf:
                                      - properties:
                                          strText:
                                            type: string
                                            description: Text field for string value.
                                        type: object
                                      - properties:
                                          urlAnchor:
                                            type: string
                                            description: Anchor text for hyperlink.
                                          urlLink:
                                            type: string
                                            description: Link for this URL.
                                        type: object
                                      - properties:
                                          person:
                                            type: object
                                            description: Person object
                                            additionalProperties: true
                                        type: object
                                displayable:
                                  type: boolean
                                  description: Determines whether the client should display this custom field
                                  default: true
                              type: object
                          datasourceProfiles:
                            type: array
                            description: The datasource profiles of the team
                            items:
                              required:
                                - datasource
                                - handle
                              properties:
                                datasource:
                                  type: string
                                  example: github
                                  description: The datasource the profile is of.
                                handle:
                                  type: string
                                  description: The display name of the entity in the given datasource.
                                url:
                                  type: string
                                  description: URL to view the entity's profile.
                                nativeAppUrl:
                                  type: string
                                  description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                                isUserGenerated:
                                  type: boolean
                                  description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                              type: object
                          datasource:
                            type: string
                            description: the data source of the team, e.g. GDRIVE
                          createdFrom:
                            type: string
                            description: For teams created from docs, the doc title. Otherwise empty.
                          lastUpdatedAt:
                            type: string
                            format: date-time
                            description: when this team was last updated.
                          status:
                            type: string
                            description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                            default: PROCESSED
                            enum:
                              - PROCESSED
                              - QUEUED_FOR_CREATION
                              - QUEUED_FOR_DELETION
                          canBeDeleted:
                            type: boolean
                            description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                            default: true
                          loggingId:
                            type: string
                            description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                        required:
                          - id
                          - name
                      customEntity:
                        description: PermissionedObject object
                        type: object
                        properties:
                          id:
                            type: string
                            description: Unique identifier.
                          title:
                            type: string
                            description: Title or name of the custom entity.
                          datasource:
                            type: string
                            description: The datasource the custom entity is from.
                          objectType:
                            type: string
                            description: The type of the entity. Interpretation is specific to each datasource
                          metadata:
                            properties:
                              customData:
                                type: object
                                description: Custom fields specific to individual datasources
                                additionalProperties:
                                  $ref: '#/components/schemas/CustomDataValue'
                            type: object
                          roles:
                            type: array
                            description: A list of user roles for the custom entity explicitly granted by the owner.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                      answer:
                        type: object
                        description: PermissionedObject object
                        properties:
                          id:
                            type: integer
                            description: The opaque ID of the Answer.
                            example: 3
                          docId:
                            type: string
                            description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
                            example: ANSWERS_answer_3
                          question:
                            type: string
                            example: Why is the sky blue?
                          questionVariations:
                            type: array
                            description: Additional ways of phrasing this question.
                            items:
                              type: string
                          bodyText:
                            type: string
                            description: The plain text answer to the question.
                            example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
                          boardId:
                            type: integer
                            description: The parent board ID of this Answer, or 0 if it's a floating Answer.
                          audienceFilters:
                            type: array
                            description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
                            items:
                              type: object
                              description: FacetFilter object
                              additionalProperties: true
                          addedRoles:
                            type: array
                            description: A list of user roles for the answer added by the owner.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of user roles for the answer removed by the owner.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          roles:
                            type: array
                            description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          sourceDocumentSpec:
                            type: object
                            description: DocumentSpec object
                            additionalProperties: true
                          sourceType:
                            type: string
                            enum:
                              - DOCUMENT
                              - ASSISTANT
                          combinedAnswerText:
                            type: object
                            description: StructuredText object (circular reference)
                            additionalProperties: true
                          likes:
                            required:
                              - likedBy
                              - likedByUser
                              - numLikes
                            properties:
                              likedBy:
                                type: array
                                items:
                                  properties:
                                    user:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    createTime:
                                      type: string
                                      format: date-time
                                      description: The time the user liked the answer in ISO format (ISO 8601).
                                  type: object
                              likedByUser:
                                type: boolean
                                description: Whether the user in context liked the answer.
                              numLikes:
                                type: integer
                                description: The total number of likes for the answer.
                            type: object
                          author:
                            type: object
                            description: Person object
                            additionalProperties: true
                          createTime:
                            type: string
                            format: date-time
                            description: The time the answer was created in ISO format (ISO 8601).
                          updateTime:
                            type: string
                            format: date-time
                            description: The time the answer was last updated in ISO format (ISO 8601).
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          verification:
                            required:
                              - state
                            properties:
                              state:
                                type: string
                                enum:
                                  - UNVERIFIED
                                  - VERIFIED
                                  - DEPRECATED
                                description: The verification state for the document.
                              metadata:
                                required:
                                  - documentId
                                properties:
                                  lastVerifier:
                                    type: object
                                    description: Person object
                                    additionalProperties: true
                                  lastVerificationTs:
                                    type: integer
                                    description: The unix timestamp of the verification (in seconds since epoch UTC).
                                  expirationTs:
                                    type: integer
                                    description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
                                  document:
                                    type: object
                                    description: Document object
                                    additionalProperties: true
                                  reminders:
                                    type: array
                                    description: Info about all outstanding verification reminders for the document if exists.
                                    items:
                                      required:
                                        - assignee
                                        - remindAt
                                      properties:
                                        assignee:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                        requestor:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                        remindAt:
                                          type: integer
                                          description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                                        createdAt:
                                          type: integer
                                          description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                                        reason:
                                          type: string
                                          description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                                      type: object
                                  lastReminder:
                                    required:
                                      - assignee
                                      - remindAt
                                    properties:
                                      assignee:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      requestor:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      remindAt:
                                        type: integer
                                        description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                                      createdAt:
                                        type: integer
                                        description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                                      reason:
                                        type: string
                                        description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                                    type: object
                                  visitorCount:
                                    type: array
                                    description: Number of visitors to the document during included time periods.
                                    items:
                                      required:
                                        - count
                                      properties:
                                        count:
                                          type: integer
                                          description: The counter value
                                        period:
                                          properties:
                                            minDaysFromNow:
                                              type: integer
                                              description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                                              deprecated: true
                                            maxDaysFromNow:
                                              type: integer
                                              description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                                              deprecated: true
                                            start:
                                              properties:
                                                epochSeconds:
                                                  type: integer
                                                  description: Epoch seconds. Has precedence over daysFromNow.
                                                daysFromNow:
                                                  type: integer
                                                  description: The number of days from now. Specification relative to current time. Can be negative.
                                              type: object
                                            end:
                                              properties:
                                                epochSeconds:
                                                  type: integer
                                                  description: Epoch seconds. Has precedence over daysFromNow.
                                                daysFromNow:
                                                  type: integer
                                                  description: The number of days from now. Specification relative to current time. Can be negative.
                                              type: object
                                          type: object
                                        org:
                                          type: string
                                          description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                                      type: object
                                  candidateVerifiers:
                                    type: array
                                    description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
                                    items:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                type: object
                            type: object
                          board:
                            type: object
                            description: PermissionedObject object
                            properties:
                              name:
                                type: string
                                description: The unique name of the Collection.
                              description:
                                type: string
                                description: A brief summary of the Collection's contents.
                              addedRoles:
                                type: array
                                description: A list of added user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              removedRoles:
                                type: array
                                description: A list of removed user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              audienceFilters:
                                type: array
                                description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                items:
                                  type: object
                                  description: FacetFilter object
                                  additionalProperties: true
                              id:
                                type: integer
                                description: The unique ID of the Answer Board.
                              createTime:
                                type: string
                                format: date-time
                              updateTime:
                                type: string
                                format: date-time
                              creator:
                                type: object
                                description: Person object
                                additionalProperties: true
                              updatedBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              itemCount:
                                type: integer
                                description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                              roles:
                                type: array
                                description: A list of user roles for the Answer Board.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                            required:
                              - name
                              - id
                              - description
                          collections:
                            type: array
                            description: The collections to which the answer belongs.
                            items:
                              type: object
                              description: Flattened Collection
                              properties:
                                name:
                                  type: string
                                  description: The unique name of the Collection.
                                description:
                                  type: string
                                  description: A brief summary of the Collection's contents.
                                addedRoles:
                                  type: array
                                  description: A list of added user roles for the Collection.
                                  items:
                                    type: object
                                    description: UserRoleSpecification object
                                    additionalProperties: true
                                removedRoles:
                                  type: array
                                  description: A list of removed user roles for the Collection.
                                  items:
                                    type: object
                                    description: UserRoleSpecification object
                                    additionalProperties: true
                                audienceFilters:
                                  type: array
                                  description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                  items:
                                    type: object
                                    description: FacetFilter object
                                    additionalProperties: true
                                icon:
                                  type: string
                                  description: The emoji icon of this Collection.
                                adminLocked:
                                  type: boolean
                                  description: Indicates whether edits are allowed for everyone or only admins.
                                parentId:
                                  type: integer
                                  description: The parent of this Collection, or 0 if it's a top-level Collection.
                                thumbnail:
                                  properties:
                                    photoId:
                                      type: string
                                      description: Photo id if the thumbnail is from splash.
                                    url:
                                      type: string
                                      description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                                  type: object
                                allowedDatasource:
                                  type: string
                                  description: The datasource type this Collection can hold.
                                permissions:
                                  type: object
                                  description: Flattened ObjectPermissions
                                  properties:
                                    write:
                                      type: object
                                      description: Describes the write permissions levels that a user has for a specific feature
                                      properties:
                                        scopeType:
                                          type: string
                                          description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                          enum:
                                            - GLOBAL
                                            - OWN
                                          properties: {}
                                        create:
                                          type: boolean
                                          description: True if user has create permission for this feature and scope
                                        update:
                                          type: boolean
                                          description: True if user has update permission for this feature and scope
                                        delete:
                                          type: boolean
                                          description: True if user has delete permission for this feature and scope
                                id:
                                  type: integer
                                  description: The unique ID of the Collection.
                                createTime:
                                  type: string
                                  format: date-time
                                updateTime:
                                  type: string
                                  format: date-time
                                creator:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                                updatedBy:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                                itemCount:
                                  type: integer
                                  description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                                childCount:
                                  type: integer
                                  description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                                items:
                                  type: array
                                  description: The items in this Collection.
                                  items:
                                    type: object
                                    description: CollectionItem object
                                    additionalProperties: true
                                pinMetadata:
                                  required:
                                    - pinnedCategories
                                    - eligibleCategoriesForPinning
                                  properties:
                                    existingPins:
                                      type: array
                                      description: List of targets this Collection is pinned to.
                                      items:
                                        required:
                                          - category
                                        properties:
                                          category:
                                            type: string
                                            description: Categories a Collection can be pinned to.
                                            enum:
                                              - COMPANY_RESOURCE
                                              - DEPARTMENT_RESOURCE
                                              - TEAM_RESOURCE
                                          value:
                                            type: string
                                            description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                          target:
                                            type: string
                                            description: What targets can a Collection be pinned to.
                                            enum:
                                              - RESOURCE_CARD
                                              - TEAM_PROFILE_PAGE
                                        type: object
                                    eligiblePins:
                                      type: array
                                      description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                                      items:
                                        required:
                                          - id
                                          - target
                                        properties:
                                          id:
                                            type: integer
                                            description: The ID of the Collection.
                                          target:
                                            required:
                                              - category
                                            properties:
                                              category:
                                                type: string
                                                description: Categories a Collection can be pinned to.
                                                enum:
                                                  - COMPANY_RESOURCE
                                                  - DEPARTMENT_RESOURCE
                                                  - TEAM_RESOURCE
                                              value:
                                                type: string
                                                description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                              target:
                                                type: string
                                                description: What targets can a Collection be pinned to.
                                                enum:
                                                  - RESOURCE_CARD
                                                  - TEAM_PROFILE_PAGE
                                            type: object
                                        type: object
                                  type: object
                                shortcuts:
                                  type: array
                                  description: The names of the shortcuts (Go Links) that point to this Collection.
                                  items:
                                    type: string
                                children:
                                  type: array
                                  description: The children Collections of this Collection.
                                  items:
                                    type: object
                                    description: Collection object
                                    additionalProperties: true
                                roles:
                                  type: array
                                  description: A list of user roles for the Collection.
                                  items:
                                    type: object
                                    description: UserRoleSpecification object
                                    additionalProperties: true
                          documentCategory:
                            type: string
                            description: The document's document_category(.proto).
                          sourceDocument:
                            type: object
                            description: Document object
                            additionalProperties: true
                        required:
                          - id
                      extractedQnA:
                        properties:
                          heading:
                            type: string
                            description: Heading text that was matched to produce this result.
                          question:
                            type: string
                            description: Question text that was matched to produce this result.
                          questionResult:
                            type: object
                            description: Flattened SearchResult
                            example:
                              snippets:
                                - snippet: snippet
                                  mimeType: mimeType
                              metadata:
                                container: container
                                createTime: '2000-01-23T04:56:07.000Z'
                                datasource: datasource
                                author:
                                  name: name
                                documentId: documentId
                                updateTime: '2000-01-23T04:56:07.000Z'
                                mimeType: mimeType
                                objectType: objectType
                              title: title
                              url: https://example.com/foo/bar
                              nativeAppUrl: slack://foo/bar
                              mustIncludeSuggestions:
                                - missingTerm: container
                                  query: container
                            properties:
                              structuredResults:
                                type: array
                                description: An array of entities in the work graph retrieved via a data request.
                                items:
                                  type: object
                                  description: StructuredResult object (circular reference)
                                  additionalProperties: true
                              trackingToken:
                                type: string
                                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                              document:
                                type: object
                                description: Document object
                                additionalProperties: true
                              title:
                                type: string
                              url:
                                type: string
                              nativeAppUrl:
                                type: string
                                description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                              snippets:
                                type: array
                                description: Text content from the result document which contains search query terms, if available.
                                items:
                                  required:
                                    - snippet
                                  example:
                                    snippet: snippet
                                    mimeType: mimeType
                                  properties:
                                    snippet:
                                      type: string
                                      description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                                    mimeType:
                                      type: string
                                      description: The mime type of the snippets, currently either text/plain or text/html.
                                    text:
                                      type: string
                                      description: A matching snippet from the document with no highlights.
                                    snippetTextOrdering:
                                      type: integer
                                      description: Used for sorting based off the snippet's location within all_snippetable_text
                                    ranges:
                                      type: array
                                      description: The bolded ranges within text.
                                      items:
                                        type: object
                                        description: TextRange object
                                        additionalProperties: true
                                    url:
                                      type: string
                                      description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                                  type: object
                              fullText:
                                type: string
                                description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                              fullTextList:
                                type: array
                                description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                                items:
                                  type: string
                              relatedResults:
                                type: array
                                description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                                items:
                                  properties:
                                    relation:
                                      type: string
                                      description: How this document relates to the including entity.
                                      enum:
                                        - ATTACHMENT
                                        - CANONICAL
                                        - CASE
                                        - CONTACT
                                        - CONVERSATION_MESSAGES
                                        - EXPERT
                                        - FROM
                                        - HIGHLIGHT
                                        - OPPORTUNITY
                                        - RECENT
                                        - SOURCE
                                        - TICKET
                                        - TRANSCRIPT
                                        - WITH
                                      x-enumDescriptions:
                                        CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                    associatedEntityId:
                                      type: string
                                      description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                    querySuggestion:
                                      type: object
                                      description: QuerySuggestion object
                                      additionalProperties: true
                                    documents:
                                      type: array
                                      description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                      deprecated: true
                                      items:
                                        type: object
                                        description: Document object
                                        additionalProperties: true
                                    results:
                                      type: array
                                      description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                      items:
                                        type: object
                                        description: SearchResult object
                                        additionalProperties: true
                                  type: object
                              clusteredResults:
                                type: array
                                description: A list of results that should be displayed as associated with this result.
                                items:
                                  type: object
                                  description: SearchResult object
                                  additionalProperties: true
                              allClusteredResults:
                                type: array
                                description: A list of results that should be displayed as associated with this result.
                                items:
                                  type: object
                                  description: ClusterGroup object
                                  additionalProperties: true
                              attachmentCount:
                                type: integer
                                description: The total number of attachments.
                              attachments:
                                type: array
                                description: A (potentially partial) list of results representing documents attached to the main result document.
                                items:
                                  type: object
                                  description: SearchResult object
                                  additionalProperties: true
                              backlinkResults:
                                type: array
                                description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                                items:
                                  type: object
                                  description: SearchResult object
                                  additionalProperties: true
                              clusterType:
                                type: string
                                description: The reason for inclusion of clusteredResults.
                                enum:
                                  - SIMILAR
                                  - FRESHNESS
                                  - TITLE
                                  - CONTENT
                                  - NONE
                                  - THREAD_REPLY
                                  - THREAD_ROOT
                                  - PREFIX
                                  - SUFFIX
                              mustIncludeSuggestions:
                                properties:
                                  suggestions:
                                    type: array
                                    items:
                                      type: object
                                      description: QuerySuggestion object
                                      additionalProperties: true
                                  person:
                                    type: object
                                    description: Person object
                                    additionalProperties: true
                                type: object
                              querySuggestion:
                                type: object
                                description: QuerySuggestion object
                                additionalProperties: true
                              prominence:
                                type: string
                                description: |
                                  The level of visual distinction that should be given to a result.
                                x-enumDescriptions:
                                  HERO: A high-confidence result that should feature prominently on the page.
                                  PROMOTED: May not be the best result but should be given additional visual distinction.
                                  STANDARD: Should not be distinct from any other results.
                                enum:
                                  - HERO
                                  - PROMOTED
                                  - STANDARD
                              attachmentContext:
                                type: string
                                description: Additional context for the relationship between the result and the document it's attached to.
                              pins:
                                type: array
                                description: A list of pins associated with this search result.
                                items:
                                  type: object
                                  properties:
                                    queries:
                                      type: array
                                      description: The query strings for which the pinned result will show.
                                      items:
                                        type: string
                                    audienceFilters:
                                      type: array
                                      description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                                      items:
                                        type: object
                                        description: FacetFilter object
                                        additionalProperties: true
                                    id:
                                      type: string
                                      description: The opaque id of the pin.
                                    documentId:
                                      type: string
                                      description: The document which should be a pinned result.
                                    attribution:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    updatedBy:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    createTime:
                                      type: string
                                      format: date-time
                                    updateTime:
                                      type: string
                                      format: date-time
                                  required:
                                    - documentId
                        type: object
                      meeting:
                        properties:
                          id:
                            type: string
                          title:
                            type: string
                          description:
                            type: string
                          url:
                            type: string
                          startTime:
                            type: string
                            format: date-time
                          endTime:
                            type: string
                            format: date-time
                          attendees:
                            properties:
                              people:
                                type: array
                                description: Full details of some of the attendees of this event
                                items:
                                  required:
                                    - person
                                  properties:
                                    isOrganizer:
                                      type: boolean
                                      description: Whether or not this attendee is an organizer.
                                    isInGroup:
                                      type: boolean
                                      description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    groupAttendees:
                                      type: array
                                      description: If this attendee is a group, represents the list of individual attendees in the group.
                                      items:
                                        type: object
                                        description: CalendarAttendee object
                                        additionalProperties: true
                                    responseStatus:
                                      type: string
                                      enum:
                                        - ACCEPTED
                                        - DECLINED
                                        - NO_RESPONSE
                                        - TENTATIVE
                                  type: object
                              isLimit:
                                type: boolean
                                description: Whether the total count of the people returned is at the retrieval limit.
                              total:
                                type: integer
                                description: Total number of attendees in this event.
                              numAccepted:
                                type: integer
                                description: Total number of attendees who have accepted this event.
                              numDeclined:
                                type: integer
                                description: Total number of attendees who have declined this event.
                              numNoResponse:
                                type: integer
                                description: Total number of attendees who have not responded to this event.
                              numTentative:
                                type: integer
                                description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                            type: object
                        type: object
                      app:
                        required:
                          - datasource
                        properties:
                          datasource:
                            type: string
                            description: The app or other repository type this represents
                          docType:
                            type: string
                            description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                          mimeType:
                            type: string
                            description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                          iconUrl:
                            type: string
                            description: If there is available icon URL.
                        type: object
                      collection:
                        type: object
                        description: Flattened Collection
                        properties:
                          name:
                            type: string
                            description: The unique name of the Collection.
                          description:
                            type: string
                            description: A brief summary of the Collection's contents.
                          addedRoles:
                            type: array
                            description: A list of added user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of removed user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          audienceFilters:
                            type: array
                            description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                            items:
                              type: object
                              description: FacetFilter object
                              additionalProperties: true
                          icon:
                            type: string
                            description: The emoji icon of this Collection.
                          adminLocked:
                            type: boolean
                            description: Indicates whether edits are allowed for everyone or only admins.
                          parentId:
                            type: integer
                            description: The parent of this Collection, or 0 if it's a top-level Collection.
                          thumbnail:
                            properties:
                              photoId:
                                type: string
                                description: Photo id if the thumbnail is from splash.
                              url:
                                type: string
                                description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                            type: object
                          allowedDatasource:
                            type: string
                            description: The datasource type this Collection can hold.
                          permissions:
                            type: object
                            description: Flattened ObjectPermissions
                            properties:
                              write:
                                type: object
                                description: Describes the write permissions levels that a user has for a specific feature
                                properties:
                                  scopeType:
                                    type: string
                                    description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                    enum:
                                      - GLOBAL
                                      - OWN
                                    properties: {}
                                  create:
                                    type: boolean
                                    description: True if user has create permission for this feature and scope
                                  update:
                                    type: boolean
                                    description: True if user has update permission for this feature and scope
                                  delete:
                                    type: boolean
                                    description: True if user has delete permission for this feature and scope
                          id:
                            type: integer
                            description: The unique ID of the Collection.
                          createTime:
                            type: string
                            format: date-time
                          updateTime:
                            type: string
                            format: date-time
                          creator:
                            type: object
                            description: Person object
                            additionalProperties: true
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          itemCount:
                            type: integer
                            description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                          childCount:
                            type: integer
                            description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                          items:
                            type: array
                            description: The items in this Collection.
                            items:
                              type: object
                              description: CollectionItem object
                              additionalProperties: true
                          pinMetadata:
                            required:
                              - pinnedCategories
                              - eligibleCategoriesForPinning
                            properties:
                              existingPins:
                                type: array
                                description: List of targets this Collection is pinned to.
                                items:
                                  type: object
                                  description: CollectionPinTarget object
                                  additionalProperties: true
                              eligiblePins:
                                type: array
                                description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                                items:
                                  required:
                                    - id
                                    - target
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the Collection.
                                    target:
                                      type: object
                                      description: CollectionPinTarget object
                                      additionalProperties: true
                                  type: object
                            type: object
                          shortcuts:
                            type: array
                            description: The names of the shortcuts (Go Links) that point to this Collection.
                            items:
                              type: string
                          children:
                            type: array
                            description: The children Collections of this Collection.
                            items:
                              type: object
                              description: Collection object
                              additionalProperties: true
                          roles:
                            type: array
                            description: A list of user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                      answerBoard:
                        type: object
                        description: PermissionedObject object
                        properties:
                          name:
                            type: string
                            description: The unique name of the Collection.
                          description:
                            type: string
                            description: A brief summary of the Collection's contents.
                          addedRoles:
                            type: array
                            description: A list of added user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of removed user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          audienceFilters:
                            type: array
                            description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                            items:
                              type: object
                              description: FacetFilter object
                              additionalProperties: true
                          id:
                            type: integer
                            description: The unique ID of the Answer Board.
                          createTime:
                            type: string
                            format: date-time
                          updateTime:
                            type: string
                            format: date-time
                          creator:
                            type: object
                            description: Person object
                            additionalProperties: true
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          itemCount:
                            type: integer
                            description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                          roles:
                            type: array
                            description: A list of user roles for the Answer Board.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                        required:
                          - name
                          - id
                          - description
                      code:
                        example:
                          repoName: scio
                          fileName: README.md
                          matches:
                            - lineNumber: 1
                              content: Welcome to the beginning
                              ranges: []
                            - lineNumber: 2
                              content: Second line of the file
                              ranges: []
                            - lineNumber: 3
                              content: hello world hello world
                              ranges:
                                - startindex: 0
                                  endIndex: 5
                                - startIndex: 12
                                  endIndex: 17
                        properties:
                          repoName:
                            type: string
                          fileName:
                            type: string
                          fileUrl:
                            type: string
                          lines:
                            type: array
                            items:
                              properties:
                                lineNumber:
                                  type: integer
                                content:
                                  type: string
                                ranges:
                                  type: array
                                  description: Index ranges depicting matched sections of the line
                                  items:
                                    type: object
                                    description: TextRange object
                                    additionalProperties: true
                              type: object
                          isLastMatch:
                            type: boolean
                            description: Last file match for a repo
                        type: object
                      shortcut:
                        type: object
                        description: PermissionedObject object
                        properties:
                          id:
                            type: integer
                            description: The opaque id of the user generated content.
                          inputAlias:
                            type: string
                            description: Link text following go/ prefix as entered by the user.
                          destinationUrl:
                            type: string
                            description: Destination URL for the shortcut.
                          destinationDocumentId:
                            type: string
                            description: Glean Document ID for the URL, if known.
                          description:
                            type: string
                            description: A short, plain text blurb to help people understand the intent of the shortcut.
                          unlisted:
                            type: boolean
                            description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                          urlTemplate:
                            type: string
                            description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                          addedRoles:
                            type: array
                            description: A list of user roles added for the Shortcut.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of user roles removed for the Shortcut.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          createdBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          createTime:
                            type: string
                            format: date-time
                            description: The time the shortcut was created in ISO format (ISO 8601).
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          updateTime:
                            type: string
                            format: date-time
                            description: The time the shortcut was updated in ISO format (ISO 8601).
                          destinationDocument:
                            type: object
                            description: Document object
                            additionalProperties: true
                          intermediateUrl:
                            type: string
                            description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                          viewPrefix:
                            type: string
                            description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                          isExternal:
                            type: boolean
                            description: Indicates whether a shortcut is native or external.
                          editUrl:
                            type: string
                            description: The URL using which the user can access the edit page of the shortcut.
                          alias:
                            type: string
                            description: canonical link text following go/ prefix where hyphen/underscore is removed.
                          title:
                            type: string
                            description: Title for the Go Link
                          roles:
                            type: array
                            description: A list of user roles for the Go Link.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                        required:
                          - inputAlias
                      querySuggestions:
                        properties:
                          suggestions:
                            type: array
                            items:
                              type: object
                              description: QuerySuggestion object
                              additionalProperties: true
                          person:
                            type: object
                            description: Person object
                            additionalProperties: true
                        type: object
                      relatedDocuments:
                        type: array
                        description: A list of documents related to this structured result.
                        items:
                          properties:
                            relation:
                              type: string
                              description: How this document relates to the including entity.
                              enum:
                                - ATTACHMENT
                                - CANONICAL
                                - CASE
                                - CONTACT
                                - CONVERSATION_MESSAGES
                                - EXPERT
                                - FROM
                                - HIGHLIGHT
                                - OPPORTUNITY
                                - RECENT
                                - SOURCE
                                - TICKET
                                - TRANSCRIPT
                                - WITH
                              x-enumDescriptions:
                                CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                            associatedEntityId:
                              type: string
                              description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                            querySuggestion:
                              type: object
                              description: QuerySuggestion object
                              additionalProperties: true
                            documents:
                              type: array
                              description: A truncated list of documents with this relation. TO BE DEPRECATED.
                              deprecated: true
                              items:
                                type: object
                                description: Document object
                                additionalProperties: true
                            results:
                              type: array
                              description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                              items:
                                type: object
                                description: SearchResult object
                                additionalProperties: true
                          type: object
                      relatedQuestion:
                        properties:
                          question:
                            type: string
                            description: The text of the related question
                          answer:
                            type: string
                            description: The answer for the related question
                          ranges:
                            type: array
                            description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                            items:
                              type: object
                              description: TextRange object
                              additionalProperties: true
                        type: object
                      disambiguation:
                        type: object
                        description: A disambiguation between multiple entities with the same name
                        properties:
                          name:
                            type: string
                            description: Name of the ambiguous entity
                          id:
                            type: string
                            description: The unique id of the entity in the knowledge graph
                          type:
                            type: string
                            description: The type of entity.
                            x-include-enum-class-prefix: true
                            enum:
                              - PERSON
                              - PROJECT
                              - CUSTOMER
                      snippets:
                        description: Any snippets associated to the populated object.
                        type: array
                        items:
                          required:
                            - snippet
                          example:
                            snippet: snippet
                            mimeType: mimeType
                          properties:
                            snippet:
                              type: string
                              description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                            mimeType:
                              type: string
                              description: The mime type of the snippets, currently either text/plain or text/html.
                            text:
                              type: string
                              description: A matching snippet from the document with no highlights.
                            snippetTextOrdering:
                              type: integer
                              description: Used for sorting based off the snippet's location within all_snippetable_text
                            ranges:
                              type: array
                              description: The bolded ranges within text.
                              items:
                                type: object
                                description: TextRange object
                                additionalProperties: true
                            url:
                              type: string
                              description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                          type: object
                      trackingToken:
                        type: string
                        description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                      prominence:
                        type: string
                        description: The level of visual distinction that should be given to a result.
                        x-enumDescriptions:
                          HERO: A high-confidence result that should feature prominently on the page.
                          PROMOTED: May not be the best result but should be given additional visual distinction.
                          STANDARD: Should not be distinct from any other results.
                        enum:
                          - HERO
                          - PROMOTED
                          - STANDARD
                      source:
                        type: string
                        description: Source context for this result. Possible values depend on the result type.
                        enum:
                          - EXPERT_DETECTION
                          - ENTITY_NLQ
                    type: object
                type: object
          required:
            - text
        emoji:
          type: string
          description: An emoji used to indicate the nature of the announcement.
        thumbnail:
          type: object
          description: Thumbnail object
          additionalProperties: true
        banner:
          type: object
          description: Thumbnail object
          additionalProperties: true
        audienceFilters:
          type: array
          description: Filters which restrict who should see the announcement. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
        sourceDocumentId:
          type: string
          description: The Glean Document ID of the source document this Announcement was created from (e.g. Slack thread).
        hideAttribution:
          type: boolean
          description: Whether or not to hide an author attribution.
        channel:
          type: string
          enum:
            - MAIN
            - SOCIAL_FEED
          description: This determines whether this is a Social Feed post or a regular announcement.
        postType:
          type: string
          enum:
            - TEXT
            - LINK
          description: This determines whether this is an external-link post or a regular announcement post. TEXT - Regular announcement that can contain rich text. LINK - Announcement that is linked to an external site.
        isPrioritized:
          type: boolean
          description: Used by the Social Feed to pin posts to the front of the feed.
        viewUrl:
          type: string
          description: URL for viewing the announcement. It will be set to document URL for announcements from other datasources e.g. simpplr. Can only be written when channel="SOCIAL_FEED".
        id:
          type: integer
          description: The opaque id of the announcement.
      required:
        - id
        - title
        - startTime
        - endTime
    AnnouncementMutableProperties:
      properties:
        startTime:
          type: string
          format: date-time
          description: The date and time at which the announcement becomes active.
        endTime:
          type: string
          format: date-time
          description: The date and time at which the announcement expires.
        title:
          type: string
          description: The headline of the announcement.
        body:
          type: object
          properties:
            text:
              type: string
              example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
            structuredList:
              type: array
              description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
              items:
                properties:
                  link:
                    type: string
                    example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
                  document:
                    type: object
                    description: Document object
                    additionalProperties: true
                  text:
                    type: string
                    example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
                  structuredResult:
                    description: A single object that can support any object in the work graph. Only a single object will be populated.
                    properties:
                      document:
                        type: object
                        description: Document object
                        additionalProperties: true
                      person:
                        type: object
                        description: Person object
                        additionalProperties: true
                      customer:
                        required:
                          - id
                          - company
                        properties:
                          id:
                            type: string
                            description: Unique identifier.
                          domains:
                            type: array
                            description: Link to company's associated website domains.
                            items:
                              type: string
                          company:
                            required:
                              - name
                            properties:
                              name:
                                type: string
                                description: User-friendly display name.
                              profileUrl:
                                type: string
                                description: Link to internal company company profile.
                              websiteUrls:
                                type: array
                                description: Link to company's associated websites.
                                items:
                                  type: string
                              logoUrl:
                                type: string
                                description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                              location:
                                type: string
                                description: User facing string representing the company's location.
                                example: New York City
                              phone:
                                type: string
                                description: Phone number as a number string.
                              fax:
                                type: string
                                description: Fax number as a number string.
                              industry:
                                type: string
                                description: User facing string representing the company's industry.
                                example: Finances
                              annualRevenue:
                                type: number
                                format: double
                                description: Average company's annual revenue for reference.
                              numberOfEmployees:
                                type: integer
                                format: int64
                                description: Average company's number of employees for reference.
                              stockSymbol:
                                type: string
                                description: Company's stock symbol if company is public.
                              foundedDate:
                                type: string
                                format: date
                                description: The date when the company was founded.
                              about:
                                type: string
                                description: User facing description of company.
                                example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                            type: object
                          documentCounts:
                            type: object
                            description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                            additionalProperties:
                              type: integer
                          poc:
                            type: array
                            description: A list of POC for company.
                            items:
                              type: object
                              description: Person object
                              additionalProperties: true
                          metadata:
                            properties:
                              datasourceId:
                                type: string
                                description: The user visible id of the salesforce customer account.
                              customData:
                                type: object
                                description: Custom fields specific to individual datasources
                                additionalProperties:
                                  $ref: '#/components/schemas/CustomDataValue'
                            type: object
                          mergedCustomers:
                            type: array
                            description: A list of Customers.
                            items:
                              type: object
                              description: Customer object
                              additionalProperties: true
                          startDate:
                            type: string
                            format: date
                            description: The date when the interaction with customer started.
                          contractAnnualRevenue:
                            type: number
                            format: double
                            description: Average contract annual revenue with that customer.
                          notes:
                            type: string
                            description: User facing (potentially generated) notes about company.
                            example: CIO is interested in trying out the product.
                        type: object
                      team:
                        type: object
                        description: PermissionedObject object
                        properties:
                          relatedObjects:
                            type: object
                            description: A list of objects related to a source object.
                            additionalProperties:
                              $ref: '#/components/schemas/RelatedObjectEdge'
                          id:
                            type: string
                            description: Unique identifier
                          name:
                            type: string
                            description: Team name
                          description:
                            type: string
                            description: A description of the team
                          businessUnit:
                            type: string
                            description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                          department:
                            type: string
                            description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                          photoUrl:
                            type: string
                            format: url
                            description: A link to the team's photo.
                          bannerUrl:
                            type: string
                            format: url
                            description: A link to the team's banner photo.
                          externalLink:
                            type: string
                            format: uri
                            description: Link to a team page on the internet or your company's intranet
                          members:
                            type: array
                            description: The members on this team
                            items:
                              required:
                                - person
                              type: object
                              description: Metadata about the relationship of a person to a team.
                              properties:
                                person:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                                relationship:
                                  type: string
                                  description: The team member's relationship to the team. This defaults to MEMBER if not set.
                                  default: MEMBER
                                  enum:
                                    - MEMBER
                                    - MANAGER
                                    - LEAD
                                    - POINT_OF_CONTACT
                                    - OTHER
                                customRelationshipStr:
                                  type: string
                                  description: Displayed name for the relationship if relationship is set to `OTHER`.
                                joinDate:
                                  type: string
                                  format: date-time
                                  description: The team member's start date
                          memberCount:
                            type: integer
                            description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                          emails:
                            type: array
                            description: The emails for this team
                            items:
                              properties:
                                email:
                                  type: string
                                  format: email
                                  description: An email address
                                type:
                                  type: string
                                  enum:
                                    - PRIMARY
                                    - SECONDARY
                                    - ONCALL
                                    - OTHER
                                  default: OTHER
                                isUserGenerated:
                                  type: boolean
                                  description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                              type: object
                          customFields:
                            type: array
                            description: Customizable fields for additional team information.
                            items:
                              required:
                                - label
                                - values
                                - displayable
                              properties:
                                label:
                                  type: string
                                  description: A user-facing label for this field.
                                values:
                                  type: array
                                  items:
                                    oneOf:
                                      - properties:
                                          strText:
                                            type: string
                                            description: Text field for string value.
                                        type: object
                                      - properties:
                                          urlAnchor:
                                            type: string
                                            description: Anchor text for hyperlink.
                                          urlLink:
                                            type: string
                                            description: Link for this URL.
                                        type: object
                                      - properties:
                                          person:
                                            type: object
                                            description: Person object
                                            additionalProperties: true
                                        type: object
                                displayable:
                                  type: boolean
                                  description: Determines whether the client should display this custom field
                                  default: true
                              type: object
                          datasourceProfiles:
                            type: array
                            description: The datasource profiles of the team
                            items:
                              required:
                                - datasource
                                - handle
                              properties:
                                datasource:
                                  type: string
                                  example: github
                                  description: The datasource the profile is of.
                                handle:
                                  type: string
                                  description: The display name of the entity in the given datasource.
                                url:
                                  type: string
                                  description: URL to view the entity's profile.
                                nativeAppUrl:
                                  type: string
                                  description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                                isUserGenerated:
                                  type: boolean
                                  description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                              type: object
                          datasource:
                            type: string
                            description: the data source of the team, e.g. GDRIVE
                          createdFrom:
                            type: string
                            description: For teams created from docs, the doc title. Otherwise empty.
                          lastUpdatedAt:
                            type: string
                            format: date-time
                            description: when this team was last updated.
                          status:
                            type: string
                            description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                            default: PROCESSED
                            enum:
                              - PROCESSED
                              - QUEUED_FOR_CREATION
                              - QUEUED_FOR_DELETION
                          canBeDeleted:
                            type: boolean
                            description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                            default: true
                          loggingId:
                            type: string
                            description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                        required:
                          - id
                          - name
                      customEntity:
                        description: PermissionedObject object
                        type: object
                        properties:
                          id:
                            type: string
                            description: Unique identifier.
                          title:
                            type: string
                            description: Title or name of the custom entity.
                          datasource:
                            type: string
                            description: The datasource the custom entity is from.
                          objectType:
                            type: string
                            description: The type of the entity. Interpretation is specific to each datasource
                          metadata:
                            properties:
                              customData:
                                type: object
                                description: Custom fields specific to individual datasources
                                additionalProperties:
                                  $ref: '#/components/schemas/CustomDataValue'
                            type: object
                          roles:
                            type: array
                            description: A list of user roles for the custom entity explicitly granted by the owner.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                      answer:
                        type: object
                        description: PermissionedObject object
                        properties:
                          id:
                            type: integer
                            description: The opaque ID of the Answer.
                            example: 3
                          docId:
                            type: string
                            description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
                            example: ANSWERS_answer_3
                          question:
                            type: string
                            example: Why is the sky blue?
                          questionVariations:
                            type: array
                            description: Additional ways of phrasing this question.
                            items:
                              type: string
                          bodyText:
                            type: string
                            description: The plain text answer to the question.
                            example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
                          boardId:
                            type: integer
                            description: The parent board ID of this Answer, or 0 if it's a floating Answer.
                          audienceFilters:
                            type: array
                            description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
                            items:
                              type: object
                              description: FacetFilter object
                              additionalProperties: true
                          addedRoles:
                            type: array
                            description: A list of user roles for the answer added by the owner.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of user roles for the answer removed by the owner.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          roles:
                            type: array
                            description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          sourceDocumentSpec:
                            type: object
                            description: DocumentSpec object
                            additionalProperties: true
                          sourceType:
                            type: string
                            enum:
                              - DOCUMENT
                              - ASSISTANT
                          combinedAnswerText:
                            type: object
                            description: StructuredText object (circular reference)
                            additionalProperties: true
                          likes:
                            required:
                              - likedBy
                              - likedByUser
                              - numLikes
                            properties:
                              likedBy:
                                type: array
                                items:
                                  properties:
                                    user:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    createTime:
                                      type: string
                                      format: date-time
                                      description: The time the user liked the answer in ISO format (ISO 8601).
                                  type: object
                              likedByUser:
                                type: boolean
                                description: Whether the user in context liked the answer.
                              numLikes:
                                type: integer
                                description: The total number of likes for the answer.
                            type: object
                          author:
                            type: object
                            description: Person object
                            additionalProperties: true
                          createTime:
                            type: string
                            format: date-time
                            description: The time the answer was created in ISO format (ISO 8601).
                          updateTime:
                            type: string
                            format: date-time
                            description: The time the answer was last updated in ISO format (ISO 8601).
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          verification:
                            required:
                              - state
                            properties:
                              state:
                                type: string
                                enum:
                                  - UNVERIFIED
                                  - VERIFIED
                                  - DEPRECATED
                                description: The verification state for the document.
                              metadata:
                                required:
                                  - documentId
                                properties:
                                  lastVerifier:
                                    type: object
                                    description: Person object
                                    additionalProperties: true
                                  lastVerificationTs:
                                    type: integer
                                    description: The unix timestamp of the verification (in seconds since epoch UTC).
                                  expirationTs:
                                    type: integer
                                    description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
                                  document:
                                    type: object
                                    description: Document object
                                    additionalProperties: true
                                  reminders:
                                    type: array
                                    description: Info about all outstanding verification reminders for the document if exists.
                                    items:
                                      required:
                                        - assignee
                                        - remindAt
                                      properties:
                                        assignee:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                        requestor:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                        remindAt:
                                          type: integer
                                          description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                                        createdAt:
                                          type: integer
                                          description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                                        reason:
                                          type: string
                                          description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                                      type: object
                                  lastReminder:
                                    required:
                                      - assignee
                                      - remindAt
                                    properties:
                                      assignee:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      requestor:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      remindAt:
                                        type: integer
                                        description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                                      createdAt:
                                        type: integer
                                        description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                                      reason:
                                        type: string
                                        description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                                    type: object
                                  visitorCount:
                                    type: array
                                    description: Number of visitors to the document during included time periods.
                                    items:
                                      required:
                                        - count
                                      properties:
                                        count:
                                          type: integer
                                          description: The counter value
                                        period:
                                          properties:
                                            minDaysFromNow:
                                              type: integer
                                              description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                                              deprecated: true
                                            maxDaysFromNow:
                                              type: integer
                                              description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                                              deprecated: true
                                            start:
                                              properties:
                                                epochSeconds:
                                                  type: integer
                                                  description: Epoch seconds. Has precedence over daysFromNow.
                                                daysFromNow:
                                                  type: integer
                                                  description: The number of days from now. Specification relative to current time. Can be negative.
                                              type: object
                                            end:
                                              properties:
                                                epochSeconds:
                                                  type: integer
                                                  description: Epoch seconds. Has precedence over daysFromNow.
                                                daysFromNow:
                                                  type: integer
                                                  description: The number of days from now. Specification relative to current time. Can be negative.
                                              type: object
                                          type: object
                                        org:
                                          type: string
                                          description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                                      type: object
                                  candidateVerifiers:
                                    type: array
                                    description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
                                    items:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                type: object
                            type: object
                          board:
                            type: object
                            description: PermissionedObject object
                            properties:
                              name:
                                type: string
                                description: The unique name of the Collection.
                              description:
                                type: string
                                description: A brief summary of the Collection's contents.
                              addedRoles:
                                type: array
                                description: A list of added user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              removedRoles:
                                type: array
                                description: A list of removed user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              audienceFilters:
                                type: array
                                description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                items:
                                  type: object
                                  description: FacetFilter object
                                  additionalProperties: true
                              id:
                                type: integer
                                description: The unique ID of the Answer Board.
                              createTime:
                                type: string
                                format: date-time
                              updateTime:
                                type: string
                                format: date-time
                              creator:
                                type: object
                                description: Person object
                                additionalProperties: true
                              updatedBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              itemCount:
                                type: integer
                                description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                              roles:
                                type: array
                                description: A list of user roles for the Answer Board.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                            required:
                              - name
                              - id
                              - description
                          collections:
                            type: array
                            description: The collections to which the answer belongs.
                            items:
                              type: object
                              description: Flattened Collection
                              properties:
                                name:
                                  type: string
                                  description: The unique name of the Collection.
                                description:
                                  type: string
                                  description: A brief summary of the Collection's contents.
                                addedRoles:
                                  type: array
                                  description: A list of added user roles for the Collection.
                                  items:
                                    type: object
                                    description: UserRoleSpecification object
                                    additionalProperties: true
                                removedRoles:
                                  type: array
                                  description: A list of removed user roles for the Collection.
                                  items:
                                    type: object
                                    description: UserRoleSpecification object
                                    additionalProperties: true
                                audienceFilters:
                                  type: array
                                  description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                  items:
                                    type: object
                                    description: FacetFilter object
                                    additionalProperties: true
                                icon:
                                  type: string
                                  description: The emoji icon of this Collection.
                                adminLocked:
                                  type: boolean
                                  description: Indicates whether edits are allowed for everyone or only admins.
                                parentId:
                                  type: integer
                                  description: The parent of this Collection, or 0 if it's a top-level Collection.
                                thumbnail:
                                  type: object
                                  description: Thumbnail object
                                  additionalProperties: true
                                allowedDatasource:
                                  type: string
                                  description: The datasource type this Collection can hold.
                                permissions:
                                  type: object
                                  description: Flattened ObjectPermissions
                                  properties:
                                    write:
                                      type: object
                                      description: Describes the write permissions levels that a user has for a specific feature
                                      properties:
                                        scopeType:
                                          type: string
                                          description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                          enum:
                                            - GLOBAL
                                            - OWN
                                          properties: {}
                                        create:
                                          type: boolean
                                          description: True if user has create permission for this feature and scope
                                        update:
                                          type: boolean
                                          description: True if user has update permission for this feature and scope
                                        delete:
                                          type: boolean
                                          description: True if user has delete permission for this feature and scope
                                id:
                                  type: integer
                                  description: The unique ID of the Collection.
                                createTime:
                                  type: string
                                  format: date-time
                                updateTime:
                                  type: string
                                  format: date-time
                                creator:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                                updatedBy:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                                itemCount:
                                  type: integer
                                  description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                                childCount:
                                  type: integer
                                  description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                                items:
                                  type: array
                                  description: The items in this Collection.
                                  items:
                                    type: object
                                    description: CollectionItem object
                                    additionalProperties: true
                                pinMetadata:
                                  required:
                                    - pinnedCategories
                                    - eligibleCategoriesForPinning
                                  properties:
                                    existingPins:
                                      type: array
                                      description: List of targets this Collection is pinned to.
                                      items:
                                        type: object
                                        description: CollectionPinTarget object
                                        additionalProperties: true
                                    eligiblePins:
                                      type: array
                                      description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                                      items:
                                        required:
                                          - id
                                          - target
                                        properties:
                                          id:
                                            type: integer
                                            description: The ID of the Collection.
                                          target:
                                            type: object
                                            description: CollectionPinTarget object
                                            additionalProperties: true
                                        type: object
                                  type: object
                                shortcuts:
                                  type: array
                                  description: The names of the shortcuts (Go Links) that point to this Collection.
                                  items:
                                    type: string
                                children:
                                  type: array
                                  description: The children Collections of this Collection.
                                  items:
                                    type: object
                                    description: Collection object
                                    additionalProperties: true
                                roles:
                                  type: array
                                  description: A list of user roles for the Collection.
                                  items:
                                    type: object
                                    description: UserRoleSpecification object
                                    additionalProperties: true
                          documentCategory:
                            type: string
                            description: The document's document_category(.proto).
                          sourceDocument:
                            type: object
                            description: Document object
                            additionalProperties: true
                        required:
                          - id
                      extractedQnA:
                        properties:
                          heading:
                            type: string
                            description: Heading text that was matched to produce this result.
                          question:
                            type: string
                            description: Question text that was matched to produce this result.
                          questionResult:
                            type: object
                            description: Flattened SearchResult
                            example:
                              snippets:
                                - snippet: snippet
                                  mimeType: mimeType
                              metadata:
                                container: container
                                createTime: '2000-01-23T04:56:07.000Z'
                                datasource: datasource
                                author:
                                  name: name
                                documentId: documentId
                                updateTime: '2000-01-23T04:56:07.000Z'
                                mimeType: mimeType
                                objectType: objectType
                              title: title
                              url: https://example.com/foo/bar
                              nativeAppUrl: slack://foo/bar
                              mustIncludeSuggestions:
                                - missingTerm: container
                                  query: container
                            properties:
                              structuredResults:
                                type: array
                                description: An array of entities in the work graph retrieved via a data request.
                                items:
                                  type: object
                                  description: StructuredResult object (circular reference)
                                  additionalProperties: true
                              trackingToken:
                                type: string
                                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                              document:
                                type: object
                                description: Document object
                                additionalProperties: true
                              title:
                                type: string
                              url:
                                type: string
                              nativeAppUrl:
                                type: string
                                description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                              snippets:
                                type: array
                                description: Text content from the result document which contains search query terms, if available.
                                items:
                                  required:
                                    - snippet
                                  example:
                                    snippet: snippet
                                    mimeType: mimeType
                                  properties:
                                    snippet:
                                      type: string
                                      description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                                    mimeType:
                                      type: string
                                      description: The mime type of the snippets, currently either text/plain or text/html.
                                    text:
                                      type: string
                                      description: A matching snippet from the document with no highlights.
                                    snippetTextOrdering:
                                      type: integer
                                      description: Used for sorting based off the snippet's location within all_snippetable_text
                                    ranges:
                                      type: array
                                      description: The bolded ranges within text.
                                      items:
                                        type: object
                                        description: TextRange object
                                        additionalProperties: true
                                    url:
                                      type: string
                                      description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                                  type: object
                              fullText:
                                type: string
                                description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                              fullTextList:
                                type: array
                                description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                                items:
                                  type: string
                              relatedResults:
                                type: array
                                description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                                items:
                                  properties:
                                    relation:
                                      type: string
                                      description: How this document relates to the including entity.
                                      enum:
                                        - ATTACHMENT
                                        - CANONICAL
                                        - CASE
                                        - CONTACT
                                        - CONVERSATION_MESSAGES
                                        - EXPERT
                                        - FROM
                                        - HIGHLIGHT
                                        - OPPORTUNITY
                                        - RECENT
                                        - SOURCE
                                        - TICKET
                                        - TRANSCRIPT
                                        - WITH
                                      x-enumDescriptions:
                                        CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                    associatedEntityId:
                                      type: string
                                      description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                    querySuggestion:
                                      type: object
                                      description: QuerySuggestion object
                                      additionalProperties: true
                                    documents:
                                      type: array
                                      description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                      deprecated: true
                                      items:
                                        type: object
                                        description: Document object
                                        additionalProperties: true
                                    results:
                                      type: array
                                      description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                      items:
                                        type: object
                                        description: SearchResult object
                                        additionalProperties: true
                                  type: object
                              clusteredResults:
                                type: array
                                description: A list of results that should be displayed as associated with this result.
                                items:
                                  type: object
                                  description: SearchResult object
                                  additionalProperties: true
                              allClusteredResults:
                                type: array
                                description: A list of results that should be displayed as associated with this result.
                                items:
                                  type: object
                                  description: ClusterGroup object
                                  additionalProperties: true
                              attachmentCount:
                                type: integer
                                description: The total number of attachments.
                              attachments:
                                type: array
                                description: A (potentially partial) list of results representing documents attached to the main result document.
                                items:
                                  type: object
                                  description: SearchResult object
                                  additionalProperties: true
                              backlinkResults:
                                type: array
                                description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                                items:
                                  type: object
                                  description: SearchResult object
                                  additionalProperties: true
                              clusterType:
                                type: string
                                description: The reason for inclusion of clusteredResults.
                                enum:
                                  - SIMILAR
                                  - FRESHNESS
                                  - TITLE
                                  - CONTENT
                                  - NONE
                                  - THREAD_REPLY
                                  - THREAD_ROOT
                                  - PREFIX
                                  - SUFFIX
                              mustIncludeSuggestions:
                                properties:
                                  suggestions:
                                    type: array
                                    items:
                                      type: object
                                      description: QuerySuggestion object
                                      additionalProperties: true
                                  person:
                                    type: object
                                    description: Person object
                                    additionalProperties: true
                                type: object
                              querySuggestion:
                                type: object
                                description: QuerySuggestion object
                                additionalProperties: true
                              prominence:
                                type: string
                                description: |
                                  The level of visual distinction that should be given to a result.
                                x-enumDescriptions:
                                  HERO: A high-confidence result that should feature prominently on the page.
                                  PROMOTED: May not be the best result but should be given additional visual distinction.
                                  STANDARD: Should not be distinct from any other results.
                                enum:
                                  - HERO
                                  - PROMOTED
                                  - STANDARD
                              attachmentContext:
                                type: string
                                description: Additional context for the relationship between the result and the document it's attached to.
                              pins:
                                type: array
                                description: A list of pins associated with this search result.
                                items:
                                  type: object
                                  properties:
                                    queries:
                                      type: array
                                      description: The query strings for which the pinned result will show.
                                      items:
                                        type: string
                                    audienceFilters:
                                      type: array
                                      description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                                      items:
                                        type: object
                                        description: FacetFilter object
                                        additionalProperties: true
                                    id:
                                      type: string
                                      description: The opaque id of the pin.
                                    documentId:
                                      type: string
                                      description: The document which should be a pinned result.
                                    attribution:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    updatedBy:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    createTime:
                                      type: string
                                      format: date-time
                                    updateTime:
                                      type: string
                                      format: date-time
                                  required:
                                    - documentId
                        type: object
                      meeting:
                        properties:
                          id:
                            type: string
                          title:
                            type: string
                          description:
                            type: string
                          url:
                            type: string
                          startTime:
                            type: string
                            format: date-time
                          endTime:
                            type: string
                            format: date-time
                          attendees:
                            properties:
                              people:
                                type: array
                                description: Full details of some of the attendees of this event
                                items:
                                  required:
                                    - person
                                  properties:
                                    isOrganizer:
                                      type: boolean
                                      description: Whether or not this attendee is an organizer.
                                    isInGroup:
                                      type: boolean
                                      description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    groupAttendees:
                                      type: array
                                      description: If this attendee is a group, represents the list of individual attendees in the group.
                                      items:
                                        type: object
                                        description: CalendarAttendee object
                                        additionalProperties: true
                                    responseStatus:
                                      type: string
                                      enum:
                                        - ACCEPTED
                                        - DECLINED
                                        - NO_RESPONSE
                                        - TENTATIVE
                                  type: object
                              isLimit:
                                type: boolean
                                description: Whether the total count of the people returned is at the retrieval limit.
                              total:
                                type: integer
                                description: Total number of attendees in this event.
                              numAccepted:
                                type: integer
                                description: Total number of attendees who have accepted this event.
                              numDeclined:
                                type: integer
                                description: Total number of attendees who have declined this event.
                              numNoResponse:
                                type: integer
                                description: Total number of attendees who have not responded to this event.
                              numTentative:
                                type: integer
                                description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                            type: object
                        type: object
                      app:
                        required:
                          - datasource
                        properties:
                          datasource:
                            type: string
                            description: The app or other repository type this represents
                          docType:
                            type: string
                            description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                          mimeType:
                            type: string
                            description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                          iconUrl:
                            type: string
                            description: If there is available icon URL.
                        type: object
                      collection:
                        type: object
                        description: Flattened Collection
                        properties:
                          name:
                            type: string
                            description: The unique name of the Collection.
                          description:
                            type: string
                            description: A brief summary of the Collection's contents.
                          addedRoles:
                            type: array
                            description: A list of added user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of removed user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          audienceFilters:
                            type: array
                            description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                            items:
                              type: object
                              description: FacetFilter object
                              additionalProperties: true
                          icon:
                            type: string
                            description: The emoji icon of this Collection.
                          adminLocked:
                            type: boolean
                            description: Indicates whether edits are allowed for everyone or only admins.
                          parentId:
                            type: integer
                            description: The parent of this Collection, or 0 if it's a top-level Collection.
                          thumbnail:
                            type: object
                            description: Thumbnail object
                            additionalProperties: true
                          allowedDatasource:
                            type: string
                            description: The datasource type this Collection can hold.
                          permissions:
                            type: object
                            description: Flattened ObjectPermissions
                            properties:
                              write:
                                type: object
                                description: Describes the write permissions levels that a user has for a specific feature
                                properties:
                                  scopeType:
                                    type: string
                                    description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                    enum:
                                      - GLOBAL
                                      - OWN
                                    properties: {}
                                  create:
                                    type: boolean
                                    description: True if user has create permission for this feature and scope
                                  update:
                                    type: boolean
                                    description: True if user has update permission for this feature and scope
                                  delete:
                                    type: boolean
                                    description: True if user has delete permission for this feature and scope
                          id:
                            type: integer
                            description: The unique ID of the Collection.
                          createTime:
                            type: string
                            format: date-time
                          updateTime:
                            type: string
                            format: date-time
                          creator:
                            type: object
                            description: Person object
                            additionalProperties: true
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          itemCount:
                            type: integer
                            description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                          childCount:
                            type: integer
                            description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                          items:
                            type: array
                            description: The items in this Collection.
                            items:
                              type: object
                              description: CollectionItem object
                              additionalProperties: true
                          pinMetadata:
                            required:
                              - pinnedCategories
                              - eligibleCategoriesForPinning
                            properties:
                              existingPins:
                                type: array
                                description: List of targets this Collection is pinned to.
                                items:
                                  type: object
                                  description: CollectionPinTarget object
                                  additionalProperties: true
                              eligiblePins:
                                type: array
                                description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                                items:
                                  required:
                                    - id
                                    - target
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the Collection.
                                    target:
                                      type: object
                                      description: CollectionPinTarget object
                                      additionalProperties: true
                                  type: object
                            type: object
                          shortcuts:
                            type: array
                            description: The names of the shortcuts (Go Links) that point to this Collection.
                            items:
                              type: string
                          children:
                            type: array
                            description: The children Collections of this Collection.
                            items:
                              type: object
                              description: Collection object
                              additionalProperties: true
                          roles:
                            type: array
                            description: A list of user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                      answerBoard:
                        type: object
                        description: PermissionedObject object
                        properties:
                          name:
                            type: string
                            description: The unique name of the Collection.
                          description:
                            type: string
                            description: A brief summary of the Collection's contents.
                          addedRoles:
                            type: array
                            description: A list of added user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of removed user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          audienceFilters:
                            type: array
                            description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                            items:
                              type: object
                              description: FacetFilter object
                              additionalProperties: true
                          id:
                            type: integer
                            description: The unique ID of the Answer Board.
                          createTime:
                            type: string
                            format: date-time
                          updateTime:
                            type: string
                            format: date-time
                          creator:
                            type: object
                            description: Person object
                            additionalProperties: true
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          itemCount:
                            type: integer
                            description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                          roles:
                            type: array
                            description: A list of user roles for the Answer Board.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                        required:
                          - name
                          - id
                          - description
                      code:
                        example:
                          repoName: scio
                          fileName: README.md
                          matches:
                            - lineNumber: 1
                              content: Welcome to the beginning
                              ranges: []
                            - lineNumber: 2
                              content: Second line of the file
                              ranges: []
                            - lineNumber: 3
                              content: hello world hello world
                              ranges:
                                - startindex: 0
                                  endIndex: 5
                                - startIndex: 12
                                  endIndex: 17
                        properties:
                          repoName:
                            type: string
                          fileName:
                            type: string
                          fileUrl:
                            type: string
                          lines:
                            type: array
                            items:
                              properties:
                                lineNumber:
                                  type: integer
                                content:
                                  type: string
                                ranges:
                                  type: array
                                  description: Index ranges depicting matched sections of the line
                                  items:
                                    type: object
                                    description: TextRange object
                                    additionalProperties: true
                              type: object
                          isLastMatch:
                            type: boolean
                            description: Last file match for a repo
                        type: object
                      shortcut:
                        type: object
                        description: PermissionedObject object
                        properties:
                          id:
                            type: integer
                            description: The opaque id of the user generated content.
                          inputAlias:
                            type: string
                            description: Link text following go/ prefix as entered by the user.
                          destinationUrl:
                            type: string
                            description: Destination URL for the shortcut.
                          destinationDocumentId:
                            type: string
                            description: Glean Document ID for the URL, if known.
                          description:
                            type: string
                            description: A short, plain text blurb to help people understand the intent of the shortcut.
                          unlisted:
                            type: boolean
                            description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                          urlTemplate:
                            type: string
                            description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                          addedRoles:
                            type: array
                            description: A list of user roles added for the Shortcut.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of user roles removed for the Shortcut.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          createdBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          createTime:
                            type: string
                            format: date-time
                            description: The time the shortcut was created in ISO format (ISO 8601).
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          updateTime:
                            type: string
                            format: date-time
                            description: The time the shortcut was updated in ISO format (ISO 8601).
                          destinationDocument:
                            type: object
                            description: Document object
                            additionalProperties: true
                          intermediateUrl:
                            type: string
                            description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                          viewPrefix:
                            type: string
                            description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                          isExternal:
                            type: boolean
                            description: Indicates whether a shortcut is native or external.
                          editUrl:
                            type: string
                            description: The URL using which the user can access the edit page of the shortcut.
                          alias:
                            type: string
                            description: canonical link text following go/ prefix where hyphen/underscore is removed.
                          title:
                            type: string
                            description: Title for the Go Link
                          roles:
                            type: array
                            description: A list of user roles for the Go Link.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                        required:
                          - inputAlias
                      querySuggestions:
                        properties:
                          suggestions:
                            type: array
                            items:
                              type: object
                              description: QuerySuggestion object
                              additionalProperties: true
                          person:
                            type: object
                            description: Person object
                            additionalProperties: true
                        type: object
                      relatedDocuments:
                        type: array
                        description: A list of documents related to this structured result.
                        items:
                          properties:
                            relation:
                              type: string
                              description: How this document relates to the including entity.
                              enum:
                                - ATTACHMENT
                                - CANONICAL
                                - CASE
                                - CONTACT
                                - CONVERSATION_MESSAGES
                                - EXPERT
                                - FROM
                                - HIGHLIGHT
                                - OPPORTUNITY
                                - RECENT
                                - SOURCE
                                - TICKET
                                - TRANSCRIPT
                                - WITH
                              x-enumDescriptions:
                                CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                            associatedEntityId:
                              type: string
                              description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                            querySuggestion:
                              type: object
                              description: QuerySuggestion object
                              additionalProperties: true
                            documents:
                              type: array
                              description: A truncated list of documents with this relation. TO BE DEPRECATED.
                              deprecated: true
                              items:
                                type: object
                                description: Document object
                                additionalProperties: true
                            results:
                              type: array
                              description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                              items:
                                type: object
                                description: SearchResult object
                                additionalProperties: true
                          type: object
                      relatedQuestion:
                        properties:
                          question:
                            type: string
                            description: The text of the related question
                          answer:
                            type: string
                            description: The answer for the related question
                          ranges:
                            type: array
                            description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                            items:
                              type: object
                              description: TextRange object
                              additionalProperties: true
                        type: object
                      disambiguation:
                        type: object
                        description: A disambiguation between multiple entities with the same name
                        properties:
                          name:
                            type: string
                            description: Name of the ambiguous entity
                          id:
                            type: string
                            description: The unique id of the entity in the knowledge graph
                          type:
                            type: string
                            description: The type of entity.
                            x-include-enum-class-prefix: true
                            enum:
                              - PERSON
                              - PROJECT
                              - CUSTOMER
                      snippets:
                        description: Any snippets associated to the populated object.
                        type: array
                        items:
                          required:
                            - snippet
                          example:
                            snippet: snippet
                            mimeType: mimeType
                          properties:
                            snippet:
                              type: string
                              description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                            mimeType:
                              type: string
                              description: The mime type of the snippets, currently either text/plain or text/html.
                            text:
                              type: string
                              description: A matching snippet from the document with no highlights.
                            snippetTextOrdering:
                              type: integer
                              description: Used for sorting based off the snippet's location within all_snippetable_text
                            ranges:
                              type: array
                              description: The bolded ranges within text.
                              items:
                                type: object
                                description: TextRange object
                                additionalProperties: true
                            url:
                              type: string
                              description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                          type: object
                      trackingToken:
                        type: string
                        description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                      prominence:
                        type: string
                        description: The level of visual distinction that should be given to a result.
                        x-enumDescriptions:
                          HERO: A high-confidence result that should feature prominently on the page.
                          PROMOTED: May not be the best result but should be given additional visual distinction.
                          STANDARD: Should not be distinct from any other results.
                        enum:
                          - HERO
                          - PROMOTED
                          - STANDARD
                      source:
                        type: string
                        description: Source context for this result. Possible values depend on the result type.
                        enum:
                          - EXPERT_DETECTION
                          - ENTITY_NLQ
                    type: object
                type: object
          required:
            - text
        emoji:
          type: string
          description: An emoji used to indicate the nature of the announcement.
        thumbnail:
          type: object
          description: Thumbnail object
          additionalProperties: true
        banner:
          type: object
          description: Thumbnail object
          additionalProperties: true
        audienceFilters:
          type: array
          description: Filters which restrict who should see the announcement. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
        sourceDocumentId:
          type: string
          description: The Glean Document ID of the source document this Announcement was created from (e.g. Slack thread).
        hideAttribution:
          type: boolean
          description: Whether or not to hide an author attribution.
        channel:
          type: string
          enum:
            - MAIN
            - SOCIAL_FEED
          description: This determines whether this is a Social Feed post or a regular announcement.
        postType:
          type: string
          enum:
            - TEXT
            - LINK
          description: This determines whether this is an external-link post or a regular announcement post. TEXT - Regular announcement that can contain rich text. LINK - Announcement that is linked to an external site.
        isPrioritized:
          type: boolean
          description: Used by the Social Feed to pin posts to the front of the feed.
        viewUrl:
          type: string
          description: URL for viewing the announcement. It will be set to document URL for announcements from other datasources e.g. simpplr. Can only be written when channel="SOCIAL_FEED".
      type: object
    DraftProperties:
      example:
        draftId: 342
      properties:
        draftId:
          type: integer
          description: The opaque id of the associated draft.
      type: object
    PermissionedObject:
      type: object
      description: PermissionedObject object
      additionalProperties: true
    Person:
      type: object
      description: Person object
      additionalProperties: true
    Document:
      type: object
      description: Document object
      additionalProperties: true
    StructuredText:
      type: object
      properties:
        text:
          type: string
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
        structuredList:
          type: array
          description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
          items:
            properties:
              link:
                type: string
                example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
              document:
                type: object
                description: Document object
                additionalProperties: true
              text:
                type: string
                example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
              structuredResult:
                description: A single object that can support any object in the work graph. Only a single object will be populated.
                properties:
                  document:
                    type: object
                    description: Document object
                    additionalProperties: true
                  person:
                    type: object
                    description: Person object
                    additionalProperties: true
                  customer:
                    required:
                      - id
                      - company
                    properties:
                      id:
                        type: string
                        description: Unique identifier.
                      domains:
                        type: array
                        description: Link to company's associated website domains.
                        items:
                          type: string
                      company:
                        required:
                          - name
                        properties:
                          name:
                            type: string
                            description: User-friendly display name.
                          profileUrl:
                            type: string
                            description: Link to internal company company profile.
                          websiteUrls:
                            type: array
                            description: Link to company's associated websites.
                            items:
                              type: string
                          logoUrl:
                            type: string
                            description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                          location:
                            type: string
                            description: User facing string representing the company's location.
                            example: New York City
                          phone:
                            type: string
                            description: Phone number as a number string.
                          fax:
                            type: string
                            description: Fax number as a number string.
                          industry:
                            type: string
                            description: User facing string representing the company's industry.
                            example: Finances
                          annualRevenue:
                            type: number
                            format: double
                            description: Average company's annual revenue for reference.
                          numberOfEmployees:
                            type: integer
                            format: int64
                            description: Average company's number of employees for reference.
                          stockSymbol:
                            type: string
                            description: Company's stock symbol if company is public.
                          foundedDate:
                            type: string
                            format: date
                            description: The date when the company was founded.
                          about:
                            type: string
                            description: User facing description of company.
                            example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                        type: object
                      documentCounts:
                        type: object
                        description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                        additionalProperties:
                          type: integer
                      poc:
                        type: array
                        description: A list of POC for company.
                        items:
                          type: object
                          description: Person object
                          additionalProperties: true
                      metadata:
                        properties:
                          datasourceId:
                            type: string
                            description: The user visible id of the salesforce customer account.
                          customData:
                            type: object
                            description: Custom fields specific to individual datasources
                            additionalProperties:
                              $ref: '#/components/schemas/CustomDataValue'
                        type: object
                      mergedCustomers:
                        type: array
                        description: A list of Customers.
                        items:
                          type: object
                          description: Customer object
                          additionalProperties: true
                      startDate:
                        type: string
                        format: date
                        description: The date when the interaction with customer started.
                      contractAnnualRevenue:
                        type: number
                        format: double
                        description: Average contract annual revenue with that customer.
                      notes:
                        type: string
                        description: User facing (potentially generated) notes about company.
                        example: CIO is interested in trying out the product.
                    type: object
                  team:
                    type: object
                    description: PermissionedObject object
                    properties:
                      relatedObjects:
                        type: object
                        description: A list of objects related to a source object.
                        additionalProperties:
                          $ref: '#/components/schemas/RelatedObjectEdge'
                      id:
                        type: string
                        description: Unique identifier
                      name:
                        type: string
                        description: Team name
                      description:
                        type: string
                        description: A description of the team
                      businessUnit:
                        type: string
                        description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                      department:
                        type: string
                        description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                      photoUrl:
                        type: string
                        format: url
                        description: A link to the team's photo.
                      bannerUrl:
                        type: string
                        format: url
                        description: A link to the team's banner photo.
                      externalLink:
                        type: string
                        format: uri
                        description: Link to a team page on the internet or your company's intranet
                      members:
                        type: array
                        description: The members on this team
                        items:
                          required:
                            - person
                          type: object
                          description: Metadata about the relationship of a person to a team.
                          properties:
                            person:
                              type: object
                              description: Person object
                              additionalProperties: true
                            relationship:
                              type: string
                              description: The team member's relationship to the team. This defaults to MEMBER if not set.
                              default: MEMBER
                              enum:
                                - MEMBER
                                - MANAGER
                                - LEAD
                                - POINT_OF_CONTACT
                                - OTHER
                            customRelationshipStr:
                              type: string
                              description: Displayed name for the relationship if relationship is set to `OTHER`.
                            joinDate:
                              type: string
                              format: date-time
                              description: The team member's start date
                      memberCount:
                        type: integer
                        description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                      emails:
                        type: array
                        description: The emails for this team
                        items:
                          properties:
                            email:
                              type: string
                              format: email
                              description: An email address
                            type:
                              type: string
                              enum:
                                - PRIMARY
                                - SECONDARY
                                - ONCALL
                                - OTHER
                              default: OTHER
                            isUserGenerated:
                              type: boolean
                              description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                          type: object
                      customFields:
                        type: array
                        description: Customizable fields for additional team information.
                        items:
                          required:
                            - label
                            - values
                            - displayable
                          properties:
                            label:
                              type: string
                              description: A user-facing label for this field.
                            values:
                              type: array
                              items:
                                oneOf:
                                  - properties:
                                      strText:
                                        type: string
                                        description: Text field for string value.
                                    type: object
                                  - properties:
                                      urlAnchor:
                                        type: string
                                        description: Anchor text for hyperlink.
                                      urlLink:
                                        type: string
                                        description: Link for this URL.
                                    type: object
                                  - properties:
                                      person:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                    type: object
                            displayable:
                              type: boolean
                              description: Determines whether the client should display this custom field
                              default: true
                          type: object
                      datasourceProfiles:
                        type: array
                        description: The datasource profiles of the team
                        items:
                          required:
                            - datasource
                            - handle
                          properties:
                            datasource:
                              type: string
                              example: github
                              description: The datasource the profile is of.
                            handle:
                              type: string
                              description: The display name of the entity in the given datasource.
                            url:
                              type: string
                              description: URL to view the entity's profile.
                            nativeAppUrl:
                              type: string
                              description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                            isUserGenerated:
                              type: boolean
                              description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                          type: object
                      datasource:
                        type: string
                        description: the data source of the team, e.g. GDRIVE
                      createdFrom:
                        type: string
                        description: For teams created from docs, the doc title. Otherwise empty.
                      lastUpdatedAt:
                        type: string
                        format: date-time
                        description: when this team was last updated.
                      status:
                        type: string
                        description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                        default: PROCESSED
                        enum:
                          - PROCESSED
                          - QUEUED_FOR_CREATION
                          - QUEUED_FOR_DELETION
                      canBeDeleted:
                        type: boolean
                        description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                        default: true
                      loggingId:
                        type: string
                        description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                    required:
                      - id
                      - name
                  customEntity:
                    description: PermissionedObject object
                    type: object
                    properties:
                      id:
                        type: string
                        description: Unique identifier.
                      title:
                        type: string
                        description: Title or name of the custom entity.
                      datasource:
                        type: string
                        description: The datasource the custom entity is from.
                      objectType:
                        type: string
                        description: The type of the entity. Interpretation is specific to each datasource
                      metadata:
                        properties:
                          customData:
                            type: object
                            description: Custom fields specific to individual datasources
                            additionalProperties:
                              $ref: '#/components/schemas/CustomDataValue'
                        type: object
                      roles:
                        type: array
                        description: A list of user roles for the custom entity explicitly granted by the owner.
                        items:
                          type: object
                          description: UserRoleSpecification object
                          additionalProperties: true
                  answer:
                    type: object
                    description: PermissionedObject object
                    properties:
                      id:
                        type: integer
                        description: The opaque ID of the Answer.
                        example: 3
                      docId:
                        type: string
                        description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
                        example: ANSWERS_answer_3
                      question:
                        type: string
                        example: Why is the sky blue?
                      questionVariations:
                        type: array
                        description: Additional ways of phrasing this question.
                        items:
                          type: string
                      bodyText:
                        type: string
                        description: The plain text answer to the question.
                        example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
                      boardId:
                        type: integer
                        description: The parent board ID of this Answer, or 0 if it's a floating Answer.
                      audienceFilters:
                        type: array
                        description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
                        items:
                          type: object
                          description: FacetFilter object
                          additionalProperties: true
                      addedRoles:
                        type: array
                        description: A list of user roles for the answer added by the owner.
                        items:
                          type: object
                          description: UserRoleSpecification object
                          additionalProperties: true
                      removedRoles:
                        type: array
                        description: A list of user roles for the answer removed by the owner.
                        items:
                          type: object
                          description: UserRoleSpecification object
                          additionalProperties: true
                      roles:
                        type: array
                        description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
                        items:
                          type: object
                          description: UserRoleSpecification object
                          additionalProperties: true
                      sourceDocumentSpec:
                        type: object
                        description: DocumentSpec object
                        additionalProperties: true
                      sourceType:
                        type: string
                        enum:
                          - DOCUMENT
                          - ASSISTANT
                      combinedAnswerText:
                        type: object
                        description: StructuredText object (circular reference)
                        additionalProperties: true
                      likes:
                        required:
                          - likedBy
                          - likedByUser
                          - numLikes
                        properties:
                          likedBy:
                            type: array
                            items:
                              properties:
                                user:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                                createTime:
                                  type: string
                                  format: date-time
                                  description: The time the user liked the answer in ISO format (ISO 8601).
                              type: object
                          likedByUser:
                            type: boolean
                            description: Whether the user in context liked the answer.
                          numLikes:
                            type: integer
                            description: The total number of likes for the answer.
                        type: object
                      author:
                        type: object
                        description: Person object
                        additionalProperties: true
                      createTime:
                        type: string
                        format: date-time
                        description: The time the answer was created in ISO format (ISO 8601).
                      updateTime:
                        type: string
                        format: date-time
                        description: The time the answer was last updated in ISO format (ISO 8601).
                      updatedBy:
                        type: object
                        description: Person object
                        additionalProperties: true
                      verification:
                        required:
                          - state
                        properties:
                          state:
                            type: string
                            enum:
                              - UNVERIFIED
                              - VERIFIED
                              - DEPRECATED
                            description: The verification state for the document.
                          metadata:
                            required:
                              - documentId
                            properties:
                              lastVerifier:
                                type: object
                                description: Person object
                                additionalProperties: true
                              lastVerificationTs:
                                type: integer
                                description: The unix timestamp of the verification (in seconds since epoch UTC).
                              expirationTs:
                                type: integer
                                description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
                              document:
                                type: object
                                description: Document object
                                additionalProperties: true
                              reminders:
                                type: array
                                description: Info about all outstanding verification reminders for the document if exists.
                                items:
                                  required:
                                    - assignee
                                    - remindAt
                                  properties:
                                    assignee:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    requestor:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    remindAt:
                                      type: integer
                                      description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                                    createdAt:
                                      type: integer
                                      description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                                    reason:
                                      type: string
                                      description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                                  type: object
                              lastReminder:
                                required:
                                  - assignee
                                  - remindAt
                                properties:
                                  assignee:
                                    type: object
                                    description: Person object
                                    additionalProperties: true
                                  requestor:
                                    type: object
                                    description: Person object
                                    additionalProperties: true
                                  remindAt:
                                    type: integer
                                    description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                                  createdAt:
                                    type: integer
                                    description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                                  reason:
                                    type: string
                                    description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                                type: object
                              visitorCount:
                                type: array
                                description: Number of visitors to the document during included time periods.
                                items:
                                  required:
                                    - count
                                  properties:
                                    count:
                                      type: integer
                                      description: The counter value
                                    period:
                                      properties:
                                        minDaysFromNow:
                                          type: integer
                                          description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                                          deprecated: true
                                        maxDaysFromNow:
                                          type: integer
                                          description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                                          deprecated: true
                                        start:
                                          properties:
                                            epochSeconds:
                                              type: integer
                                              description: Epoch seconds. Has precedence over daysFromNow.
                                            daysFromNow:
                                              type: integer
                                              description: The number of days from now. Specification relative to current time. Can be negative.
                                          type: object
                                        end:
                                          properties:
                                            epochSeconds:
                                              type: integer
                                              description: Epoch seconds. Has precedence over daysFromNow.
                                            daysFromNow:
                                              type: integer
                                              description: The number of days from now. Specification relative to current time. Can be negative.
                                          type: object
                                      type: object
                                    org:
                                      type: string
                                      description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                                  type: object
                              candidateVerifiers:
                                type: array
                                description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
                                items:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                            type: object
                        type: object
                      board:
                        type: object
                        description: PermissionedObject object
                        properties:
                          name:
                            type: string
                            description: The unique name of the Collection.
                          description:
                            type: string
                            description: A brief summary of the Collection's contents.
                          addedRoles:
                            type: array
                            description: A list of added user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          removedRoles:
                            type: array
                            description: A list of removed user roles for the Collection.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                          audienceFilters:
                            type: array
                            description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                            items:
                              type: object
                              description: FacetFilter object
                              additionalProperties: true
                          id:
                            type: integer
                            description: The unique ID of the Answer Board.
                          createTime:
                            type: string
                            format: date-time
                          updateTime:
                            type: string
                            format: date-time
                          creator:
                            type: object
                            description: Person object
                            additionalProperties: true
                          updatedBy:
                            type: object
                            description: Person object
                            additionalProperties: true
                          itemCount:
                            type: integer
                            description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                          roles:
                            type: array
                            description: A list of user roles for the Answer Board.
                            items:
                              type: object
                              description: UserRoleSpecification object
                              additionalProperties: true
                        required:
                          - name
                          - id
                          - description
                      collections:
                        type: array
                        description: The collections to which the answer belongs.
                        items:
                          type: object
                          description: Flattened Collection
                          properties:
                            name:
                              type: string
                              description: The unique name of the Collection.
                            description:
                              type: string
                              description: A brief summary of the Collection's contents.
                            addedRoles:
                              type: array
                              description: A list of added user roles for the Collection.
                              items:
                                type: object
                                description: UserRoleSpecification object
                                additionalProperties: true
                            removedRoles:
                              type: array
                              description: A list of removed user roles for the Collection.
                              items:
                                type: object
                                description: UserRoleSpecification object
                                additionalProperties: true
                            audienceFilters:
                              type: array
                              description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                              items:
                                type: object
                                description: FacetFilter object
                                additionalProperties: true
                            icon:
                              type: string
                              description: The emoji icon of this Collection.
                            adminLocked:
                              type: boolean
                              description: Indicates whether edits are allowed for everyone or only admins.
                            parentId:
                              type: integer
                              description: The parent of this Collection, or 0 if it's a top-level Collection.
                            thumbnail:
                              type: object
                              description: Thumbnail object
                              additionalProperties: true
                            allowedDatasource:
                              type: string
                              description: The datasource type this Collection can hold.
                            permissions:
                              type: object
                              description: Flattened ObjectPermissions
                              properties:
                                write:
                                  type: object
                                  description: Describes the write permissions levels that a user has for a specific feature
                                  properties:
                                    scopeType:
                                      type: string
                                      description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                      enum:
                                        - GLOBAL
                                        - OWN
                                      properties: {}
                                    create:
                                      type: boolean
                                      description: True if user has create permission for this feature and scope
                                    update:
                                      type: boolean
                                      description: True if user has update permission for this feature and scope
                                    delete:
                                      type: boolean
                                      description: True if user has delete permission for this feature and scope
                            id:
                              type: integer
                              description: The unique ID of the Collection.
                            createTime:
                              type: string
                              format: date-time
                            updateTime:
                              type: string
                              format: date-time
                            creator:
                              type: object
                              description: Person object
                              additionalProperties: true
                            updatedBy:
                              type: object
                              description: Person object
                              additionalProperties: true
                            itemCount:
                              type: integer
                              description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                            childCount:
                              type: integer
                              description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                            items:
                              type: array
                              description: The items in this Collection.
                              items:
                                type: object
                                description: CollectionItem object
                                additionalProperties: true
                            pinMetadata:
                              required:
                                - pinnedCategories
                                - eligibleCategoriesForPinning
                              properties:
                                existingPins:
                                  type: array
                                  description: List of targets this Collection is pinned to.
                                  items:
                                    type: object
                                    description: CollectionPinTarget object
                                    additionalProperties: true
                                eligiblePins:
                                  type: array
                                  description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                                  items:
                                    required:
                                      - id
                                      - target
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the Collection.
                                      target:
                                        type: object
                                        description: CollectionPinTarget object
                                        additionalProperties: true
                                    type: object
                              type: object
                            shortcuts:
                              type: array
                              description: The names of the shortcuts (Go Links) that point to this Collection.
                              items:
                                type: string
                            children:
                              type: array
                              description: The children Collections of this Collection.
                              items:
                                type: object
                                description: Collection object
                                additionalProperties: true
                            roles:
                              type: array
                              description: A list of user roles for the Collection.
                              items:
                                type: object
                                description: UserRoleSpecification object
                                additionalProperties: true
                      documentCategory:
                        type: string
                        description: The document's document_category(.proto).
                      sourceDocument:
                        type: object
                        description: Document object
                        additionalProperties: true
                    required:
                      - id
                  extractedQnA:
                    properties:
                      heading:
                        type: string
                        description: Heading text that was matched to produce this result.
                      question:
                        type: string
                        description: Question text that was matched to produce this result.
                      questionResult:
                        type: object
                        description: Flattened SearchResult
                        example:
                          snippets:
                            - snippet: snippet
                              mimeType: mimeType
                          metadata:
                            container: container
                            createTime: '2000-01-23T04:56:07.000Z'
                            datasource: datasource
                            author:
                              name: name
                            documentId: documentId
                            updateTime: '2000-01-23T04:56:07.000Z'
                            mimeType: mimeType
                            objectType: objectType
                          title: title
                          url: https://example.com/foo/bar
                          nativeAppUrl: slack://foo/bar
                          mustIncludeSuggestions:
                            - missingTerm: container
                              query: container
                        properties:
                          structuredResults:
                            type: array
                            description: An array of entities in the work graph retrieved via a data request.
                            items:
                              type: object
                              description: StructuredResult object (circular reference)
                              additionalProperties: true
                          trackingToken:
                            type: string
                            description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                          document:
                            type: object
                            description: Document object
                            additionalProperties: true
                          title:
                            type: string
                          url:
                            type: string
                          nativeAppUrl:
                            type: string
                            description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                          snippets:
                            type: array
                            description: Text content from the result document which contains search query terms, if available.
                            items:
                              required:
                                - snippet
                              example:
                                snippet: snippet
                                mimeType: mimeType
                              properties:
                                snippet:
                                  type: string
                                  description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                                mimeType:
                                  type: string
                                  description: The mime type of the snippets, currently either text/plain or text/html.
                                text:
                                  type: string
                                  description: A matching snippet from the document with no highlights.
                                snippetTextOrdering:
                                  type: integer
                                  description: Used for sorting based off the snippet's location within all_snippetable_text
                                ranges:
                                  type: array
                                  description: The bolded ranges within text.
                                  items:
                                    type: object
                                    description: TextRange object
                                    additionalProperties: true
                                url:
                                  type: string
                                  description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                              type: object
                          fullText:
                            type: string
                            description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                          fullTextList:
                            type: array
                            description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                            items:
                              type: string
                          relatedResults:
                            type: array
                            description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                            items:
                              properties:
                                relation:
                                  type: string
                                  description: How this document relates to the including entity.
                                  enum:
                                    - ATTACHMENT
                                    - CANONICAL
                                    - CASE
                                    - CONTACT
                                    - CONVERSATION_MESSAGES
                                    - EXPERT
                                    - FROM
                                    - HIGHLIGHT
                                    - OPPORTUNITY
                                    - RECENT
                                    - SOURCE
                                    - TICKET
                                    - TRANSCRIPT
                                    - WITH
                                  x-enumDescriptions:
                                    CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                associatedEntityId:
                                  type: string
                                  description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                querySuggestion:
                                  type: object
                                  description: QuerySuggestion object
                                  additionalProperties: true
                                documents:
                                  type: array
                                  description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                  deprecated: true
                                  items:
                                    type: object
                                    description: Document object
                                    additionalProperties: true
                                results:
                                  type: array
                                  description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                  items:
                                    type: object
                                    description: SearchResult object
                                    additionalProperties: true
                              type: object
                          clusteredResults:
                            type: array
                            description: A list of results that should be displayed as associated with this result.
                            items:
                              type: object
                              description: SearchResult object
                              additionalProperties: true
                          allClusteredResults:
                            type: array
                            description: A list of results that should be displayed as associated with this result.
                            items:
                              type: object
                              description: ClusterGroup object
                              additionalProperties: true
                          attachmentCount:
                            type: integer
                            description: The total number of attachments.
                          attachments:
                            type: array
                            description: A (potentially partial) list of results representing documents attached to the main result document.
                            items:
                              type: object
                              description: SearchResult object
                              additionalProperties: true
                          backlinkResults:
                            type: array
                            description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                            items:
                              type: object
                              description: SearchResult object
                              additionalProperties: true
                          clusterType:
                            type: string
                            description: The reason for inclusion of clusteredResults.
                            enum:
                              - SIMILAR
                              - FRESHNESS
                              - TITLE
                              - CONTENT
                              - NONE
                              - THREAD_REPLY
                              - THREAD_ROOT
                              - PREFIX
                              - SUFFIX
                          mustIncludeSuggestions:
                            properties:
                              suggestions:
                                type: array
                                items:
                                  type: object
                                  description: QuerySuggestion object
                                  additionalProperties: true
                              person:
                                type: object
                                description: Person object
                                additionalProperties: true
                            type: object
                          querySuggestion:
                            type: object
                            description: QuerySuggestion object
                            additionalProperties: true
                          prominence:
                            type: string
                            description: |
                              The level of visual distinction that should be given to a result.
                            x-enumDescriptions:
                              HERO: A high-confidence result that should feature prominently on the page.
                              PROMOTED: May not be the best result but should be given additional visual distinction.
                              STANDARD: Should not be distinct from any other results.
                            enum:
                              - HERO
                              - PROMOTED
                              - STANDARD
                          attachmentContext:
                            type: string
                            description: Additional context for the relationship between the result and the document it's attached to.
                          pins:
                            type: array
                            description: A list of pins associated with this search result.
                            items:
                              type: object
                              properties:
                                queries:
                                  type: array
                                  description: The query strings for which the pinned result will show.
                                  items:
                                    type: string
                                audienceFilters:
                                  type: array
                                  description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                                  items:
                                    type: object
                                    description: FacetFilter object
                                    additionalProperties: true
                                id:
                                  type: string
                                  description: The opaque id of the pin.
                                documentId:
                                  type: string
                                  description: The document which should be a pinned result.
                                attribution:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                                updatedBy:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                                createTime:
                                  type: string
                                  format: date-time
                                updateTime:
                                  type: string
                                  format: date-time
                              required:
                                - documentId
                    type: object
                  meeting:
                    properties:
                      id:
                        type: string
                      title:
                        type: string
                      description:
                        type: string
                      url:
                        type: string
                      startTime:
                        type: string
                        format: date-time
                      endTime:
                        type: string
                        format: date-time
                      attendees:
                        properties:
                          people:
                            type: array
                            description: Full details of some of the attendees of this event
                            items:
                              required:
                                - person
                              properties:
                                isOrganizer:
                                  type: boolean
                                  description: Whether or not this attendee is an organizer.
                                isInGroup:
                                  type: boolean
                                  description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                                person:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                                groupAttendees:
                                  type: array
                                  description: If this attendee is a group, represents the list of individual attendees in the group.
                                  items:
                                    type: object
                                    description: CalendarAttendee object
                                    additionalProperties: true
                                responseStatus:
                                  type: string
                                  enum:
                                    - ACCEPTED
                                    - DECLINED
                                    - NO_RESPONSE
                                    - TENTATIVE
                              type: object
                          isLimit:
                            type: boolean
                            description: Whether the total count of the people returned is at the retrieval limit.
                          total:
                            type: integer
                            description: Total number of attendees in this event.
                          numAccepted:
                            type: integer
                            description: Total number of attendees who have accepted this event.
                          numDeclined:
                            type: integer
                            description: Total number of attendees who have declined this event.
                          numNoResponse:
                            type: integer
                            description: Total number of attendees who have not responded to this event.
                          numTentative:
                            type: integer
                            description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                        type: object
                    type: object
                  app:
                    required:
                      - datasource
                    properties:
                      datasource:
                        type: string
                        description: The app or other repository type this represents
                      docType:
                        type: string
                        description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                      mimeType:
                        type: string
                        description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                      iconUrl:
                        type: string
                        description: If there is available icon URL.
                    type: object
                  collection:
                    type: object
                    description: Flattened Collection
                    properties:
                      name:
                        type: string
                        description: The unique name of the Collection.
                      description:
                        type: string
                        description: A brief summary of the Collection's contents.
                      addedRoles:
                        type: array
                        description: A list of added user roles for the Collection.
                        items:
                          type: object
                          description: UserRoleSpecification object
                          additionalProperties: true
                      removedRoles:
                        type: array
                        description: A list of removed user roles for the Collection.
                        items:
                          type: object
                          description: UserRoleSpecification object
                          additionalProperties: true
                      audienceFilters:
                        type: array
                        description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                        items:
                          type: object
                          description: FacetFilter object
                          additionalProperties: true
                      icon:
                        type: string
                        description: The emoji icon of this Collection.
                      adminLocked:
                        type: boolean
                        description: Indicates whether edits are allowed for everyone or only admins.
                      parentId:
                        type: integer
                        description: The parent of this Collection, or 0 if it's a top-level Collection.
                      thumbnail:
                        type: object
                        description: Thumbnail object
                        additionalProperties: true
                      allowedDatasource:
                        type: string
                        description: The datasource type this Collection can hold.
                      permissions:
                        type: object
                        description: Flattened ObjectPermissions
                        properties:
                          write:
                            type: object
                            description: Describes the write permissions levels that a user has for a specific feature
                            properties:
                              scopeType:
                                type: string
                                description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                enum:
                                  - GLOBAL
                                  - OWN
                                properties: {}
                              create:
                                type: boolean
                                description: True if user has create permission for this feature and scope
                              update:
                                type: boolean
                                description: True if user has update permission for this feature and scope
                              delete:
                                type: boolean
                                description: True if user has delete permission for this feature and scope
                      id:
                        type: integer
                        description: The unique ID of the Collection.
                      createTime:
                        type: string
                        format: date-time
                      updateTime:
                        type: string
                        format: date-time
                      creator:
                        type: object
                        description: Person object
                        additionalProperties: true
                      updatedBy:
                        type: object
                        description: Person object
                        additionalProperties: true
                      itemCount:
                        type: integer
                        description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                      childCount:
                        type: integer
                        description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                      items:
                        type: array
                        description: The items in this Collection.
                        items:
                          type: object
                          description: CollectionItem object
                          additionalProperties: true
                      pinMetadata:
                        required:
                          - pinnedCategories
                          - eligibleCategoriesForPinning
                        properties:
                          existingPins:
                            type: array
                            description: List of targets this Collection is pinned to.
                            items:
                              type: object
                              description: CollectionPinTarget object
                              additionalProperties: true
                          eligiblePins:
                            type: array
                            description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                            items:
                              required:
                                - id
                                - target
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the Collection.
                                target:
                                  type: object
                                  description: CollectionPinTarget object
                                  additionalProperties: true
                              type: object
                        type: object
                      shortcuts:
                        type: array
                        description: The names of the shortcuts (Go Links) that point to this Collection.
                        items:
                          type: string
                      children:
                        type: array
                        description: The children Collections of this Collection.
                        items:
                          type: object
                          description: Collection object
                          additionalProperties: true
                      roles:
                        type: array
                        description: A list of user roles for the Collection.
                        items:
                          type: object
                          description: UserRoleSpecification object
                          additionalProperties: true
                  answerBoard:
                    type: object
                    description: PermissionedObject object
                    properties:
                      name:
                        type: string
                        description: The unique name of the Collection.
                      description:
                        type: string
                        description: A brief summary of the Collection's contents.
                      addedRoles:
                        type: array
                        description: A list of added user roles for the Collection.
                        items:
                          type: object
                          description: UserRoleSpecification object
                          additionalProperties: true
                      removedRoles:
                        type: array
                        description: A list of removed user roles for the Collection.
                        items:
                          type: object
                          description: UserRoleSpecification object
                          additionalProperties: true
                      audienceFilters:
                        type: array
                        description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                        items:
                          type: object
                          description: FacetFilter object
                          additionalProperties: true
                      id:
                        type: integer
                        description: The unique ID of the Answer Board.
                      createTime:
                        type: string
                        format: date-time
                      updateTime:
                        type: string
                        format: date-time
                      creator:
                        type: object
                        description: Person object
                        additionalProperties: true
                      updatedBy:
                        type: object
                        description: Person object
                        additionalProperties: true
                      itemCount:
                        type: integer
                        description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                      roles:
                        type: array
                        description: A list of user roles for the Answer Board.
                        items:
                          type: object
                          description: UserRoleSpecification object
                          additionalProperties: true
                    required:
                      - name
                      - id
                      - description
                  code:
                    example:
                      repoName: scio
                      fileName: README.md
                      matches:
                        - lineNumber: 1
                          content: Welcome to the beginning
                          ranges: []
                        - lineNumber: 2
                          content: Second line of the file
                          ranges: []
                        - lineNumber: 3
                          content: hello world hello world
                          ranges:
                            - startindex: 0
                              endIndex: 5
                            - startIndex: 12
                              endIndex: 17
                    properties:
                      repoName:
                        type: string
                      fileName:
                        type: string
                      fileUrl:
                        type: string
                      lines:
                        type: array
                        items:
                          properties:
                            lineNumber:
                              type: integer
                            content:
                              type: string
                            ranges:
                              type: array
                              description: Index ranges depicting matched sections of the line
                              items:
                                type: object
                                description: TextRange object
                                additionalProperties: true
                          type: object
                      isLastMatch:
                        type: boolean
                        description: Last file match for a repo
                    type: object
                  shortcut:
                    type: object
                    description: PermissionedObject object
                    properties:
                      id:
                        type: integer
                        description: The opaque id of the user generated content.
                      inputAlias:
                        type: string
                        description: Link text following go/ prefix as entered by the user.
                      destinationUrl:
                        type: string
                        description: Destination URL for the shortcut.
                      destinationDocumentId:
                        type: string
                        description: Glean Document ID for the URL, if known.
                      description:
                        type: string
                        description: A short, plain text blurb to help people understand the intent of the shortcut.
                      unlisted:
                        type: boolean
                        description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                      urlTemplate:
                        type: string
                        description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                      addedRoles:
                        type: array
                        description: A list of user roles added for the Shortcut.
                        items:
                          type: object
                          description: UserRoleSpecification object
                          additionalProperties: true
                      removedRoles:
                        type: array
                        description: A list of user roles removed for the Shortcut.
                        items:
                          type: object
                          description: UserRoleSpecification object
                          additionalProperties: true
                      createdBy:
                        type: object
                        description: Person object
                        additionalProperties: true
                      createTime:
                        type: string
                        format: date-time
                        description: The time the shortcut was created in ISO format (ISO 8601).
                      updatedBy:
                        type: object
                        description: Person object
                        additionalProperties: true
                      updateTime:
                        type: string
                        format: date-time
                        description: The time the shortcut was updated in ISO format (ISO 8601).
                      destinationDocument:
                        type: object
                        description: Document object
                        additionalProperties: true
                      intermediateUrl:
                        type: string
                        description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                      viewPrefix:
                        type: string
                        description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                      isExternal:
                        type: boolean
                        description: Indicates whether a shortcut is native or external.
                      editUrl:
                        type: string
                        description: The URL using which the user can access the edit page of the shortcut.
                      alias:
                        type: string
                        description: canonical link text following go/ prefix where hyphen/underscore is removed.
                      title:
                        type: string
                        description: Title for the Go Link
                      roles:
                        type: array
                        description: A list of user roles for the Go Link.
                        items:
                          type: object
                          description: UserRoleSpecification object
                          additionalProperties: true
                    required:
                      - inputAlias
                  querySuggestions:
                    properties:
                      suggestions:
                        type: array
                        items:
                          type: object
                          description: QuerySuggestion object
                          additionalProperties: true
                      person:
                        type: object
                        description: Person object
                        additionalProperties: true
                    type: object
                  relatedDocuments:
                    type: array
                    description: A list of documents related to this structured result.
                    items:
                      properties:
                        relation:
                          type: string
                          description: How this document relates to the including entity.
                          enum:
                            - ATTACHMENT
                            - CANONICAL
                            - CASE
                            - CONTACT
                            - CONVERSATION_MESSAGES
                            - EXPERT
                            - FROM
                            - HIGHLIGHT
                            - OPPORTUNITY
                            - RECENT
                            - SOURCE
                            - TICKET
                            - TRANSCRIPT
                            - WITH
                          x-enumDescriptions:
                            CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                        associatedEntityId:
                          type: string
                          description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                        querySuggestion:
                          type: object
                          description: QuerySuggestion object
                          additionalProperties: true
                        documents:
                          type: array
                          description: A truncated list of documents with this relation. TO BE DEPRECATED.
                          deprecated: true
                          items:
                            type: object
                            description: Document object
                            additionalProperties: true
                        results:
                          type: array
                          description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                          items:
                            type: object
                            description: SearchResult object
                            additionalProperties: true
                      type: object
                  relatedQuestion:
                    properties:
                      question:
                        type: string
                        description: The text of the related question
                      answer:
                        type: string
                        description: The answer for the related question
                      ranges:
                        type: array
                        description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                        items:
                          type: object
                          description: TextRange object
                          additionalProperties: true
                    type: object
                  disambiguation:
                    type: object
                    description: A disambiguation between multiple entities with the same name
                    properties:
                      name:
                        type: string
                        description: Name of the ambiguous entity
                      id:
                        type: string
                        description: The unique id of the entity in the knowledge graph
                      type:
                        type: string
                        description: The type of entity.
                        x-include-enum-class-prefix: true
                        enum:
                          - PERSON
                          - PROJECT
                          - CUSTOMER
                  snippets:
                    description: Any snippets associated to the populated object.
                    type: array
                    items:
                      required:
                        - snippet
                      example:
                        snippet: snippet
                        mimeType: mimeType
                      properties:
                        snippet:
                          type: string
                          description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                        mimeType:
                          type: string
                          description: The mime type of the snippets, currently either text/plain or text/html.
                        text:
                          type: string
                          description: A matching snippet from the document with no highlights.
                        snippetTextOrdering:
                          type: integer
                          description: Used for sorting based off the snippet's location within all_snippetable_text
                        ranges:
                          type: array
                          description: The bolded ranges within text.
                          items:
                            type: object
                            description: TextRange object
                            additionalProperties: true
                        url:
                          type: string
                          description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                      type: object
                  trackingToken:
                    type: string
                    description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                  prominence:
                    type: string
                    description: The level of visual distinction that should be given to a result.
                    x-enumDescriptions:
                      HERO: A high-confidence result that should feature prominently on the page.
                      PROMOTED: May not be the best result but should be given additional visual distinction.
                      STANDARD: Should not be distinct from any other results.
                    enum:
                      - HERO
                      - PROMOTED
                      - STANDARD
                  source:
                    type: string
                    description: Source context for this result. Possible values depend on the result type.
                    enum:
                      - EXPERT_DETECTION
                      - ENTITY_NLQ
                type: object
            type: object
      required:
        - text
    Thumbnail:
      type: object
      description: Thumbnail object
      additionalProperties: true
    FacetFilter:
      type: object
      description: FacetFilter object
      additionalProperties: true
    ObjectPermissions:
      type: object
      description: ObjectPermissions object
      additionalProperties: true
    RelatedDocuments:
      type: object
      description: RelatedDocuments object
      additionalProperties: true
    PersonMetadata:
      example:
        department: Movies
        email: george@example.com
        location: Hollywood, CA
        phone: 6505551234
        photoUrl: https://example.com/george.jpg
        startDate: '2000-01-23'
        title: Actor
      properties:
        type:
          type: string
          x-enumDescriptions:
            FULL_TIME: The person is a current full-time employee of the company.
            CONTRACTOR: The person is a current contractor of the company.
            NON_EMPLOYEE: The person object represents a non-human actor such as a service or admin account.
            FORMER_EMPLOYEE: The person is a previous employee of the company.
          enum:
            - FULL_TIME
            - CONTRACTOR
            - NON_EMPLOYEE
            - FORMER_EMPLOYEE
          example: FULL_TIME
        firstName:
          type: string
          description: The first name of the person
        lastName:
          type: string
          description: The last name of the person
        title:
          type: string
          description: Job title.
        businessUnit:
          type: string
          description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
        department:
          type: string
          description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
        teams:
          description: Info about the employee's team(s).
          type: array
          items:
            description: Use `id` if you index teams via Glean, and use `name` and `externalLink` if you want to use your own team pages
            properties:
              id:
                type: string
                description: Unique identifier
              name:
                type: string
                description: Team name
              externalLink:
                type: string
                format: uri
                description: Link to a team page on the internet or your company's intranet
              relationship:
                type: string
                description: The team member's relationship to the team. This defaults to MEMBER if not set.
                default: MEMBER
                enum:
                  - MEMBER
                  - MANAGER
                  - LEAD
                  - POINT_OF_CONTACT
                  - OTHER
              joinDate:
                type: string
                format: date-time
                description: The team member's start date
            type: object
        departmentCount:
          type: integer
          description: The number of people in this person's department.
        email:
          type: string
          description: The user's primary email address
        aliasEmails:
          type: array
          description: Additional email addresses of this user beyond the primary, if any.
          items:
            type: string
        location:
          type: string
          description: User facing string representing the person's location.
        structuredLocation:
          type: object
          description: Detailed location with information about country, state, city etc.
          properties:
            deskLocation:
              type: string
              description: Desk number.
            timezone:
              type: string
              description: Location's timezone, e.g. UTC, PST.
            address:
              type: string
              description: Office address or name.
            city:
              type: string
              description: Name of the city.
            state:
              type: string
              description: State code.
            region:
              type: string
              description: Region information, e.g. NORAM, APAC.
            zipCode:
              type: string
              description: ZIP Code for the address.
            country:
              type: string
              description: Country name.
            countryCode:
              type: string
              description: Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA.
        externalProfileLink:
          type: string
          description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
        manager:
          type: object
          description: Person object
          additionalProperties: true
        managementChain:
          description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
          type: array
          items:
            type: object
            description: Person object
            additionalProperties: true
        phone:
          type: string
          description: Phone number as a number string.
        timezone:
          type: string
          description: The timezone of the person. E.g. "Pacific Daylight Time".
        timezoneOffset:
          type: integer
          format: int64
          description: The offset of the person's timezone in seconds from UTC.
        photoUrl:
          type: string
          format: url
          description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
        uneditedPhotoUrl:
          type: string
          format: url
          description: The original photo URL of the person's avatar before any edits they made are applied
        bannerUrl:
          type: string
          format: url
          description: The URL of the person's banner photo.
        reports:
          type: array
          items:
            type: object
            description: Person object
            additionalProperties: true
        startDate:
          type: string
          description: The date when the employee started.
          format: date
        endDate:
          type: string
          format: date
          description: If a former employee, the last date of employment.
        bio:
          type: string
          description: Short biography or mission statement of the employee.
        pronoun:
          type: string
          description: She/her, He/his or other pronoun.
        orgSizeCount:
          type: integer
          description: The total recursive size of the people reporting to this person, or 1
        directReportsCount:
          type: integer
          description: The total number of people who directly report to this person, or 0
        preferredName:
          type: string
          description: The preferred name of the person, or a nickname.
        socialNetwork:
          description: List of social network profiles.
          type: array
          items:
            required:
              - name
              - profileUrl
            properties:
              name:
                type: string
                description: Possible values are "twitter", "linkedin".
              profileName:
                type: string
                description: Human-readable profile name.
              profileUrl:
                type: string
                format: url
                description: Link to profile.
            type: object
        datasourceProfile:
          type: array
          description: List of profiles this user has in different datasources / tools that they use.
          items:
            required:
              - datasource
              - handle
            properties:
              datasource:
                type: string
                example: github
                description: The datasource the profile is of.
              handle:
                type: string
                description: The display name of the entity in the given datasource.
              url:
                type: string
                description: URL to view the entity's profile.
              nativeAppUrl:
                type: string
                description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
              isUserGenerated:
                type: boolean
                description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
            type: object
        querySuggestions:
          type: object
          description: QuerySuggestionList object
          additionalProperties: true
        peopleDistance:
          type: array
          description: List of people and distances to those people from this person. Optionally with metadata.
          items:
            required:
              - name
              - obfuscatedId
              - distance
            properties:
              name:
                type: string
                description: The display name.
              obfuscatedId:
                type: string
                description: An opaque identifier that can be used to request metadata for a Person.
              distance:
                type: number
                format: float
                description: Distance to person, refer to PeopleDistance pipeline on interpretation of the value.
            type: object
        inviteInfo:
          type: object
          description: InviteInfo object
        isSignedUp:
          type: boolean
          description: Whether the user has signed into Glean at least once.
        lastExtensionUse:
          type: string
          format: date-time
          description: The last time the user has used the Glean extension in ISO 8601 format.
        permissions:
          description: |-
            Describes the permissions levels that a user has for permissioned features. When the client sends this, Permissions.read and Permissions.write are the additional permissions granted to a user on top of what they have via their roles.
            When the server sends this, Permissions.read and Permissions.write are the complete (merged) set of permissions the user has, and Permissions.roles is just for display purposes.
          properties:
            canAdminSearch:
              type: boolean
              description: TODO--deprecate in favor of the read and write properties. True if the user has access to /adminsearch
            canAdminClientApiGlobalTokens:
              type: boolean
              description: TODO--deprecate in favor of the read and write properties. True if the user can administrate client API tokens with global scope
            canDlp:
              type: boolean
              description: TODO--deprecate in favor of the read and write properties. True if the user has access to data loss prevention (DLP) features
            read:
              description: Describes the read permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
              additionalProperties:
                type: array
                description: List of read permissions (for different scopes but same feature)
                items:
                  $ref: '#/components/schemas/ReadPermission'
            write:
              description: Describes the write permissions levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
              additionalProperties:
                type: array
                description: List of write permissions (for different scopes but same feature)
                items:
                  $ref: '#/components/schemas/WritePermission'
            grant:
              description: Describes the grant permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
              additionalProperties:
                type: array
                description: List of grant permissions (for different scopes but same feature)
                items:
                  $ref: '#/components/schemas/GrantPermission'
            role:
              type: string
              description: The roleId of the canonical role a user has. The displayName is equal to the roleId.
            roles:
              type: array
              description: The roleIds of the roles a user has.
              items:
                type: string
          type: object
        customFields:
          type: array
          description: User customizable fields for additional people information.
          items:
            required:
              - label
              - values
              - displayable
            properties:
              label:
                type: string
                description: A user-facing label for this field.
              values:
                type: array
                items:
                  oneOf:
                    - properties:
                        strText:
                          type: string
                          description: Text field for string value.
                      type: object
                    - properties:
                        urlAnchor:
                          type: string
                          description: Anchor text for hyperlink.
                        urlLink:
                          type: string
                          description: Link for this URL.
                      type: object
                    - properties:
                        person:
                          type: object
                          description: Person object
                          additionalProperties: true
                      type: object
              displayable:
                type: boolean
                description: Determines whether the client should display this custom field
                default: true
            type: object
        loggingId:
          type: string
          description: The logging id of the person used in scrubbed logs, tracking GA metrics.
        startDatePercentile:
          type: number
          format: float
          description: Percentage of the company that started strictly after this person. Between [0,100).
        busyEvents:
          type: array
          description: Intervals of busy time for this person, along with the type of event they're busy with.
          items:
            description: A generic, light-weight calendar event.
            type: object
            properties:
              time:
                required:
                  - start
                  - end
                properties:
                  start:
                    type: string
                    description: The RFC3339 timestamp formatted start time of this event.
                  end:
                    type: string
                    description: The RFC3339 timestamp formatted end time of this event.
                type: object
              eventType:
                description: The nature of the event, for example "out of office".
                type: string
                enum:
                  - DEFAULT
                  - OUT_OF_OFFICE
        profileBoolSettings:
          type: object
          additionalProperties:
            type: boolean
          description: flag settings to indicate user profile settings for certain items
        badges:
          type: array
          description: The badges that a user has earned over their lifetime.
          items:
            type: object
            description: Displays a user's accomplishment or milestone
            example:
              key: deployment_name_new_hire
              displayName: New hire
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
            properties:
              key:
                type: string
                description: An auto generated unique identifier.
              displayName:
                type: string
                description: The badge name displayed to users
              iconConfig:
                description: Defines how to render an icon
                example:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                properties:
                  generatedBackgroundColorKey:
                    type: string
                  backgroundColor:
                    type: string
                  color:
                    type: string
                  key:
                    type: string
                  iconType:
                    enum:
                      - COLLECTION
                      - CUSTOM
                      - DATASOURCE
                      - DATASOURCE_INSTANCE
                      - FAVICON
                      - FILE_TYPE
                      - GENERATED_BACKGROUND
                      - GLYPH
                      - MIME_TYPE
                      - NO_ICON
                      - PERSON
                      - REACTIONS
                      - URL
                  masked:
                    type: boolean
                    description: Whether the icon should be masked based on current theme.
                  name:
                    type: string
                    description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
                  url:
                    type: string
                    description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
                type: object
              pinned:
                type: boolean
                description: The badge should be shown on the PersonAttribution
        isOrgRoot:
          type: boolean
          description: Whether this person is a "root" node in their organization's hierarchy.
      type: object
    ConnectorType:
      type: object
      description: ConnectorType object
      additionalProperties: true
    DocumentContent:
      type: object
      description: DocumentContent object
      additionalProperties: true
    DocumentMetadata:
      example:
        container: container
        parentId: JIRA_EN-1337
        createTime: '2000-01-23T04:56:07.000Z'
        datasource: datasource
        author:
          name: name
        documentId: documentId
        updateTime: '2000-01-23T04:56:07.000Z'
        mimeType: mimeType
        objectType: Feature Request
        components:
          - Backend
          - Networking
        status:
          - Done
        customData:
          someCustomField: someCustomValue
      properties:
        datasource:
          type: string
        datasourceInstance:
          type: string
          description: The datasource instance from which the document was extracted.
        objectType:
          type: string
          description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
        container:
          type: string
          description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
        containerId:
          type: string
          description: The Glean Document ID of the container. Uniquely identifies the container.
        superContainerId:
          type: string
          description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
        parentId:
          type: string
          description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
        mimeType:
          type: string
        documentId:
          type: string
          description: The index-wide unique identifier.
        loggingId:
          type: string
          description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
        documentIdHash:
          type: string
          description: Hash of the Glean Document ID.
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        author:
          type: object
          description: Person object
          additionalProperties: true
        owner:
          type: object
          description: Person object
          additionalProperties: true
        mentionedPeople:
          type: array
          description: A list of people mentioned in the document.
          items:
            type: object
            description: Person object
            additionalProperties: true
        visibility:
          type: string
          description: The level of visibility of the document as understood by our system.
          x-enumDescriptions:
            PRIVATE: Only one person is able to see the document.
            SPECIFIC_PEOPLE_AND_GROUPS: Only specific people and/or groups can see the document.
            DOMAIN_LINK: Anyone in the domain with the link can see the document.
            DOMAIN_VISIBLE: Anyone in the domain can search for the document.
            PUBLIC_LINK: Anyone with the link can see the document.
            PUBLIC_VISIBLE: Anyone on the internet can search for the document.
          enum:
            - PRIVATE
            - SPECIFIC_PEOPLE_AND_GROUPS
            - DOMAIN_LINK
            - DOMAIN_VISIBLE
            - PUBLIC_LINK
            - PUBLIC_VISIBLE
        components:
          type: array
          description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
          items:
            type: string
        status:
          type: string
          description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
        statusCategory:
          type: string
          description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
        pins:
          type: array
          description: A list of stars associated with this result.  "Pin" is an older name.
          items:
            type: object
            properties:
              queries:
                type: array
                description: The query strings for which the pinned result will show.
                items:
                  type: string
              audienceFilters:
                type: array
                description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                items:
                  type: object
                  description: FacetFilter object
                  additionalProperties: true
              id:
                type: string
                description: The opaque id of the pin.
              documentId:
                type: string
                description: The document which should be a pinned result.
              attribution:
                type: object
                description: Person object
                additionalProperties: true
              updatedBy:
                type: object
                description: Person object
                additionalProperties: true
              createTime:
                type: string
                format: date-time
              updateTime:
                type: string
                format: date-time
            required:
              - documentId
        priority:
          type: string
          description: The document priority. Interpretation is datasource specific.
        assignedTo:
          type: object
          description: Person object
          additionalProperties: true
        updatedBy:
          type: object
          description: Person object
          additionalProperties: true
        labels:
          type: array
          description: A list of tags for the document. Interpretation is datasource specific.
          items:
            type: string
        collections:
          type: array
          description: A list of collections that the document belongs to.
          items:
            type: object
            description: Collection object
            additionalProperties: true
        datasourceId:
          type: string
          description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
        interactions:
          properties:
            numComments:
              type: integer
              description: The count of comments (thread replies in the case of slack).
            numReactions:
              type: integer
              description: The count of reactions on the document.
            reactions:
              type: array
              description: To be deprecated in favor of reacts. A (potentially non-exhaustive) list of reactions for the document.
              deprecated: true
              items:
                type: string
            reacts:
              type: array
              items:
                properties:
                  type:
                    type: string
                  count:
                    type: integer
                    description: The count of the reaction type on the document.
                  reactors:
                    type: array
                    items:
                      type: object
                      description: Person object
                      additionalProperties: true
                  reactedByViewer:
                    type: boolean
                    description: Whether the user in context reacted with this type to the document.
                type: object
            shares:
              type: array
              description: Describes instances of someone posting a link to this document in one of our indexed datasources.
              items:
                description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
                required:
                  - numDaysAgo
                properties:
                  numDaysAgo:
                    type: integer
                    description: The number of days that has passed since the share happened
                  sharer:
                    type: object
                    description: Person object
                    additionalProperties: true
                  sharingDocument:
                    type: object
                    description: Document object
                    additionalProperties: true
                type: object
            visitorCount:
              required:
                - count
              properties:
                count:
                  type: integer
                  description: The counter value
                period:
                  properties:
                    minDaysFromNow:
                      type: integer
                      description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                      deprecated: true
                    maxDaysFromNow:
                      type: integer
                      description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                      deprecated: true
                    start:
                      type: object
                      description: TimePoint object
                      additionalProperties: true
                    end:
                      type: object
                      description: TimePoint object
                      additionalProperties: true
                  type: object
                org:
                  type: string
                  description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
              type: object
          type: object
        verification:
          required:
            - state
          properties:
            state:
              type: string
              enum:
                - UNVERIFIED
                - VERIFIED
                - DEPRECATED
              description: The verification state for the document.
            metadata:
              required:
                - documentId
              properties:
                lastVerifier:
                  type: object
                  description: Person object
                  additionalProperties: true
                lastVerificationTs:
                  type: integer
                  description: The unix timestamp of the verification (in seconds since epoch UTC).
                expirationTs:
                  type: integer
                  description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
                document:
                  type: object
                  description: Document object
                  additionalProperties: true
                reminders:
                  type: array
                  description: Info about all outstanding verification reminders for the document if exists.
                  items:
                    type: object
                    description: Reminder object
                    additionalProperties: true
                lastReminder:
                  type: object
                  description: Reminder object
                  additionalProperties: true
                visitorCount:
                  type: array
                  description: Number of visitors to the document during included time periods.
                  items:
                    required:
                      - count
                    properties:
                      count:
                        type: integer
                        description: The counter value
                      period:
                        properties:
                          minDaysFromNow:
                            type: integer
                            description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                            deprecated: true
                          maxDaysFromNow:
                            type: integer
                            description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                            deprecated: true
                          start:
                            type: object
                            description: TimePoint object
                            additionalProperties: true
                          end:
                            type: object
                            description: TimePoint object
                            additionalProperties: true
                        type: object
                      org:
                        type: string
                        description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                    type: object
                candidateVerifiers:
                  type: array
                  description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
                  items:
                    type: object
                    description: Person object
                    additionalProperties: true
              type: object
          type: object
        viewerInfo:
          properties:
            role:
              type: string
              enum:
                - ANSWER_MODERATOR
                - OWNER
                - VIEWER
              description: DEPRECATED - use permissions instead. Viewer's role on the specific document.
              deprecated: true
            lastViewedTime:
              type: string
              format: date-time
          type: object
        permissions:
          type: object
          description: ObjectPermissions object
          additionalProperties: true
        visitCount:
          required:
            - count
          properties:
            count:
              type: integer
              description: The counter value
            period:
              properties:
                minDaysFromNow:
                  type: integer
                  description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                  deprecated: true
                maxDaysFromNow:
                  type: integer
                  description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                  deprecated: true
                start:
                  type: object
                  description: TimePoint object
                  additionalProperties: true
                end:
                  type: object
                  description: TimePoint object
                  additionalProperties: true
              type: object
            org:
              type: string
              description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
          type: object
        shortcuts:
          type: array
          description: A list of shortcuts of which destination URL is for the document.
          items:
            type: object
            description: PermissionedObject object
            properties:
              id:
                type: integer
                description: The opaque id of the user generated content.
              inputAlias:
                type: string
                description: Link text following go/ prefix as entered by the user.
              destinationUrl:
                type: string
                description: Destination URL for the shortcut.
              destinationDocumentId:
                type: string
                description: Glean Document ID for the URL, if known.
              description:
                type: string
                description: A short, plain text blurb to help people understand the intent of the shortcut.
              unlisted:
                type: boolean
                description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
              urlTemplate:
                type: string
                description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
              addedRoles:
                type: array
                description: A list of user roles added for the Shortcut.
                items:
                  type: object
                  description: UserRoleSpecification object
                  additionalProperties: true
              removedRoles:
                type: array
                description: A list of user roles removed for the Shortcut.
                items:
                  type: object
                  description: UserRoleSpecification object
                  additionalProperties: true
              createdBy:
                type: object
                description: Person object
                additionalProperties: true
              createTime:
                type: string
                format: date-time
                description: The time the shortcut was created in ISO format (ISO 8601).
              updatedBy:
                type: object
                description: Person object
                additionalProperties: true
              updateTime:
                type: string
                format: date-time
                description: The time the shortcut was updated in ISO format (ISO 8601).
              destinationDocument:
                type: object
                description: Document object
                additionalProperties: true
              intermediateUrl:
                type: string
                description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
              viewPrefix:
                type: string
                description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
              isExternal:
                type: boolean
                description: Indicates whether a shortcut is native or external.
              editUrl:
                type: string
                description: The URL using which the user can access the edit page of the shortcut.
              alias:
                type: string
                description: canonical link text following go/ prefix where hyphen/underscore is removed.
              title:
                type: string
                description: Title for the Go Link
              roles:
                type: array
                description: A list of user roles for the Go Link.
                items:
                  type: object
                  description: UserRoleSpecification object
                  additionalProperties: true
            required:
              - inputAlias
        path:
          type: string
          description: For file datasources like onedrive/github etc this has the path to the file
        customData:
          type: object
          description: CustomData object
          additionalProperties: true
        documentCategory:
          type: string
          description: The document's document_category(.proto).
        contactPerson:
          type: object
          description: Person object
          additionalProperties: true
        thumbnail:
          type: object
          description: Thumbnail object
          additionalProperties: true
        indexStatus:
          properties:
            lastCrawledTime:
              description: When the document was last crawled
              type: string
              format: date-time
            lastIndexedTime:
              description: When the document was last indexed
              type: string
              format: date-time
          type: object
        ancestors:
          type: array
          description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
          items:
            type: object
            description: Document object
            additionalProperties: true
      type: object
    DocumentSection:
      type: object
      description: DocumentSection object
      additionalProperties: true
    StructuredTextMutableProperties:
      required:
        - text
      properties:
        text:
          type: string
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
      type: object
    StructuredTextItem:
      properties:
        link:
          type: string
          example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
        document:
          type: object
          description: Document object
          additionalProperties: true
        text:
          type: string
          example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
        structuredResult:
          type: object
          description: StructuredResult object
          additionalProperties: true
      type: object
    FacetFilterValue:
      type: object
      description: FacetFilterValue object
      additionalProperties: true
    WritePermission:
      type: object
      description: WritePermission object
      additionalProperties: true
    QuerySuggestion:
      type: object
      description: QuerySuggestion object
      additionalProperties: true
    SearchResult:
      type: object
      description: Flattened SearchResult
      example:
        snippets:
          - snippet: snippet
            mimeType: mimeType
        metadata:
          container: container
          createTime: '2000-01-23T04:56:07.000Z'
          datasource: datasource
          author:
            name: name
          documentId: documentId
          updateTime: '2000-01-23T04:56:07.000Z'
          mimeType: mimeType
          objectType: objectType
        title: title
        url: https://example.com/foo/bar
        nativeAppUrl: slack://foo/bar
        mustIncludeSuggestions:
          - missingTerm: container
            query: container
      properties:
        structuredResults:
          type: array
          description: An array of entities in the work graph retrieved via a data request.
          items:
            type: object
            description: StructuredResult object
            additionalProperties: true
        trackingToken:
          type: string
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
        document:
          type: object
          description: Document object
          additionalProperties: true
        title:
          type: string
        url:
          type: string
        nativeAppUrl:
          type: string
          description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
        snippets:
          type: array
          description: Text content from the result document which contains search query terms, if available.
          items:
            type: object
            description: SearchResultSnippet object
            additionalProperties: true
        fullText:
          type: string
          description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
        fullTextList:
          type: array
          description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
          items:
            type: string
        relatedResults:
          type: array
          description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
          items:
            type: object
            description: RelatedDocuments object
            additionalProperties: true
        clusteredResults:
          type: array
          description: A list of results that should be displayed as associated with this result.
          items:
            type: object
            description: SearchResult object
            additionalProperties: true
        allClusteredResults:
          type: array
          description: A list of results that should be displayed as associated with this result.
          items:
            type: object
            description: ClusterGroup object
            additionalProperties: true
        attachmentCount:
          type: integer
          description: The total number of attachments.
        attachments:
          type: array
          description: A (potentially partial) list of results representing documents attached to the main result document.
          items:
            type: object
            description: SearchResult object
            additionalProperties: true
        backlinkResults:
          type: array
          description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
          items:
            type: object
            description: SearchResult object
            additionalProperties: true
        clusterType:
          type: string
          description: The reason for inclusion of clusteredResults.
          enum:
            - SIMILAR
            - FRESHNESS
            - TITLE
            - CONTENT
            - NONE
            - THREAD_REPLY
            - THREAD_ROOT
            - PREFIX
            - SUFFIX
        mustIncludeSuggestions:
          type: object
          description: QuerySuggestionList object
          additionalProperties: true
        querySuggestion:
          type: object
          description: QuerySuggestion object
          additionalProperties: true
        prominence:
          type: string
          description: |
            The level of visual distinction that should be given to a result.
          x-enumDescriptions:
            HERO: A high-confidence result that should feature prominently on the page.
            PROMOTED: May not be the best result but should be given additional visual distinction.
            STANDARD: Should not be distinct from any other results.
          enum:
            - HERO
            - PROMOTED
            - STANDARD
        attachmentContext:
          type: string
          description: Additional context for the relationship between the result and the document it's attached to.
        pins:
          type: array
          description: A list of pins associated with this search result.
          items:
            type: object
            properties:
              queries:
                type: array
                description: The query strings for which the pinned result will show.
                items:
                  type: string
              audienceFilters:
                type: array
                description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                items:
                  type: object
                  description: FacetFilter object
                  additionalProperties: true
              id:
                type: string
                description: The opaque id of the pin.
              documentId:
                type: string
                description: The document which should be a pinned result.
              attribution:
                type: object
                description: Person object
                additionalProperties: true
              updatedBy:
                type: object
                description: Person object
                additionalProperties: true
              createTime:
                type: string
                format: date-time
              updateTime:
                type: string
                format: date-time
            required:
              - documentId
    PersonTeam:
      description: Use `id` if you index teams via Glean, and use `name` and `externalLink` if you want to use your own team pages
      properties:
        id:
          type: string
          description: Unique identifier
        name:
          type: string
          description: Team name
        externalLink:
          type: string
          format: uri
          description: Link to a team page on the internet or your company's intranet
        relationship:
          type: string
          description: The team member's relationship to the team. This defaults to MEMBER if not set.
          default: MEMBER
          enum:
            - MEMBER
            - MANAGER
            - LEAD
            - POINT_OF_CONTACT
            - OTHER
        joinDate:
          type: string
          format: date-time
          description: The team member's start date
      type: object
    StructuredLocation:
      type: object
      description: Detailed location with information about country, state, city etc.
      properties:
        deskLocation:
          type: string
          description: Desk number.
        timezone:
          type: string
          description: Location's timezone, e.g. UTC, PST.
        address:
          type: string
          description: Office address or name.
        city:
          type: string
          description: Name of the city.
        state:
          type: string
          description: State code.
        region:
          type: string
          description: Region information, e.g. NORAM, APAC.
        zipCode:
          type: string
          description: ZIP Code for the address.
        country:
          type: string
          description: Country name.
        countryCode:
          type: string
          description: Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA.
    SocialNetwork:
      required:
        - name
        - profileUrl
      properties:
        name:
          type: string
          description: Possible values are "twitter", "linkedin".
        profileName:
          type: string
          description: Human-readable profile name.
        profileUrl:
          type: string
          format: url
          description: Link to profile.
      type: object
    DatasourceProfile:
      required:
        - datasource
        - handle
      properties:
        datasource:
          type: string
          example: github
          description: The datasource the profile is of.
        handle:
          type: string
          description: The display name of the entity in the given datasource.
        url:
          type: string
          description: URL to view the entity's profile.
        nativeAppUrl:
          type: string
          description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
        isUserGenerated:
          type: boolean
          description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
      type: object
    QuerySuggestionList:
      type: object
      description: QuerySuggestionList object
      additionalProperties: true
    PersonDistance:
      required:
        - name
        - obfuscatedId
        - distance
      properties:
        name:
          type: string
          description: The display name.
        obfuscatedId:
          type: string
          description: An opaque identifier that can be used to request metadata for a Person.
        distance:
          type: number
          format: float
          description: Distance to person, refer to PeopleDistance pipeline on interpretation of the value.
      type: object
    InviteInfo:
      description: Information regarding the invite status of a person.
      properties:
        signUpTime:
          type: string
          format: date-time
          description: The time this person signed up in ISO format (ISO 8601).
        invites:
          type: array
          description: Latest invites received by the user for each channel
          items:
            description: Information regarding the invite status of a person for a particular channel.
            properties:
              channel:
                type: string
                enum:
                  - COMMUNICATION_CHANNEL_EMAIL
                  - COMMUNICATION_CHANNEL_SLACK
              isAutoInvite:
                description: Bit that tracks if this invite was automatically sent or user-sent
                type: boolean
              inviter:
                type: object
                description: Person object
                additionalProperties: true
              inviteTime:
                type: string
                format: date-time
                description: The time this person was invited in ISO format (ISO 8601).
              reminderTime:
                type: string
                format: date-time
                description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
            type: object
        inviter:
          type: object
          description: Person object
          additionalProperties: true
        inviteTime:
          deprecated: true
          type: string
          format: date-time
          description: The time this person was invited in ISO format (ISO 8601).
        reminderTime:
          deprecated: true
          type: string
          format: date-time
          description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
      type: object
    Permissions:
      description: |-
        Describes the permissions levels that a user has for permissioned features. When the client sends this, Permissions.read and Permissions.write are the additional permissions granted to a user on top of what they have via their roles.
        When the server sends this, Permissions.read and Permissions.write are the complete (merged) set of permissions the user has, and Permissions.roles is just for display purposes.
      properties:
        canAdminSearch:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user has access to /adminsearch
        canAdminClientApiGlobalTokens:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user can administrate client API tokens with global scope
        canDlp:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user has access to data loss prevention (DLP) features
        read:
          description: Describes the read permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
          additionalProperties:
            type: array
            description: List of read permissions (for different scopes but same feature)
            items:
              $ref: '#/components/schemas/ReadPermission'
        write:
          description: Describes the write permissions levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
          additionalProperties:
            type: array
            description: List of write permissions (for different scopes but same feature)
            items:
              $ref: '#/components/schemas/WritePermission'
        grant:
          description: Describes the grant permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
          additionalProperties:
            type: array
            description: List of grant permissions (for different scopes but same feature)
            items:
              $ref: '#/components/schemas/GrantPermission'
        role:
          type: string
          description: The roleId of the canonical role a user has. The displayName is equal to the roleId.
        roles:
          type: array
          description: The roleIds of the roles a user has.
          items:
            type: string
      type: object
    CustomFieldData:
      required:
        - label
        - values
        - displayable
      properties:
        label:
          type: string
          description: A user-facing label for this field.
        values:
          type: array
          items:
            oneOf:
              - properties:
                  strText:
                    type: string
                    description: Text field for string value.
                type: object
              - properties:
                  urlAnchor:
                    type: string
                    description: Anchor text for hyperlink.
                  urlLink:
                    type: string
                    description: Link for this URL.
                type: object
              - properties:
                  person:
                    type: object
                    description: Person object
                    additionalProperties: true
                type: object
        displayable:
          type: boolean
          description: Determines whether the client should display this custom field
          default: true
      type: object
    AnonymousEvent:
      description: A generic, light-weight calendar event.
      type: object
      properties:
        time:
          required:
            - start
            - end
          properties:
            start:
              type: string
              description: The RFC3339 timestamp formatted start time of this event.
            end:
              type: string
              description: The RFC3339 timestamp formatted end time of this event.
          type: object
        eventType:
          description: The nature of the event, for example "out of office".
          type: string
          enum:
            - DEFAULT
            - OUT_OF_OFFICE
    Badge:
      type: object
      description: Displays a user's accomplishment or milestone
      example:
        key: deployment_name_new_hire
        displayName: New hire
        iconConfig:
          color: '#343CED'
          key: person_icon
          iconType: GLYPH
          name: user
      properties:
        key:
          type: string
          description: An auto generated unique identifier.
        displayName:
          type: string
          description: The badge name displayed to users
        iconConfig:
          description: Defines how to render an icon
          example:
            color: '#343CED'
            key: person_icon
            iconType: GLYPH
            name: user
          properties:
            generatedBackgroundColorKey:
              type: string
            backgroundColor:
              type: string
            color:
              type: string
            key:
              type: string
            iconType:
              enum:
                - COLLECTION
                - CUSTOM
                - DATASOURCE
                - DATASOURCE_INSTANCE
                - FAVICON
                - FILE_TYPE
                - GENERATED_BACKGROUND
                - GLYPH
                - MIME_TYPE
                - NO_ICON
                - PERSON
                - REACTIONS
                - URL
            masked:
              type: boolean
              description: Whether the icon should be masked based on current theme.
            name:
              type: string
              description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
            url:
              type: string
              description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
          type: object
        pinned:
          type: boolean
          description: The badge should be shown on the PersonAttribution
    DocumentVisibility:
      type: string
      description: The level of visibility of the document as understood by our system.
      x-enumDescriptions:
        PRIVATE: Only one person is able to see the document.
        SPECIFIC_PEOPLE_AND_GROUPS: Only specific people and/or groups can see the document.
        DOMAIN_LINK: Anyone in the domain with the link can see the document.
        DOMAIN_VISIBLE: Anyone in the domain can search for the document.
        PUBLIC_LINK: Anyone with the link can see the document.
        PUBLIC_VISIBLE: Anyone on the internet can search for the document.
      enum:
        - PRIVATE
        - SPECIFIC_PEOPLE_AND_GROUPS
        - DOMAIN_LINK
        - DOMAIN_VISIBLE
        - PUBLIC_LINK
        - PUBLIC_VISIBLE
    PinDocument:
      type: object
      properties:
        queries:
          type: array
          description: The query strings for which the pinned result will show.
          items:
            type: string
        audienceFilters:
          type: array
          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
        id:
          type: string
          description: The opaque id of the pin.
        documentId:
          type: string
          description: The document which should be a pinned result.
        attribution:
          type: object
          description: Person object
          additionalProperties: true
        updatedBy:
          type: object
          description: Person object
          additionalProperties: true
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
      required:
        - documentId
    Collection:
      type: object
      description: Collection object
      additionalProperties: true
    DocumentInteractions:
      properties:
        numComments:
          type: integer
          description: The count of comments (thread replies in the case of slack).
        numReactions:
          type: integer
          description: The count of reactions on the document.
        reactions:
          type: array
          description: To be deprecated in favor of reacts. A (potentially non-exhaustive) list of reactions for the document.
          deprecated: true
          items:
            type: string
        reacts:
          type: array
          items:
            properties:
              type:
                type: string
              count:
                type: integer
                description: The count of the reaction type on the document.
              reactors:
                type: array
                items:
                  type: object
                  description: Person object
                  additionalProperties: true
              reactedByViewer:
                type: boolean
                description: Whether the user in context reacted with this type to the document.
            type: object
        shares:
          type: array
          description: Describes instances of someone posting a link to this document in one of our indexed datasources.
          items:
            description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
            required:
              - numDaysAgo
            properties:
              numDaysAgo:
                type: integer
                description: The number of days that has passed since the share happened
              sharer:
                type: object
                description: Person object
                additionalProperties: true
              sharingDocument:
                type: object
                description: Document object
                additionalProperties: true
            type: object
        visitorCount:
          required:
            - count
          properties:
            count:
              type: integer
              description: The counter value
            period:
              properties:
                minDaysFromNow:
                  type: integer
                  description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                  deprecated: true
                maxDaysFromNow:
                  type: integer
                  description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                  deprecated: true
                start:
                  type: object
                  description: TimePoint object
                  additionalProperties: true
                end:
                  type: object
                  description: TimePoint object
                  additionalProperties: true
              type: object
            org:
              type: string
              description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
          type: object
      type: object
    Verification:
      required:
        - state
      properties:
        state:
          type: string
          enum:
            - UNVERIFIED
            - VERIFIED
            - DEPRECATED
          description: The verification state for the document.
        metadata:
          required:
            - documentId
          properties:
            lastVerifier:
              type: object
              description: Person object
              additionalProperties: true
            lastVerificationTs:
              type: integer
              description: The unix timestamp of the verification (in seconds since epoch UTC).
            expirationTs:
              type: integer
              description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
            document:
              type: object
              description: Document object
              additionalProperties: true
            reminders:
              type: array
              description: Info about all outstanding verification reminders for the document if exists.
              items:
                type: object
                description: Reminder object
                additionalProperties: true
            lastReminder:
              type: object
              description: Reminder object
              additionalProperties: true
            visitorCount:
              type: array
              description: Number of visitors to the document during included time periods.
              items:
                required:
                  - count
                properties:
                  count:
                    type: integer
                    description: The counter value
                  period:
                    properties:
                      minDaysFromNow:
                        type: integer
                        description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                        deprecated: true
                      maxDaysFromNow:
                        type: integer
                        description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                        deprecated: true
                      start:
                        type: object
                        description: TimePoint object
                        additionalProperties: true
                      end:
                        type: object
                        description: TimePoint object
                        additionalProperties: true
                    type: object
                  org:
                    type: string
                    description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                type: object
            candidateVerifiers:
              type: array
              description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
              items:
                type: object
                description: Person object
                additionalProperties: true
          type: object
      type: object
    ViewerInfo:
      properties:
        role:
          type: string
          enum:
            - ANSWER_MODERATOR
            - OWNER
            - VIEWER
          description: DEPRECATED - use permissions instead. Viewer's role on the specific document.
          deprecated: true
        lastViewedTime:
          type: string
          format: date-time
      type: object
    CountInfo:
      type: object
      description: CountInfo object
      additionalProperties: true
    Shortcut:
      type: object
      description: PermissionedObject object
      properties:
        id:
          type: integer
          description: The opaque id of the user generated content.
        inputAlias:
          type: string
          description: Link text following go/ prefix as entered by the user.
        destinationUrl:
          type: string
          description: Destination URL for the shortcut.
        destinationDocumentId:
          type: string
          description: Glean Document ID for the URL, if known.
        description:
          type: string
          description: A short, plain text blurb to help people understand the intent of the shortcut.
        unlisted:
          type: boolean
          description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
        urlTemplate:
          type: string
          description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
        addedRoles:
          type: array
          description: A list of user roles added for the Shortcut.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        removedRoles:
          type: array
          description: A list of user roles removed for the Shortcut.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        createdBy:
          type: object
          description: Person object
          additionalProperties: true
        createTime:
          type: string
          format: date-time
          description: The time the shortcut was created in ISO format (ISO 8601).
        updatedBy:
          type: object
          description: Person object
          additionalProperties: true
        updateTime:
          type: string
          format: date-time
          description: The time the shortcut was updated in ISO format (ISO 8601).
        destinationDocument:
          type: object
          description: Document object
          additionalProperties: true
        intermediateUrl:
          type: string
          description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
        viewPrefix:
          type: string
          description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
        isExternal:
          type: boolean
          description: Indicates whether a shortcut is native or external.
        editUrl:
          type: string
          description: The URL using which the user can access the edit page of the shortcut.
        alias:
          type: string
          description: canonical link text following go/ prefix where hyphen/underscore is removed.
        title:
          type: string
          description: Title for the Go Link
        roles:
          type: array
          description: A list of user roles for the Go Link.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
      required:
        - inputAlias
    CustomData:
      type: object
      description: CustomData object
      additionalProperties: true
    IndexStatus:
      properties:
        lastCrawledTime:
          description: When the document was last crawled
          type: string
          format: date-time
        lastIndexedTime:
          description: When the document was last indexed
          type: string
          format: date-time
      type: object
    StructuredResult:
      type: object
      description: StructuredResult object
      additionalProperties: true
    ScopeType:
      type: object
      description: ScopeType object
      additionalProperties: true
    SearchProviderInfo:
      type: object
      description: SearchProviderInfo object
      additionalProperties: true
    SearchRequestOptions:
      type: object
      description: SearchRequestOptions object
      additionalProperties: true
    TextRange:
      type: object
      description: TextRange object
      additionalProperties: true
    SearchRequestInputDetails:
      type: object
      description: SearchRequestInputDetails object
      additionalProperties: true
    Result:
      properties:
        structuredResults:
          type: array
          description: An array of entities in the work graph retrieved via a data request.
          items:
            type: object
            description: StructuredResult object
            additionalProperties: true
        trackingToken:
          type: string
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
      type: object
    SearchResultSnippet:
      type: object
      description: SearchResultSnippet object
      additionalProperties: true
    ClusterGroup:
      required:
        - visibleCountHint
      properties:
        clusteredResults:
          type: array
          description: A list of results that should be displayed as associated with this result.
          items:
            type: object
            description: Flattened SearchResult
            example:
              snippets:
                - snippet: snippet
                  mimeType: mimeType
              metadata:
                container: container
                createTime: '2000-01-23T04:56:07.000Z'
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: '2000-01-23T04:56:07.000Z'
                mimeType: mimeType
                objectType: objectType
              title: title
              url: https://example.com/foo/bar
              nativeAppUrl: slack://foo/bar
              mustIncludeSuggestions:
                - missingTerm: container
                  query: container
            properties:
              structuredResults:
                type: array
                description: An array of entities in the work graph retrieved via a data request.
                items:
                  type: object
                  description: StructuredResult object
                  additionalProperties: true
              trackingToken:
                type: string
                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
              document:
                type: object
                description: Document object
                additionalProperties: true
              title:
                type: string
              url:
                type: string
              nativeAppUrl:
                type: string
                description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
              snippets:
                type: array
                description: Text content from the result document which contains search query terms, if available.
                items:
                  type: object
                  description: SearchResultSnippet object
                  additionalProperties: true
              fullText:
                type: string
                description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
              fullTextList:
                type: array
                description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                items:
                  type: string
              relatedResults:
                type: array
                description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                items:
                  type: object
                  description: RelatedDocuments object
                  additionalProperties: true
              clusteredResults:
                type: array
                description: A list of results that should be displayed as associated with this result.
                items:
                  type: object
                  description: SearchResult object
                  additionalProperties: true
              allClusteredResults:
                type: array
                description: A list of results that should be displayed as associated with this result.
                items:
                  type: object
                  description: ClusterGroup object
                  additionalProperties: true
              attachmentCount:
                type: integer
                description: The total number of attachments.
              attachments:
                type: array
                description: A (potentially partial) list of results representing documents attached to the main result document.
                items:
                  type: object
                  description: SearchResult object
                  additionalProperties: true
              backlinkResults:
                type: array
                description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                items:
                  type: object
                  description: SearchResult object
                  additionalProperties: true
              clusterType:
                type: string
                description: The reason for inclusion of clusteredResults.
                enum:
                  - SIMILAR
                  - FRESHNESS
                  - TITLE
                  - CONTENT
                  - NONE
                  - THREAD_REPLY
                  - THREAD_ROOT
                  - PREFIX
                  - SUFFIX
              mustIncludeSuggestions:
                type: object
                description: QuerySuggestionList object
                additionalProperties: true
              querySuggestion:
                type: object
                description: QuerySuggestion object
                additionalProperties: true
              prominence:
                type: string
                description: |
                  The level of visual distinction that should be given to a result.
                x-enumDescriptions:
                  HERO: A high-confidence result that should feature prominently on the page.
                  PROMOTED: May not be the best result but should be given additional visual distinction.
                  STANDARD: Should not be distinct from any other results.
                enum:
                  - HERO
                  - PROMOTED
                  - STANDARD
              attachmentContext:
                type: string
                description: Additional context for the relationship between the result and the document it's attached to.
              pins:
                type: array
                description: A list of pins associated with this search result.
                items:
                  type: object
                  properties:
                    queries:
                      type: array
                      description: The query strings for which the pinned result will show.
                      items:
                        type: string
                    audienceFilters:
                      type: array
                      description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                      items:
                        type: object
                        description: FacetFilter object
                        additionalProperties: true
                    id:
                      type: string
                      description: The opaque id of the pin.
                    documentId:
                      type: string
                      description: The document which should be a pinned result.
                    attribution:
                      type: object
                      description: Person object
                      additionalProperties: true
                    updatedBy:
                      type: object
                      description: Person object
                      additionalProperties: true
                    createTime:
                      type: string
                      format: date-time
                    updateTime:
                      type: string
                      format: date-time
                  required:
                    - documentId
        clusterType:
          type: string
          description: The reason for inclusion of clusteredResults.
          enum:
            - SIMILAR
            - FRESHNESS
            - TITLE
            - CONTENT
            - NONE
            - THREAD_REPLY
            - THREAD_ROOT
            - PREFIX
            - SUFFIX
        visibleCountHint:
          type: integer
          description: The default number of results to display before truncating and showing a "see more" link
      type: object
    ClusterTypeEnum:
      type: string
      description: The reason for inclusion of clusteredResults.
      enum:
        - SIMILAR
        - FRESHNESS
        - TITLE
        - CONTENT
        - NONE
        - THREAD_REPLY
        - THREAD_ROOT
        - PREFIX
        - SUFFIX
    SearchResultProminenceEnum:
      type: string
      description: |
        The level of visual distinction that should be given to a result.
      x-enumDescriptions:
        HERO: A high-confidence result that should feature prominently on the page.
        PROMOTED: May not be the best result but should be given additional visual distinction.
        STANDARD: Should not be distinct from any other results.
      enum:
        - HERO
        - PROMOTED
        - STANDARD
    ChannelInviteInfo:
      description: Information regarding the invite status of a person for a particular channel.
      properties:
        channel:
          type: string
          enum:
            - COMMUNICATION_CHANNEL_EMAIL
            - COMMUNICATION_CHANNEL_SLACK
        isAutoInvite:
          description: Bit that tracks if this invite was automatically sent or user-sent
          type: boolean
        inviter:
          type: object
          description: Person object
          additionalProperties: true
        inviteTime:
          type: string
          format: date-time
          description: The time this person was invited in ISO format (ISO 8601).
        reminderTime:
          type: string
          format: date-time
          description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
      type: object
    ReadPermissions:
      description: Describes the read permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of read permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/ReadPermission'
    WritePermissions:
      description: Describes the write permissions levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of write permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/WritePermission'
    GrantPermissions:
      description: Describes the grant permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of grant permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/GrantPermission'
    CustomFieldValue:
      oneOf:
        - properties:
            strText:
              type: string
              description: Text field for string value.
          type: object
        - properties:
            urlAnchor:
              type: string
              description: Anchor text for hyperlink.
            urlLink:
              type: string
              description: Link for this URL.
          type: object
        - properties:
            person:
              type: object
              description: Person object
              additionalProperties: true
          type: object
    TimeInterval:
      required:
        - start
        - end
      properties:
        start:
          type: string
          description: The RFC3339 timestamp formatted start time of this event.
        end:
          type: string
          description: The RFC3339 timestamp formatted end time of this event.
      type: object
    IconConfig:
      description: Defines how to render an icon
      example:
        color: '#343CED'
        key: person_icon
        iconType: GLYPH
        name: user
      properties:
        generatedBackgroundColorKey:
          type: string
        backgroundColor:
          type: string
        color:
          type: string
        key:
          type: string
        iconType:
          enum:
            - COLLECTION
            - CUSTOM
            - DATASOURCE
            - DATASOURCE_INSTANCE
            - FAVICON
            - FILE_TYPE
            - GENERATED_BACKGROUND
            - GLYPH
            - MIME_TYPE
            - NO_ICON
            - PERSON
            - REACTIONS
            - URL
        masked:
          type: boolean
          description: Whether the icon should be masked based on current theme.
        name:
          type: string
          description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
        url:
          type: string
          description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
      type: object
    PinDocumentMutableProperties:
      properties:
        queries:
          type: array
          description: The query strings for which the pinned result will show.
          items:
            type: string
        audienceFilters:
          type: array
          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
      type: object
    CollectionMutableProperties:
      description: CollectionBaseMutableProperties object
      type: object
      properties:
        icon:
          type: string
          description: The emoji icon of this Collection.
        adminLocked:
          type: boolean
          description: Indicates whether edits are allowed for everyone or only admins.
        parentId:
          type: integer
          description: The parent of this Collection, or 0 if it's a top-level Collection.
        thumbnail:
          type: object
          description: Thumbnail object
          additionalProperties: true
        allowedDatasource:
          type: string
          description: The datasource type this Collection can hold.
      required:
        - name
    CollectionItem:
      type: object
      properties:
        name:
          type: string
          description: The optional name of the Collection item.
        description:
          type: string
          description: A helpful description of why this CollectionItem is in the Collection that it's in.
        icon:
          type: string
          description: The emoji icon for this CollectionItem. Only used for Text type items.
        collectionId:
          type: integer
          description: The Collection ID of the Collection that this CollectionItem belongs in.
        documentId:
          type: string
          description: If this CollectionItem is indexed, the Glean Document ID of that document.
        url:
          type: string
          description: The URL of this CollectionItem.
        itemId:
          type: string
          description: Unique identifier for the item within the Collection it belongs to.
        createdBy:
          type: object
          description: Person object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
          description: Unix timestamp for when the item was first added (in seconds since epoch UTC).
        document:
          type: object
          description: Document object
          additionalProperties: true
        shortcut:
          type: object
          description: PermissionedObject object
          properties:
            id:
              type: integer
              description: The opaque id of the user generated content.
            inputAlias:
              type: string
              description: Link text following go/ prefix as entered by the user.
            destinationUrl:
              type: string
              description: Destination URL for the shortcut.
            destinationDocumentId:
              type: string
              description: Glean Document ID for the URL, if known.
            description:
              type: string
              description: A short, plain text blurb to help people understand the intent of the shortcut.
            unlisted:
              type: boolean
              description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
            urlTemplate:
              type: string
              description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
            addedRoles:
              type: array
              description: A list of user roles added for the Shortcut.
              items:
                type: object
                description: UserRoleSpecification object
                additionalProperties: true
            removedRoles:
              type: array
              description: A list of user roles removed for the Shortcut.
              items:
                type: object
                description: UserRoleSpecification object
                additionalProperties: true
            createdBy:
              type: object
              description: Person object
              additionalProperties: true
            createTime:
              type: string
              format: date-time
              description: The time the shortcut was created in ISO format (ISO 8601).
            updatedBy:
              type: object
              description: Person object
              additionalProperties: true
            updateTime:
              type: string
              format: date-time
              description: The time the shortcut was updated in ISO format (ISO 8601).
            destinationDocument:
              type: object
              description: Document object
              additionalProperties: true
            intermediateUrl:
              type: string
              description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
            viewPrefix:
              type: string
              description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
            isExternal:
              type: boolean
              description: Indicates whether a shortcut is native or external.
            editUrl:
              type: string
              description: The URL using which the user can access the edit page of the shortcut.
            alias:
              type: string
              description: canonical link text following go/ prefix where hyphen/underscore is removed.
            title:
              type: string
              description: Title for the Go Link
            roles:
              type: array
              description: A list of user roles for the Go Link.
              items:
                type: object
                description: UserRoleSpecification object
                additionalProperties: true
          required:
            - inputAlias
        collection:
          type: object
          description: Collection object
          additionalProperties: true
        itemType:
          type: string
          enum:
            - DOCUMENT
            - TEXT
            - URL
            - COLLECTION
      required:
        - collectionId
        - itemType
    CollectionPinnedMetadata:
      type: object
      description: CollectionPinnedMetadata object
      additionalProperties: true
    UserRoleSpecification:
      type: object
      description: UserRoleSpecification object
      additionalProperties: true
    Reaction:
      properties:
        type:
          type: string
        count:
          type: integer
          description: The count of the reaction type on the document.
        reactors:
          type: array
          items:
            type: object
            description: Person object
            additionalProperties: true
        reactedByViewer:
          type: boolean
          description: Whether the user in context reacted with this type to the document.
      type: object
    Share:
      description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
      required:
        - numDaysAgo
      properties:
        numDaysAgo:
          type: integer
          description: The number of days that has passed since the share happened
        sharer:
          type: object
          description: Person object
          additionalProperties: true
        sharingDocument:
          type: object
          description: Document object
          additionalProperties: true
      type: object
    VerificationMetadata:
      required:
        - documentId
      properties:
        lastVerifier:
          type: object
          description: Person object
          additionalProperties: true
        lastVerificationTs:
          type: integer
          description: The unix timestamp of the verification (in seconds since epoch UTC).
        expirationTs:
          type: integer
          description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
        document:
          type: object
          description: Document object
          additionalProperties: true
        reminders:
          type: array
          description: Info about all outstanding verification reminders for the document if exists.
          items:
            type: object
            description: Reminder object
            additionalProperties: true
        lastReminder:
          type: object
          description: Reminder object
          additionalProperties: true
        visitorCount:
          type: array
          description: Number of visitors to the document during included time periods.
          items:
            type: object
            description: CountInfo object
            additionalProperties: true
        candidateVerifiers:
          type: array
          description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
          items:
            type: object
            description: Person object
            additionalProperties: true
      type: object
    Period:
      type: object
      description: Period object
      additionalProperties: true
    UserGeneratedContentId:
      properties:
        id:
          type: integer
          description: The opaque id of the user generated content.
      type: object
    ShortcutMutableProperties:
      properties:
        inputAlias:
          type: string
          description: Link text following go/ prefix as entered by the user.
        destinationUrl:
          type: string
          description: Destination URL for the shortcut.
        destinationDocumentId:
          type: string
          description: Glean Document ID for the URL, if known.
        description:
          type: string
          description: A short, plain text blurb to help people understand the intent of the shortcut.
        unlisted:
          type: boolean
          description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
        urlTemplate:
          type: string
          description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
        addedRoles:
          type: array
          description: A list of user roles added for the Shortcut.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        removedRoles:
          type: array
          description: A list of user roles removed for the Shortcut.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
      type: object
    ShortcutMetadata:
      properties:
        createdBy:
          type: object
          description: Person object
          additionalProperties: true
        createTime:
          type: string
          format: date-time
          description: The time the shortcut was created in ISO format (ISO 8601).
        updatedBy:
          type: object
          description: Person object
          additionalProperties: true
        updateTime:
          type: string
          format: date-time
          description: The time the shortcut was updated in ISO format (ISO 8601).
        destinationDocument:
          type: object
          description: Document object
          additionalProperties: true
        intermediateUrl:
          type: string
          description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
        viewPrefix:
          type: string
          description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
        isExternal:
          type: boolean
          description: Indicates whether a shortcut is native or external.
        editUrl:
          type: string
          description: The URL using which the user can access the edit page of the shortcut.
      type: object
    CustomDataValue:
      properties:
        displayLabel:
          type: string
        stringValue:
          type: string
        stringListValue:
          type: array
          description: list of strings for multi-value properties
          items:
            type: string
        numberValue:
          type: number
        booleanValue:
          type: boolean
      type: object
    Customer:
      required:
        - id
        - company
      properties:
        id:
          type: string
          description: Unique identifier.
        domains:
          type: array
          description: Link to company's associated website domains.
          items:
            type: string
        company:
          required:
            - name
          properties:
            name:
              type: string
              description: User-friendly display name.
            profileUrl:
              type: string
              description: Link to internal company company profile.
            websiteUrls:
              type: array
              description: Link to company's associated websites.
              items:
                type: string
            logoUrl:
              type: string
              description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
            location:
              type: string
              description: User facing string representing the company's location.
              example: New York City
            phone:
              type: string
              description: Phone number as a number string.
            fax:
              type: string
              description: Fax number as a number string.
            industry:
              type: string
              description: User facing string representing the company's industry.
              example: Finances
            annualRevenue:
              type: number
              format: double
              description: Average company's annual revenue for reference.
            numberOfEmployees:
              type: integer
              format: int64
              description: Average company's number of employees for reference.
            stockSymbol:
              type: string
              description: Company's stock symbol if company is public.
            foundedDate:
              type: string
              format: date
              description: The date when the company was founded.
            about:
              type: string
              description: User facing description of company.
              example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
          type: object
        documentCounts:
          type: object
          description: A map of {string, int} pairs representing counts of each document type associated with this customer.
          additionalProperties:
            type: integer
        poc:
          type: array
          description: A list of POC for company.
          items:
            type: object
            description: Person object
            additionalProperties: true
        metadata:
          properties:
            datasourceId:
              type: string
              description: The user visible id of the salesforce customer account.
            customData:
              type: object
              description: CustomData object
              additionalProperties: true
          type: object
        mergedCustomers:
          type: array
          description: A list of Customers.
          items:
            type: object
            description: Customer object
            additionalProperties: true
        startDate:
          type: string
          format: date
          description: The date when the interaction with customer started.
        contractAnnualRevenue:
          type: number
          format: double
          description: Average contract annual revenue with that customer.
        notes:
          type: string
          description: User facing (potentially generated) notes about company.
          example: CIO is interested in trying out the product.
      type: object
    Team:
      type: object
      description: PermissionedObject object
      properties:
        relatedObjects:
          type: object
          description: A list of objects related to a source object.
          additionalProperties:
            $ref: '#/components/schemas/RelatedObjectEdge'
        id:
          type: string
          description: Unique identifier
        name:
          type: string
          description: Team name
        description:
          type: string
          description: A description of the team
        businessUnit:
          type: string
          description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
        department:
          type: string
          description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
        photoUrl:
          type: string
          format: url
          description: A link to the team's photo.
        bannerUrl:
          type: string
          format: url
          description: A link to the team's banner photo.
        externalLink:
          type: string
          format: uri
          description: Link to a team page on the internet or your company's intranet
        members:
          type: array
          description: The members on this team
          items:
            required:
              - person
            type: object
            description: Metadata about the relationship of a person to a team.
            properties:
              person:
                type: object
                description: Person object
                additionalProperties: true
              relationship:
                type: string
                description: The team member's relationship to the team. This defaults to MEMBER if not set.
                default: MEMBER
                enum:
                  - MEMBER
                  - MANAGER
                  - LEAD
                  - POINT_OF_CONTACT
                  - OTHER
              customRelationshipStr:
                type: string
                description: Displayed name for the relationship if relationship is set to `OTHER`.
              joinDate:
                type: string
                format: date-time
                description: The team member's start date
        memberCount:
          type: integer
          description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
        emails:
          type: array
          description: The emails for this team
          items:
            properties:
              email:
                type: string
                format: email
                description: An email address
              type:
                type: string
                enum:
                  - PRIMARY
                  - SECONDARY
                  - ONCALL
                  - OTHER
                default: OTHER
              isUserGenerated:
                type: boolean
                description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
            type: object
        customFields:
          type: array
          description: Customizable fields for additional team information.
          items:
            required:
              - label
              - values
              - displayable
            properties:
              label:
                type: string
                description: A user-facing label for this field.
              values:
                type: array
                items:
                  oneOf:
                    - properties:
                        strText:
                          type: string
                          description: Text field for string value.
                      type: object
                    - properties:
                        urlAnchor:
                          type: string
                          description: Anchor text for hyperlink.
                        urlLink:
                          type: string
                          description: Link for this URL.
                      type: object
                    - properties:
                        person:
                          type: object
                          description: Person object
                          additionalProperties: true
                      type: object
              displayable:
                type: boolean
                description: Determines whether the client should display this custom field
                default: true
            type: object
        datasourceProfiles:
          type: array
          description: The datasource profiles of the team
          items:
            required:
              - datasource
              - handle
            properties:
              datasource:
                type: string
                example: github
                description: The datasource the profile is of.
              handle:
                type: string
                description: The display name of the entity in the given datasource.
              url:
                type: string
                description: URL to view the entity's profile.
              nativeAppUrl:
                type: string
                description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
              isUserGenerated:
                type: boolean
                description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
            type: object
        datasource:
          type: string
          description: the data source of the team, e.g. GDRIVE
        createdFrom:
          type: string
          description: For teams created from docs, the doc title. Otherwise empty.
        lastUpdatedAt:
          type: string
          format: date-time
          description: when this team was last updated.
        status:
          type: string
          description: whether this team is fully processed or there are still unprocessed operations that'll affect it
          default: PROCESSED
          enum:
            - PROCESSED
            - QUEUED_FOR_CREATION
            - QUEUED_FOR_DELETION
        canBeDeleted:
          type: boolean
          description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
          default: true
        loggingId:
          type: string
          description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
      required:
        - id
        - name
    CustomEntity:
      description: PermissionedObject object
      type: object
      properties:
        id:
          type: string
          description: Unique identifier.
        title:
          type: string
          description: Title or name of the custom entity.
        datasource:
          type: string
          description: The datasource the custom entity is from.
        objectType:
          type: string
          description: The type of the entity. Interpretation is specific to each datasource
        metadata:
          properties:
            customData:
              type: object
              description: CustomData object
              additionalProperties: true
          type: object
        roles:
          type: array
          description: A list of user roles for the custom entity explicitly granted by the owner.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
    Answer:
      type: object
      description: PermissionedObject object
      properties:
        id:
          type: integer
          description: The opaque ID of the Answer.
          example: 3
        docId:
          type: string
          description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
          example: ANSWERS_answer_3
        question:
          type: string
          example: Why is the sky blue?
        questionVariations:
          type: array
          description: Additional ways of phrasing this question.
          items:
            type: string
        bodyText:
          type: string
          description: The plain text answer to the question.
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
        boardId:
          type: integer
          description: The parent board ID of this Answer, or 0 if it's a floating Answer.
        audienceFilters:
          type: array
          description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
        addedRoles:
          type: array
          description: A list of user roles for the answer added by the owner.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        removedRoles:
          type: array
          description: A list of user roles for the answer removed by the owner.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        roles:
          type: array
          description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        sourceDocumentSpec:
          type: object
          description: DocumentSpec object
          additionalProperties: true
        sourceType:
          type: string
          enum:
            - DOCUMENT
            - ASSISTANT
        combinedAnswerText:
          type: object
          description: StructuredText object
          additionalProperties: true
        likes:
          required:
            - likedBy
            - likedByUser
            - numLikes
          properties:
            likedBy:
              type: array
              items:
                properties:
                  user:
                    type: object
                    description: Person object
                    additionalProperties: true
                  createTime:
                    type: string
                    format: date-time
                    description: The time the user liked the answer in ISO format (ISO 8601).
                type: object
            likedByUser:
              type: boolean
              description: Whether the user in context liked the answer.
            numLikes:
              type: integer
              description: The total number of likes for the answer.
          type: object
        author:
          type: object
          description: Person object
          additionalProperties: true
        createTime:
          type: string
          format: date-time
          description: The time the answer was created in ISO format (ISO 8601).
        updateTime:
          type: string
          format: date-time
          description: The time the answer was last updated in ISO format (ISO 8601).
        updatedBy:
          type: object
          description: Person object
          additionalProperties: true
        verification:
          required:
            - state
          properties:
            state:
              type: string
              enum:
                - UNVERIFIED
                - VERIFIED
                - DEPRECATED
              description: The verification state for the document.
            metadata:
              required:
                - documentId
              properties:
                lastVerifier:
                  type: object
                  description: Person object
                  additionalProperties: true
                lastVerificationTs:
                  type: integer
                  description: The unix timestamp of the verification (in seconds since epoch UTC).
                expirationTs:
                  type: integer
                  description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
                document:
                  type: object
                  description: Document object
                  additionalProperties: true
                reminders:
                  type: array
                  description: Info about all outstanding verification reminders for the document if exists.
                  items:
                    type: object
                    description: Reminder object
                    additionalProperties: true
                lastReminder:
                  type: object
                  description: Reminder object
                  additionalProperties: true
                visitorCount:
                  type: array
                  description: Number of visitors to the document during included time periods.
                  items:
                    type: object
                    description: CountInfo object
                    additionalProperties: true
                candidateVerifiers:
                  type: array
                  description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
                  items:
                    type: object
                    description: Person object
                    additionalProperties: true
              type: object
          type: object
        board:
          type: object
          description: AnswerBoard object
          additionalProperties: true
        collections:
          type: array
          description: The collections to which the answer belongs.
          items:
            type: object
            description: Collection object
            additionalProperties: true
        documentCategory:
          type: string
          description: The document's document_category(.proto).
        sourceDocument:
          type: object
          description: Document object
          additionalProperties: true
      required:
        - id
    ExtractedQnA:
      properties:
        heading:
          type: string
          description: Heading text that was matched to produce this result.
        question:
          type: string
          description: Question text that was matched to produce this result.
        questionResult:
          type: object
          description: Flattened SearchResult
          example:
            snippets:
              - snippet: snippet
                mimeType: mimeType
            metadata:
              container: container
              createTime: '2000-01-23T04:56:07.000Z'
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: '2000-01-23T04:56:07.000Z'
              mimeType: mimeType
              objectType: objectType
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
              - missingTerm: container
                query: container
          properties:
            structuredResults:
              type: array
              description: An array of entities in the work graph retrieved via a data request.
              items:
                type: object
                description: StructuredResult object
                additionalProperties: true
            trackingToken:
              type: string
              description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
            document:
              type: object
              description: Document object
              additionalProperties: true
            title:
              type: string
            url:
              type: string
            nativeAppUrl:
              type: string
              description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
            snippets:
              type: array
              description: Text content from the result document which contains search query terms, if available.
              items:
                type: object
                description: SearchResultSnippet object
                additionalProperties: true
            fullText:
              type: string
              description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
            fullTextList:
              type: array
              description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
              items:
                type: string
            relatedResults:
              type: array
              description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
              items:
                type: object
                description: RelatedDocuments object
                additionalProperties: true
            clusteredResults:
              type: array
              description: A list of results that should be displayed as associated with this result.
              items:
                type: object
                description: SearchResult object
                additionalProperties: true
            allClusteredResults:
              type: array
              description: A list of results that should be displayed as associated with this result.
              items:
                type: object
                description: ClusterGroup object
                additionalProperties: true
            attachmentCount:
              type: integer
              description: The total number of attachments.
            attachments:
              type: array
              description: A (potentially partial) list of results representing documents attached to the main result document.
              items:
                type: object
                description: SearchResult object
                additionalProperties: true
            backlinkResults:
              type: array
              description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
              items:
                type: object
                description: SearchResult object
                additionalProperties: true
            clusterType:
              type: string
              description: The reason for inclusion of clusteredResults.
              enum:
                - SIMILAR
                - FRESHNESS
                - TITLE
                - CONTENT
                - NONE
                - THREAD_REPLY
                - THREAD_ROOT
                - PREFIX
                - SUFFIX
            mustIncludeSuggestions:
              type: object
              description: QuerySuggestionList object
              additionalProperties: true
            querySuggestion:
              type: object
              description: QuerySuggestion object
              additionalProperties: true
            prominence:
              type: string
              description: |
                The level of visual distinction that should be given to a result.
              x-enumDescriptions:
                HERO: A high-confidence result that should feature prominently on the page.
                PROMOTED: May not be the best result but should be given additional visual distinction.
                STANDARD: Should not be distinct from any other results.
              enum:
                - HERO
                - PROMOTED
                - STANDARD
            attachmentContext:
              type: string
              description: Additional context for the relationship between the result and the document it's attached to.
            pins:
              type: array
              description: A list of pins associated with this search result.
              items:
                description: PinDocumentMutableProperties object
                type: object
                properties:
                  id:
                    type: string
                    description: The opaque id of the pin.
                  documentId:
                    type: string
                    description: The document which should be a pinned result.
                  audienceFilters:
                    type: array
                    description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                    items:
                      type: object
                      description: FacetFilter object
                      additionalProperties: true
                  attribution:
                    type: object
                    description: Person object
                    additionalProperties: true
                  updatedBy:
                    type: object
                    description: Person object
                    additionalProperties: true
                  createTime:
                    type: string
                    format: date-time
                  updateTime:
                    type: string
                    format: date-time
                required:
                  - documentId
      type: object
    Meeting:
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        url:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        attendees:
          properties:
            people:
              type: array
              description: Full details of some of the attendees of this event
              items:
                required:
                  - person
                properties:
                  isOrganizer:
                    type: boolean
                    description: Whether or not this attendee is an organizer.
                  isInGroup:
                    type: boolean
                    description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                  person:
                    type: object
                    description: Person object
                    additionalProperties: true
                  groupAttendees:
                    type: array
                    description: If this attendee is a group, represents the list of individual attendees in the group.
                    items:
                      type: object
                      description: CalendarAttendee object
                      additionalProperties: true
                  responseStatus:
                    type: string
                    enum:
                      - ACCEPTED
                      - DECLINED
                      - NO_RESPONSE
                      - TENTATIVE
                type: object
            isLimit:
              type: boolean
              description: Whether the total count of the people returned is at the retrieval limit.
            total:
              type: integer
              description: Total number of attendees in this event.
            numAccepted:
              type: integer
              description: Total number of attendees who have accepted this event.
            numDeclined:
              type: integer
              description: Total number of attendees who have declined this event.
            numNoResponse:
              type: integer
              description: Total number of attendees who have not responded to this event.
            numTentative:
              type: integer
              description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
          type: object
      type: object
    AppResult:
      required:
        - datasource
      properties:
        datasource:
          type: string
          description: The app or other repository type this represents
        docType:
          type: string
          description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
        mimeType:
          type: string
          description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
        iconUrl:
          type: string
          description: If there is available icon URL.
      type: object
    AnswerBoard:
      type: object
      description: AnswerBoard object
      additionalProperties: true
    Code:
      example:
        repoName: scio
        fileName: README.md
        matches:
          - lineNumber: 1
            content: Welcome to the beginning
            ranges: []
          - lineNumber: 2
            content: Second line of the file
            ranges: []
          - lineNumber: 3
            content: hello world hello world
            ranges:
              - startindex: 0
                endIndex: 5
              - startIndex: 12
                endIndex: 17
      properties:
        repoName:
          type: string
        fileName:
          type: string
        fileUrl:
          type: string
        lines:
          type: array
          items:
            properties:
              lineNumber:
                type: integer
              content:
                type: string
              ranges:
                type: array
                description: Index ranges depicting matched sections of the line
                items:
                  type: object
                  description: TextRange object
                  additionalProperties: true
            type: object
        isLastMatch:
          type: boolean
          description: Last file match for a repo
      type: object
    RelatedQuestion:
      properties:
        question:
          type: string
          description: The text of the related question
        answer:
          type: string
          description: The answer for the related question
        ranges:
          type: array
          description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
          items:
            type: object
            description: TextRange object
            additionalProperties: true
      type: object
    Disambiguation:
      type: object
      description: A disambiguation between multiple entities with the same name
      properties:
        name:
          type: string
          description: Name of the ambiguous entity
        id:
          type: string
          description: The unique id of the entity in the knowledge graph
        type:
          type: string
          description: The type of entity.
          x-include-enum-class-prefix: true
          enum:
            - PERSON
            - PROJECT
            - CUSTOMER
    FacetFilterSet:
      type: object
      description: FacetFilterSet object
      additionalProperties: true
    FacetBucketFilter:
      type: object
      description: FacetBucketFilter object
      additionalProperties: true
    AuthToken:
      type: object
      description: AuthToken object
      additionalProperties: true
    RestrictionFilters:
      type: object
      description: RestrictionFilters object
      additionalProperties: true
    CommunicationChannel:
      type: string
      enum:
        - COMMUNICATION_CHANNEL_EMAIL
        - COMMUNICATION_CHANNEL_SLACK
    ReadPermission:
      description: Describes the read permission level that a user has for a specific feature
      properties:
        scopeType:
          type: object
          description: ScopeType object
          additionalProperties: true
      type: object
    GrantPermission:
      description: Describes the grant permission level that a user has for a specific feature
      properties:
        scopeType:
          type: object
          description: ScopeType object
          additionalProperties: true
      type: object
    CustomFieldValueStr:
      properties:
        strText:
          type: string
          description: Text field for string value.
      type: object
    CustomFieldValueHyperlink:
      properties:
        urlAnchor:
          type: string
          description: Anchor text for hyperlink.
        urlLink:
          type: string
          description: Link for this URL.
      type: object
    CustomFieldValuePerson:
      properties:
        person:
          type: object
          description: Person object
          additionalProperties: true
      type: object
    CollectionBaseMutableProperties:
      type: object
      description: CollectionBaseMutableProperties object
      additionalProperties: true
    CollectionItemMutableProperties:
      properties:
        name:
          type: string
          description: The optional name of the Collection item.
        description:
          type: string
          description: A helpful description of why this CollectionItem is in the Collection that it's in.
        icon:
          type: string
          description: The emoji icon for this CollectionItem. Only used for Text type items.
      type: object
    CollectionPinTarget:
      type: object
      description: CollectionPinTarget object
      additionalProperties: true
    CollectionPinMetadata:
      type: object
      description: CollectionPinMetadata object
      additionalProperties: true
    DocumentSpec:
      type: object
      description: DocumentSpec object
      additionalProperties: true
    Group:
      type: object
      description: Group object
      additionalProperties: true
    UserRole:
      type: object
      description: UserRole object
      additionalProperties: true
    Reminder:
      type: object
      description: Reminder object
      additionalProperties: true
    TimePoint:
      type: object
      description: TimePoint object
      additionalProperties: true
    Company:
      required:
        - name
      properties:
        name:
          type: string
          description: User-friendly display name.
        profileUrl:
          type: string
          description: Link to internal company company profile.
        websiteUrls:
          type: array
          description: Link to company's associated websites.
          items:
            type: string
        logoUrl:
          type: string
          description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
        location:
          type: string
          description: User facing string representing the company's location.
          example: New York City
        phone:
          type: string
          description: Phone number as a number string.
        fax:
          type: string
          description: Fax number as a number string.
        industry:
          type: string
          description: User facing string representing the company's industry.
          example: Finances
        annualRevenue:
          type: number
          format: double
          description: Average company's annual revenue for reference.
        numberOfEmployees:
          type: integer
          format: int64
          description: Average company's number of employees for reference.
        stockSymbol:
          type: string
          description: Company's stock symbol if company is public.
        foundedDate:
          type: string
          format: date
          description: The date when the company was founded.
        about:
          type: string
          description: User facing description of company.
          example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
      type: object
    DocumentCounts:
      type: object
      description: A map of {string, int} pairs representing counts of each document type associated with this customer.
      additionalProperties:
        type: integer
    CustomerMetadata:
      properties:
        datasourceId:
          type: string
          description: The user visible id of the salesforce customer account.
        customData:
          type: object
          description: CustomData object
          additionalProperties: true
      type: object
    RelatedObjects:
      properties:
        relatedObjects:
          type: object
          description: A list of objects related to a source object.
          additionalProperties:
            $ref: '#/components/schemas/RelatedObjectEdge'
      type: object
    PersonToTeamRelationship:
      required:
        - person
      type: object
      description: Metadata about the relationship of a person to a team.
      properties:
        person:
          type: object
          description: Person object
          additionalProperties: true
        relationship:
          type: string
          description: The team member's relationship to the team. This defaults to MEMBER if not set.
          default: MEMBER
          enum:
            - MEMBER
            - MANAGER
            - LEAD
            - POINT_OF_CONTACT
            - OTHER
        customRelationshipStr:
          type: string
          description: Displayed name for the relationship if relationship is set to `OTHER`.
        joinDate:
          type: string
          format: date-time
          description: The team member's start date
    TeamEmail:
      properties:
        email:
          type: string
          format: email
          description: An email address
        type:
          type: string
          enum:
            - PRIMARY
            - SECONDARY
            - ONCALL
            - OTHER
          default: OTHER
        isUserGenerated:
          type: boolean
          description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
      type: object
    CustomEntityMetadata:
      properties:
        customData:
          type: object
          description: CustomData object
          additionalProperties: true
      type: object
    AnswerId:
      properties:
        id:
          type: integer
          description: The opaque ID of the Answer.
          example: 3
      type: object
    AnswerDocId:
      properties:
        docId:
          type: string
          description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
          example: ANSWERS_answer_3
      type: object
    AnswerMutableProperties:
      properties:
        question:
          type: string
          example: Why is the sky blue?
        questionVariations:
          type: array
          description: Additional ways of phrasing this question.
          items:
            type: string
        bodyText:
          type: string
          description: The plain text answer to the question.
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
        boardId:
          type: integer
          description: The parent board ID of this Answer, or 0 if it's a floating Answer.
        audienceFilters:
          type: array
          description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
        addedRoles:
          type: array
          description: A list of user roles for the answer added by the owner.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        removedRoles:
          type: array
          description: A list of user roles for the answer removed by the owner.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        roles:
          type: array
          description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        sourceDocumentSpec:
          type: object
          description: DocumentSpec object
          additionalProperties: true
        sourceType:
          type: string
          enum:
            - DOCUMENT
            - ASSISTANT
      type: object
    AnswerLikes:
      required:
        - likedBy
        - likedByUser
        - numLikes
      properties:
        likedBy:
          type: array
          items:
            properties:
              user:
                type: object
                description: Person object
                additionalProperties: true
              createTime:
                type: string
                format: date-time
                description: The time the user liked the answer in ISO format (ISO 8601).
            type: object
        likedByUser:
          type: boolean
          description: Whether the user in context liked the answer.
        numLikes:
          type: integer
          description: The total number of likes for the answer.
      type: object
    CalendarAttendees:
      properties:
        people:
          type: array
          description: Full details of some of the attendees of this event
          items:
            required:
              - person
            properties:
              isOrganizer:
                type: boolean
                description: Whether or not this attendee is an organizer.
              isInGroup:
                type: boolean
                description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
              person:
                type: object
                description: Person object
                additionalProperties: true
              groupAttendees:
                type: array
                description: If this attendee is a group, represents the list of individual attendees in the group.
                items:
                  type: object
                  description: CalendarAttendee object
                  additionalProperties: true
              responseStatus:
                type: string
                enum:
                  - ACCEPTED
                  - DECLINED
                  - NO_RESPONSE
                  - TENTATIVE
            type: object
        isLimit:
          type: boolean
          description: Whether the total count of the people returned is at the retrieval limit.
        total:
          type: integer
          description: Total number of attendees in this event.
        numAccepted:
          type: integer
          description: Total number of attendees who have accepted this event.
        numDeclined:
          type: integer
          description: Total number of attendees who have declined this event.
        numNoResponse:
          type: integer
          description: Total number of attendees who have not responded to this event.
        numTentative:
          type: integer
          description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
      type: object
    AnswerBoardMutableProperties:
      type: object
      description: AnswerBoardMutableProperties object
      additionalProperties: true
    CodeLine:
      properties:
        lineNumber:
          type: integer
        content:
          type: string
        ranges:
          type: array
          description: Index ranges depicting matched sections of the line
          items:
            type: object
            description: TextRange object
            additionalProperties: true
      type: object
    EntityType:
      type: string
      description: The type of entity.
      x-include-enum-class-prefix: true
      enum:
        - PERSON
        - PROJECT
        - CUSTOMER
    CollectionPinnableCategories:
      type: object
      description: CollectionPinnableCategories object
      additionalProperties: true
    CollectionPinnableTargets:
      type: object
      description: CollectionPinnableTargets object
      additionalProperties: true
    GroupType:
      type: object
      description: GroupType object
      additionalProperties: true
    RelatedObjectEdge:
      properties:
        objects:
          type: array
          items:
            required:
              - id
            properties:
              id:
                type: string
                description: The ID of the related object
              metadata:
                type: object
                description: Some metadata of the object which can be displayed, while not having the actual object.
                properties:
                  name:
                    type: string
                    description: Placeholder name of the object, not the relationship.
            type: object
      type: object
    AnswerLike:
      properties:
        user:
          type: object
          description: Person object
          additionalProperties: true
        createTime:
          type: string
          format: date-time
          description: The time the user liked the answer in ISO format (ISO 8601).
      type: object
    CalendarAttendee:
      required:
        - person
      properties:
        isOrganizer:
          type: boolean
          description: Whether or not this attendee is an organizer.
        isInGroup:
          type: boolean
          description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
        person:
          type: object
          description: Person object
          additionalProperties: true
        groupAttendees:
          type: array
          description: If this attendee is a group, represents the list of individual attendees in the group.
          items:
            type: object
            description: CalendarAttendee object
            additionalProperties: true
        responseStatus:
          type: string
          enum:
            - ACCEPTED
            - DECLINED
            - NO_RESPONSE
            - TENTATIVE
      type: object
    RelatedObject:
      required:
        - id
      properties:
        id:
          type: string
          description: The ID of the related object
        metadata:
          type: object
          description: Some metadata of the object which can be displayed, while not having the actual object.
          properties:
            name:
              type: string
              description: Placeholder name of the object, not the relationship.
      type: object
  parameters:
    timezoneOffset:
      name: timezoneOffset
      in: query
      description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
      schema:
        type: integer
  securitySchemes:
    APIToken:
      scheme: bearer
      type: http
