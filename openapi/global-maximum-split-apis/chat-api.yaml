openapi: 3.0.0
info:
  version: 0.9.0
  title: Chat
  description: Chat operations for Glean API
  x-logo:
    url: https://app.glean.com/images/glean-text2.svg
  x-speakeasy-name: Glean API
servers:
  - url: https://{instance}-be.glean.com
    variables:
      instance:
        default: instance-name
        description: The instance name (typically the email domain without the TLD) that determines the deployment backend.
tags:
  - name: Chat
    description: Chat
paths:
  /rest/api/v1/chat:
    post:
      tags:
        - Chat
      summary: Chat
      description: Have a conversation with Glean AI.
      operationId: chat
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
            examples:
              defaultExample:
                value:
                  messages:
                    - author: USER
                      messageType: CONTENT
                      fragments:
                        - text: What are the company holidays this year?
              gptAgentExample:
                value:
                  agentConfig:
                    agent: GPT
                  messages:
                    - author: USER
                      messageType: CONTENT
                      fragments:
                        - text: Who was the first person to land on the moon?
        description: Includes chat history for Glean AI to respond to.
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
              examples:
                defaultExample:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: CONTENT
                        hasMoreFragments: false
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                        fragments:
                          - text: There are no holidays!
                streamingExample:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments: null
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments: null
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments:
                          - text: e are
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments:
                          - text: no hol
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: false
                        fragments:
                          - text: idays!
                updateResponse:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: UPDATE
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                        fragments:
                          - text: '**Reading:**'
                          - structuredResults:
                              - document:
                                  id: '123'
                                  title: Company Handbook
                citationResponse:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                        citations:
                          - sourceDocument:
                              id: '123'
                              title: Company Handbook
                              referenceRanges:
                                - textRange:
                                    startIndex: 0
                                    endIndex: 12
                                    type: CITATION
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '408':
          description: Request Timeout
        '429':
          description: Too Many Requests
      x-speakeasy-group: client.chat
      x-speakeasy-name-override: create
      x-speakeasy-usage-example: true
      x-codeSamples:
        - lang: python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean, models
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as g_client:

                res = g_client.client.chat.create(messages=[
                    {
                        "fragments": [
                            models.ChatMessageFragment(
                                text="What are the company holidays this year?",
                            ),
                        ],
                    },
                ], timeout_millis=30000)

                # Handle response
                print(res)
        - lang: typescript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.chat.create({
                messages: [
                  {
                    fragments: [
                      {
                        text: "What are the company holidays this year?",
                      },
                    ],
                  },
                ],
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.Create(ctx, components.ChatRequest{\n        Messages: []components.ChatMessage{\n            components.ChatMessage{\n                Fragments: []components.ChatMessageFragment{\n                    components.ChatMessageFragment{\n                        Text: apiclientgo.String(\"What are the company holidays this year?\"),\n                    },\n                },\n            },\n        },\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.ChatResponse != nil {\n        // handle response\n    }\n}"
        - lang: java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.*;
            import org.openapis.openapi.models.operations.ChatResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken("<YOUR_BEARER_TOKEN_HERE>")
                            .instance("<YOUR_GLEAN_INSTANCE_HERE>")
                        .build();

                    ChatResponse res = sdk.client().chat().create()
                            .chatRequest(ChatRequest.builder()
                                .messages(List.of(
                                    ChatMessage.builder()
                                        .fragments(List.of(
                                            ChatMessageFragment.builder()
                                                .text("What are the company holidays this year?")
                                                .build()))
                                        .build()))
                                .build())
                            .call();

                    if (res.chatResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/deleteallchats:
    post:
      tags:
        - Chat
      summary: Deletes all saved Chats owned by a user
      description: Deletes all saved Chats a user has had and all their contained conversational content.
      operationId: deleteallchats
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
      x-speakeasy-name-override: deleteAll
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as g_client:

                g_client.client.chat.delete_all()

                # Use the SDK ...
        - lang: typescript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              await glean.client.chat.deleteAll();


            }

            run();
        - lang: go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.DeleteAll(ctx, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"
        - lang: java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.operations.DeleteallchatsResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken("<YOUR_BEARER_TOKEN_HERE>")
                            .instance("<YOUR_GLEAN_INSTANCE_HERE>")
                        .build();

                    DeleteallchatsResponse res = sdk.client().chat().deleteAll()
                            .call();

                    // handle response
                }
            }
  /rest/api/v1/deletechats:
    post:
      tags:
        - Chat
      summary: Deletes saved Chats
      description: Deletes saved Chats and all their contained conversational content.
      operationId: deletechats
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteChatsRequest'
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: delete
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as g_client:

                g_client.client.chat.delete(ids=[])

                # Use the SDK ...
        - lang: typescript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              await glean.client.chat.delete({
                ids: [],
              });


            }

            run();
        - lang: go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.Delete(ctx, components.DeleteChatsRequest{\n        Ids: []string{},\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"
        - lang: java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.DeleteChatsRequest;
            import org.openapis.openapi.models.operations.DeletechatsResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken("<YOUR_BEARER_TOKEN_HERE>")
                            .instance("<YOUR_GLEAN_INSTANCE_HERE>")
                        .build();

                    DeletechatsResponse res = sdk.client().chat().delete()
                            .deleteChatsRequest(DeleteChatsRequest.builder()
                                .ids(List.of())
                                .build())
                            .call();

                    // handle response
                }
            }
  /rest/api/v1/getchat:
    post:
      tags:
        - Chat
      summary: Retrieves a Chat
      description: Retrieves the chat history between Glean Assistant and the user for a given Chat.
      operationId: getchat
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChatRequest'
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChatResponse'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: retrieve
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as g_client:

                res = g_client.client.chat.retrieve(id="<id>")

                # Handle response
                print(res)
        - lang: typescript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.chat.retrieve({
                id: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.Retrieve(ctx, components.GetChatRequest{\n        ID: \"<id>\",\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.GetChatResponse != nil {\n        // handle response\n    }\n}"
        - lang: java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.GetChatRequest;
            import org.openapis.openapi.models.operations.GetchatResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken("<YOUR_BEARER_TOKEN_HERE>")
                            .instance("<YOUR_GLEAN_INSTANCE_HERE>")
                        .build();

                    GetchatResponse res = sdk.client().chat().retrieve()
                            .getChatRequest(GetChatRequest.builder()
                                .id("<id>")
                                .build())
                            .call();

                    if (res.getChatResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/listchats:
    post:
      tags:
        - Chat
      summary: Retrieves all saved Chats
      description: Retrieves all the saved Chats between Glean Assistant and the user. The returned Chats contain only metadata and no conversational content.
      operationId: listchats
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChatsResponse'
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: list
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as g_client:

                res = g_client.client.chat.list()

                # Handle response
                print(res)
        - lang: typescript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.chat.list();

              // Handle the result
              console.log(result);
            }

            run();
        - lang: go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.List(ctx, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.ListChatsResponse != nil {\n        // handle response\n    }\n}"
        - lang: java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.operations.ListchatsResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken("<YOUR_BEARER_TOKEN_HERE>")
                            .instance("<YOUR_GLEAN_INSTANCE_HERE>")
                        .build();

                    ListchatsResponse res = sdk.client().chat().list()
                            .call();

                    if (res.listChatsResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/getchatapplication:
    post:
      tags:
        - Chat
      summary: Gets the metadata for a custom Chat application
      description: Gets the Chat application details for the specified application ID.
      operationId: getchatapplication
      x-visibility: Preview
      x-codegen-request-body-name: payload
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChatApplicationRequest'
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChatApplicationResponse'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
      x-speakeasy-name-override: retrieveApplication
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as g_client:

                res = g_client.client.chat.retrieve_application(id="<id>")

                # Handle response
                print(res)
        - lang: typescript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.chat.retrieveApplication({
                id: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.RetrieveApplication(ctx, components.GetChatApplicationRequest{\n        ID: \"<id>\",\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.GetChatApplicationResponse != nil {\n        // handle response\n    }\n}"
        - lang: java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.GetChatApplicationRequest;
            import org.openapis.openapi.models.operations.GetchatapplicationResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken("<YOUR_BEARER_TOKEN_HERE>")
                            .instance("<YOUR_GLEAN_INSTANCE_HERE>")
                        .build();

                    GetchatapplicationResponse res = sdk.client().chat().retrieveApplication()
                            .getChatApplicationRequest(GetChatApplicationRequest.builder()
                                .id("<id>")
                                .build())
                            .call();

                    if (res.getChatApplicationResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/uploadchatfiles:
    post:
      tags:
        - Chat
      summary: Upload files for Chat.
      description: Upload files for Chat.
      operationId: uploadchatfiles
      x-visibility: Public
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadChatFilesRequest'
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadChatFilesResponse'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: uploadFiles
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as g_client:

                res = g_client.client.chat.upload_files(files=[])

                # Handle response
                print(res)
        - lang: typescript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";
            import { openAsBlob } from "node:fs";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.chat.uploadFiles({
                files: [
                  {
                    fileName: "example.file",
                    content: await openAsBlob("example.file"),
                  },
                ],
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.UploadFiles(ctx, components.UploadChatFilesRequest{\n        Files: []components.File{},\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.UploadChatFilesResponse != nil {\n        // handle response\n    }\n}"
        - lang: java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.UploadChatFilesRequest;
            import org.openapis.openapi.models.operations.UploadchatfilesResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken("<YOUR_BEARER_TOKEN_HERE>")
                            .instance("<YOUR_GLEAN_INSTANCE_HERE>")
                        .build();

                    UploadchatfilesResponse res = sdk.client().chat().uploadFiles()
                            .uploadChatFilesRequest(UploadChatFilesRequest.builder()
                                .files(List.of())
                                .build())
                            .call();

                    if (res.uploadChatFilesResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/getchatfiles:
    post:
      tags:
        - Chat
      summary: Get files uploaded by a user for Chat.
      description: Get files uploaded by a user for Chat.
      operationId: getchatfiles
      x-visibility: Public
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChatFilesRequest'
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChatFilesResponse'
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: retrieveFiles
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as g_client:

                res = g_client.client.chat.retrieve_files(file_ids=[
                    "<value 1>",
                ])

                # Handle response
                print(res)
        - lang: typescript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.chat.retrieveFiles({
                fileIds: [
                  "<value 1>",
                ],
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.RetrieveFiles(ctx, components.GetChatFilesRequest{\n        FileIds: []string{\n            \"<value 1>\",\n        },\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.GetChatFilesResponse != nil {\n        // handle response\n    }\n}"
        - lang: java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.GetChatFilesRequest;
            import org.openapis.openapi.models.operations.GetchatfilesResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken("<YOUR_BEARER_TOKEN_HERE>")
                            .instance("<YOUR_GLEAN_INSTANCE_HERE>")
                        .build();

                    GetchatfilesResponse res = sdk.client().chat().retrieveFiles()
                            .getChatFilesRequest(GetChatFilesRequest.builder()
                                .fileIds(List.of(
                                    "<value 1>"))
                                .build())
                            .call();

                    if (res.getChatFilesResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  /rest/api/v1/deletechatfiles:
    post:
      tags:
        - Chat
      summary: Delete files uploaded by a user for chat.
      description: Delete files uploaded by a user for Chat.
      operationId: deletechatfiles
      x-visibility: Public
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteChatFilesRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
      x-speakeasy-name-override: deleteFiles
      x-speakeasy-group: client.chat
      x-codeSamples:
        - lang: python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as g_client:

                g_client.client.chat.delete_files(file_ids=[
                    "<value 1>",
                    "<value 2>",
                    "<value 3>",
                ])

                # Use the SDK ...
        - lang: typescript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              await glean.client.chat.deleteFiles({
                fileIds: [
                  "<value 1>",
                  "<value 2>",
                  "<value 3>",
                ],
              });


            }

            run();
        - lang: go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.DeleteFiles(ctx, components.DeleteChatFilesRequest{\n        FileIds: []string{\n            \"<value 1>\",\n            \"<value 2>\",\n            \"<value 3>\",\n        },\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}"
        - lang: java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.DeleteChatFilesRequest;
            import org.openapis.openapi.models.operations.DeletechatfilesResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken("<YOUR_BEARER_TOKEN_HERE>")
                            .instance("<YOUR_GLEAN_INSTANCE_HERE>")
                        .build();

                    DeletechatfilesResponse res = sdk.client().chat().deleteFiles()
                            .deleteChatFilesRequest(DeleteChatFilesRequest.builder()
                                .fileIds(List.of(
                                    "<value 1>",
                                    "<value 2>",
                                    "<value 3>"))
                                .build())
                            .call();

                    // handle response
                }
            }
  /rest/api/v1/chat#stream:
    post:
      tags:
        - Chat
      summary: Chat
      description: Have a conversation with Glean AI.
      operationId: chatStream
      x-visibility: Public
      x-codegen-request-body-name: payload
      parameters:
        - $ref: '#/components/parameters/timezoneOffset'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
            examples:
              defaultExample:
                value:
                  messages:
                    - author: USER
                      messageType: CONTENT
                      fragments:
                        - text: What are the company holidays this year?
              gptAgentExample:
                value:
                  agentConfig:
                    agent: GPT
                  messages:
                    - author: USER
                      messageType: CONTENT
                      fragments:
                        - text: Who was the first person to land on the moon?
        description: Includes chat history for Glean AI to respond to.
        required: true
        x-exportParamName: Request
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ChatRequestStream'
              examples:
                defaultExample:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: CONTENT
                        hasMoreFragments: false
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                        fragments:
                          - text: There are no holidays!
                streamingExample:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments: null
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments: null
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments:
                          - text: e are
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: true
                        fragments:
                          - text: no hol
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                          hasMoreFragments: false
                        fragments:
                          - text: idays!
                updateResponse:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: UPDATE
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                        fragments:
                          - text: '**Reading:**'
                          - structuredResults:
                              - document:
                                  id: '123'
                                  title: Company Handbook
                citationResponse:
                  value:
                    messages:
                      - author: GLEAN_AI
                        messageType: CONTENT
                        agentConfig:
                          agent: DEFAULT
                          mode: DEFAULT
                        citations:
                          - sourceDocument:
                              id: '123'
                              title: Company Handbook
                              referenceRanges:
                                - textRange:
                                    startIndex: 0
                                    endIndex: 12
                                    type: CITATION
        '400':
          description: Invalid request
        '401':
          description: Not Authorized
        '408':
          description: Request Timeout
        '429':
          description: Too Many Requests
      x-speakeasy-group: client.chat
      x-speakeasy-name-override: createStream
      x-speakeasy-usage-example: true
      x-codeSamples:
        - lang: python
          label: Python (API Client)
          source: |-
            from glean.api_client import Glean, models
            import os


            with Glean(
                api_token=os.getenv("GLEAN_API_TOKEN", ""),
                instance=os.getenv("GLEAN_INSTANCE", ""),
            ) as g_client:

                res = g_client.client.chat.create_stream(messages=[
                    {
                        "fragments": [
                            models.ChatMessageFragment(
                                text="What are the company holidays this year?",
                            ),
                        ],
                    },
                ], timeout_millis=30000)

                # Handle response
                print(res)
        - lang: typescript
          label: Typescript (API Client)
          source: |-
            import { Glean } from "@gleanwork/api-client";

            const glean = new Glean({
              apiToken: process.env["GLEAN_API_TOKEN"] ?? "",
              instance: process.env["GLEAN_INSTANCE"] ?? "",
            });

            async function run() {
              const result = await glean.client.chat.createStream({
                messages: [
                  {
                    fragments: [
                      {
                        text: "What are the company holidays this year?",
                      },
                    ],
                  },
                ],
              });

              // Handle the result
              console.log(result);
            }

            run();
        - lang: go
          label: Go (API Client)
          source: "package main\n\nimport(\n\t\"context\"\n\t\"os\"\n\tapiclientgo \"github.com/gleanwork/api-client-go\"\n\t\"github.com/gleanwork/api-client-go/models/components\"\n\t\"log\"\n)\n\nfunc main() {\n    ctx := context.Background()\n\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv(\"GLEAN_API_TOKEN\")),\n        apiclientgo.WithInstance(os.Getenv(\"GLEAN_INSTANCE\")),\n    )\n\n    res, err := s.Client.Chat.CreateStream(ctx, components.ChatRequest{\n        Messages: []components.ChatMessage{\n            components.ChatMessage{\n                Fragments: []components.ChatMessageFragment{\n                    components.ChatMessageFragment{\n                        Text: apiclientgo.String(\"What are the company holidays this year?\"),\n                    },\n                },\n            },\n        },\n    }, nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.ChatRequestStream != nil {\n        // handle response\n    }\n}"
        - lang: java
          label: Java (API Client)
          source: |-
            package hello.world;

            import java.lang.Exception;
            import java.util.List;
            import org.openapis.openapi.Glean;
            import org.openapis.openapi.models.components.*;
            import org.openapis.openapi.models.operations.ChatStreamResponse;

            public class Application {

                public static void main(String[] args) throws Exception {

                    Glean sdk = Glean.builder()
                            .apiToken("<YOUR_BEARER_TOKEN_HERE>")
                            .instance("<YOUR_GLEAN_INSTANCE_HERE>")
                        .build();

                    ChatStreamResponse res = sdk.client().chat().createStream()
                            .chatRequest(ChatRequest.builder()
                                .messages(List.of(
                                    ChatMessage.builder()
                                        .fragments(List.of(
                                            ChatMessageFragment.builder()
                                                .text("What are the company holidays this year?")
                                                .build()))
                                        .build()))
                                .build())
                            .call();

                    if (res.chatRequestStream().isPresent()) {
                        // handle response
                    }
                }
            }
components:
  schemas:
    ChatRequest:
      required:
        - messages
      properties:
        saveChat:
          type: boolean
          description: Save the current interaction as a Chat for the user to access and potentially continue later.
        chatId:
          type: string
          description: The id of the Chat that context should be retrieved from and messages added to. An empty id starts a new Chat, and the Chat is saved if saveChat is true.
        messages:
          type: array
          description: A list of chat messages, from most recent to least recent. It can be assumed that the first chat message in the list is the user's most recent query.
          items:
            description: A message that is rendered as one coherent unit with one given sender.
            properties:
              agentConfig:
                description: Describes the agent that executes the request.
                properties:
                  agent:
                    type: string
                    description: Name of the agent.
                    x-enumDescriptions:
                      DEFAULT: Integrates with your company's knowledge.
                      GPT: Communicates directly with the LLM.
                      UNIVERSAL: Uses both company and web knowledge.
                    enum:
                      - DEFAULT
                      - GPT
                      - UNIVERSAL
                  mode:
                    type: string
                    description: Top level modes to run GleanChat in.
                    x-enumDescriptions:
                      DEFAULT: Used if no mode supplied.
                      QUICK: Deprecated.
                    enum:
                      - DEFAULT
                      - QUICK
                type: object
              author:
                default: USER
                enum:
                  - USER
                  - GLEAN_AI
              citations:
                type: array
                description: A list of Citations that were used to generate the response.
                items:
                  description: Information about the source for a ChatMessage.
                  properties:
                    trackingToken:
                      type: string
                      description: An opaque token that represents this particular result in this particular ChatMessage. To be used for /feedback reporting.
                    sourceDocument:
                      properties:
                        id:
                          type: string
                          description: The Glean Document ID.
                        datasource:
                          type: string
                          description: The app or other repository type from which the document was extracted
                        connectorType:
                          type: string
                          description: The source from which document content was pulled, e.g. an API crawl or browser history
                          enum:
                            - API_CRAWL
                            - BROWSER_CRAWL
                            - BROWSER_HISTORY
                            - BUILTIN
                            - FEDERATED_SEARCH
                            - PUSH_API
                            - WEB_CRAWL
                            - NATIVE_HISTORY
                        docType:
                          type: string
                          description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                        content:
                          properties:
                            fullTextList:
                              type: array
                              description: The plaintext content of the document.
                              items:
                                type: string
                          type: object
                        containerDocument:
                          type: object
                          description: Document object
                        parentDocument:
                          type: object
                          description: Document object
                        title:
                          type: string
                          description: The title of the document.
                        url:
                          type: string
                          description: A permalink for the document.
                        metadata:
                          type: object
                          description: DocumentMetadata object
                        sections:
                          type: array
                          description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                          items:
                            type: object
                            properties:
                              title:
                                type: string
                                description: The title of the document section (e.g. the section header).
                              url:
                                type: string
                                description: The permalink of the document section.
                      type: object
                    sourceFile:
                      type: object
                      description: Structure for file uploaded by a user for Chat.
                      properties:
                        id:
                          type: string
                          description: Unique identifier of the file.
                          example: FILE_1234
                        url:
                          type: string
                          description: Url of the file.
                          example: www.google.com
                        name:
                          type: string
                          description: Name of the uploaded file.
                          example: sample.pdf
                        metadata:
                          type: object
                          description: Metadata of a file uploaded by a user for Chat.
                          properties:
                            status:
                              type: string
                              description: Current status of the file.
                              x-include-enum-class-prefix: true
                              enum:
                                - PROCESSING
                                - PROCESSED
                                - FAILED
                                - DELETED
                            uploadTime:
                              type: integer
                              format: int64
                              description: Upload time, in epoch seconds.
                            processedSize:
                              type: integer
                              format: int64
                              description: Size of the processed file in bytes.
                            failureReason:
                              type: string
                              description: Reason for failed status.
                              x-include-enum-class-prefix: true
                              enum:
                                - PARSE_FAILED
                                - AV_SCAN_FAILED
                                - FILE_TOO_SMALL
                                - FILE_TOO_LARGE
                                - FILE_EXTENSION_UNSUPPORTED
                                - FILE_METADATA_VALIDATION_FAIL
                                - FILE_PROCESSING_TIMED_OUT
                            mimeType:
                              description: MIME type of the file.
                              type: string
                    sourcePerson:
                      required:
                        - name
                        - obfuscatedId
                      example:
                        name: George Clooney
                        obfuscatedId: abc123
                      properties:
                        name:
                          type: string
                          description: The display name.
                        obfuscatedId:
                          type: string
                          description: An opaque identifier that can be used to request metadata for a Person.
                        relatedDocuments:
                          type: array
                          description: A list of documents related to this person.
                          items:
                            type: object
                            description: RelatedDocuments object
                            additionalProperties: true
                        metadata:
                          type: object
                          description: PersonMetadata object
                      type: object
                    referenceRanges:
                      description: Each reference range and its corresponding snippets
                      type: array
                      items:
                        description: Each text range from the response can correspond to an array of snippets from the citation source.
                        properties:
                          textRange:
                            required:
                              - startIndex
                            description: A subsection of a given string to which some special formatting should be applied.
                            properties:
                              startIndex:
                                type: integer
                                description: The inclusive start index of the range.
                              endIndex:
                                type: integer
                                description: The exclusive end index of the range.
                              type:
                                type: string
                                enum:
                                  - BOLD
                                  - CITATION
                                  - HIGHLIGHT
                                  - LINK
                              url:
                                type: string
                                description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                              document:
                                properties:
                                  id:
                                    type: string
                                    description: The Glean Document ID.
                                  datasource:
                                    type: string
                                    description: The app or other repository type from which the document was extracted
                                  connectorType:
                                    type: string
                                    description: The source from which document content was pulled, e.g. an API crawl or browser history
                                    enum:
                                      - API_CRAWL
                                      - BROWSER_CRAWL
                                      - BROWSER_HISTORY
                                      - BUILTIN
                                      - FEDERATED_SEARCH
                                      - PUSH_API
                                      - WEB_CRAWL
                                      - NATIVE_HISTORY
                                  docType:
                                    type: string
                                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                  content:
                                    properties:
                                      fullTextList:
                                        type: array
                                        description: The plaintext content of the document.
                                        items:
                                          type: string
                                    type: object
                                  containerDocument:
                                    type: object
                                    description: Document object
                                  parentDocument:
                                    type: object
                                    description: Document object
                                  title:
                                    type: string
                                    description: The title of the document.
                                  url:
                                    type: string
                                    description: A permalink for the document.
                                  metadata:
                                    type: object
                                    description: DocumentMetadata object
                                  sections:
                                    type: array
                                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                    items:
                                      type: object
                                      properties:
                                        title:
                                          type: string
                                          description: The title of the document section (e.g. the section header).
                                        url:
                                          type: string
                                          description: The permalink of the document section.
                                type: object
                            type: object
                          snippets:
                            type: array
                            items:
                              required:
                                - snippet
                              example:
                                snippet: snippet
                                mimeType: mimeType
                              properties:
                                snippet:
                                  type: string
                                  description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                                mimeType:
                                  type: string
                                  description: The mime type of the snippets, currently either text/plain or text/html.
                                text:
                                  type: string
                                  description: A matching snippet from the document with no highlights.
                                snippetTextOrdering:
                                  type: integer
                                  description: Used for sorting based off the snippet's location within all_snippetable_text
                                ranges:
                                  type: array
                                  description: The bolded ranges within text.
                                  items:
                                    required:
                                      - startIndex
                                    description: A subsection of a given string to which some special formatting should be applied.
                                    properties:
                                      startIndex:
                                        type: integer
                                        description: The inclusive start index of the range.
                                      endIndex:
                                        type: integer
                                        description: The exclusive end index of the range.
                                      type:
                                        type: string
                                        enum:
                                          - BOLD
                                          - CITATION
                                          - HIGHLIGHT
                                          - LINK
                                      url:
                                        type: string
                                        description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                      document:
                                        properties:
                                          id:
                                            type: string
                                            description: The Glean Document ID.
                                          datasource:
                                            type: string
                                            description: The app or other repository type from which the document was extracted
                                          connectorType:
                                            type: string
                                            description: The source from which document content was pulled, e.g. an API crawl or browser history
                                            enum:
                                              - API_CRAWL
                                              - BROWSER_CRAWL
                                              - BROWSER_HISTORY
                                              - BUILTIN
                                              - FEDERATED_SEARCH
                                              - PUSH_API
                                              - WEB_CRAWL
                                              - NATIVE_HISTORY
                                          docType:
                                            type: string
                                            description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                          content:
                                            properties:
                                              fullTextList:
                                                type: array
                                                description: The plaintext content of the document.
                                                items:
                                                  type: string
                                            type: object
                                          containerDocument:
                                            type: object
                                            description: Document object
                                          parentDocument:
                                            type: object
                                            description: Document object
                                          title:
                                            type: string
                                            description: The title of the document.
                                          url:
                                            type: string
                                            description: A permalink for the document.
                                          metadata:
                                            type: object
                                            description: DocumentMetadata object
                                          sections:
                                            type: array
                                            description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                            items:
                                              type: object
                                              properties:
                                                title:
                                                  type: string
                                                  description: The title of the document section (e.g. the section header).
                                                url:
                                                  type: string
                                                  description: The permalink of the document section.
                                        type: object
                                    type: object
                                url:
                                  type: string
                                  description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                              type: object
                        type: object
                  type: object
              uploadedFileIds:
                type: array
                description: IDs of files uploaded in the message that are referenced to generate the answer.
                items:
                  type: string
              fragments:
                type: array
                description: A list of rich data used to represent the response or formulate a request. These are linearly stitched together to support richer data formats beyond simple text.
                items:
                  description: Represents a part of a ChatMessage that originates from a single action/tool. It is designed to support rich data formats beyond simple text, allowing for a more dynamic and interactive chat experience. Each fragment can include various types of content, such as text, search queries, action information, and more. Also, each ChatMessageFragment should only have one of structuredResults, querySuggestion, writeAction, followupAction, or file.
                  type: object
                  properties:
                    structuredResults:
                      type: array
                      description: An array of entities in the work graph retrieved via a data request.
                      items:
                        description: A single object that can support any object in the work graph. Only a single object will be populated.
                        properties:
                          document:
                            properties:
                              id:
                                type: string
                                description: The Glean Document ID.
                              datasource:
                                type: string
                                description: The app or other repository type from which the document was extracted
                              connectorType:
                                type: string
                                description: The source from which document content was pulled, e.g. an API crawl or browser history
                                enum:
                                  - API_CRAWL
                                  - BROWSER_CRAWL
                                  - BROWSER_HISTORY
                                  - BUILTIN
                                  - FEDERATED_SEARCH
                                  - PUSH_API
                                  - WEB_CRAWL
                                  - NATIVE_HISTORY
                              docType:
                                type: string
                                description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                              content:
                                properties:
                                  fullTextList:
                                    type: array
                                    description: The plaintext content of the document.
                                    items:
                                      type: string
                                type: object
                              containerDocument:
                                type: object
                                description: Document object
                              parentDocument:
                                type: object
                                description: Document object
                              title:
                                type: string
                                description: The title of the document.
                              url:
                                type: string
                                description: A permalink for the document.
                              metadata:
                                type: object
                                description: DocumentMetadata object
                              sections:
                                type: array
                                description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                items:
                                  type: object
                                  properties:
                                    title:
                                      type: string
                                      description: The title of the document section (e.g. the section header).
                                    url:
                                      type: string
                                      description: The permalink of the document section.
                            type: object
                          person:
                            required:
                              - name
                              - obfuscatedId
                            example:
                              name: George Clooney
                              obfuscatedId: abc123
                            properties:
                              name:
                                type: string
                                description: The display name.
                              obfuscatedId:
                                type: string
                                description: An opaque identifier that can be used to request metadata for a Person.
                              relatedDocuments:
                                type: array
                                description: A list of documents related to this person.
                                items:
                                  type: object
                                  description: RelatedDocuments object
                                  additionalProperties: true
                              metadata:
                                type: object
                                description: PersonMetadata object
                            type: object
                          customer:
                            required:
                              - id
                              - company
                            properties:
                              id:
                                type: string
                                description: Unique identifier.
                              domains:
                                type: array
                                description: Link to company's associated website domains.
                                items:
                                  type: string
                              company:
                                required:
                                  - name
                                properties:
                                  name:
                                    type: string
                                    description: User-friendly display name.
                                  profileUrl:
                                    type: string
                                    description: Link to internal company company profile.
                                  websiteUrls:
                                    type: array
                                    description: Link to company's associated websites.
                                    items:
                                      type: string
                                  logoUrl:
                                    type: string
                                    description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                                  location:
                                    type: string
                                    description: User facing string representing the company's location.
                                    example: New York City
                                  phone:
                                    type: string
                                    description: Phone number as a number string.
                                  fax:
                                    type: string
                                    description: Fax number as a number string.
                                  industry:
                                    type: string
                                    description: User facing string representing the company's industry.
                                    example: Finances
                                  annualRevenue:
                                    type: number
                                    format: double
                                    description: Average company's annual revenue for reference.
                                  numberOfEmployees:
                                    type: integer
                                    format: int64
                                    description: Average company's number of employees for reference.
                                  stockSymbol:
                                    type: string
                                    description: Company's stock symbol if company is public.
                                  foundedDate:
                                    type: string
                                    format: date
                                    description: The date when the company was founded.
                                  about:
                                    type: string
                                    description: User facing description of company.
                                    example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                                type: object
                              documentCounts:
                                type: object
                                description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                                additionalProperties:
                                  type: integer
                              poc:
                                type: array
                                description: A list of POC for company.
                                items:
                                  required:
                                    - name
                                    - obfuscatedId
                                  example:
                                    name: George Clooney
                                    obfuscatedId: abc123
                                  properties:
                                    name:
                                      type: string
                                      description: The display name.
                                    obfuscatedId:
                                      type: string
                                      description: An opaque identifier that can be used to request metadata for a Person.
                                    relatedDocuments:
                                      type: array
                                      description: A list of documents related to this person.
                                      items:
                                        type: object
                                        description: RelatedDocuments object
                                        additionalProperties: true
                                    metadata:
                                      type: object
                                      description: PersonMetadata object
                                  type: object
                              metadata:
                                properties:
                                  datasourceId:
                                    type: string
                                    description: The user visible id of the salesforce customer account.
                                  customData:
                                    type: object
                                    description: Custom fields specific to individual datasources
                                    additionalProperties:
                                      $ref: '#/components/schemas/CustomDataValue'
                                type: object
                              mergedCustomers:
                                type: array
                                description: A list of Customers.
                                items:
                                  type: object
                                  description: Customer object
                                  additionalProperties: true
                              startDate:
                                type: string
                                format: date
                                description: The date when the interaction with customer started.
                              contractAnnualRevenue:
                                type: number
                                format: double
                                description: Average contract annual revenue with that customer.
                              notes:
                                type: string
                                description: User facing (potentially generated) notes about company.
                                example: CIO is interested in trying out the product.
                            type: object
                          team:
                            type: object
                            properties:
                              relatedObjects:
                                type: object
                                description: A list of objects related to a source object.
                                additionalProperties:
                                  $ref: '#/components/schemas/RelatedObjectEdge'
                              permissions:
                                properties:
                                  write:
                                    description: Describes the write permissions levels that a user has for a specific feature
                                    properties:
                                      scopeType:
                                        type: string
                                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                        enum:
                                          - GLOBAL
                                          - OWN
                                      create:
                                        type: boolean
                                        description: True if user has create permission for this feature and scope
                                      update:
                                        type: boolean
                                        description: True if user has update permission for this feature and scope
                                      delete:
                                        type: boolean
                                        description: True if user has delete permission for this feature and scope
                                    type: object
                                type: object
                              id:
                                type: string
                                description: Unique identifier
                              name:
                                type: string
                                description: Team name
                              description:
                                type: string
                                description: A description of the team
                              businessUnit:
                                type: string
                                description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                              department:
                                type: string
                                description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                              photoUrl:
                                type: string
                                format: url
                                description: A link to the team's photo.
                              bannerUrl:
                                type: string
                                format: url
                                description: A link to the team's banner photo.
                              externalLink:
                                type: string
                                format: uri
                                description: Link to a team page on the internet or your company's intranet
                              members:
                                type: array
                                description: The members on this team
                                items:
                                  required:
                                    - person
                                  type: object
                                  description: Metadata about the relationship of a person to a team.
                                  properties:
                                    person:
                                      required:
                                        - name
                                        - obfuscatedId
                                      example:
                                        name: George Clooney
                                        obfuscatedId: abc123
                                      properties:
                                        name:
                                          type: string
                                          description: The display name.
                                        obfuscatedId:
                                          type: string
                                          description: An opaque identifier that can be used to request metadata for a Person.
                                        relatedDocuments:
                                          type: array
                                          description: A list of documents related to this person.
                                          items:
                                            type: object
                                            description: RelatedDocuments object
                                            additionalProperties: true
                                        metadata:
                                          type: object
                                          description: PersonMetadata object
                                      type: object
                                    relationship:
                                      type: string
                                      description: The team member's relationship to the team. This defaults to MEMBER if not set.
                                      default: MEMBER
                                      enum:
                                        - MEMBER
                                        - MANAGER
                                        - LEAD
                                        - POINT_OF_CONTACT
                                        - OTHER
                                    customRelationshipStr:
                                      type: string
                                      description: Displayed name for the relationship if relationship is set to `OTHER`.
                                    joinDate:
                                      type: string
                                      format: date-time
                                      description: The team member's start date
                              memberCount:
                                type: integer
                                description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                              emails:
                                type: array
                                description: The emails for this team
                                items:
                                  properties:
                                    email:
                                      type: string
                                      format: email
                                      description: An email address
                                    type:
                                      type: string
                                      enum:
                                        - PRIMARY
                                        - SECONDARY
                                        - ONCALL
                                        - OTHER
                                      default: OTHER
                                    isUserGenerated:
                                      type: boolean
                                      description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                                  type: object
                              customFields:
                                type: array
                                description: Customizable fields for additional team information.
                                items:
                                  required:
                                    - label
                                    - values
                                    - displayable
                                  properties:
                                    label:
                                      type: string
                                      description: A user-facing label for this field.
                                    values:
                                      type: array
                                      items:
                                        oneOf:
                                          - properties:
                                              strText:
                                                type: string
                                                description: Text field for string value.
                                            type: object
                                          - properties:
                                              urlAnchor:
                                                type: string
                                                description: Anchor text for hyperlink.
                                              urlLink:
                                                type: string
                                                description: Link for this URL.
                                            type: object
                                          - properties:
                                              person:
                                                required:
                                                  - name
                                                  - obfuscatedId
                                                example:
                                                  name: George Clooney
                                                  obfuscatedId: abc123
                                                properties:
                                                  name:
                                                    type: string
                                                    description: The display name.
                                                  obfuscatedId:
                                                    type: string
                                                    description: An opaque identifier that can be used to request metadata for a Person.
                                                  relatedDocuments:
                                                    type: array
                                                    description: A list of documents related to this person.
                                                    items:
                                                      type: object
                                                      description: RelatedDocuments object
                                                      additionalProperties: true
                                                  metadata:
                                                    type: object
                                                    description: PersonMetadata object
                                                type: object
                                            type: object
                                    displayable:
                                      type: boolean
                                      description: Determines whether the client should display this custom field
                                      default: true
                                  type: object
                              datasourceProfiles:
                                type: array
                                description: The datasource profiles of the team
                                items:
                                  required:
                                    - datasource
                                    - handle
                                  properties:
                                    datasource:
                                      type: string
                                      example: github
                                      description: The datasource the profile is of.
                                    handle:
                                      type: string
                                      description: The display name of the entity in the given datasource.
                                    url:
                                      type: string
                                      description: URL to view the entity's profile.
                                    nativeAppUrl:
                                      type: string
                                      description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                                    isUserGenerated:
                                      type: boolean
                                      description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                                  type: object
                              datasource:
                                type: string
                                description: the data source of the team, e.g. GDRIVE
                              createdFrom:
                                type: string
                                description: For teams created from docs, the doc title. Otherwise empty.
                              lastUpdatedAt:
                                type: string
                                format: date-time
                                description: when this team was last updated.
                              status:
                                type: string
                                description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                                default: PROCESSED
                                enum:
                                  - PROCESSED
                                  - QUEUED_FOR_CREATION
                                  - QUEUED_FOR_DELETION
                              canBeDeleted:
                                type: boolean
                                description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                                default: true
                              loggingId:
                                type: string
                                description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                            required:
                              - id
                              - name
                          customEntity:
                            type: object
                            properties:
                              permissions:
                                properties:
                                  write:
                                    description: Describes the write permissions levels that a user has for a specific feature
                                    properties:
                                      scopeType:
                                        type: string
                                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                        enum:
                                          - GLOBAL
                                          - OWN
                                      create:
                                        type: boolean
                                        description: True if user has create permission for this feature and scope
                                      update:
                                        type: boolean
                                        description: True if user has update permission for this feature and scope
                                      delete:
                                        type: boolean
                                        description: True if user has delete permission for this feature and scope
                                    type: object
                                type: object
                              id:
                                type: string
                                description: Unique identifier.
                              title:
                                type: string
                                description: Title or name of the custom entity.
                              datasource:
                                type: string
                                description: The datasource the custom entity is from.
                              objectType:
                                type: string
                                description: The type of the entity. Interpretation is specific to each datasource
                              metadata:
                                properties:
                                  customData:
                                    type: object
                                    description: Custom fields specific to individual datasources
                                    additionalProperties:
                                      $ref: '#/components/schemas/CustomDataValue'
                                type: object
                              roles:
                                type: array
                                description: A list of user roles for the custom entity explicitly granted by the owner.
                                items:
                                  required:
                                    - role
                                  properties:
                                    sourceDocumentSpec:
                                      oneOf:
                                        - type: object
                                          properties:
                                            url:
                                              type: string
                                              description: The URL of the document.
                                        - type: object
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of the document.
                                        - type: object
                                          properties:
                                            ugcType:
                                              type: string
                                              enum:
                                                - ANNOUNCEMENTS
                                                - ANSWERS
                                                - COLLECTIONS
                                                - SHORTCUTS
                                              description: The type of the user generated content (UGC datasource).
                                            contentId:
                                              type: integer
                                              description: The id for user generated content.
                                            docType:
                                              type: string
                                              description: The specific type of the user generated content type.
                                    person:
                                      required:
                                        - name
                                        - obfuscatedId
                                      example:
                                        name: George Clooney
                                        obfuscatedId: abc123
                                      properties:
                                        name:
                                          type: string
                                          description: The display name.
                                        obfuscatedId:
                                          type: string
                                          description: An opaque identifier that can be used to request metadata for a Person.
                                        relatedDocuments:
                                          type: array
                                          description: A list of documents related to this person.
                                          items:
                                            type: object
                                            description: RelatedDocuments object
                                            additionalProperties: true
                                        metadata:
                                          type: object
                                          description: PersonMetadata object
                                      type: object
                                    group:
                                      required:
                                        - type
                                        - id
                                      properties:
                                        type:
                                          type: string
                                          description: The type of user group
                                          enum:
                                            - DEPARTMENT
                                            - ALL
                                            - TEAM
                                            - JOB_TITLE
                                            - ROLE_TYPE
                                            - LOCATION
                                            - REGION
                                            - EXTERNAL_GROUP
                                        id:
                                          type: string
                                          description: A unique identifier for the group. May be the same as name.
                                        name:
                                          type: string
                                          description: Name of the group.
                                      type: object
                                    role:
                                      type: string
                                      description: A user's role with respect to a specific document.
                                      enum:
                                        - OWNER
                                        - VIEWER
                                        - ANSWER_MODERATOR
                                        - EDITOR
                                        - VERIFIER
                                  type: object
                          answer:
                            type: object
                            description: Answer object
                          extractedQnA:
                            properties:
                              heading:
                                type: string
                                description: Heading text that was matched to produce this result.
                              question:
                                type: string
                                description: Question text that was matched to produce this result.
                              questionResult:
                                type: object
                                description: Flattened SearchResult
                                example:
                                  snippets:
                                    - snippet: snippet
                                      mimeType: mimeType
                                  metadata:
                                    container: container
                                    createTime: '2000-01-23T04:56:07.000Z'
                                    datasource: datasource
                                    author:
                                      name: name
                                    documentId: documentId
                                    updateTime: '2000-01-23T04:56:07.000Z'
                                    mimeType: mimeType
                                    objectType: objectType
                                  title: title
                                  url: https://example.com/foo/bar
                                  nativeAppUrl: slack://foo/bar
                                  mustIncludeSuggestions:
                                    - missingTerm: container
                                      query: container
                                properties:
                                  structuredResults:
                                    type: array
                                    description: An array of entities in the work graph retrieved via a data request.
                                    items:
                                      type: object
                                      description: StructuredResult object (circular reference)
                                      additionalProperties: true
                                  trackingToken:
                                    type: string
                                    description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                                  document:
                                    properties:
                                      id:
                                        type: string
                                        description: The Glean Document ID.
                                      datasource:
                                        type: string
                                        description: The app or other repository type from which the document was extracted
                                      connectorType:
                                        type: string
                                        description: The source from which document content was pulled, e.g. an API crawl or browser history
                                        enum:
                                          - API_CRAWL
                                          - BROWSER_CRAWL
                                          - BROWSER_HISTORY
                                          - BUILTIN
                                          - FEDERATED_SEARCH
                                          - PUSH_API
                                          - WEB_CRAWL
                                          - NATIVE_HISTORY
                                      docType:
                                        type: string
                                        description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                      content:
                                        properties:
                                          fullTextList:
                                            type: array
                                            description: The plaintext content of the document.
                                            items:
                                              type: string
                                        type: object
                                      containerDocument:
                                        type: object
                                        description: Document object
                                      parentDocument:
                                        type: object
                                        description: Document object
                                      title:
                                        type: string
                                        description: The title of the document.
                                      url:
                                        type: string
                                        description: A permalink for the document.
                                      metadata:
                                        type: object
                                        description: DocumentMetadata object
                                      sections:
                                        type: array
                                        description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              description: The title of the document section (e.g. the section header).
                                            url:
                                              type: string
                                              description: The permalink of the document section.
                                    type: object
                                  title:
                                    type: string
                                  url:
                                    type: string
                                  nativeAppUrl:
                                    type: string
                                    description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                                  snippets:
                                    type: array
                                    description: Text content from the result document which contains search query terms, if available.
                                    items:
                                      required:
                                        - snippet
                                      example:
                                        snippet: snippet
                                        mimeType: mimeType
                                      properties:
                                        snippet:
                                          type: string
                                          description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                                        mimeType:
                                          type: string
                                          description: The mime type of the snippets, currently either text/plain or text/html.
                                        text:
                                          type: string
                                          description: A matching snippet from the document with no highlights.
                                        snippetTextOrdering:
                                          type: integer
                                          description: Used for sorting based off the snippet's location within all_snippetable_text
                                        ranges:
                                          type: array
                                          description: The bolded ranges within text.
                                          items:
                                            required:
                                              - startIndex
                                            description: A subsection of a given string to which some special formatting should be applied.
                                            properties:
                                              startIndex:
                                                type: integer
                                                description: The inclusive start index of the range.
                                              endIndex:
                                                type: integer
                                                description: The exclusive end index of the range.
                                              type:
                                                type: string
                                                enum:
                                                  - BOLD
                                                  - CITATION
                                                  - HIGHLIGHT
                                                  - LINK
                                              url:
                                                type: string
                                                description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                              document:
                                                properties:
                                                  id:
                                                    type: string
                                                    description: The Glean Document ID.
                                                  datasource:
                                                    type: string
                                                    description: The app or other repository type from which the document was extracted
                                                  connectorType:
                                                    type: string
                                                    description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                    enum:
                                                      - API_CRAWL
                                                      - BROWSER_CRAWL
                                                      - BROWSER_HISTORY
                                                      - BUILTIN
                                                      - FEDERATED_SEARCH
                                                      - PUSH_API
                                                      - WEB_CRAWL
                                                      - NATIVE_HISTORY
                                                  docType:
                                                    type: string
                                                    description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                                  content:
                                                    properties:
                                                      fullTextList:
                                                        type: array
                                                        description: The plaintext content of the document.
                                                        items:
                                                          type: string
                                                    type: object
                                                  containerDocument:
                                                    type: object
                                                    description: Document object
                                                  parentDocument:
                                                    type: object
                                                    description: Document object
                                                  title:
                                                    type: string
                                                    description: The title of the document.
                                                  url:
                                                    type: string
                                                    description: A permalink for the document.
                                                  metadata:
                                                    type: object
                                                    description: DocumentMetadata object
                                                  sections:
                                                    type: array
                                                    description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                    items:
                                                      type: object
                                                      properties:
                                                        title:
                                                          type: string
                                                          description: The title of the document section (e.g. the section header).
                                                        url:
                                                          type: string
                                                          description: The permalink of the document section.
                                                type: object
                                            type: object
                                        url:
                                          type: string
                                          description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                                      type: object
                                  fullText:
                                    type: string
                                    description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                                  fullTextList:
                                    type: array
                                    description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                                    items:
                                      type: string
                                  relatedResults:
                                    type: array
                                    description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                                    items:
                                      properties:
                                        relation:
                                          type: string
                                          description: How this document relates to the including entity.
                                          enum:
                                            - ATTACHMENT
                                            - CANONICAL
                                            - CASE
                                            - CONTACT
                                            - CONVERSATION_MESSAGES
                                            - EXPERT
                                            - FROM
                                            - HIGHLIGHT
                                            - OPPORTUNITY
                                            - RECENT
                                            - SOURCE
                                            - TICKET
                                            - TRANSCRIPT
                                            - WITH
                                          x-enumDescriptions:
                                            CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                        associatedEntityId:
                                          type: string
                                          description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                        querySuggestion:
                                          required:
                                            - query
                                          example:
                                            query: app:github type:pull author:mortimer
                                            label: Mortimer's PRs
                                            datasource: github
                                          properties:
                                            missingTerm:
                                              type: string
                                              description: A query term missing from the original query on which this suggestion is based.
                                            query:
                                              type: string
                                              description: The query being suggested (e.g. enforcing the missing term from the original query).
                                            searchProviderInfo:
                                              example:
                                                name: Google
                                                logo: https://app.glean.com/images/feather/globe.svg
                                                searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                              properties:
                                                name:
                                                  type: string
                                                  description: Name of the search provider.
                                                logoUrl:
                                                  type: string
                                                  description: URL to the provider's logo.
                                                searchLinkUrlTemplate:
                                                  type: string
                                                  description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                              type: object
                                            label:
                                              type: string
                                              description: A user-facing description to display for the suggestion.
                                            datasource:
                                              type: string
                                              description: The datasource associated with the suggestion.
                                            requestOptions:
                                              required:
                                                - facetBucketSize
                                              example:
                                                datasourceFilter: JIRA
                                                datasourcesFilter:
                                                  - JIRA
                                                queryOverridesFacetFilters: true
                                                facetFilters:
                                                  - fieldName: fieldName
                                                    values:
                                                      - fieldValues
                                                      - fieldValues
                                                  - fieldName: fieldName
                                                    values:
                                                      - fieldValues
                                                      - fieldValues
                                              properties:
                                                datasourceFilter:
                                                  type: string
                                                  description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                                datasourcesFilter:
                                                  type: array
                                                  description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                                  items:
                                                    type: string
                                                queryOverridesFacetFilters:
                                                  type: boolean
                                                  description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                                facetFilters:
                                                  type: array
                                                  description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                  items:
                                                    example:
                                                      fieldName: type
                                                      values:
                                                        - value: Spreadsheet
                                                          relationType: EQUALS
                                                        - value: Presentation
                                                          relationType: EQUALS
                                                    properties:
                                                      fieldName:
                                                        type: string
                                                        example: owner
                                                      values:
                                                        type: array
                                                        description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                        items:
                                                          properties:
                                                            value:
                                                              type: string
                                                              example: Spreadsheet
                                                            relationType:
                                                              type: string
                                                              enum:
                                                                - EQUALS
                                                                - ID_EQUALS
                                                                - LT
                                                                - GT
                                                              example: EQUALS
                                                            isNegated:
                                                              type: boolean
                                                              deprecated: true
                                                              description: DEPRECATED - please use relationType instead
                                                          type: object
                                                      groupName:
                                                        type: string
                                                        example: Spreadsheet
                                                        description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                    type: object
                                                facetFilterSets:
                                                  type: array
                                                  description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                                  items:
                                                    description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                    properties:
                                                      filters:
                                                        type: array
                                                        items:
                                                          example:
                                                            fieldName: type
                                                            values:
                                                              - value: Spreadsheet
                                                                relationType: EQUALS
                                                              - value: Presentation
                                                                relationType: EQUALS
                                                          properties:
                                                            fieldName:
                                                              type: string
                                                              example: owner
                                                            values:
                                                              type: array
                                                              description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                              items:
                                                                properties:
                                                                  value:
                                                                    type: string
                                                                    example: Spreadsheet
                                                                  relationType:
                                                                    type: string
                                                                    enum:
                                                                      - EQUALS
                                                                      - ID_EQUALS
                                                                      - LT
                                                                      - GT
                                                                    example: EQUALS
                                                                  isNegated:
                                                                    type: boolean
                                                                    deprecated: true
                                                                    description: DEPRECATED - please use relationType instead
                                                                type: object
                                                            groupName:
                                                              type: string
                                                              example: Spreadsheet
                                                              description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                          type: object
                                                    type: object
                                                facetBucketFilter:
                                                  properties:
                                                    facet:
                                                      type: string
                                                      description: The facet whose buckets should be filtered.
                                                    prefix:
                                                      type: string
                                                      description: The per-term prefix that facet buckets should be filtered on.
                                                  type: object
                                                facetBucketSize:
                                                  type: integer
                                                  description: The maximum number of FacetBuckets to return in each FacetResult.
                                                defaultFacets:
                                                  type: array
                                                  description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                                  items:
                                                    type: string
                                                authTokens:
                                                  type: array
                                                  description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                                  items:
                                                    required:
                                                      - accessToken
                                                      - datasource
                                                    example:
                                                      accessToken: 123abc
                                                      datasource: gmail
                                                      scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                      tokenType: Bearer
                                                      authUser: '1'
                                                    properties:
                                                      accessToken:
                                                        type: string
                                                      datasource:
                                                        type: string
                                                      scope:
                                                        type: string
                                                      tokenType:
                                                        type: string
                                                      authUser:
                                                        description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                        type: string
                                                      expiration:
                                                        description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                        type: integer
                                                        format: int64
                                                    type: object
                                                fetchAllDatasourceCounts:
                                                  type: boolean
                                                  description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                                responseHints:
                                                  type: array
                                                  description: Array of hints containing which fields should be populated in the response.
                                                  items:
                                                    type: string
                                                    description: Hints for the response content.
                                                    x-enumDescriptions:
                                                      ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                      FACET_RESULTS: Return only facet results.
                                                      QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                      RESULTS: Return search result documents.
                                                      SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                    enum:
                                                      - ALL_RESULT_COUNTS
                                                      - FACET_RESULTS
                                                      - QUERY_METADATA
                                                      - RESULTS
                                                      - SPELLCHECK_METADATA
                                                timezoneOffset:
                                                  type: integer
                                                  description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                                disableSpellcheck:
                                                  type: boolean
                                                  description: Whether or not to disable spellcheck.
                                                disableQueryAutocorrect:
                                                  type: boolean
                                                  description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                                returnLlmContentOverSnippets:
                                                  type: boolean
                                                  description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                                inclusions:
                                                  properties:
                                                    containerSpecs:
                                                      description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                      type: array
                                                      items:
                                                        oneOf:
                                                          - type: object
                                                            properties:
                                                              url:
                                                                type: string
                                                                description: The URL of the document.
                                                          - type: object
                                                            properties:
                                                              id:
                                                                type: string
                                                                description: The ID of the document.
                                                          - type: object
                                                            properties:
                                                              ugcType:
                                                                type: string
                                                                enum:
                                                                  - ANNOUNCEMENTS
                                                                  - ANSWERS
                                                                  - COLLECTIONS
                                                                  - SHORTCUTS
                                                                description: The type of the user generated content (UGC datasource).
                                                              contentId:
                                                                type: integer
                                                                description: The id for user generated content.
                                                              docType:
                                                                type: string
                                                                description: The specific type of the user generated content type.
                                                  type: object
                                                exclusions:
                                                  properties:
                                                    containerSpecs:
                                                      description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                      type: array
                                                      items:
                                                        oneOf:
                                                          - type: object
                                                            properties:
                                                              url:
                                                                type: string
                                                                description: The URL of the document.
                                                          - type: object
                                                            properties:
                                                              id:
                                                                type: string
                                                                description: The ID of the document.
                                                          - type: object
                                                            properties:
                                                              ugcType:
                                                                type: string
                                                                enum:
                                                                  - ANNOUNCEMENTS
                                                                  - ANSWERS
                                                                  - COLLECTIONS
                                                                  - SHORTCUTS
                                                                description: The type of the user generated content (UGC datasource).
                                                              contentId:
                                                                type: integer
                                                                description: The id for user generated content.
                                                              docType:
                                                                type: string
                                                                description: The specific type of the user generated content type.
                                                  type: object
                                              type: object
                                            ranges:
                                              type: array
                                              description: The bolded ranges within the query of the QuerySuggestion.
                                              items:
                                                required:
                                                  - startIndex
                                                description: A subsection of a given string to which some special formatting should be applied.
                                                properties:
                                                  startIndex:
                                                    type: integer
                                                    description: The inclusive start index of the range.
                                                  endIndex:
                                                    type: integer
                                                    description: The exclusive end index of the range.
                                                  type:
                                                    type: string
                                                    enum:
                                                      - BOLD
                                                      - CITATION
                                                      - HIGHLIGHT
                                                      - LINK
                                                  url:
                                                    type: string
                                                    description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                                  document:
                                                    properties:
                                                      id:
                                                        type: string
                                                        description: The Glean Document ID.
                                                      datasource:
                                                        type: string
                                                        description: The app or other repository type from which the document was extracted
                                                      connectorType:
                                                        type: string
                                                        description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                        enum:
                                                          - API_CRAWL
                                                          - BROWSER_CRAWL
                                                          - BROWSER_HISTORY
                                                          - BUILTIN
                                                          - FEDERATED_SEARCH
                                                          - PUSH_API
                                                          - WEB_CRAWL
                                                          - NATIVE_HISTORY
                                                      docType:
                                                        type: string
                                                        description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                                      content:
                                                        properties:
                                                          fullTextList:
                                                            type: array
                                                            description: The plaintext content of the document.
                                                            items:
                                                              type: string
                                                        type: object
                                                      containerDocument:
                                                        type: object
                                                        description: Document object
                                                      parentDocument:
                                                        type: object
                                                        description: Document object
                                                      title:
                                                        type: string
                                                        description: The title of the document.
                                                      url:
                                                        type: string
                                                        description: A permalink for the document.
                                                      metadata:
                                                        type: object
                                                        description: DocumentMetadata object
                                                      sections:
                                                        type: array
                                                        description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                        items:
                                                          type: object
                                                          properties:
                                                            title:
                                                              type: string
                                                              description: The title of the document section (e.g. the section header).
                                                            url:
                                                              type: string
                                                              description: The permalink of the document section.
                                                    type: object
                                                type: object
                                            inputDetails:
                                              example:
                                                hasCopyPaste: true
                                              properties:
                                                hasCopyPaste:
                                                  type: boolean
                                                  description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                              type: object
                                          type: object
                                        documents:
                                          type: array
                                          description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                          deprecated: true
                                          items:
                                            properties:
                                              id:
                                                type: string
                                                description: The Glean Document ID.
                                              datasource:
                                                type: string
                                                description: The app or other repository type from which the document was extracted
                                              connectorType:
                                                type: string
                                                description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                enum:
                                                  - API_CRAWL
                                                  - BROWSER_CRAWL
                                                  - BROWSER_HISTORY
                                                  - BUILTIN
                                                  - FEDERATED_SEARCH
                                                  - PUSH_API
                                                  - WEB_CRAWL
                                                  - NATIVE_HISTORY
                                              docType:
                                                type: string
                                                description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                              content:
                                                properties:
                                                  fullTextList:
                                                    type: array
                                                    description: The plaintext content of the document.
                                                    items:
                                                      type: string
                                                type: object
                                              containerDocument:
                                                type: object
                                                description: Document object
                                              parentDocument:
                                                type: object
                                                description: Document object
                                              title:
                                                type: string
                                                description: The title of the document.
                                              url:
                                                type: string
                                                description: A permalink for the document.
                                              metadata:
                                                type: object
                                                description: DocumentMetadata object
                                              sections:
                                                type: array
                                                description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                items:
                                                  type: object
                                                  properties:
                                                    title:
                                                      type: string
                                                      description: The title of the document section (e.g. the section header).
                                                    url:
                                                      type: string
                                                      description: The permalink of the document section.
                                            type: object
                                        results:
                                          type: array
                                          description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                          items:
                                            type: object
                                            description: SearchResult object
                                            additionalProperties: true
                                      type: object
                                  clusteredResults:
                                    type: array
                                    description: A list of results that should be displayed as associated with this result.
                                    items:
                                      type: object
                                      description: SearchResult object
                                      additionalProperties: true
                                  allClusteredResults:
                                    type: array
                                    description: A list of results that should be displayed as associated with this result.
                                    items:
                                      type: object
                                      description: ClusterGroup object
                                      additionalProperties: true
                                  attachmentCount:
                                    type: integer
                                    description: The total number of attachments.
                                  attachments:
                                    type: array
                                    description: A (potentially partial) list of results representing documents attached to the main result document.
                                    items:
                                      type: object
                                      description: SearchResult object
                                      additionalProperties: true
                                  backlinkResults:
                                    type: array
                                    description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                                    items:
                                      type: object
                                      description: SearchResult object
                                      additionalProperties: true
                                  clusterType:
                                    type: string
                                    description: The reason for inclusion of clusteredResults.
                                    enum:
                                      - SIMILAR
                                      - FRESHNESS
                                      - TITLE
                                      - CONTENT
                                      - NONE
                                      - THREAD_REPLY
                                      - THREAD_ROOT
                                      - PREFIX
                                      - SUFFIX
                                  mustIncludeSuggestions:
                                    properties:
                                      suggestions:
                                        type: array
                                        items:
                                          required:
                                            - query
                                          example:
                                            query: app:github type:pull author:mortimer
                                            label: Mortimer's PRs
                                            datasource: github
                                          properties:
                                            missingTerm:
                                              type: string
                                              description: A query term missing from the original query on which this suggestion is based.
                                            query:
                                              type: string
                                              description: The query being suggested (e.g. enforcing the missing term from the original query).
                                            searchProviderInfo:
                                              example:
                                                name: Google
                                                logo: https://app.glean.com/images/feather/globe.svg
                                                searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                              properties:
                                                name:
                                                  type: string
                                                  description: Name of the search provider.
                                                logoUrl:
                                                  type: string
                                                  description: URL to the provider's logo.
                                                searchLinkUrlTemplate:
                                                  type: string
                                                  description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                              type: object
                                            label:
                                              type: string
                                              description: A user-facing description to display for the suggestion.
                                            datasource:
                                              type: string
                                              description: The datasource associated with the suggestion.
                                            requestOptions:
                                              required:
                                                - facetBucketSize
                                              example:
                                                datasourceFilter: JIRA
                                                datasourcesFilter:
                                                  - JIRA
                                                queryOverridesFacetFilters: true
                                                facetFilters:
                                                  - fieldName: fieldName
                                                    values:
                                                      - fieldValues
                                                      - fieldValues
                                                  - fieldName: fieldName
                                                    values:
                                                      - fieldValues
                                                      - fieldValues
                                              properties:
                                                datasourceFilter:
                                                  type: string
                                                  description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                                datasourcesFilter:
                                                  type: array
                                                  description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                                  items:
                                                    type: string
                                                queryOverridesFacetFilters:
                                                  type: boolean
                                                  description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                                facetFilters:
                                                  type: array
                                                  description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                  items:
                                                    example:
                                                      fieldName: type
                                                      values:
                                                        - value: Spreadsheet
                                                          relationType: EQUALS
                                                        - value: Presentation
                                                          relationType: EQUALS
                                                    properties:
                                                      fieldName:
                                                        type: string
                                                        example: owner
                                                      values:
                                                        type: array
                                                        description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                        items:
                                                          properties:
                                                            value:
                                                              type: string
                                                              example: Spreadsheet
                                                            relationType:
                                                              type: string
                                                              enum:
                                                                - EQUALS
                                                                - ID_EQUALS
                                                                - LT
                                                                - GT
                                                              example: EQUALS
                                                            isNegated:
                                                              type: boolean
                                                              deprecated: true
                                                              description: DEPRECATED - please use relationType instead
                                                          type: object
                                                      groupName:
                                                        type: string
                                                        example: Spreadsheet
                                                        description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                    type: object
                                                facetFilterSets:
                                                  type: array
                                                  description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                                  items:
                                                    description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                    properties:
                                                      filters:
                                                        type: array
                                                        items:
                                                          example:
                                                            fieldName: type
                                                            values:
                                                              - value: Spreadsheet
                                                                relationType: EQUALS
                                                              - value: Presentation
                                                                relationType: EQUALS
                                                          properties:
                                                            fieldName:
                                                              type: string
                                                              example: owner
                                                            values:
                                                              type: array
                                                              description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                              items:
                                                                properties:
                                                                  value:
                                                                    type: string
                                                                    example: Spreadsheet
                                                                  relationType:
                                                                    type: string
                                                                    enum:
                                                                      - EQUALS
                                                                      - ID_EQUALS
                                                                      - LT
                                                                      - GT
                                                                    example: EQUALS
                                                                  isNegated:
                                                                    type: boolean
                                                                    deprecated: true
                                                                    description: DEPRECATED - please use relationType instead
                                                                type: object
                                                            groupName:
                                                              type: string
                                                              example: Spreadsheet
                                                              description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                          type: object
                                                    type: object
                                                facetBucketFilter:
                                                  properties:
                                                    facet:
                                                      type: string
                                                      description: The facet whose buckets should be filtered.
                                                    prefix:
                                                      type: string
                                                      description: The per-term prefix that facet buckets should be filtered on.
                                                  type: object
                                                facetBucketSize:
                                                  type: integer
                                                  description: The maximum number of FacetBuckets to return in each FacetResult.
                                                defaultFacets:
                                                  type: array
                                                  description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                                  items:
                                                    type: string
                                                authTokens:
                                                  type: array
                                                  description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                                  items:
                                                    required:
                                                      - accessToken
                                                      - datasource
                                                    example:
                                                      accessToken: 123abc
                                                      datasource: gmail
                                                      scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                      tokenType: Bearer
                                                      authUser: '1'
                                                    properties:
                                                      accessToken:
                                                        type: string
                                                      datasource:
                                                        type: string
                                                      scope:
                                                        type: string
                                                      tokenType:
                                                        type: string
                                                      authUser:
                                                        description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                        type: string
                                                      expiration:
                                                        description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                        type: integer
                                                        format: int64
                                                    type: object
                                                fetchAllDatasourceCounts:
                                                  type: boolean
                                                  description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                                responseHints:
                                                  type: array
                                                  description: Array of hints containing which fields should be populated in the response.
                                                  items:
                                                    type: string
                                                    description: Hints for the response content.
                                                    x-enumDescriptions:
                                                      ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                      FACET_RESULTS: Return only facet results.
                                                      QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                      RESULTS: Return search result documents.
                                                      SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                    enum:
                                                      - ALL_RESULT_COUNTS
                                                      - FACET_RESULTS
                                                      - QUERY_METADATA
                                                      - RESULTS
                                                      - SPELLCHECK_METADATA
                                                timezoneOffset:
                                                  type: integer
                                                  description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                                disableSpellcheck:
                                                  type: boolean
                                                  description: Whether or not to disable spellcheck.
                                                disableQueryAutocorrect:
                                                  type: boolean
                                                  description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                                returnLlmContentOverSnippets:
                                                  type: boolean
                                                  description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                                inclusions:
                                                  properties:
                                                    containerSpecs:
                                                      description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                      type: array
                                                      items:
                                                        oneOf:
                                                          - type: object
                                                            properties:
                                                              url:
                                                                type: string
                                                                description: The URL of the document.
                                                          - type: object
                                                            properties:
                                                              id:
                                                                type: string
                                                                description: The ID of the document.
                                                          - type: object
                                                            properties:
                                                              ugcType:
                                                                type: string
                                                                enum:
                                                                  - ANNOUNCEMENTS
                                                                  - ANSWERS
                                                                  - COLLECTIONS
                                                                  - SHORTCUTS
                                                                description: The type of the user generated content (UGC datasource).
                                                              contentId:
                                                                type: integer
                                                                description: The id for user generated content.
                                                              docType:
                                                                type: string
                                                                description: The specific type of the user generated content type.
                                                  type: object
                                                exclusions:
                                                  properties:
                                                    containerSpecs:
                                                      description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                      type: array
                                                      items:
                                                        oneOf:
                                                          - type: object
                                                            properties:
                                                              url:
                                                                type: string
                                                                description: The URL of the document.
                                                          - type: object
                                                            properties:
                                                              id:
                                                                type: string
                                                                description: The ID of the document.
                                                          - type: object
                                                            properties:
                                                              ugcType:
                                                                type: string
                                                                enum:
                                                                  - ANNOUNCEMENTS
                                                                  - ANSWERS
                                                                  - COLLECTIONS
                                                                  - SHORTCUTS
                                                                description: The type of the user generated content (UGC datasource).
                                                              contentId:
                                                                type: integer
                                                                description: The id for user generated content.
                                                              docType:
                                                                type: string
                                                                description: The specific type of the user generated content type.
                                                  type: object
                                              type: object
                                            ranges:
                                              type: array
                                              description: The bolded ranges within the query of the QuerySuggestion.
                                              items:
                                                required:
                                                  - startIndex
                                                description: A subsection of a given string to which some special formatting should be applied.
                                                properties:
                                                  startIndex:
                                                    type: integer
                                                    description: The inclusive start index of the range.
                                                  endIndex:
                                                    type: integer
                                                    description: The exclusive end index of the range.
                                                  type:
                                                    type: string
                                                    enum:
                                                      - BOLD
                                                      - CITATION
                                                      - HIGHLIGHT
                                                      - LINK
                                                  url:
                                                    type: string
                                                    description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                                  document:
                                                    properties:
                                                      id:
                                                        type: string
                                                        description: The Glean Document ID.
                                                      datasource:
                                                        type: string
                                                        description: The app or other repository type from which the document was extracted
                                                      connectorType:
                                                        type: string
                                                        description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                        enum:
                                                          - API_CRAWL
                                                          - BROWSER_CRAWL
                                                          - BROWSER_HISTORY
                                                          - BUILTIN
                                                          - FEDERATED_SEARCH
                                                          - PUSH_API
                                                          - WEB_CRAWL
                                                          - NATIVE_HISTORY
                                                      docType:
                                                        type: string
                                                        description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                                      content:
                                                        properties:
                                                          fullTextList:
                                                            type: array
                                                            description: The plaintext content of the document.
                                                            items:
                                                              type: string
                                                        type: object
                                                      containerDocument:
                                                        type: object
                                                        description: Document object
                                                      parentDocument:
                                                        type: object
                                                        description: Document object
                                                      title:
                                                        type: string
                                                        description: The title of the document.
                                                      url:
                                                        type: string
                                                        description: A permalink for the document.
                                                      metadata:
                                                        type: object
                                                        description: DocumentMetadata object
                                                      sections:
                                                        type: array
                                                        description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                        items:
                                                          type: object
                                                          properties:
                                                            title:
                                                              type: string
                                                              description: The title of the document section (e.g. the section header).
                                                            url:
                                                              type: string
                                                              description: The permalink of the document section.
                                                    type: object
                                                type: object
                                            inputDetails:
                                              example:
                                                hasCopyPaste: true
                                              properties:
                                                hasCopyPaste:
                                                  type: boolean
                                                  description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                              type: object
                                          type: object
                                      person:
                                        required:
                                          - name
                                          - obfuscatedId
                                        example:
                                          name: George Clooney
                                          obfuscatedId: abc123
                                        properties:
                                          name:
                                            type: string
                                            description: The display name.
                                          obfuscatedId:
                                            type: string
                                            description: An opaque identifier that can be used to request metadata for a Person.
                                          relatedDocuments:
                                            type: array
                                            description: A list of documents related to this person.
                                            items:
                                              type: object
                                              description: RelatedDocuments object
                                              additionalProperties: true
                                          metadata:
                                            type: object
                                            description: PersonMetadata object
                                        type: object
                                    type: object
                                  querySuggestion:
                                    required:
                                      - query
                                    example:
                                      query: app:github type:pull author:mortimer
                                      label: Mortimer's PRs
                                      datasource: github
                                    properties:
                                      missingTerm:
                                        type: string
                                        description: A query term missing from the original query on which this suggestion is based.
                                      query:
                                        type: string
                                        description: The query being suggested (e.g. enforcing the missing term from the original query).
                                      searchProviderInfo:
                                        example:
                                          name: Google
                                          logo: https://app.glean.com/images/feather/globe.svg
                                          searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                        properties:
                                          name:
                                            type: string
                                            description: Name of the search provider.
                                          logoUrl:
                                            type: string
                                            description: URL to the provider's logo.
                                          searchLinkUrlTemplate:
                                            type: string
                                            description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                        type: object
                                      label:
                                        type: string
                                        description: A user-facing description to display for the suggestion.
                                      datasource:
                                        type: string
                                        description: The datasource associated with the suggestion.
                                      requestOptions:
                                        required:
                                          - facetBucketSize
                                        example:
                                          datasourceFilter: JIRA
                                          datasourcesFilter:
                                            - JIRA
                                          queryOverridesFacetFilters: true
                                          facetFilters:
                                            - fieldName: fieldName
                                              values:
                                                - fieldValues
                                                - fieldValues
                                            - fieldName: fieldName
                                              values:
                                                - fieldValues
                                                - fieldValues
                                        properties:
                                          datasourceFilter:
                                            type: string
                                            description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                          datasourcesFilter:
                                            type: array
                                            description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                            items:
                                              type: string
                                          queryOverridesFacetFilters:
                                            type: boolean
                                            description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                          facetFilters:
                                            type: array
                                            description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                            items:
                                              example:
                                                fieldName: type
                                                values:
                                                  - value: Spreadsheet
                                                    relationType: EQUALS
                                                  - value: Presentation
                                                    relationType: EQUALS
                                              properties:
                                                fieldName:
                                                  type: string
                                                  example: owner
                                                values:
                                                  type: array
                                                  description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                  items:
                                                    properties:
                                                      value:
                                                        type: string
                                                        example: Spreadsheet
                                                      relationType:
                                                        type: string
                                                        enum:
                                                          - EQUALS
                                                          - ID_EQUALS
                                                          - LT
                                                          - GT
                                                        example: EQUALS
                                                      isNegated:
                                                        type: boolean
                                                        deprecated: true
                                                        description: DEPRECATED - please use relationType instead
                                                    type: object
                                                groupName:
                                                  type: string
                                                  example: Spreadsheet
                                                  description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                              type: object
                                          facetFilterSets:
                                            type: array
                                            description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                            items:
                                              description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                              properties:
                                                filters:
                                                  type: array
                                                  items:
                                                    example:
                                                      fieldName: type
                                                      values:
                                                        - value: Spreadsheet
                                                          relationType: EQUALS
                                                        - value: Presentation
                                                          relationType: EQUALS
                                                    properties:
                                                      fieldName:
                                                        type: string
                                                        example: owner
                                                      values:
                                                        type: array
                                                        description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                        items:
                                                          properties:
                                                            value:
                                                              type: string
                                                              example: Spreadsheet
                                                            relationType:
                                                              type: string
                                                              enum:
                                                                - EQUALS
                                                                - ID_EQUALS
                                                                - LT
                                                                - GT
                                                              example: EQUALS
                                                            isNegated:
                                                              type: boolean
                                                              deprecated: true
                                                              description: DEPRECATED - please use relationType instead
                                                          type: object
                                                      groupName:
                                                        type: string
                                                        example: Spreadsheet
                                                        description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                                    type: object
                                              type: object
                                          facetBucketFilter:
                                            properties:
                                              facet:
                                                type: string
                                                description: The facet whose buckets should be filtered.
                                              prefix:
                                                type: string
                                                description: The per-term prefix that facet buckets should be filtered on.
                                            type: object
                                          facetBucketSize:
                                            type: integer
                                            description: The maximum number of FacetBuckets to return in each FacetResult.
                                          defaultFacets:
                                            type: array
                                            description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                            items:
                                              type: string
                                          authTokens:
                                            type: array
                                            description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                            items:
                                              required:
                                                - accessToken
                                                - datasource
                                              example:
                                                accessToken: 123abc
                                                datasource: gmail
                                                scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                tokenType: Bearer
                                                authUser: '1'
                                              properties:
                                                accessToken:
                                                  type: string
                                                datasource:
                                                  type: string
                                                scope:
                                                  type: string
                                                tokenType:
                                                  type: string
                                                authUser:
                                                  description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                  type: string
                                                expiration:
                                                  description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                  type: integer
                                                  format: int64
                                              type: object
                                          fetchAllDatasourceCounts:
                                            type: boolean
                                            description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                          responseHints:
                                            type: array
                                            description: Array of hints containing which fields should be populated in the response.
                                            items:
                                              type: string
                                              description: Hints for the response content.
                                              x-enumDescriptions:
                                                ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                FACET_RESULTS: Return only facet results.
                                                QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                RESULTS: Return search result documents.
                                                SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                              enum:
                                                - ALL_RESULT_COUNTS
                                                - FACET_RESULTS
                                                - QUERY_METADATA
                                                - RESULTS
                                                - SPELLCHECK_METADATA
                                          timezoneOffset:
                                            type: integer
                                            description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                          disableSpellcheck:
                                            type: boolean
                                            description: Whether or not to disable spellcheck.
                                          disableQueryAutocorrect:
                                            type: boolean
                                            description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                          returnLlmContentOverSnippets:
                                            type: boolean
                                            description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                          inclusions:
                                            properties:
                                              containerSpecs:
                                                description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                type: array
                                                items:
                                                  oneOf:
                                                    - type: object
                                                      properties:
                                                        url:
                                                          type: string
                                                          description: The URL of the document.
                                                    - type: object
                                                      properties:
                                                        id:
                                                          type: string
                                                          description: The ID of the document.
                                                    - type: object
                                                      properties:
                                                        ugcType:
                                                          type: string
                                                          enum:
                                                            - ANNOUNCEMENTS
                                                            - ANSWERS
                                                            - COLLECTIONS
                                                            - SHORTCUTS
                                                          description: The type of the user generated content (UGC datasource).
                                                        contentId:
                                                          type: integer
                                                          description: The id for user generated content.
                                                        docType:
                                                          type: string
                                                          description: The specific type of the user generated content type.
                                            type: object
                                          exclusions:
                                            properties:
                                              containerSpecs:
                                                description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                                type: array
                                                items:
                                                  oneOf:
                                                    - type: object
                                                      properties:
                                                        url:
                                                          type: string
                                                          description: The URL of the document.
                                                    - type: object
                                                      properties:
                                                        id:
                                                          type: string
                                                          description: The ID of the document.
                                                    - type: object
                                                      properties:
                                                        ugcType:
                                                          type: string
                                                          enum:
                                                            - ANNOUNCEMENTS
                                                            - ANSWERS
                                                            - COLLECTIONS
                                                            - SHORTCUTS
                                                          description: The type of the user generated content (UGC datasource).
                                                        contentId:
                                                          type: integer
                                                          description: The id for user generated content.
                                                        docType:
                                                          type: string
                                                          description: The specific type of the user generated content type.
                                            type: object
                                        type: object
                                      ranges:
                                        type: array
                                        description: The bolded ranges within the query of the QuerySuggestion.
                                        items:
                                          required:
                                            - startIndex
                                          description: A subsection of a given string to which some special formatting should be applied.
                                          properties:
                                            startIndex:
                                              type: integer
                                              description: The inclusive start index of the range.
                                            endIndex:
                                              type: integer
                                              description: The exclusive end index of the range.
                                            type:
                                              type: string
                                              enum:
                                                - BOLD
                                                - CITATION
                                                - HIGHLIGHT
                                                - LINK
                                            url:
                                              type: string
                                              description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                            document:
                                              properties:
                                                id:
                                                  type: string
                                                  description: The Glean Document ID.
                                                datasource:
                                                  type: string
                                                  description: The app or other repository type from which the document was extracted
                                                connectorType:
                                                  type: string
                                                  description: The source from which document content was pulled, e.g. an API crawl or browser history
                                                  enum:
                                                    - API_CRAWL
                                                    - BROWSER_CRAWL
                                                    - BROWSER_HISTORY
                                                    - BUILTIN
                                                    - FEDERATED_SEARCH
                                                    - PUSH_API
                                                    - WEB_CRAWL
                                                    - NATIVE_HISTORY
                                                docType:
                                                  type: string
                                                  description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                                content:
                                                  properties:
                                                    fullTextList:
                                                      type: array
                                                      description: The plaintext content of the document.
                                                      items:
                                                        type: string
                                                  type: object
                                                containerDocument:
                                                  type: object
                                                  description: Document object
                                                parentDocument:
                                                  type: object
                                                  description: Document object
                                                title:
                                                  type: string
                                                  description: The title of the document.
                                                url:
                                                  type: string
                                                  description: A permalink for the document.
                                                metadata:
                                                  type: object
                                                  description: DocumentMetadata object
                                                sections:
                                                  type: array
                                                  description: A list of content sub-sections in the document, e.g. text blocks with different headings in a Drive doc or Confluence page.
                                                  items:
                                                    type: object
                                                    properties:
                                                      title:
                                                        type: string
                                                        description: The title of the document section (e.g. the section header).
                                                      url:
                                                        type: string
                                                        description: The permalink of the document section.
                                              type: object
                                          type: object
                                      inputDetails:
                                        example:
                                          hasCopyPaste: true
                                        properties:
                                          hasCopyPaste:
                                            type: boolean
                                            description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                        type: object
                                    type: object
                                  prominence:
                                    type: string
                                    description: |
                                      The level of visual distinction that should be given to a result.
                                    x-enumDescriptions:
                                      HERO: A high-confidence result that should feature prominently on the page.
                                      PROMOTED: May not be the best result but should be given additional visual distinction.
                                      STANDARD: Should not be distinct from any other results.
                                    enum:
                                      - HERO
                                      - PROMOTED
                                      - STANDARD
                                  attachmentContext:
                                    type: string
                                    description: Additional context for the relationship between the result and the document it's attached to.
                                  pins:
                                    type: array
                                    description: A list of pins associated with this search result.
                                    items:
                                      type: object
                                      properties:
                                        queries:
                                          type: array
                                          description: The query strings for which the pinned result will show.
                                          items:
                                            type: string
                                        audienceFilters:
                                          type: array
                                          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                                          items:
                                            example:
                                              fieldName: type
                                              values:
                                                - value: Spreadsheet
                                                  relationType: EQUALS
                                                - value: Presentation
                                                  relationType: EQUALS
                                            properties:
                                              fieldName:
                                                type: string
                                                example: owner
                                              values:
                                                type: array
                                                description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                                items:
                                                  properties:
                                                    value:
                                                      type: string
                                                      example: Spreadsheet
                                                    relationType:
                                                      type: string
                                                      enum:
                                                        - EQUALS
                                                        - ID_EQUALS
                                                        - LT
                                                        - GT
                                                      example: EQUALS
                                                    isNegated:
                                                      type: boolean
                                                      deprecated: true
                                                      description: DEPRECATED - please use relationType instead
                                                  type: object
                                              groupName:
                                                type: string
                                                example: Spreadsheet
                                                description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                            type: object
                                        id:
                                          type: string
                                          description: The opaque id of the pin.
                                        documentId:
                                          type: string
                                          description: The document which should be a pinned result.
                                        attribution:
                                          required:
                                            - name
                                            - obfuscatedId
                                          example:
                                            name: George Clooney
                                            obfuscatedId: abc123
                                          properties:
                                            name:
                                              type: string
                                              description: The display name.
                                            obfuscatedId:
                                              type: string
                                              description: An opaque identifier that can be used to request metadata for a Person.
                                            relatedDocuments:
                                              type: array
                                              description: A list of documents related to this person.
                                              items:
                                                type: object
                                                description: RelatedDocuments object
                                                additionalProperties: true
                                            metadata:
                                              type: object
                                              description: PersonMetadata object
                                          type: object
                                        updatedBy:
                                          required:
                                            - name
                                            - obfuscatedId
                                          example:
                                            name: George Clooney
                                            obfuscatedId: abc123
                                          properties:
                                            name:
                                              type: string
                                              description: The display name.
                                            obfuscatedId:
                                              type: string
                                              description: An opaque identifier that can be used to request metadata for a Person.
                                            relatedDocuments:
                                              type: array
                                              description: A list of documents related to this person.
                                              items:
                                                type: object
                                                description: RelatedDocuments object
                                                additionalProperties: true
                                            metadata:
                                              type: object
                                              description: PersonMetadata object
                                          type: object
                                        createTime:
                                          type: string
                                          format: date-time
                                        updateTime:
                                          type: string
                                          format: date-time
                                      required:
                                        - documentId
                            type: object
                          meeting:
                            properties:
                              id:
                                type: string
                              title:
                                type: string
                              description:
                                type: string
                              url:
                                type: string
                              startTime:
                                type: string
                                format: date-time
                              endTime:
                                type: string
                                format: date-time
                              attendees:
                                properties:
                                  people:
                                    type: array
                                    description: Full details of some of the attendees of this event
                                    items:
                                      required:
                                        - person
                                      properties:
                                        isOrganizer:
                                          type: boolean
                                          description: Whether or not this attendee is an organizer.
                                        isInGroup:
                                          type: boolean
                                          description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                                        person:
                                          required:
                                            - name
                                            - obfuscatedId
                                          example:
                                            name: George Clooney
                                            obfuscatedId: abc123
                                          properties:
                                            name:
                                              type: string
                                              description: The display name.
                                            obfuscatedId:
                                              type: string
                                              description: An opaque identifier that can be used to request metadata for a Person.
                                            relatedDocuments:
                                              type: array
                                              description: A list of documents related to this person.
                                              items:
                                                type: object
                                                description: RelatedDocuments object
                                                additionalProperties: true
                                            metadata:
                                              type: object
                                              description: PersonMetadata object
                                          type: object
                                        groupAttendees:
                                          type: array
                                          description: If this attendee is a group, represents the list of individual attendees in the group.
                                          items:
                                            type: object
                                            description: CalendarAttendee object
                                            additionalProperties: true
                                        responseStatus:
                                          type: string
                                          enum:
                                            - ACCEPTED
                                            - DECLINED
                                            - NO_RESPONSE
                                            - TENTATIVE
                                      type: object
                                  isLimit:
                                    type: boolean
                                    description: Whether the total count of the people returned is at the retrieval limit.
                                  total:
                                    type: integer
                                    description: Total number of attendees in this event.
                                  numAccepted:
                                    type: integer
                                    description: Total number of attendees who have accepted this event.
                                  numDeclined:
                                    type: integer
                                    description: Total number of attendees who have declined this event.
                                  numNoResponse:
                                    type: integer
                                    description: Total number of attendees who have not responded to this event.
                                  numTentative:
                                    type: integer
                                    description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                                type: object
                            type: object
                          app:
                            required:
                              - datasource
                            properties:
                              datasource:
                                type: string
                                description: The app or other repository type this represents
                              docType:
                                type: string
                                description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                              mimeType:
                                type: string
                                description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                              iconUrl:
                                type: string
                                description: If there is available icon URL.
                            type: object
                          collection:
                            type: object
                            description: Flattened Collection
                            properties:
                              name:
                                type: string
                                description: The unique name of the Collection.
                              description:
                                type: string
                                description: A brief summary of the Collection's contents.
                              addedRoles:
                                type: array
                                description: A list of added user roles for the Collection.
                                items:
                                  required:
                                    - role
                                  properties:
                                    sourceDocumentSpec:
                                      oneOf:
                                        - type: object
                                          properties:
                                            url:
                                              type: string
                                              description: The URL of the document.
                                        - type: object
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of the document.
                                        - type: object
                                          properties:
                                            ugcType:
                                              type: string
                                              enum:
                                                - ANNOUNCEMENTS
                                                - ANSWERS
                                                - COLLECTIONS
                                                - SHORTCUTS
                                              description: The type of the user generated content (UGC datasource).
                                            contentId:
                                              type: integer
                                              description: The id for user generated content.
                                            docType:
                                              type: string
                                              description: The specific type of the user generated content type.
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    group:
                                      required:
                                        - type
                                        - id
                                      properties:
                                        type:
                                          type: string
                                          description: The type of user group
                                          enum:
                                            - DEPARTMENT
                                            - ALL
                                            - TEAM
                                            - JOB_TITLE
                                            - ROLE_TYPE
                                            - LOCATION
                                            - REGION
                                            - EXTERNAL_GROUP
                                        id:
                                          type: string
                                          description: A unique identifier for the group. May be the same as name.
                                        name:
                                          type: string
                                          description: Name of the group.
                                      type: object
                                    role:
                                      type: string
                                      description: A user's role with respect to a specific document.
                                      enum:
                                        - OWNER
                                        - VIEWER
                                        - ANSWER_MODERATOR
                                        - EDITOR
                                        - VERIFIER
                                  type: object
                              removedRoles:
                                type: array
                                description: A list of removed user roles for the Collection.
                                items:
                                  required:
                                    - role
                                  properties:
                                    sourceDocumentSpec:
                                      oneOf:
                                        - type: object
                                          properties:
                                            url:
                                              type: string
                                              description: The URL of the document.
                                        - type: object
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of the document.
                                        - type: object
                                          properties:
                                            ugcType:
                                              type: string
                                              enum:
                                                - ANNOUNCEMENTS
                                                - ANSWERS
                                                - COLLECTIONS
                                                - SHORTCUTS
                                              description: The type of the user generated content (UGC datasource).
                                            contentId:
                                              type: integer
                                              description: The id for user generated content.
                                            docType:
                                              type: string
                                              description: The specific type of the user generated content type.
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    group:
                                      required:
                                        - type
                                        - id
                                      properties:
                                        type:
                                          type: string
                                          description: The type of user group
                                          enum:
                                            - DEPARTMENT
                                            - ALL
                                            - TEAM
                                            - JOB_TITLE
                                            - ROLE_TYPE
                                            - LOCATION
                                            - REGION
                                            - EXTERNAL_GROUP
                                        id:
                                          type: string
                                          description: A unique identifier for the group. May be the same as name.
                                        name:
                                          type: string
                                          description: Name of the group.
                                      type: object
                                    role:
                                      type: string
                                      description: A user's role with respect to a specific document.
                                      enum:
                                        - OWNER
                                        - VIEWER
                                        - ANSWER_MODERATOR
                                        - EDITOR
                                        - VERIFIER
                                  type: object
                              audienceFilters:
                                type: array
                                description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                items:
                                  example:
                                    fieldName: type
                                    values:
                                      - value: Spreadsheet
                                        relationType: EQUALS
                                      - value: Presentation
                                        relationType: EQUALS
                                  properties:
                                    fieldName:
                                      type: string
                                      example: owner
                                    values:
                                      type: array
                                      description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                      items:
                                        properties:
                                          value:
                                            type: string
                                            example: Spreadsheet
                                          relationType:
                                            type: string
                                            enum:
                                              - EQUALS
                                              - ID_EQUALS
                                              - LT
                                              - GT
                                            example: EQUALS
                                          isNegated:
                                            type: boolean
                                            deprecated: true
                                            description: DEPRECATED - please use relationType instead
                                        type: object
                                    groupName:
                                      type: string
                                      example: Spreadsheet
                                      description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                  type: object
                              icon:
                                type: string
                                description: The emoji icon of this Collection.
                              adminLocked:
                                type: boolean
                                description: Indicates whether edits are allowed for everyone or only admins.
                              parentId:
                                type: integer
                                description: The parent of this Collection, or 0 if it's a top-level Collection.
                              thumbnail:
                                properties:
                                  photoId:
                                    type: string
                                    description: Photo id if the thumbnail is from splash.
                                  url:
                                    type: string
                                    description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                                type: object
                              allowedDatasource:
                                type: string
                                description: The datasource type this Collection can hold.
                              permissions:
                                type: object
                                description: Flattened ObjectPermissions
                                properties:
                                  write:
                                    type: object
                                    description: Describes the write permissions levels that a user has for a specific feature
                                    properties:
                                      scopeType:
                                        type: string
                                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                        enum:
                                          - GLOBAL
                                          - OWN
                                        properties: {}
                                      create:
                                        type: boolean
                                        description: True if user has create permission for this feature and scope
                                      update:
                                        type: boolean
                                        description: True if user has update permission for this feature and scope
                                      delete:
                                        type: boolean
                                        description: True if user has delete permission for this feature and scope
                              id:
                                type: integer
                                description: The unique ID of the Collection.
                              createTime:
                                type: string
                                format: date-time
                              updateTime:
                                type: string
                                format: date-time
                              creator:
                                type: object
                                description: Person object
                                additionalProperties: true
                              updatedBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              itemCount:
                                type: integer
                                description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                              childCount:
                                type: integer
                                description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                              items:
                                type: array
                                description: The items in this Collection.
                                items:
                                  type: object
                                  description: CollectionItem object
                                  additionalProperties: true
                              pinMetadata:
                                required:
                                  - pinnedCategories
                                  - eligibleCategoriesForPinning
                                properties:
                                  existingPins:
                                    type: array
                                    description: List of targets this Collection is pinned to.
                                    items:
                                      required:
                                        - category
                                      properties:
                                        category:
                                          type: string
                                          description: Categories a Collection can be pinned to.
                                          enum:
                                            - COMPANY_RESOURCE
                                            - DEPARTMENT_RESOURCE
                                            - TEAM_RESOURCE
                                        value:
                                          type: string
                                          description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                        target:
                                          type: string
                                          description: What targets can a Collection be pinned to.
                                          enum:
                                            - RESOURCE_CARD
                                            - TEAM_PROFILE_PAGE
                                      type: object
                                  eligiblePins:
                                    type: array
                                    description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                                    items:
                                      required:
                                        - id
                                        - target
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the Collection.
                                        target:
                                          required:
                                            - category
                                          properties:
                                            category:
                                              type: string
                                              description: Categories a Collection can be pinned to.
                                              enum:
                                                - COMPANY_RESOURCE
                                                - DEPARTMENT_RESOURCE
                                                - TEAM_RESOURCE
                                            value:
                                              type: string
                                              description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                            target:
                                              type: string
                                              description: What targets can a Collection be pinned to.
                                              enum:
                                                - RESOURCE_CARD
                                                - TEAM_PROFILE_PAGE
                                          type: object
                                      type: object
                                type: object
                              shortcuts:
                                type: array
                                description: The names of the shortcuts (Go Links) that point to this Collection.
                                items:
                                  type: string
                              children:
                                type: array
                                description: The children Collections of this Collection.
                                items:
                                  type: object
                                  description: Collection object
                                  additionalProperties: true
                              roles:
                                type: array
                                description: A list of user roles for the Collection.
                                items:
                                  required:
                                    - role
                                  properties:
                                    sourceDocumentSpec:
                                      oneOf:
                                        - type: object
                                          properties:
                                            url:
                                              type: string
                                              description: The URL of the document.
                                        - type: object
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of the document.
                                        - type: object
                                          properties:
                                            ugcType:
                                              type: string
                                              enum:
                                                - ANNOUNCEMENTS
                                                - ANSWERS
                                                - COLLECTIONS
                                                - SHORTCUTS
                                              description: The type of the user generated content (UGC datasource).
                                            contentId:
                                              type: integer
                                              description: The id for user generated content.
                                            docType:
                                              type: string
                                              description: The specific type of the user generated content type.
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    group:
                                      required:
                                        - type
                                        - id
                                      properties:
                                        type:
                                          type: string
                                          description: The type of user group
                                          enum:
                                            - DEPARTMENT
                                            - ALL
                                            - TEAM
                                            - JOB_TITLE
                                            - ROLE_TYPE
                                            - LOCATION
                                            - REGION
                                            - EXTERNAL_GROUP
                                        id:
                                          type: string
                                          description: A unique identifier for the group. May be the same as name.
                                        name:
                                          type: string
                                          description: Name of the group.
                                      type: object
                                    role:
                                      type: string
                                      description: A user's role with respect to a specific document.
                                      enum:
                                        - OWNER
                                        - VIEWER
                                        - ANSWER_MODERATOR
                                        - EDITOR
                                        - VERIFIER
                                  type: object
                          answerBoard:
                            type: object
                            properties:
                              name:
                                type: string
                                description: The unique name of the Collection.
                              description:
                                type: string
                                description: A brief summary of the Collection's contents.
                              addedRoles:
                                type: array
                                description: A list of added user roles for the Collection.
                                items:
                                  required:
                                    - role
                                  properties:
                                    sourceDocumentSpec:
                                      type: object
                                      description: DocumentSpec object
                                      additionalProperties: true
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    group:
                                      required:
                                        - type
                                        - id
                                      properties:
                                        type:
                                          type: string
                                          description: The type of user group
                                          enum:
                                            - DEPARTMENT
                                            - ALL
                                            - TEAM
                                            - JOB_TITLE
                                            - ROLE_TYPE
                                            - LOCATION
                                            - REGION
                                            - EXTERNAL_GROUP
                                        id:
                                          type: string
                                          description: A unique identifier for the group. May be the same as name.
                                        name:
                                          type: string
                                          description: Name of the group.
                                      type: object
                                    role:
                                      type: string
                                      description: A user's role with respect to a specific document.
                                      enum:
                                        - OWNER
                                        - VIEWER
                                        - ANSWER_MODERATOR
                                        - EDITOR
                                        - VERIFIER
                                  type: object
                              removedRoles:
                                type: array
                                description: A list of removed user roles for the Collection.
                                items:
                                  required:
                                    - role
                                  properties:
                                    sourceDocumentSpec:
                                      type: object
                                      description: DocumentSpec object
                                      additionalProperties: true
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    group:
                                      required:
                                        - type
                                        - id
                                      properties:
                                        type:
                                          type: string
                                          description: The type of user group
                                          enum:
                                            - DEPARTMENT
                                            - ALL
                                            - TEAM
                                            - JOB_TITLE
                                            - ROLE_TYPE
                                            - LOCATION
                                            - REGION
                                            - EXTERNAL_GROUP
                                        id:
                                          type: string
                                          description: A unique identifier for the group. May be the same as name.
                                        name:
                                          type: string
                                          description: Name of the group.
                                      type: object
                                    role:
                                      type: string
                                      description: A user's role with respect to a specific document.
                                      enum:
                                        - OWNER
                                        - VIEWER
                                        - ANSWER_MODERATOR
                                        - EDITOR
                                        - VERIFIER
                                  type: object
                              audienceFilters:
                                type: array
                                description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                items:
                                  example:
                                    fieldName: type
                                    values:
                                      - value: Spreadsheet
                                        relationType: EQUALS
                                      - value: Presentation
                                        relationType: EQUALS
                                  properties:
                                    fieldName:
                                      type: string
                                      example: owner
                                    values:
                                      type: array
                                      description: Within a single FacetFilter, the values are to be treated like an OR. For example, fieldName type with values [EQUALS Presentation, EQUALS Spreadsheet] means we want to show a document if it's a Presentation OR a Spreadsheet.
                                      items:
                                        properties:
                                          value:
                                            type: string
                                            example: Spreadsheet
                                          relationType:
                                            type: string
                                            enum:
                                              - EQUALS
                                              - ID_EQUALS
                                              - LT
                                              - GT
                                            example: EQUALS
                                          isNegated:
                                            type: boolean
                                            deprecated: true
                                            description: DEPRECATED - please use relationType instead
                                        type: object
                                    groupName:
                                      type: string
                                      example: Spreadsheet
                                      description: Indicates the value of a facet, if any, that the given facet is grouped under. This is only used for nested facets, for example, fieldName could be owner and groupName would be Spreadsheet if showing all owners for spreadsheets as a nested facet.
                                  type: object
                              permissions:
                                properties:
                                  write:
                                    description: Describes the write permissions levels that a user has for a specific feature
                                    properties:
                                      scopeType:
                                        type: string
                                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                        enum:
                                          - GLOBAL
                                          - OWN
                                      create:
                                        type: boolean
                                        description: True if user has create permission for this feature and scope
                                      update:
                                        type: boolean
                                        description: True if user has update permission for this feature and scope
                                      delete:
                                        type: boolean
                                        description: True if user has delete permission for this feature and scope
                                    type: object
                                type: object
                              id:
                                type: integer
                                description: The unique ID of the Answer Board.
                              createTime:
                                type: string
                                format: date-time
                              updateTime:
                                type: string
                                format: date-time
                              creator:
                                type: object
                                description: Person object
                                additionalProperties: true
                              updatedBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              itemCount:
                                type: integer
                                description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                              roles:
                                type: array
                                description: A list of user roles for the Answer Board.
                                items:
                                  required:
                                    - role
                                  properties:
                                    sourceDocumentSpec:
                                      type: object
                                      description: DocumentSpec object
                                      additionalProperties: true
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    group:
                                      required:
                                        - type
                                        - id
                                      properties:
                                        type:
                                          type: string
                                          description: The type of user group
                                          enum:
                                            - DEPARTMENT
                                            - ALL
                                            - TEAM
                                            - JOB_TITLE
                                            - ROLE_TYPE
                                            - LOCATION
                                            - REGION
                                            - EXTERNAL_GROUP
                                        id:
                                          type: string
                                          description: A unique identifier for the group. May be the same as name.
                                        name:
                                          type: string
                                          description: Name of the group.
                                      type: object
                                    role:
                                      type: string
                                      description: A user's role with respect to a specific document.
                                      enum:
                                        - OWNER
                                        - VIEWER
                                        - ANSWER_MODERATOR
                                        - EDITOR
                                        - VERIFIER
                                  type: object
                            required:
                              - name
                              - id
                              - description
                          code:
                            example:
                              repoName: scio
                              fileName: README.md
                              matches:
                                - lineNumber: 1
                                  content: Welcome to the beginning
                                  ranges: []
                                - lineNumber: 2
                                  content: Second line of the file
                                  ranges: []
                                - lineNumber: 3
                                  content: hello world hello world
                                  ranges:
                                    - startindex: 0
                                      endIndex: 5
                                    - startIndex: 12
                                      endIndex: 17
                            properties:
                              repoName:
                                type: string
                              fileName:
                                type: string
                              fileUrl:
                                type: string
                              lines:
                                type: array
                                items:
                                  properties:
                                    lineNumber:
                                      type: integer
                                    content:
                                      type: string
                                    ranges:
                                      type: array
                                      description: Index ranges depicting matched sections of the line
                                      items:
                                        required:
                                          - startIndex
                                        description: A subsection of a given string to which some special formatting should be applied.
                                        properties:
                                          startIndex:
                                            type: integer
                                            description: The inclusive start index of the range.
                                          endIndex:
                                            type: integer
                                            description: The exclusive end index of the range.
                                          type:
                                            type: string
                                            enum:
                                              - BOLD
                                              - CITATION
                                              - HIGHLIGHT
                                              - LINK
                                          url:
                                            type: string
                                            description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                          document:
                                            type: object
                                            description: Document object
                                            additionalProperties: true
                                        type: object
                                  type: object
                              isLastMatch:
                                type: boolean
                                description: Last file match for a repo
                            type: object
                          shortcut:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The opaque id of the user generated content.
                              inputAlias:
                                type: string
                                description: Link text following go/ prefix as entered by the user.
                              destinationUrl:
                                type: string
                                description: Destination URL for the shortcut.
                              destinationDocumentId:
                                type: string
                                description: Glean Document ID for the URL, if known.
                              description:
                                type: string
                                description: A short, plain text blurb to help people understand the intent of the shortcut.
                              unlisted:
                                type: boolean
                                description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                              urlTemplate:
                                type: string
                                description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                              addedRoles:
                                type: array
                                description: A list of user roles added for the Shortcut.
                                items:
                                  required:
                                    - role
                                  properties:
                                    sourceDocumentSpec:
                                      type: object
                                      description: DocumentSpec object
                                      additionalProperties: true
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    group:
                                      required:
                                        - type
                                        - id
                                      properties:
                                        type:
                                          type: string
                                          description: The type of user group
                                          enum:
                                            - DEPARTMENT
                                            - ALL
                                            - TEAM
                                            - JOB_TITLE
                                            - ROLE_TYPE
                                            - LOCATION
                                            - REGION
                                            - EXTERNAL_GROUP
                                        id:
                                          type: string
                                          description: A unique identifier for the group. May be the same as name.
                                        name:
                                          type: string
                                          description: Name of the group.
                                      type: object
                                    role:
                                      type: string
                                      description: A user's role with respect to a specific document.
                                      enum:
                                        - OWNER
                                        - VIEWER
                                        - ANSWER_MODERATOR
                                        - EDITOR
                                        - VERIFIER
                                  type: object
                              removedRoles:
                                type: array
                                description: A list of user roles removed for the Shortcut.
                                items:
                                  required:
                                    - role
                                  properties:
                                    sourceDocumentSpec:
                                      type: object
                                      description: DocumentSpec object
                                      additionalProperties: true
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    group:
                                      required:
                                        - type
                                        - id
                                      properties:
                                        type:
                                          type: string
                                          description: The type of user group
                                          enum:
                                            - DEPARTMENT
                                            - ALL
                                            - TEAM
                                            - JOB_TITLE
                                            - ROLE_TYPE
                                            - LOCATION
                                            - REGION
                                            - EXTERNAL_GROUP
                                        id:
                                          type: string
                                          description: A unique identifier for the group. May be the same as name.
                                        name:
                                          type: string
                                          description: Name of the group.
                                      type: object
                                    role:
                                      type: string
                                      description: A user's role with respect to a specific document.
                                      enum:
                                        - OWNER
                                        - VIEWER
                                        - ANSWER_MODERATOR
                                        - EDITOR
                                        - VERIFIER
                                  type: object
                              permissions:
                                properties:
                                  write:
                                    description: Describes the write permissions levels that a user has for a specific feature
                                    properties:
                                      scopeType:
                                        type: string
                                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                        enum:
                                          - GLOBAL
                                          - OWN
                                      create:
                                        type: boolean
                                        description: True if user has create permission for this feature and scope
                                      update:
                                        type: boolean
                                        description: True if user has update permission for this feature and scope
                                      delete:
                                        type: boolean
                                        description: True if user has delete permission for this feature and scope
                                    type: object
                                type: object
                              createdBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              createTime:
                                type: string
                                format: date-time
                                description: The time the shortcut was created in ISO format (ISO 8601).
                              updatedBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              updateTime:
                                type: string
                                format: date-time
                                description: The time the shortcut was updated in ISO format (ISO 8601).
                              destinationDocument:
                                type: object
                                description: Document object
                                additionalProperties: true
                              intermediateUrl:
                                type: string
                                description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                              viewPrefix:
                                type: string
                                description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                              isExternal:
                                type: boolean
                                description: Indicates whether a shortcut is native or external.
                              editUrl:
                                type: string
                                description: The URL using which the user can access the edit page of the shortcut.
                              alias:
                                type: string
                                description: canonical link text following go/ prefix where hyphen/underscore is removed.
                              title:
                                type: string
                                description: Title for the Go Link
                              roles:
                                type: array
                                description: A list of user roles for the Go Link.
                                items:
                                  required:
                                    - role
                                  properties:
                                    sourceDocumentSpec:
                                      type: object
                                      description: DocumentSpec object
                                      additionalProperties: true
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    group:
                                      required:
                                        - type
                                        - id
                                      properties:
                                        type:
                                          type: string
                                          description: The type of user group
                                          enum:
                                            - DEPARTMENT
                                            - ALL
                                            - TEAM
                                            - JOB_TITLE
                                            - ROLE_TYPE
                                            - LOCATION
                                            - REGION
                                            - EXTERNAL_GROUP
                                        id:
                                          type: string
                                          description: A unique identifier for the group. May be the same as name.
                                        name:
                                          type: string
                                          description: Name of the group.
                                      type: object
                                    role:
                                      type: string
                                      description: A user's role with respect to a specific document.
                                      enum:
                                        - OWNER
                                        - VIEWER
                                        - ANSWER_MODERATOR
                                        - EDITOR
                                        - VERIFIER
                                  type: object
                            required:
                              - inputAlias
                          querySuggestions:
                            properties:
                              suggestions:
                                type: array
                                items:
                                  required:
                                    - query
                                  example:
                                    query: app:github type:pull author:mortimer
                                    label: Mortimer's PRs
                                    datasource: github
                                  properties:
                                    missingTerm:
                                      type: string
                                      description: A query term missing from the original query on which this suggestion is based.
                                    query:
                                      type: string
                                      description: The query being suggested (e.g. enforcing the missing term from the original query).
                                    searchProviderInfo:
                                      example:
                                        name: Google
                                        logo: https://app.glean.com/images/feather/globe.svg
                                        searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                      properties:
                                        name:
                                          type: string
                                          description: Name of the search provider.
                                        logoUrl:
                                          type: string
                                          description: URL to the provider's logo.
                                        searchLinkUrlTemplate:
                                          type: string
                                          description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                      type: object
                                    label:
                                      type: string
                                      description: A user-facing description to display for the suggestion.
                                    datasource:
                                      type: string
                                      description: The datasource associated with the suggestion.
                                    requestOptions:
                                      required:
                                        - facetBucketSize
                                      example:
                                        datasourceFilter: JIRA
                                        datasourcesFilter:
                                          - JIRA
                                        queryOverridesFacetFilters: true
                                        facetFilters:
                                          - fieldName: fieldName
                                            values:
                                              - fieldValues
                                              - fieldValues
                                          - fieldName: fieldName
                                            values:
                                              - fieldValues
                                              - fieldValues
                                      properties:
                                        datasourceFilter:
                                          type: string
                                          description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                        datasourcesFilter:
                                          type: array
                                          description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                          items:
                                            type: string
                                        queryOverridesFacetFilters:
                                          type: boolean
                                          description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                        facetFilters:
                                          type: array
                                          description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                          items:
                                            type: object
                                            description: FacetFilter object
                                            additionalProperties: true
                                        facetFilterSets:
                                          type: array
                                          description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                          items:
                                            description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                            properties:
                                              filters:
                                                type: array
                                                items:
                                                  type: object
                                                  description: FacetFilter object
                                                  additionalProperties: true
                                            type: object
                                        facetBucketFilter:
                                          properties:
                                            facet:
                                              type: string
                                              description: The facet whose buckets should be filtered.
                                            prefix:
                                              type: string
                                              description: The per-term prefix that facet buckets should be filtered on.
                                          type: object
                                        facetBucketSize:
                                          type: integer
                                          description: The maximum number of FacetBuckets to return in each FacetResult.
                                        defaultFacets:
                                          type: array
                                          description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                          items:
                                            type: string
                                        authTokens:
                                          type: array
                                          description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                          items:
                                            required:
                                              - accessToken
                                              - datasource
                                            example:
                                              accessToken: 123abc
                                              datasource: gmail
                                              scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                              tokenType: Bearer
                                              authUser: '1'
                                            properties:
                                              accessToken:
                                                type: string
                                              datasource:
                                                type: string
                                              scope:
                                                type: string
                                              tokenType:
                                                type: string
                                              authUser:
                                                description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                type: string
                                              expiration:
                                                description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                type: integer
                                                format: int64
                                            type: object
                                        fetchAllDatasourceCounts:
                                          type: boolean
                                          description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                        responseHints:
                                          type: array
                                          description: Array of hints containing which fields should be populated in the response.
                                          items:
                                            type: string
                                            description: Hints for the response content.
                                            x-enumDescriptions:
                                              ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                              FACET_RESULTS: Return only facet results.
                                              QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                              RESULTS: Return search result documents.
                                              SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                            enum:
                                              - ALL_RESULT_COUNTS
                                              - FACET_RESULTS
                                              - QUERY_METADATA
                                              - RESULTS
                                              - SPELLCHECK_METADATA
                                        timezoneOffset:
                                          type: integer
                                          description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                        disableSpellcheck:
                                          type: boolean
                                          description: Whether or not to disable spellcheck.
                                        disableQueryAutocorrect:
                                          type: boolean
                                          description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                        returnLlmContentOverSnippets:
                                          type: boolean
                                          description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                        inclusions:
                                          properties:
                                            containerSpecs:
                                              description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                              type: array
                                              items:
                                                type: object
                                                description: DocumentSpec object
                                                additionalProperties: true
                                          type: object
                                        exclusions:
                                          properties:
                                            containerSpecs:
                                              description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                              type: array
                                              items:
                                                type: object
                                                description: DocumentSpec object
                                                additionalProperties: true
                                          type: object
                                      type: object
                                    ranges:
                                      type: array
                                      description: The bolded ranges within the query of the QuerySuggestion.
                                      items:
                                        required:
                                          - startIndex
                                        description: A subsection of a given string to which some special formatting should be applied.
                                        properties:
                                          startIndex:
                                            type: integer
                                            description: The inclusive start index of the range.
                                          endIndex:
                                            type: integer
                                            description: The exclusive end index of the range.
                                          type:
                                            type: string
                                            enum:
                                              - BOLD
                                              - CITATION
                                              - HIGHLIGHT
                                              - LINK
                                          url:
                                            type: string
                                            description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                          document:
                                            type: object
                                            description: Document object
                                            additionalProperties: true
                                        type: object
                                    inputDetails:
                                      example:
                                        hasCopyPaste: true
                                      properties:
                                        hasCopyPaste:
                                          type: boolean
                                          description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                      type: object
                                  type: object
                              person:
                                type: object
                                description: Person object
                                additionalProperties: true
                            type: object
                          relatedDocuments:
                            type: array
                            description: A list of documents related to this structured result.
                            items:
                              properties:
                                relation:
                                  type: string
                                  description: How this document relates to the including entity.
                                  enum:
                                    - ATTACHMENT
                                    - CANONICAL
                                    - CASE
                                    - CONTACT
                                    - CONVERSATION_MESSAGES
                                    - EXPERT
                                    - FROM
                                    - HIGHLIGHT
                                    - OPPORTUNITY
                                    - RECENT
                                    - SOURCE
                                    - TICKET
                                    - TRANSCRIPT
                                    - WITH
                                  x-enumDescriptions:
                                    CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                associatedEntityId:
                                  type: string
                                  description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                querySuggestion:
                                  required:
                                    - query
                                  example:
                                    query: app:github type:pull author:mortimer
                                    label: Mortimer's PRs
                                    datasource: github
                                  properties:
                                    missingTerm:
                                      type: string
                                      description: A query term missing from the original query on which this suggestion is based.
                                    query:
                                      type: string
                                      description: The query being suggested (e.g. enforcing the missing term from the original query).
                                    searchProviderInfo:
                                      example:
                                        name: Google
                                        logo: https://app.glean.com/images/feather/globe.svg
                                        searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                      properties:
                                        name:
                                          type: string
                                          description: Name of the search provider.
                                        logoUrl:
                                          type: string
                                          description: URL to the provider's logo.
                                        searchLinkUrlTemplate:
                                          type: string
                                          description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                      type: object
                                    label:
                                      type: string
                                      description: A user-facing description to display for the suggestion.
                                    datasource:
                                      type: string
                                      description: The datasource associated with the suggestion.
                                    requestOptions:
                                      required:
                                        - facetBucketSize
                                      example:
                                        datasourceFilter: JIRA
                                        datasourcesFilter:
                                          - JIRA
                                        queryOverridesFacetFilters: true
                                        facetFilters:
                                          - fieldName: fieldName
                                            values:
                                              - fieldValues
                                              - fieldValues
                                          - fieldName: fieldName
                                            values:
                                              - fieldValues
                                              - fieldValues
                                      properties:
                                        datasourceFilter:
                                          type: string
                                          description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                        datasourcesFilter:
                                          type: array
                                          description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                          items:
                                            type: string
                                        queryOverridesFacetFilters:
                                          type: boolean
                                          description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                        facetFilters:
                                          type: array
                                          description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                          items:
                                            type: object
                                            description: FacetFilter object
                                            additionalProperties: true
                                        facetFilterSets:
                                          type: array
                                          description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                          items:
                                            description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                            properties:
                                              filters:
                                                type: array
                                                items:
                                                  type: object
                                                  description: FacetFilter object
                                                  additionalProperties: true
                                            type: object
                                        facetBucketFilter:
                                          properties:
                                            facet:
                                              type: string
                                              description: The facet whose buckets should be filtered.
                                            prefix:
                                              type: string
                                              description: The per-term prefix that facet buckets should be filtered on.
                                          type: object
                                        facetBucketSize:
                                          type: integer
                                          description: The maximum number of FacetBuckets to return in each FacetResult.
                                        defaultFacets:
                                          type: array
                                          description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                          items:
                                            type: string
                                        authTokens:
                                          type: array
                                          description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                          items:
                                            required:
                                              - accessToken
                                              - datasource
                                            example:
                                              accessToken: 123abc
                                              datasource: gmail
                                              scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                              tokenType: Bearer
                                              authUser: '1'
                                            properties:
                                              accessToken:
                                                type: string
                                              datasource:
                                                type: string
                                              scope:
                                                type: string
                                              tokenType:
                                                type: string
                                              authUser:
                                                description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                type: string
                                              expiration:
                                                description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                type: integer
                                                format: int64
                                            type: object
                                        fetchAllDatasourceCounts:
                                          type: boolean
                                          description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                        responseHints:
                                          type: array
                                          description: Array of hints containing which fields should be populated in the response.
                                          items:
                                            type: string
                                            description: Hints for the response content.
                                            x-enumDescriptions:
                                              ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                              FACET_RESULTS: Return only facet results.
                                              QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                              RESULTS: Return search result documents.
                                              SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                            enum:
                                              - ALL_RESULT_COUNTS
                                              - FACET_RESULTS
                                              - QUERY_METADATA
                                              - RESULTS
                                              - SPELLCHECK_METADATA
                                        timezoneOffset:
                                          type: integer
                                          description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                        disableSpellcheck:
                                          type: boolean
                                          description: Whether or not to disable spellcheck.
                                        disableQueryAutocorrect:
                                          type: boolean
                                          description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                        returnLlmContentOverSnippets:
                                          type: boolean
                                          description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                        inclusions:
                                          properties:
                                            containerSpecs:
                                              description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                              type: array
                                              items:
                                                type: object
                                                description: DocumentSpec object
                                                additionalProperties: true
                                          type: object
                                        exclusions:
                                          properties:
                                            containerSpecs:
                                              description: 'Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.'
                                              type: array
                                              items:
                                                type: object
                                                description: DocumentSpec object
                                                additionalProperties: true
                                          type: object
                                      type: object
                                    ranges:
                                      type: array
                                      description: The bolded ranges within the query of the QuerySuggestion.
                                      items:
                                        required:
                                          - startIndex
                                        description: A subsection of a given string to which some special formatting should be applied.
                                        properties:
                                          startIndex:
                                            type: integer
                                            description: The inclusive start index of the range.
                                          endIndex:
                                            type: integer
                                            description: The exclusive end index of the range.
                                          type:
                                            type: string
                                            enum:
                                              - BOLD
                                              - CITATION
                                              - HIGHLIGHT
                                              - LINK
                                          url:
                                            type: string
                                            description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                          document:
                                            type: object
                                            description: Document object
                                            additionalProperties: true
                                        type: object
                                    inputDetails:
                                      example:
                                        hasCopyPaste: true
                                      properties:
                                        hasCopyPaste:
                                          type: boolean
                                          description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                      type: object
                                  type: object
                                documents:
                                  type: array
                                  description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                  deprecated: true
                                  items:
                                    type: object
                                    description: Document object
                                    additionalProperties: true
                                results:
                                  type: array
                                  description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                  items:
                                    type: object
                                    description: SearchResult object
                                    additionalProperties: true
                              type: object
                          relatedQuestion:
                            properties:
                              question:
                                type: string
                                description: The text of the related question
                              answer:
                                type: string
                                description: The answer for the related question
                              ranges:
                                type: array
                                description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                                items:
                                  required:
                                    - startIndex
                                  description: A subsection of a given string to which some special formatting should be applied.
                                  properties:
                                    startIndex:
                                      type: integer
                                      description: The inclusive start index of the range.
                                    endIndex:
                                      type: integer
                                      description: The exclusive end index of the range.
                                    type:
                                      type: string
                                      enum:
                                        - BOLD
                                        - CITATION
                                        - HIGHLIGHT
                                        - LINK
                                    url:
                                      type: string
                                      description: The URL associated with the range, if applicable. For example, the linked URL for a LINK range.
                                    document:
                                      type: object
                                      description: Document object
                                      additionalProperties: true
                                  type: object
                            type: object
                          disambiguation:
                            type: object
                            description: A disambiguation between multiple entities with the same name
                            properties:
                              name:
                                type: string
                                description: Name of the ambiguous entity
                              id:
                                type: string
                                description: The unique id of the entity in the knowledge graph
                              type:
                                type: string
                                description: The type of entity.
                                x-include-enum-class-prefix: true
                                enum:
                                  - PERSON
                                  - PROJECT
                                  - CUSTOMER
                          snippets:
                            description: Any snippets associated to the populated object.
                            type: array
                            items:
                              required:
                                - snippet
                              example:
                                snippet: snippet
                                mimeType: mimeType
                              properties:
                                snippet:
                                  type: string
                                  description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                                mimeType:
                                  type: string
                                  description: The mime type of the snippets, currently either text/plain or text/html.
                                text:
                                  type: string
                                  description: A matching snippet from the document with no highlights.
                                snippetTextOrdering:
                                  type: integer
                                  description: Used for sorting based off the snippet's location within all_snippetable_text
                                ranges:
                                  type: array
                                  description: The bolded ranges within text.
                                  items:
                                    type: object
                                    description: TextRange object
                                    additionalProperties: true
                                url:
                                  type: string
                                  description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                              type: object
                          trackingToken:
                            type: string
                            description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                          prominence:
                            type: string
                            description: The level of visual distinction that should be given to a result.
                            x-enumDescriptions:
                              HERO: A high-confidence result that should feature prominently on the page.
                              PROMOTED: May not be the best result but should be given additional visual distinction.
                              STANDARD: Should not be distinct from any other results.
                            enum:
                              - HERO
                              - PROMOTED
                              - STANDARD
                          source:
                            type: string
                            description: Source context for this result. Possible values depend on the result type.
                            enum:
                              - EXPERT_DETECTION
                              - ENTITY_NLQ
                        type: object
                    trackingToken:
                      type: string
                      description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                    text:
                      type: string
                    querySuggestion:
                      required:
                        - query
                      example:
                        query: app:github type:pull author:mortimer
                        label: Mortimer's PRs
                        datasource: github
                      properties:
                        missingTerm:
                          type: string
                          description: A query term missing from the original query on which this suggestion is based.
                        query:
                          type: string
                          description: The query being suggested (e.g. enforcing the missing term from the original query).
                        searchProviderInfo:
                          example:
                            name: Google
                            logo: https://app.glean.com/images/feather/globe.svg
                            searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                          properties:
                            name:
                              type: string
                              description: Name of the search provider.
                            logoUrl:
                              type: string
                              description: URL to the provider's logo.
                            searchLinkUrlTemplate:
                              type: string
                              description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                          type: object
                        label:
                          type: string
                          description: A user-facing description to display for the suggestion.
                        datasource:
                          type: string
                          description: The datasource associated with the suggestion.
                        requestOptions:
                          required:
                            - facetBucketSize
                          example:
                            datasourceFilter: JIRA
                            datasourcesFilter:
                              - JIRA
                            queryOverridesFacetFilters: true
                            facetFilters:
                              - fieldName: fieldName
                                values:
                                  - fieldValues
                                  - fieldValues
                              - fieldName: fieldName
                                values:
                                  - fieldValues
                                  - fieldValues
                          properties:
                            datasourceFilter:
                              type: string
                              description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                            datasourcesFilter:
                              type: array
                              description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                              items:
                                type: string
                            queryOverridesFacetFilters:
                              type: boolean
                              description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                            facetFilters:
                              type: array
                              description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                              items:
                                type: object
                                description: FacetFilter object
                                additionalProperties: true
                            facetFilterSets:
                              type: array
                              description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                              items:
                                description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                properties:
                                  filters:
                                    type: array
                                    items:
                                      type: object
                                      description: FacetFilter object
                                      additionalProperties: true
                                type: object
                            facetBucketFilter:
                              properties:
                                facet:
                                  type: string
                                  description: The facet whose buckets should be filtered.
                                prefix:
                                  type: string
                                  description: The per-term prefix that facet buckets should be filtered on.
                              type: object
                            facetBucketSize:
                              type: integer
                              description: The maximum number of FacetBuckets to return in each FacetResult.
                            defaultFacets:
                              type: array
                              description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                              items:
                                type: string
                            authTokens:
                              type: array
                              description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                              items:
                                required:
                                  - accessToken
                                  - datasource
                                example:
                                  accessToken: 123abc
                                  datasource: gmail
                                  scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                  tokenType: Bearer
                                  authUser: '1'
                                properties:
                                  accessToken:
                                    type: string
                                  datasource:
                                    type: string
                                  scope:
                                    type: string
                                  tokenType:
                                    type: string
                                  authUser:
                                    description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                    type: string
                                  expiration:
                                    description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                    type: integer
                                    format: int64
                                type: object
                            fetchAllDatasourceCounts:
                              type: boolean
                              description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                            responseHints:
                              type: array
                              description: Array of hints containing which fields should be populated in the response.
                              items:
                                type: string
                                description: Hints for the response content.
                                x-enumDescriptions:
                                  ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                  FACET_RESULTS: Return only facet results.
                                  QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                  RESULTS: Return search result documents.
                                  SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                enum:
                                  - ALL_RESULT_COUNTS
                                  - FACET_RESULTS
                                  - QUERY_METADATA
                                  - RESULTS
                                  - SPELLCHECK_METADATA
                            timezoneOffset:
                              type: integer
                              description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                            disableSpellcheck:
                              type: boolean
                              description: Whether or not to disable spellcheck.
                            disableQueryAutocorrect:
                              type: boolean
                              description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                            returnLlmContentOverSnippets:
                              type: boolean
                              description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                            inclusions:
                              type: object
                              description: RestrictionFilters object
                              additionalProperties: true
                            exclusions:
                              type: object
                              description: RestrictionFilters object
                              additionalProperties: true
                          type: object
                        ranges:
                          type: array
                          description: The bolded ranges within the query of the QuerySuggestion.
                          items:
                            type: object
                            description: TextRange object
                            additionalProperties: true
                        inputDetails:
                          example:
                            hasCopyPaste: true
                          properties:
                            hasCopyPaste:
                              type: boolean
                              description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                          type: object
                      type: object
                    file:
                      type: object
                      description: Structure for file uploaded by a user for Chat.
                      properties:
                        id:
                          type: string
                          description: Unique identifier of the file.
                          example: FILE_1234
                        url:
                          type: string
                          description: Url of the file.
                          example: www.google.com
                        name:
                          type: string
                          description: Name of the uploaded file.
                          example: sample.pdf
                        metadata:
                          type: object
                          description: Metadata of a file uploaded by a user for Chat.
                          properties:
                            status:
                              type: string
                              description: Current status of the file.
                              x-include-enum-class-prefix: true
                              enum:
                                - PROCESSING
                                - PROCESSED
                                - FAILED
                                - DELETED
                            uploadTime:
                              type: integer
                              format: int64
                              description: Upload time, in epoch seconds.
                            processedSize:
                              type: integer
                              format: int64
                              description: Size of the processed file in bytes.
                            failureReason:
                              type: string
                              description: Reason for failed status.
                              x-include-enum-class-prefix: true
                              enum:
                                - PARSE_FAILED
                                - AV_SCAN_FAILED
                                - FILE_TOO_SMALL
                                - FILE_TOO_LARGE
                                - FILE_EXTENSION_UNSUPPORTED
                                - FILE_METADATA_VALIDATION_FAIL
                                - FILE_PROCESSING_TIMED_OUT
                            mimeType:
                              description: MIME type of the file.
                              type: string
                    action:
                      type: object
                      properties:
                        metadata:
                          description: The manifest for a tool that can be used to augment Glean Assistant.
                          required:
                            - type
                            - name
                            - displayName
                            - displayDescription
                          properties:
                            type:
                              description: The type of tool.
                              type: string
                              enum:
                                - RETRIEVAL
                                - ACTION
                            name:
                              description: Unique identifier for the tool. Name should be understandable by the LLM, and will be used to invoke a tool.
                              type: string
                            displayName:
                              description: Human understandable name of the tool. Max 50 characters.
                              type: string
                            toolId:
                              type: string
                              description: An opaque id which is unique identifier for the tool.
                            displayDescription:
                              description: Description of the tool meant for a human.
                              type: string
                            logoUrl:
                              type: string
                              description: URL used to fetch the logo.
                            objectName:
                              type: string
                              description: Name of the generated object. This will be used to indicate to the end user what the generated object contains.
                              example:
                                - HR ticket
                                - Email
                                - Chat message
                            knowledgeType:
                              type: string
                              description: Indicates the kind of knowledge a tool would access or modify.
                              enum:
                                - NEUTRAL_KNOWLEDGE
                                - COMPANY_KNOWLEDGE
                                - WORLD_KNOWLEDGE
                            createdBy:
                              required:
                                - name
                                - obfuscatedId
                              properties:
                                name:
                                  type: string
                                  description: The display name.
                                obfuscatedId:
                                  type: string
                                  description: An opaque identifier that can be used to request metadata for a Person.
                              type: object
                            lastUpdatedBy:
                              required:
                                - name
                                - obfuscatedId
                              properties:
                                name:
                                  type: string
                                  description: The display name.
                                obfuscatedId:
                                  type: string
                                  description: An opaque identifier that can be used to request metadata for a Person.
                              type: object
                            createdAt:
                              type: string
                              format: date-time
                              description: The time the tool was created in ISO format (ISO 8601)
                            lastUpdatedAt:
                              type: string
                              format: date-time
                              description: The time the tool was last updated in ISO format (ISO 8601)
                            writeActionType:
                              type: string
                              description: Valid only for write actions. Represents the type of write action. REDIRECT - The client renders the URL which contains information for carrying out the action. EXECUTION - Send a request to an external server and execute the action.
                              enum:
                                - REDIRECT
                                - EXECUTION
                            authType:
                              type: string
                              enum:
                                - NONE
                                - OAUTH_USER
                                - OAUTH_ADMIN
                                - API_KEY
                                - BASIC_AUTH
                                - DWD
                              description: |
                                The type of authentication being used.
                                Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                                'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                                'OAUTH_USER' uses individual user tokens for external API calls.
                                'DWD' refers to domain wide delegation.
                            auth:
                              description: Config for tool's authentication method.
                              type: object
                              properties:
                                isOnPrem:
                                  type: boolean
                                  description: Whether or not this tool is hosted on-premise.
                                usesCentralAuth:
                                  type: boolean
                                  description: Whether or not this uses central auth.
                                type:
                                  type: string
                                  enum:
                                    - NONE
                                    - OAUTH_USER
                                    - OAUTH_ADMIN
                                    - API_KEY
                                    - BASIC_AUTH
                                    - DWD
                                  description: |
                                    The type of authentication being used.
                                    Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                                    'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                                    'OAUTH_USER' uses individual user tokens for external API calls.
                                    'DWD' refers to domain wide delegation.
                                grantType:
                                  type: string
                                  enum:
                                    - AUTH_CODE
                                    - CLIENT_CREDENTIALS
                                  description: The type of grant type being used.
                                status:
                                  type: string
                                  description: Auth status of the tool.
                                  enum:
                                    - AWAITING_AUTH
                                    - AUTHORIZED
                                client_url:
                                  type: string
                                  format: url
                                  description: The URL where users will be directed to start the OAuth flow.
                                scopes:
                                  type: array
                                  description: A list of strings denoting the different scopes or access levels required by the tool.
                                  items:
                                    type: string
                                audiences:
                                  type: array
                                  description: A list of strings denoting the different audience which can access the tool.
                                  items:
                                    type: string
                                authorization_url:
                                  type: string
                                  format: url
                                  description: The OAuth provider's endpoint, where access tokens are requested.
                                lastAuthorizedAt:
                                  type: string
                                  format: date-time
                                  description: The time the tool was last authorized in ISO format (ISO 8601).
                            permissions:
                              properties:
                                write:
                                  description: Describes the write permissions levels that a user has for a specific feature
                                  properties:
                                    scopeType:
                                      type: string
                                      description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                      enum:
                                        - GLOBAL
                                        - OWN
                                    create:
                                      type: boolean
                                      description: True if user has create permission for this feature and scope
                                    update:
                                      type: boolean
                                      description: True if user has update permission for this feature and scope
                                    delete:
                                      type: boolean
                                      description: True if user has delete permission for this feature and scope
                                  type: object
                              type: object
                            usageInstructions:
                              description: Usage instructions for the LLM to use this action.
                              type: string
                            isSetupFinished:
                              type: boolean
                              description: Whether this action has been fully configured and validated.
                          type: object
                        parameters:
                          type: object
                          description: Parameters supported by the tool.
                          additionalProperties:
                            $ref: '#/components/schemas/WriteActionParameter'
              ts:
                type: string
                description: Response timestamp of the message.
              messageId:
                type: string
                description: A unique server-side generated ID used to identify a message, automatically populated for any USER authored messages.
              messageTrackingToken:
                type: string
                description: Opaque tracking token generated server-side.
              messageType:
                type: string
                default: CONTENT
                description: Semantically groups content of a certain type. It can be used for purposes such as differential UI treatment. USER authored messages should be of type CONTENT and do not need `messageType` specified.
                x-enumDescriptions:
                  UPDATE: An intermediate state message for progress updates.
                  CONTENT: A user query or response message.
                  CONTEXT: A message providing context in addition to the user query.
                  DEBUG: A debug message. Strictly used internally.
                  DEBUG_EXTERNAL: A debug message to be used while debugging Action creation.
                  ERROR: A message that describes an error while processing the request.
                  HEADING: A heading message used to distinguish different sections of the holistic response.
                  WARNING: A warning message to be shown to the user.
                enum:
                  - UPDATE
                  - CONTENT
                  - CONTEXT
                  - DEBUG
                  - DEBUG_EXTERNAL
                  - ERROR
                  - HEADING
                  - WARNING
              hasMoreFragments:
                deprecated: true
                type: boolean
                description: Signals there are additional response fragments incoming.
            type: object
        agentConfig:
          description: Describes the agent that executes the request.
          properties:
            agent:
              type: string
              description: Name of the agent.
              x-enumDescriptions:
                DEFAULT: Integrates with your company's knowledge.
                GPT: Communicates directly with the LLM.
                UNIVERSAL: Uses both company and web knowledge.
              enum:
                - DEFAULT
                - GPT
                - UNIVERSAL
            mode:
              type: string
              description: Top level modes to run GleanChat in.
              x-enumDescriptions:
                DEFAULT: Used if no mode supplied.
                QUICK: Deprecated.
              enum:
                - DEFAULT
                - QUICK
          type: object
        inclusions:
          description: RestrictionFilters object
          type: object
          properties:
            documentSpecs:
              type: array
              items:
                type: object
                description: DocumentSpec object
                additionalProperties: true
            datasourceInstances:
              type: array
              items:
                type: string
        exclusions:
          description: RestrictionFilters object
          type: object
          properties:
            documentSpecs:
              type: array
              items:
                type: object
                description: DocumentSpec object
                additionalProperties: true
            datasourceInstances:
              type: array
              items:
                type: string
        timeoutMillis:
          type: integer
          description: Timeout in milliseconds for the request. A `408` error will be returned if handling the request takes longer.
          example: 30000
        sessionInfo:
          properties:
            sessionTrackingToken:
              type: string
              description: A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab.
            tabId:
              type: string
              description: A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab.
            lastSeen:
              type: string
              format: date-time
              description: The last time the server saw this token.
            lastQuery:
              type: string
              description: The last query seen by the server.
          type: object
        applicationId:
          type: string
          description: The ID of the application this request originates from, used to determine the configuration of underlying chat processes. This should correspond to the ID set during admin setup. If not specified, the default chat experience will be used.
        agentId:
          type: string
          description: The ID of the Agent that should process this chat request. Only Agents with trigger set to 'User chat message' are invokable through this API. If not specified, the default chat experience will be used.
        stream:
          type: boolean
          description: If set, response lines will be streamed one-by-one as they become available. Each will be a ChatResponse, formatted as JSON, and separated by a new line. If false, the entire response will be returned at once. Note that if this is set and the model being used does not support streaming, the model's response will not be streamed, but other messages from the endpoint still will be.
      type: object
    ChatResponse:
      description: A single response from the /chat backend.
      properties:
        messages:
          type: array
          items:
            description: A message that is rendered as one coherent unit with one given sender.
            properties:
              agentConfig:
                description: Describes the agent that executes the request.
                properties:
                  agent:
                    type: string
                    description: Name of the agent.
                    x-enumDescriptions:
                      DEFAULT: Integrates with your company's knowledge.
                      GPT: Communicates directly with the LLM.
                      UNIVERSAL: Uses both company and web knowledge.
                    enum:
                      - DEFAULT
                      - GPT
                      - UNIVERSAL
                  mode:
                    type: string
                    description: Top level modes to run GleanChat in.
                    x-enumDescriptions:
                      DEFAULT: Used if no mode supplied.
                      QUICK: Deprecated.
                    enum:
                      - DEFAULT
                      - QUICK
                type: object
              author:
                default: USER
                enum:
                  - USER
                  - GLEAN_AI
              citations:
                type: array
                description: A list of Citations that were used to generate the response.
                items:
                  description: Information about the source for a ChatMessage.
                  properties:
                    trackingToken:
                      type: string
                      description: An opaque token that represents this particular result in this particular ChatMessage. To be used for /feedback reporting.
                    sourceDocument:
                      type: object
                      description: Document object
                      additionalProperties: true
                    sourceFile:
                      type: object
                      description: Structure for file uploaded by a user for Chat.
                      properties:
                        id:
                          type: string
                          description: Unique identifier of the file.
                          example: FILE_1234
                        url:
                          type: string
                          description: Url of the file.
                          example: www.google.com
                        name:
                          type: string
                          description: Name of the uploaded file.
                          example: sample.pdf
                        metadata:
                          type: object
                          description: Metadata of a file uploaded by a user for Chat.
                          properties:
                            status:
                              type: string
                              description: Current status of the file.
                              x-include-enum-class-prefix: true
                              enum:
                                - PROCESSING
                                - PROCESSED
                                - FAILED
                                - DELETED
                            uploadTime:
                              type: integer
                              format: int64
                              description: Upload time, in epoch seconds.
                            processedSize:
                              type: integer
                              format: int64
                              description: Size of the processed file in bytes.
                            failureReason:
                              type: string
                              description: Reason for failed status.
                              x-include-enum-class-prefix: true
                              enum:
                                - PARSE_FAILED
                                - AV_SCAN_FAILED
                                - FILE_TOO_SMALL
                                - FILE_TOO_LARGE
                                - FILE_EXTENSION_UNSUPPORTED
                                - FILE_METADATA_VALIDATION_FAIL
                                - FILE_PROCESSING_TIMED_OUT
                            mimeType:
                              description: MIME type of the file.
                              type: string
                    sourcePerson:
                      type: object
                      description: Person object
                      additionalProperties: true
                    referenceRanges:
                      description: Each reference range and its corresponding snippets
                      type: array
                      items:
                        description: Each text range from the response can correspond to an array of snippets from the citation source.
                        properties:
                          textRange:
                            type: object
                            description: TextRange object
                            additionalProperties: true
                          snippets:
                            type: array
                            items:
                              required:
                                - snippet
                              example:
                                snippet: snippet
                                mimeType: mimeType
                              properties:
                                snippet:
                                  type: string
                                  description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                                mimeType:
                                  type: string
                                  description: The mime type of the snippets, currently either text/plain or text/html.
                                text:
                                  type: string
                                  description: A matching snippet from the document with no highlights.
                                snippetTextOrdering:
                                  type: integer
                                  description: Used for sorting based off the snippet's location within all_snippetable_text
                                ranges:
                                  type: array
                                  description: The bolded ranges within text.
                                  items:
                                    type: object
                                    description: TextRange object
                                    additionalProperties: true
                                url:
                                  type: string
                                  description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                              type: object
                        type: object
                  type: object
              uploadedFileIds:
                type: array
                description: IDs of files uploaded in the message that are referenced to generate the answer.
                items:
                  type: string
              fragments:
                type: array
                description: A list of rich data used to represent the response or formulate a request. These are linearly stitched together to support richer data formats beyond simple text.
                items:
                  description: Represents a part of a ChatMessage that originates from a single action/tool. It is designed to support rich data formats beyond simple text, allowing for a more dynamic and interactive chat experience. Each fragment can include various types of content, such as text, search queries, action information, and more. Also, each ChatMessageFragment should only have one of structuredResults, querySuggestion, writeAction, followupAction, or file.
                  type: object
                  properties:
                    structuredResults:
                      type: array
                      description: An array of entities in the work graph retrieved via a data request.
                      items:
                        description: A single object that can support any object in the work graph. Only a single object will be populated.
                        properties:
                          document:
                            type: object
                            description: Document object
                            additionalProperties: true
                          person:
                            type: object
                            description: Person object
                            additionalProperties: true
                          customer:
                            required:
                              - id
                              - company
                            properties:
                              id:
                                type: string
                                description: Unique identifier.
                              domains:
                                type: array
                                description: Link to company's associated website domains.
                                items:
                                  type: string
                              company:
                                required:
                                  - name
                                properties:
                                  name:
                                    type: string
                                    description: User-friendly display name.
                                  profileUrl:
                                    type: string
                                    description: Link to internal company company profile.
                                  websiteUrls:
                                    type: array
                                    description: Link to company's associated websites.
                                    items:
                                      type: string
                                  logoUrl:
                                    type: string
                                    description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                                  location:
                                    type: string
                                    description: User facing string representing the company's location.
                                    example: New York City
                                  phone:
                                    type: string
                                    description: Phone number as a number string.
                                  fax:
                                    type: string
                                    description: Fax number as a number string.
                                  industry:
                                    type: string
                                    description: User facing string representing the company's industry.
                                    example: Finances
                                  annualRevenue:
                                    type: number
                                    format: double
                                    description: Average company's annual revenue for reference.
                                  numberOfEmployees:
                                    type: integer
                                    format: int64
                                    description: Average company's number of employees for reference.
                                  stockSymbol:
                                    type: string
                                    description: Company's stock symbol if company is public.
                                  foundedDate:
                                    type: string
                                    format: date
                                    description: The date when the company was founded.
                                  about:
                                    type: string
                                    description: User facing description of company.
                                    example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                                type: object
                              documentCounts:
                                type: object
                                description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                                additionalProperties:
                                  type: integer
                              poc:
                                type: array
                                description: A list of POC for company.
                                items:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                              metadata:
                                properties:
                                  datasourceId:
                                    type: string
                                    description: The user visible id of the salesforce customer account.
                                  customData:
                                    type: object
                                    description: Custom fields specific to individual datasources
                                    additionalProperties:
                                      $ref: '#/components/schemas/CustomDataValue'
                                type: object
                              mergedCustomers:
                                type: array
                                description: A list of Customers.
                                items:
                                  type: object
                                  description: Customer object
                                  additionalProperties: true
                              startDate:
                                type: string
                                format: date
                                description: The date when the interaction with customer started.
                              contractAnnualRevenue:
                                type: number
                                format: double
                                description: Average contract annual revenue with that customer.
                              notes:
                                type: string
                                description: User facing (potentially generated) notes about company.
                                example: CIO is interested in trying out the product.
                            type: object
                          team:
                            type: object
                            properties:
                              relatedObjects:
                                type: object
                                description: A list of objects related to a source object.
                                additionalProperties:
                                  $ref: '#/components/schemas/RelatedObjectEdge'
                              permissions:
                                properties:
                                  write:
                                    description: Describes the write permissions levels that a user has for a specific feature
                                    properties:
                                      scopeType:
                                        type: string
                                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                        enum:
                                          - GLOBAL
                                          - OWN
                                      create:
                                        type: boolean
                                        description: True if user has create permission for this feature and scope
                                      update:
                                        type: boolean
                                        description: True if user has update permission for this feature and scope
                                      delete:
                                        type: boolean
                                        description: True if user has delete permission for this feature and scope
                                    type: object
                                type: object
                              id:
                                type: string
                                description: Unique identifier
                              name:
                                type: string
                                description: Team name
                              description:
                                type: string
                                description: A description of the team
                              businessUnit:
                                type: string
                                description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                              department:
                                type: string
                                description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                              photoUrl:
                                type: string
                                format: url
                                description: A link to the team's photo.
                              bannerUrl:
                                type: string
                                format: url
                                description: A link to the team's banner photo.
                              externalLink:
                                type: string
                                format: uri
                                description: Link to a team page on the internet or your company's intranet
                              members:
                                type: array
                                description: The members on this team
                                items:
                                  required:
                                    - person
                                  type: object
                                  description: Metadata about the relationship of a person to a team.
                                  properties:
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    relationship:
                                      type: string
                                      description: The team member's relationship to the team. This defaults to MEMBER if not set.
                                      default: MEMBER
                                      enum:
                                        - MEMBER
                                        - MANAGER
                                        - LEAD
                                        - POINT_OF_CONTACT
                                        - OTHER
                                    customRelationshipStr:
                                      type: string
                                      description: Displayed name for the relationship if relationship is set to `OTHER`.
                                    joinDate:
                                      type: string
                                      format: date-time
                                      description: The team member's start date
                              memberCount:
                                type: integer
                                description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                              emails:
                                type: array
                                description: The emails for this team
                                items:
                                  properties:
                                    email:
                                      type: string
                                      format: email
                                      description: An email address
                                    type:
                                      type: string
                                      enum:
                                        - PRIMARY
                                        - SECONDARY
                                        - ONCALL
                                        - OTHER
                                      default: OTHER
                                    isUserGenerated:
                                      type: boolean
                                      description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                                  type: object
                              customFields:
                                type: array
                                description: Customizable fields for additional team information.
                                items:
                                  required:
                                    - label
                                    - values
                                    - displayable
                                  properties:
                                    label:
                                      type: string
                                      description: A user-facing label for this field.
                                    values:
                                      type: array
                                      items:
                                        oneOf:
                                          - properties:
                                              strText:
                                                type: string
                                                description: Text field for string value.
                                            type: object
                                          - properties:
                                              urlAnchor:
                                                type: string
                                                description: Anchor text for hyperlink.
                                              urlLink:
                                                type: string
                                                description: Link for this URL.
                                            type: object
                                          - properties:
                                              person:
                                                type: object
                                                description: Person object
                                                additionalProperties: true
                                            type: object
                                    displayable:
                                      type: boolean
                                      description: Determines whether the client should display this custom field
                                      default: true
                                  type: object
                              datasourceProfiles:
                                type: array
                                description: The datasource profiles of the team
                                items:
                                  required:
                                    - datasource
                                    - handle
                                  properties:
                                    datasource:
                                      type: string
                                      example: github
                                      description: The datasource the profile is of.
                                    handle:
                                      type: string
                                      description: The display name of the entity in the given datasource.
                                    url:
                                      type: string
                                      description: URL to view the entity's profile.
                                    nativeAppUrl:
                                      type: string
                                      description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                                    isUserGenerated:
                                      type: boolean
                                      description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                                  type: object
                              datasource:
                                type: string
                                description: the data source of the team, e.g. GDRIVE
                              createdFrom:
                                type: string
                                description: For teams created from docs, the doc title. Otherwise empty.
                              lastUpdatedAt:
                                type: string
                                format: date-time
                                description: when this team was last updated.
                              status:
                                type: string
                                description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                                default: PROCESSED
                                enum:
                                  - PROCESSED
                                  - QUEUED_FOR_CREATION
                                  - QUEUED_FOR_DELETION
                              canBeDeleted:
                                type: boolean
                                description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                                default: true
                              loggingId:
                                type: string
                                description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                            required:
                              - id
                              - name
                          customEntity:
                            type: object
                            properties:
                              permissions:
                                properties:
                                  write:
                                    description: Describes the write permissions levels that a user has for a specific feature
                                    properties:
                                      scopeType:
                                        type: string
                                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                        enum:
                                          - GLOBAL
                                          - OWN
                                      create:
                                        type: boolean
                                        description: True if user has create permission for this feature and scope
                                      update:
                                        type: boolean
                                        description: True if user has update permission for this feature and scope
                                      delete:
                                        type: boolean
                                        description: True if user has delete permission for this feature and scope
                                    type: object
                                type: object
                              id:
                                type: string
                                description: Unique identifier.
                              title:
                                type: string
                                description: Title or name of the custom entity.
                              datasource:
                                type: string
                                description: The datasource the custom entity is from.
                              objectType:
                                type: string
                                description: The type of the entity. Interpretation is specific to each datasource
                              metadata:
                                properties:
                                  customData:
                                    type: object
                                    description: Custom fields specific to individual datasources
                                    additionalProperties:
                                      $ref: '#/components/schemas/CustomDataValue'
                                type: object
                              roles:
                                type: array
                                description: A list of user roles for the custom entity explicitly granted by the owner.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                          answer:
                            type: object
                            description: Answer object
                          extractedQnA:
                            properties:
                              heading:
                                type: string
                                description: Heading text that was matched to produce this result.
                              question:
                                type: string
                                description: Question text that was matched to produce this result.
                              questionResult:
                                type: object
                                description: Flattened SearchResult
                                example:
                                  snippets:
                                    - snippet: snippet
                                      mimeType: mimeType
                                  metadata:
                                    container: container
                                    createTime: '2000-01-23T04:56:07.000Z'
                                    datasource: datasource
                                    author:
                                      name: name
                                    documentId: documentId
                                    updateTime: '2000-01-23T04:56:07.000Z'
                                    mimeType: mimeType
                                    objectType: objectType
                                  title: title
                                  url: https://example.com/foo/bar
                                  nativeAppUrl: slack://foo/bar
                                  mustIncludeSuggestions:
                                    - missingTerm: container
                                      query: container
                                properties:
                                  structuredResults:
                                    type: array
                                    description: An array of entities in the work graph retrieved via a data request.
                                    items:
                                      type: object
                                      description: StructuredResult object (circular reference)
                                      additionalProperties: true
                                  trackingToken:
                                    type: string
                                    description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                                  document:
                                    type: object
                                    description: Document object
                                    additionalProperties: true
                                  title:
                                    type: string
                                  url:
                                    type: string
                                  nativeAppUrl:
                                    type: string
                                    description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                                  snippets:
                                    type: array
                                    description: Text content from the result document which contains search query terms, if available.
                                    items:
                                      required:
                                        - snippet
                                      example:
                                        snippet: snippet
                                        mimeType: mimeType
                                      properties:
                                        snippet:
                                          type: string
                                          description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                                        mimeType:
                                          type: string
                                          description: The mime type of the snippets, currently either text/plain or text/html.
                                        text:
                                          type: string
                                          description: A matching snippet from the document with no highlights.
                                        snippetTextOrdering:
                                          type: integer
                                          description: Used for sorting based off the snippet's location within all_snippetable_text
                                        ranges:
                                          type: array
                                          description: The bolded ranges within text.
                                          items:
                                            type: object
                                            description: TextRange object
                                            additionalProperties: true
                                        url:
                                          type: string
                                          description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                                      type: object
                                  fullText:
                                    type: string
                                    description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                                  fullTextList:
                                    type: array
                                    description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                                    items:
                                      type: string
                                  relatedResults:
                                    type: array
                                    description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                                    items:
                                      properties:
                                        relation:
                                          type: string
                                          description: How this document relates to the including entity.
                                          enum:
                                            - ATTACHMENT
                                            - CANONICAL
                                            - CASE
                                            - CONTACT
                                            - CONVERSATION_MESSAGES
                                            - EXPERT
                                            - FROM
                                            - HIGHLIGHT
                                            - OPPORTUNITY
                                            - RECENT
                                            - SOURCE
                                            - TICKET
                                            - TRANSCRIPT
                                            - WITH
                                          x-enumDescriptions:
                                            CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                        associatedEntityId:
                                          type: string
                                          description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                        querySuggestion:
                                          required:
                                            - query
                                          example:
                                            query: app:github type:pull author:mortimer
                                            label: Mortimer's PRs
                                            datasource: github
                                          properties:
                                            missingTerm:
                                              type: string
                                              description: A query term missing from the original query on which this suggestion is based.
                                            query:
                                              type: string
                                              description: The query being suggested (e.g. enforcing the missing term from the original query).
                                            searchProviderInfo:
                                              example:
                                                name: Google
                                                logo: https://app.glean.com/images/feather/globe.svg
                                                searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                              properties:
                                                name:
                                                  type: string
                                                  description: Name of the search provider.
                                                logoUrl:
                                                  type: string
                                                  description: URL to the provider's logo.
                                                searchLinkUrlTemplate:
                                                  type: string
                                                  description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                              type: object
                                            label:
                                              type: string
                                              description: A user-facing description to display for the suggestion.
                                            datasource:
                                              type: string
                                              description: The datasource associated with the suggestion.
                                            requestOptions:
                                              required:
                                                - facetBucketSize
                                              example:
                                                datasourceFilter: JIRA
                                                datasourcesFilter:
                                                  - JIRA
                                                queryOverridesFacetFilters: true
                                                facetFilters:
                                                  - fieldName: fieldName
                                                    values:
                                                      - fieldValues
                                                      - fieldValues
                                                  - fieldName: fieldName
                                                    values:
                                                      - fieldValues
                                                      - fieldValues
                                              properties:
                                                datasourceFilter:
                                                  type: string
                                                  description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                                datasourcesFilter:
                                                  type: array
                                                  description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                                  items:
                                                    type: string
                                                queryOverridesFacetFilters:
                                                  type: boolean
                                                  description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                                facetFilters:
                                                  type: array
                                                  description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                  items:
                                                    type: object
                                                    description: FacetFilter object
                                                    additionalProperties: true
                                                facetFilterSets:
                                                  type: array
                                                  description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                                  items:
                                                    description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                    properties:
                                                      filters:
                                                        type: array
                                                        items:
                                                          type: object
                                                          description: FacetFilter object
                                                          additionalProperties: true
                                                    type: object
                                                facetBucketFilter:
                                                  properties:
                                                    facet:
                                                      type: string
                                                      description: The facet whose buckets should be filtered.
                                                    prefix:
                                                      type: string
                                                      description: The per-term prefix that facet buckets should be filtered on.
                                                  type: object
                                                facetBucketSize:
                                                  type: integer
                                                  description: The maximum number of FacetBuckets to return in each FacetResult.
                                                defaultFacets:
                                                  type: array
                                                  description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                                  items:
                                                    type: string
                                                authTokens:
                                                  type: array
                                                  description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                                  items:
                                                    required:
                                                      - accessToken
                                                      - datasource
                                                    example:
                                                      accessToken: 123abc
                                                      datasource: gmail
                                                      scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                      tokenType: Bearer
                                                      authUser: '1'
                                                    properties:
                                                      accessToken:
                                                        type: string
                                                      datasource:
                                                        type: string
                                                      scope:
                                                        type: string
                                                      tokenType:
                                                        type: string
                                                      authUser:
                                                        description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                        type: string
                                                      expiration:
                                                        description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                        type: integer
                                                        format: int64
                                                    type: object
                                                fetchAllDatasourceCounts:
                                                  type: boolean
                                                  description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                                responseHints:
                                                  type: array
                                                  description: Array of hints containing which fields should be populated in the response.
                                                  items:
                                                    type: string
                                                    description: Hints for the response content.
                                                    x-enumDescriptions:
                                                      ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                      FACET_RESULTS: Return only facet results.
                                                      QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                      RESULTS: Return search result documents.
                                                      SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                    enum:
                                                      - ALL_RESULT_COUNTS
                                                      - FACET_RESULTS
                                                      - QUERY_METADATA
                                                      - RESULTS
                                                      - SPELLCHECK_METADATA
                                                timezoneOffset:
                                                  type: integer
                                                  description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                                disableSpellcheck:
                                                  type: boolean
                                                  description: Whether or not to disable spellcheck.
                                                disableQueryAutocorrect:
                                                  type: boolean
                                                  description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                                returnLlmContentOverSnippets:
                                                  type: boolean
                                                  description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                                inclusions:
                                                  type: object
                                                  description: RestrictionFilters object
                                                  additionalProperties: true
                                                exclusions:
                                                  type: object
                                                  description: RestrictionFilters object
                                                  additionalProperties: true
                                              type: object
                                            ranges:
                                              type: array
                                              description: The bolded ranges within the query of the QuerySuggestion.
                                              items:
                                                type: object
                                                description: TextRange object
                                                additionalProperties: true
                                            inputDetails:
                                              example:
                                                hasCopyPaste: true
                                              properties:
                                                hasCopyPaste:
                                                  type: boolean
                                                  description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                              type: object
                                          type: object
                                        documents:
                                          type: array
                                          description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                          deprecated: true
                                          items:
                                            type: object
                                            description: Document object
                                            additionalProperties: true
                                        results:
                                          type: array
                                          description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                          items:
                                            type: object
                                            description: SearchResult object
                                            additionalProperties: true
                                      type: object
                                  clusteredResults:
                                    type: array
                                    description: A list of results that should be displayed as associated with this result.
                                    items:
                                      type: object
                                      description: SearchResult object
                                      additionalProperties: true
                                  allClusteredResults:
                                    type: array
                                    description: A list of results that should be displayed as associated with this result.
                                    items:
                                      type: object
                                      description: ClusterGroup object
                                      additionalProperties: true
                                  attachmentCount:
                                    type: integer
                                    description: The total number of attachments.
                                  attachments:
                                    type: array
                                    description: A (potentially partial) list of results representing documents attached to the main result document.
                                    items:
                                      type: object
                                      description: SearchResult object
                                      additionalProperties: true
                                  backlinkResults:
                                    type: array
                                    description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                                    items:
                                      type: object
                                      description: SearchResult object
                                      additionalProperties: true
                                  clusterType:
                                    type: string
                                    description: The reason for inclusion of clusteredResults.
                                    enum:
                                      - SIMILAR
                                      - FRESHNESS
                                      - TITLE
                                      - CONTENT
                                      - NONE
                                      - THREAD_REPLY
                                      - THREAD_ROOT
                                      - PREFIX
                                      - SUFFIX
                                  mustIncludeSuggestions:
                                    properties:
                                      suggestions:
                                        type: array
                                        items:
                                          required:
                                            - query
                                          example:
                                            query: app:github type:pull author:mortimer
                                            label: Mortimer's PRs
                                            datasource: github
                                          properties:
                                            missingTerm:
                                              type: string
                                              description: A query term missing from the original query on which this suggestion is based.
                                            query:
                                              type: string
                                              description: The query being suggested (e.g. enforcing the missing term from the original query).
                                            searchProviderInfo:
                                              example:
                                                name: Google
                                                logo: https://app.glean.com/images/feather/globe.svg
                                                searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                              properties:
                                                name:
                                                  type: string
                                                  description: Name of the search provider.
                                                logoUrl:
                                                  type: string
                                                  description: URL to the provider's logo.
                                                searchLinkUrlTemplate:
                                                  type: string
                                                  description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                              type: object
                                            label:
                                              type: string
                                              description: A user-facing description to display for the suggestion.
                                            datasource:
                                              type: string
                                              description: The datasource associated with the suggestion.
                                            requestOptions:
                                              required:
                                                - facetBucketSize
                                              example:
                                                datasourceFilter: JIRA
                                                datasourcesFilter:
                                                  - JIRA
                                                queryOverridesFacetFilters: true
                                                facetFilters:
                                                  - fieldName: fieldName
                                                    values:
                                                      - fieldValues
                                                      - fieldValues
                                                  - fieldName: fieldName
                                                    values:
                                                      - fieldValues
                                                      - fieldValues
                                              properties:
                                                datasourceFilter:
                                                  type: string
                                                  description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                                datasourcesFilter:
                                                  type: array
                                                  description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                                  items:
                                                    type: string
                                                queryOverridesFacetFilters:
                                                  type: boolean
                                                  description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                                facetFilters:
                                                  type: array
                                                  description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                  items:
                                                    type: object
                                                    description: FacetFilter object
                                                    additionalProperties: true
                                                facetFilterSets:
                                                  type: array
                                                  description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                                  items:
                                                    description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                                    properties:
                                                      filters:
                                                        type: array
                                                        items:
                                                          type: object
                                                          description: FacetFilter object
                                                          additionalProperties: true
                                                    type: object
                                                facetBucketFilter:
                                                  properties:
                                                    facet:
                                                      type: string
                                                      description: The facet whose buckets should be filtered.
                                                    prefix:
                                                      type: string
                                                      description: The per-term prefix that facet buckets should be filtered on.
                                                  type: object
                                                facetBucketSize:
                                                  type: integer
                                                  description: The maximum number of FacetBuckets to return in each FacetResult.
                                                defaultFacets:
                                                  type: array
                                                  description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                                  items:
                                                    type: string
                                                authTokens:
                                                  type: array
                                                  description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                                  items:
                                                    required:
                                                      - accessToken
                                                      - datasource
                                                    example:
                                                      accessToken: 123abc
                                                      datasource: gmail
                                                      scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                      tokenType: Bearer
                                                      authUser: '1'
                                                    properties:
                                                      accessToken:
                                                        type: string
                                                      datasource:
                                                        type: string
                                                      scope:
                                                        type: string
                                                      tokenType:
                                                        type: string
                                                      authUser:
                                                        description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                        type: string
                                                      expiration:
                                                        description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                        type: integer
                                                        format: int64
                                                    type: object
                                                fetchAllDatasourceCounts:
                                                  type: boolean
                                                  description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                                responseHints:
                                                  type: array
                                                  description: Array of hints containing which fields should be populated in the response.
                                                  items:
                                                    type: string
                                                    description: Hints for the response content.
                                                    x-enumDescriptions:
                                                      ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                      FACET_RESULTS: Return only facet results.
                                                      QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                      RESULTS: Return search result documents.
                                                      SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                                    enum:
                                                      - ALL_RESULT_COUNTS
                                                      - FACET_RESULTS
                                                      - QUERY_METADATA
                                                      - RESULTS
                                                      - SPELLCHECK_METADATA
                                                timezoneOffset:
                                                  type: integer
                                                  description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                                disableSpellcheck:
                                                  type: boolean
                                                  description: Whether or not to disable spellcheck.
                                                disableQueryAutocorrect:
                                                  type: boolean
                                                  description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                                returnLlmContentOverSnippets:
                                                  type: boolean
                                                  description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                                inclusions:
                                                  type: object
                                                  description: RestrictionFilters object
                                                  additionalProperties: true
                                                exclusions:
                                                  type: object
                                                  description: RestrictionFilters object
                                                  additionalProperties: true
                                              type: object
                                            ranges:
                                              type: array
                                              description: The bolded ranges within the query of the QuerySuggestion.
                                              items:
                                                type: object
                                                description: TextRange object
                                                additionalProperties: true
                                            inputDetails:
                                              example:
                                                hasCopyPaste: true
                                              properties:
                                                hasCopyPaste:
                                                  type: boolean
                                                  description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                              type: object
                                          type: object
                                      person:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                    type: object
                                  querySuggestion:
                                    required:
                                      - query
                                    example:
                                      query: app:github type:pull author:mortimer
                                      label: Mortimer's PRs
                                      datasource: github
                                    properties:
                                      missingTerm:
                                        type: string
                                        description: A query term missing from the original query on which this suggestion is based.
                                      query:
                                        type: string
                                        description: The query being suggested (e.g. enforcing the missing term from the original query).
                                      searchProviderInfo:
                                        example:
                                          name: Google
                                          logo: https://app.glean.com/images/feather/globe.svg
                                          searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                        properties:
                                          name:
                                            type: string
                                            description: Name of the search provider.
                                          logoUrl:
                                            type: string
                                            description: URL to the provider's logo.
                                          searchLinkUrlTemplate:
                                            type: string
                                            description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                        type: object
                                      label:
                                        type: string
                                        description: A user-facing description to display for the suggestion.
                                      datasource:
                                        type: string
                                        description: The datasource associated with the suggestion.
                                      requestOptions:
                                        required:
                                          - facetBucketSize
                                        example:
                                          datasourceFilter: JIRA
                                          datasourcesFilter:
                                            - JIRA
                                          queryOverridesFacetFilters: true
                                          facetFilters:
                                            - fieldName: fieldName
                                              values:
                                                - fieldValues
                                                - fieldValues
                                            - fieldName: fieldName
                                              values:
                                                - fieldValues
                                                - fieldValues
                                        properties:
                                          datasourceFilter:
                                            type: string
                                            description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                          datasourcesFilter:
                                            type: array
                                            description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                            items:
                                              type: string
                                          queryOverridesFacetFilters:
                                            type: boolean
                                            description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                          facetFilters:
                                            type: array
                                            description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                            items:
                                              type: object
                                              description: FacetFilter object
                                              additionalProperties: true
                                          facetFilterSets:
                                            type: array
                                            description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                            items:
                                              description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                              properties:
                                                filters:
                                                  type: array
                                                  items:
                                                    type: object
                                                    description: FacetFilter object
                                                    additionalProperties: true
                                              type: object
                                          facetBucketFilter:
                                            properties:
                                              facet:
                                                type: string
                                                description: The facet whose buckets should be filtered.
                                              prefix:
                                                type: string
                                                description: The per-term prefix that facet buckets should be filtered on.
                                            type: object
                                          facetBucketSize:
                                            type: integer
                                            description: The maximum number of FacetBuckets to return in each FacetResult.
                                          defaultFacets:
                                            type: array
                                            description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                            items:
                                              type: string
                                          authTokens:
                                            type: array
                                            description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                            items:
                                              required:
                                                - accessToken
                                                - datasource
                                              example:
                                                accessToken: 123abc
                                                datasource: gmail
                                                scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                                tokenType: Bearer
                                                authUser: '1'
                                              properties:
                                                accessToken:
                                                  type: string
                                                datasource:
                                                  type: string
                                                scope:
                                                  type: string
                                                tokenType:
                                                  type: string
                                                authUser:
                                                  description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                  type: string
                                                expiration:
                                                  description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                  type: integer
                                                  format: int64
                                              type: object
                                          fetchAllDatasourceCounts:
                                            type: boolean
                                            description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                          responseHints:
                                            type: array
                                            description: Array of hints containing which fields should be populated in the response.
                                            items:
                                              type: string
                                              description: Hints for the response content.
                                              x-enumDescriptions:
                                                ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                                FACET_RESULTS: Return only facet results.
                                                QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                                RESULTS: Return search result documents.
                                                SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                              enum:
                                                - ALL_RESULT_COUNTS
                                                - FACET_RESULTS
                                                - QUERY_METADATA
                                                - RESULTS
                                                - SPELLCHECK_METADATA
                                          timezoneOffset:
                                            type: integer
                                            description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                          disableSpellcheck:
                                            type: boolean
                                            description: Whether or not to disable spellcheck.
                                          disableQueryAutocorrect:
                                            type: boolean
                                            description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                          returnLlmContentOverSnippets:
                                            type: boolean
                                            description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                          inclusions:
                                            type: object
                                            description: RestrictionFilters object
                                            additionalProperties: true
                                          exclusions:
                                            type: object
                                            description: RestrictionFilters object
                                            additionalProperties: true
                                        type: object
                                      ranges:
                                        type: array
                                        description: The bolded ranges within the query of the QuerySuggestion.
                                        items:
                                          type: object
                                          description: TextRange object
                                          additionalProperties: true
                                      inputDetails:
                                        example:
                                          hasCopyPaste: true
                                        properties:
                                          hasCopyPaste:
                                            type: boolean
                                            description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                        type: object
                                    type: object
                                  prominence:
                                    type: string
                                    description: |
                                      The level of visual distinction that should be given to a result.
                                    x-enumDescriptions:
                                      HERO: A high-confidence result that should feature prominently on the page.
                                      PROMOTED: May not be the best result but should be given additional visual distinction.
                                      STANDARD: Should not be distinct from any other results.
                                    enum:
                                      - HERO
                                      - PROMOTED
                                      - STANDARD
                                  attachmentContext:
                                    type: string
                                    description: Additional context for the relationship between the result and the document it's attached to.
                                  pins:
                                    type: array
                                    description: A list of pins associated with this search result.
                                    items:
                                      type: object
                                      properties:
                                        queries:
                                          type: array
                                          description: The query strings for which the pinned result will show.
                                          items:
                                            type: string
                                        audienceFilters:
                                          type: array
                                          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                                          items:
                                            type: object
                                            description: FacetFilter object
                                            additionalProperties: true
                                        id:
                                          type: string
                                          description: The opaque id of the pin.
                                        documentId:
                                          type: string
                                          description: The document which should be a pinned result.
                                        attribution:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                        updatedBy:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                        createTime:
                                          type: string
                                          format: date-time
                                        updateTime:
                                          type: string
                                          format: date-time
                                      required:
                                        - documentId
                            type: object
                          meeting:
                            properties:
                              id:
                                type: string
                              title:
                                type: string
                              description:
                                type: string
                              url:
                                type: string
                              startTime:
                                type: string
                                format: date-time
                              endTime:
                                type: string
                                format: date-time
                              attendees:
                                properties:
                                  people:
                                    type: array
                                    description: Full details of some of the attendees of this event
                                    items:
                                      required:
                                        - person
                                      properties:
                                        isOrganizer:
                                          type: boolean
                                          description: Whether or not this attendee is an organizer.
                                        isInGroup:
                                          type: boolean
                                          description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                                        person:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                        groupAttendees:
                                          type: array
                                          description: If this attendee is a group, represents the list of individual attendees in the group.
                                          items:
                                            type: object
                                            description: CalendarAttendee object
                                            additionalProperties: true
                                        responseStatus:
                                          type: string
                                          enum:
                                            - ACCEPTED
                                            - DECLINED
                                            - NO_RESPONSE
                                            - TENTATIVE
                                      type: object
                                  isLimit:
                                    type: boolean
                                    description: Whether the total count of the people returned is at the retrieval limit.
                                  total:
                                    type: integer
                                    description: Total number of attendees in this event.
                                  numAccepted:
                                    type: integer
                                    description: Total number of attendees who have accepted this event.
                                  numDeclined:
                                    type: integer
                                    description: Total number of attendees who have declined this event.
                                  numNoResponse:
                                    type: integer
                                    description: Total number of attendees who have not responded to this event.
                                  numTentative:
                                    type: integer
                                    description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                                type: object
                            type: object
                          app:
                            required:
                              - datasource
                            properties:
                              datasource:
                                type: string
                                description: The app or other repository type this represents
                              docType:
                                type: string
                                description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                              mimeType:
                                type: string
                                description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                              iconUrl:
                                type: string
                                description: If there is available icon URL.
                            type: object
                          collection:
                            type: object
                            description: Flattened Collection
                            properties:
                              name:
                                type: string
                                description: The unique name of the Collection.
                              description:
                                type: string
                                description: A brief summary of the Collection's contents.
                              addedRoles:
                                type: array
                                description: A list of added user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              removedRoles:
                                type: array
                                description: A list of removed user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              audienceFilters:
                                type: array
                                description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                items:
                                  type: object
                                  description: FacetFilter object
                                  additionalProperties: true
                              icon:
                                type: string
                                description: The emoji icon of this Collection.
                              adminLocked:
                                type: boolean
                                description: Indicates whether edits are allowed for everyone or only admins.
                              parentId:
                                type: integer
                                description: The parent of this Collection, or 0 if it's a top-level Collection.
                              thumbnail:
                                properties:
                                  photoId:
                                    type: string
                                    description: Photo id if the thumbnail is from splash.
                                  url:
                                    type: string
                                    description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                                type: object
                              allowedDatasource:
                                type: string
                                description: The datasource type this Collection can hold.
                              permissions:
                                type: object
                                description: Flattened ObjectPermissions
                                properties:
                                  write:
                                    type: object
                                    description: Describes the write permissions levels that a user has for a specific feature
                                    properties:
                                      scopeType:
                                        type: string
                                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                        enum:
                                          - GLOBAL
                                          - OWN
                                        properties: {}
                                      create:
                                        type: boolean
                                        description: True if user has create permission for this feature and scope
                                      update:
                                        type: boolean
                                        description: True if user has update permission for this feature and scope
                                      delete:
                                        type: boolean
                                        description: True if user has delete permission for this feature and scope
                              id:
                                type: integer
                                description: The unique ID of the Collection.
                              createTime:
                                type: string
                                format: date-time
                              updateTime:
                                type: string
                                format: date-time
                              creator:
                                type: object
                                description: Person object
                                additionalProperties: true
                              updatedBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              itemCount:
                                type: integer
                                description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                              childCount:
                                type: integer
                                description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                              items:
                                type: array
                                description: The items in this Collection.
                                items:
                                  type: object
                                  description: CollectionItem object
                                  additionalProperties: true
                              pinMetadata:
                                required:
                                  - pinnedCategories
                                  - eligibleCategoriesForPinning
                                properties:
                                  existingPins:
                                    type: array
                                    description: List of targets this Collection is pinned to.
                                    items:
                                      required:
                                        - category
                                      properties:
                                        category:
                                          type: string
                                          description: Categories a Collection can be pinned to.
                                          enum:
                                            - COMPANY_RESOURCE
                                            - DEPARTMENT_RESOURCE
                                            - TEAM_RESOURCE
                                        value:
                                          type: string
                                          description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                        target:
                                          type: string
                                          description: What targets can a Collection be pinned to.
                                          enum:
                                            - RESOURCE_CARD
                                            - TEAM_PROFILE_PAGE
                                      type: object
                                  eligiblePins:
                                    type: array
                                    description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                                    items:
                                      required:
                                        - id
                                        - target
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the Collection.
                                        target:
                                          required:
                                            - category
                                          properties:
                                            category:
                                              type: string
                                              description: Categories a Collection can be pinned to.
                                              enum:
                                                - COMPANY_RESOURCE
                                                - DEPARTMENT_RESOURCE
                                                - TEAM_RESOURCE
                                            value:
                                              type: string
                                              description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                            target:
                                              type: string
                                              description: What targets can a Collection be pinned to.
                                              enum:
                                                - RESOURCE_CARD
                                                - TEAM_PROFILE_PAGE
                                          type: object
                                      type: object
                                type: object
                              shortcuts:
                                type: array
                                description: The names of the shortcuts (Go Links) that point to this Collection.
                                items:
                                  type: string
                              children:
                                type: array
                                description: The children Collections of this Collection.
                                items:
                                  type: object
                                  description: Collection object
                                  additionalProperties: true
                              roles:
                                type: array
                                description: A list of user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                          answerBoard:
                            type: object
                            properties:
                              name:
                                type: string
                                description: The unique name of the Collection.
                              description:
                                type: string
                                description: A brief summary of the Collection's contents.
                              addedRoles:
                                type: array
                                description: A list of added user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              removedRoles:
                                type: array
                                description: A list of removed user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              audienceFilters:
                                type: array
                                description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                items:
                                  type: object
                                  description: FacetFilter object
                                  additionalProperties: true
                              permissions:
                                properties:
                                  write:
                                    description: Describes the write permissions levels that a user has for a specific feature
                                    properties:
                                      scopeType:
                                        type: string
                                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                        enum:
                                          - GLOBAL
                                          - OWN
                                      create:
                                        type: boolean
                                        description: True if user has create permission for this feature and scope
                                      update:
                                        type: boolean
                                        description: True if user has update permission for this feature and scope
                                      delete:
                                        type: boolean
                                        description: True if user has delete permission for this feature and scope
                                    type: object
                                type: object
                              id:
                                type: integer
                                description: The unique ID of the Answer Board.
                              createTime:
                                type: string
                                format: date-time
                              updateTime:
                                type: string
                                format: date-time
                              creator:
                                type: object
                                description: Person object
                                additionalProperties: true
                              updatedBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              itemCount:
                                type: integer
                                description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                              roles:
                                type: array
                                description: A list of user roles for the Answer Board.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                            required:
                              - name
                              - id
                              - description
                          code:
                            example:
                              repoName: scio
                              fileName: README.md
                              matches:
                                - lineNumber: 1
                                  content: Welcome to the beginning
                                  ranges: []
                                - lineNumber: 2
                                  content: Second line of the file
                                  ranges: []
                                - lineNumber: 3
                                  content: hello world hello world
                                  ranges:
                                    - startindex: 0
                                      endIndex: 5
                                    - startIndex: 12
                                      endIndex: 17
                            properties:
                              repoName:
                                type: string
                              fileName:
                                type: string
                              fileUrl:
                                type: string
                              lines:
                                type: array
                                items:
                                  properties:
                                    lineNumber:
                                      type: integer
                                    content:
                                      type: string
                                    ranges:
                                      type: array
                                      description: Index ranges depicting matched sections of the line
                                      items:
                                        type: object
                                        description: TextRange object
                                        additionalProperties: true
                                  type: object
                              isLastMatch:
                                type: boolean
                                description: Last file match for a repo
                            type: object
                          shortcut:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The opaque id of the user generated content.
                              inputAlias:
                                type: string
                                description: Link text following go/ prefix as entered by the user.
                              destinationUrl:
                                type: string
                                description: Destination URL for the shortcut.
                              destinationDocumentId:
                                type: string
                                description: Glean Document ID for the URL, if known.
                              description:
                                type: string
                                description: A short, plain text blurb to help people understand the intent of the shortcut.
                              unlisted:
                                type: boolean
                                description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                              urlTemplate:
                                type: string
                                description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                              addedRoles:
                                type: array
                                description: A list of user roles added for the Shortcut.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              removedRoles:
                                type: array
                                description: A list of user roles removed for the Shortcut.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              permissions:
                                properties:
                                  write:
                                    description: Describes the write permissions levels that a user has for a specific feature
                                    properties:
                                      scopeType:
                                        type: string
                                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                        enum:
                                          - GLOBAL
                                          - OWN
                                      create:
                                        type: boolean
                                        description: True if user has create permission for this feature and scope
                                      update:
                                        type: boolean
                                        description: True if user has update permission for this feature and scope
                                      delete:
                                        type: boolean
                                        description: True if user has delete permission for this feature and scope
                                    type: object
                                type: object
                              createdBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              createTime:
                                type: string
                                format: date-time
                                description: The time the shortcut was created in ISO format (ISO 8601).
                              updatedBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              updateTime:
                                type: string
                                format: date-time
                                description: The time the shortcut was updated in ISO format (ISO 8601).
                              destinationDocument:
                                type: object
                                description: Document object
                                additionalProperties: true
                              intermediateUrl:
                                type: string
                                description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                              viewPrefix:
                                type: string
                                description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                              isExternal:
                                type: boolean
                                description: Indicates whether a shortcut is native or external.
                              editUrl:
                                type: string
                                description: The URL using which the user can access the edit page of the shortcut.
                              alias:
                                type: string
                                description: canonical link text following go/ prefix where hyphen/underscore is removed.
                              title:
                                type: string
                                description: Title for the Go Link
                              roles:
                                type: array
                                description: A list of user roles for the Go Link.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                            required:
                              - inputAlias
                          querySuggestions:
                            properties:
                              suggestions:
                                type: array
                                items:
                                  required:
                                    - query
                                  example:
                                    query: app:github type:pull author:mortimer
                                    label: Mortimer's PRs
                                    datasource: github
                                  properties:
                                    missingTerm:
                                      type: string
                                      description: A query term missing from the original query on which this suggestion is based.
                                    query:
                                      type: string
                                      description: The query being suggested (e.g. enforcing the missing term from the original query).
                                    searchProviderInfo:
                                      example:
                                        name: Google
                                        logo: https://app.glean.com/images/feather/globe.svg
                                        searchLinkUrlTemplate: https://www.google.com/search?q={query}&hl=en
                                      properties:
                                        name:
                                          type: string
                                          description: Name of the search provider.
                                        logoUrl:
                                          type: string
                                          description: URL to the provider's logo.
                                        searchLinkUrlTemplate:
                                          type: string
                                          description: URL template that can be used to perform the suggested search by replacing the {query} placeholder with the query suggestion.
                                      type: object
                                    label:
                                      type: string
                                      description: A user-facing description to display for the suggestion.
                                    datasource:
                                      type: string
                                      description: The datasource associated with the suggestion.
                                    requestOptions:
                                      required:
                                        - facetBucketSize
                                      example:
                                        datasourceFilter: JIRA
                                        datasourcesFilter:
                                          - JIRA
                                        queryOverridesFacetFilters: true
                                        facetFilters:
                                          - fieldName: fieldName
                                            values:
                                              - fieldValues
                                              - fieldValues
                                          - fieldName: fieldName
                                            values:
                                              - fieldValues
                                              - fieldValues
                                      properties:
                                        datasourceFilter:
                                          type: string
                                          description: Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing.
                                        datasourcesFilter:
                                          type: array
                                          description: Filter results to one or more datasources (e.g. gmail, slack). All results are returned if missing.
                                          items:
                                            type: string
                                        queryOverridesFacetFilters:
                                          type: boolean
                                          description: If true, the operators in the query are taken to override any operators in facetFilters in the case of conflict. This is used to correctly set rewrittenFacetFilters and rewrittenQuery.
                                        facetFilters:
                                          type: array
                                          description: A list of filters for the query. An AND is assumed between different facetFilters. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                          items:
                                            type: object
                                            description: FacetFilter object
                                            additionalProperties: true
                                        facetFilterSets:
                                          type: array
                                          description: A list of facet filter sets that will be OR'ed together. SearchRequestOptions where both facetFilterSets and facetFilters set are considered as bad request. Callers should set only one of these fields.
                                          items:
                                            description: Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets.
                                            properties:
                                              filters:
                                                type: array
                                                items:
                                                  type: object
                                                  description: FacetFilter object
                                                  additionalProperties: true
                                            type: object
                                        facetBucketFilter:
                                          properties:
                                            facet:
                                              type: string
                                              description: The facet whose buckets should be filtered.
                                            prefix:
                                              type: string
                                              description: The per-term prefix that facet buckets should be filtered on.
                                          type: object
                                        facetBucketSize:
                                          type: integer
                                          description: The maximum number of FacetBuckets to return in each FacetResult.
                                        defaultFacets:
                                          type: array
                                          description: Facets for which FacetResults should be fetched and that don't apply to a particular datasource. If specified, these values will replace the standard default facets (last_updated_at, from, etc.). The requested facets will be returned alongside datasource-specific facets if searching a single datasource.
                                          items:
                                            type: string
                                        authTokens:
                                          type: array
                                          description: Auth tokens which may be used for non-indexed, federated results (e.g. Gmail).
                                          items:
                                            required:
                                              - accessToken
                                              - datasource
                                            example:
                                              accessToken: 123abc
                                              datasource: gmail
                                              scope: email profile https://www.googleapis.com/auth/gmail.readonly
                                              tokenType: Bearer
                                              authUser: '1'
                                            properties:
                                              accessToken:
                                                type: string
                                              datasource:
                                                type: string
                                              scope:
                                                type: string
                                              tokenType:
                                                type: string
                                              authUser:
                                                description: Used by Google to indicate the index of the logged in user. Useful for generating hyperlinks that support multilogin.
                                                type: string
                                              expiration:
                                                description: Unix timestamp when this token expires (in seconds since epoch UTC).
                                                type: integer
                                                format: int64
                                            type: object
                                        fetchAllDatasourceCounts:
                                          type: boolean
                                          description: Hints that the QE should return result counts (via the datasource facet result) for all supported datasources, rather than just those specified in the datasource[s]Filter
                                        responseHints:
                                          type: array
                                          description: Array of hints containing which fields should be populated in the response.
                                          items:
                                            type: string
                                            description: Hints for the response content.
                                            x-enumDescriptions:
                                              ALL_RESULT_COUNTS: Return result counts for each result set which has non-zero results, even when the request itself is limited to a subset.
                                              FACET_RESULTS: Return only facet results.
                                              QUERY_METADATA: Returns result counts for each result set which has non-zero results, as well as other information about the search such as suggested spelling corrections.
                                              RESULTS: Return search result documents.
                                              SPELLCHECK_METADATA: Return metadata pertaining to spellcheck results.
                                            enum:
                                              - ALL_RESULT_COUNTS
                                              - FACET_RESULTS
                                              - QUERY_METADATA
                                              - RESULTS
                                              - SPELLCHECK_METADATA
                                        timezoneOffset:
                                          type: integer
                                          description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
                                        disableSpellcheck:
                                          type: boolean
                                          description: Whether or not to disable spellcheck.
                                        disableQueryAutocorrect:
                                          type: boolean
                                          description: Disables automatic adjustment of the input query for spelling corrections or other reasons.
                                        returnLlmContentOverSnippets:
                                          type: boolean
                                          description: '[beta] Enables expanded content to be returned for LLM usage. The size of content per result returned should be modified using maxSnippetSize. Server may return less or more than what is specified in maxSnippetSize. For more details, https://docs.google.com/document/d/1CTOLSxWWT9WDEnHVLoCUaxbGYyXYP8kctPRF-RluSQY/edit. Requires sufficient permissions.'
                                        inclusions:
                                          type: object
                                          description: RestrictionFilters object
                                          additionalProperties: true
                                        exclusions:
                                          type: object
                                          description: RestrictionFilters object
                                          additionalProperties: true
                                      type: object
                                    ranges:
                                      type: array
                                      description: The bolded ranges within the query of the QuerySuggestion.
                                      items:
                                        type: object
                                        description: TextRange object
                                        additionalProperties: true
                                    inputDetails:
                                      example:
                                        hasCopyPaste: true
                                      properties:
                                        hasCopyPaste:
                                          type: boolean
                                          description: Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
                                      type: object
                                  type: object
                              person:
                                type: object
                                description: Person object
                                additionalProperties: true
                            type: object
                          relatedDocuments:
                            type: array
                            description: A list of documents related to this structured result.
                            items:
                              properties:
                                relation:
                                  type: string
                                  description: How this document relates to the including entity.
                                  enum:
                                    - ATTACHMENT
                                    - CANONICAL
                                    - CASE
                                    - CONTACT
                                    - CONVERSATION_MESSAGES
                                    - EXPERT
                                    - FROM
                                    - HIGHLIGHT
                                    - OPPORTUNITY
                                    - RECENT
                                    - SOURCE
                                    - TICKET
                                    - TRANSCRIPT
                                    - WITH
                                  x-enumDescriptions:
                                    CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                associatedEntityId:
                                  type: string
                                  description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                querySuggestion:
                                  type: object
                                  description: QuerySuggestion object
                                  additionalProperties: true
                                documents:
                                  type: array
                                  description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                  deprecated: true
                                  items:
                                    type: object
                                    description: Document object
                                    additionalProperties: true
                                results:
                                  type: array
                                  description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                  items:
                                    type: object
                                    description: SearchResult object
                                    additionalProperties: true
                              type: object
                          relatedQuestion:
                            properties:
                              question:
                                type: string
                                description: The text of the related question
                              answer:
                                type: string
                                description: The answer for the related question
                              ranges:
                                type: array
                                description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                                items:
                                  type: object
                                  description: TextRange object
                                  additionalProperties: true
                            type: object
                          disambiguation:
                            type: object
                            description: A disambiguation between multiple entities with the same name
                            properties:
                              name:
                                type: string
                                description: Name of the ambiguous entity
                              id:
                                type: string
                                description: The unique id of the entity in the knowledge graph
                              type:
                                type: string
                                description: The type of entity.
                                x-include-enum-class-prefix: true
                                enum:
                                  - PERSON
                                  - PROJECT
                                  - CUSTOMER
                          snippets:
                            description: Any snippets associated to the populated object.
                            type: array
                            items:
                              required:
                                - snippet
                              example:
                                snippet: snippet
                                mimeType: mimeType
                              properties:
                                snippet:
                                  type: string
                                  description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                                mimeType:
                                  type: string
                                  description: The mime type of the snippets, currently either text/plain or text/html.
                                text:
                                  type: string
                                  description: A matching snippet from the document with no highlights.
                                snippetTextOrdering:
                                  type: integer
                                  description: Used for sorting based off the snippet's location within all_snippetable_text
                                ranges:
                                  type: array
                                  description: The bolded ranges within text.
                                  items:
                                    type: object
                                    description: TextRange object
                                    additionalProperties: true
                                url:
                                  type: string
                                  description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                              type: object
                          trackingToken:
                            type: string
                            description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                          prominence:
                            type: string
                            description: The level of visual distinction that should be given to a result.
                            x-enumDescriptions:
                              HERO: A high-confidence result that should feature prominently on the page.
                              PROMOTED: May not be the best result but should be given additional visual distinction.
                              STANDARD: Should not be distinct from any other results.
                            enum:
                              - HERO
                              - PROMOTED
                              - STANDARD
                          source:
                            type: string
                            description: Source context for this result. Possible values depend on the result type.
                            enum:
                              - EXPERT_DETECTION
                              - ENTITY_NLQ
                        type: object
                    trackingToken:
                      type: string
                      description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                    text:
                      type: string
                    querySuggestion:
                      type: object
                      description: QuerySuggestion object
                      additionalProperties: true
                    file:
                      type: object
                      description: Structure for file uploaded by a user for Chat.
                      properties:
                        id:
                          type: string
                          description: Unique identifier of the file.
                          example: FILE_1234
                        url:
                          type: string
                          description: Url of the file.
                          example: www.google.com
                        name:
                          type: string
                          description: Name of the uploaded file.
                          example: sample.pdf
                        metadata:
                          type: object
                          description: Metadata of a file uploaded by a user for Chat.
                          properties:
                            status:
                              type: string
                              description: Current status of the file.
                              x-include-enum-class-prefix: true
                              enum:
                                - PROCESSING
                                - PROCESSED
                                - FAILED
                                - DELETED
                            uploadTime:
                              type: integer
                              format: int64
                              description: Upload time, in epoch seconds.
                            processedSize:
                              type: integer
                              format: int64
                              description: Size of the processed file in bytes.
                            failureReason:
                              type: string
                              description: Reason for failed status.
                              x-include-enum-class-prefix: true
                              enum:
                                - PARSE_FAILED
                                - AV_SCAN_FAILED
                                - FILE_TOO_SMALL
                                - FILE_TOO_LARGE
                                - FILE_EXTENSION_UNSUPPORTED
                                - FILE_METADATA_VALIDATION_FAIL
                                - FILE_PROCESSING_TIMED_OUT
                            mimeType:
                              description: MIME type of the file.
                              type: string
                    action:
                      type: object
                      properties:
                        metadata:
                          description: The manifest for a tool that can be used to augment Glean Assistant.
                          required:
                            - type
                            - name
                            - displayName
                            - displayDescription
                          properties:
                            type:
                              description: The type of tool.
                              type: string
                              enum:
                                - RETRIEVAL
                                - ACTION
                            name:
                              description: Unique identifier for the tool. Name should be understandable by the LLM, and will be used to invoke a tool.
                              type: string
                            displayName:
                              description: Human understandable name of the tool. Max 50 characters.
                              type: string
                            toolId:
                              type: string
                              description: An opaque id which is unique identifier for the tool.
                            displayDescription:
                              description: Description of the tool meant for a human.
                              type: string
                            logoUrl:
                              type: string
                              description: URL used to fetch the logo.
                            objectName:
                              type: string
                              description: Name of the generated object. This will be used to indicate to the end user what the generated object contains.
                              example:
                                - HR ticket
                                - Email
                                - Chat message
                            knowledgeType:
                              type: string
                              description: Indicates the kind of knowledge a tool would access or modify.
                              enum:
                                - NEUTRAL_KNOWLEDGE
                                - COMPANY_KNOWLEDGE
                                - WORLD_KNOWLEDGE
                            createdBy:
                              required:
                                - name
                                - obfuscatedId
                              properties:
                                name:
                                  type: string
                                  description: The display name.
                                obfuscatedId:
                                  type: string
                                  description: An opaque identifier that can be used to request metadata for a Person.
                              type: object
                            lastUpdatedBy:
                              required:
                                - name
                                - obfuscatedId
                              properties:
                                name:
                                  type: string
                                  description: The display name.
                                obfuscatedId:
                                  type: string
                                  description: An opaque identifier that can be used to request metadata for a Person.
                              type: object
                            createdAt:
                              type: string
                              format: date-time
                              description: The time the tool was created in ISO format (ISO 8601)
                            lastUpdatedAt:
                              type: string
                              format: date-time
                              description: The time the tool was last updated in ISO format (ISO 8601)
                            writeActionType:
                              type: string
                              description: Valid only for write actions. Represents the type of write action. REDIRECT - The client renders the URL which contains information for carrying out the action. EXECUTION - Send a request to an external server and execute the action.
                              enum:
                                - REDIRECT
                                - EXECUTION
                            authType:
                              type: string
                              enum:
                                - NONE
                                - OAUTH_USER
                                - OAUTH_ADMIN
                                - API_KEY
                                - BASIC_AUTH
                                - DWD
                              description: |
                                The type of authentication being used.
                                Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                                'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                                'OAUTH_USER' uses individual user tokens for external API calls.
                                'DWD' refers to domain wide delegation.
                            auth:
                              description: Config for tool's authentication method.
                              type: object
                              properties:
                                isOnPrem:
                                  type: boolean
                                  description: Whether or not this tool is hosted on-premise.
                                usesCentralAuth:
                                  type: boolean
                                  description: Whether or not this uses central auth.
                                type:
                                  type: string
                                  enum:
                                    - NONE
                                    - OAUTH_USER
                                    - OAUTH_ADMIN
                                    - API_KEY
                                    - BASIC_AUTH
                                    - DWD
                                  description: |
                                    The type of authentication being used.
                                    Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                                    'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                                    'OAUTH_USER' uses individual user tokens for external API calls.
                                    'DWD' refers to domain wide delegation.
                                grantType:
                                  type: string
                                  enum:
                                    - AUTH_CODE
                                    - CLIENT_CREDENTIALS
                                  description: The type of grant type being used.
                                status:
                                  type: string
                                  description: Auth status of the tool.
                                  enum:
                                    - AWAITING_AUTH
                                    - AUTHORIZED
                                client_url:
                                  type: string
                                  format: url
                                  description: The URL where users will be directed to start the OAuth flow.
                                scopes:
                                  type: array
                                  description: A list of strings denoting the different scopes or access levels required by the tool.
                                  items:
                                    type: string
                                audiences:
                                  type: array
                                  description: A list of strings denoting the different audience which can access the tool.
                                  items:
                                    type: string
                                authorization_url:
                                  type: string
                                  format: url
                                  description: The OAuth provider's endpoint, where access tokens are requested.
                                lastAuthorizedAt:
                                  type: string
                                  format: date-time
                                  description: The time the tool was last authorized in ISO format (ISO 8601).
                            permissions:
                              properties:
                                write:
                                  description: Describes the write permissions levels that a user has for a specific feature
                                  properties:
                                    scopeType:
                                      type: string
                                      description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                      enum:
                                        - GLOBAL
                                        - OWN
                                    create:
                                      type: boolean
                                      description: True if user has create permission for this feature and scope
                                    update:
                                      type: boolean
                                      description: True if user has update permission for this feature and scope
                                    delete:
                                      type: boolean
                                      description: True if user has delete permission for this feature and scope
                                  type: object
                              type: object
                            usageInstructions:
                              description: Usage instructions for the LLM to use this action.
                              type: string
                            isSetupFinished:
                              type: boolean
                              description: Whether this action has been fully configured and validated.
                          type: object
                        parameters:
                          type: object
                          description: Parameters supported by the tool.
                          additionalProperties:
                            $ref: '#/components/schemas/WriteActionParameter'
              ts:
                type: string
                description: Response timestamp of the message.
              messageId:
                type: string
                description: A unique server-side generated ID used to identify a message, automatically populated for any USER authored messages.
              messageTrackingToken:
                type: string
                description: Opaque tracking token generated server-side.
              messageType:
                type: string
                default: CONTENT
                description: Semantically groups content of a certain type. It can be used for purposes such as differential UI treatment. USER authored messages should be of type CONTENT and do not need `messageType` specified.
                x-enumDescriptions:
                  UPDATE: An intermediate state message for progress updates.
                  CONTENT: A user query or response message.
                  CONTEXT: A message providing context in addition to the user query.
                  DEBUG: A debug message. Strictly used internally.
                  DEBUG_EXTERNAL: A debug message to be used while debugging Action creation.
                  ERROR: A message that describes an error while processing the request.
                  HEADING: A heading message used to distinguish different sections of the holistic response.
                  WARNING: A warning message to be shown to the user.
                enum:
                  - UPDATE
                  - CONTENT
                  - CONTEXT
                  - DEBUG
                  - DEBUG_EXTERNAL
                  - ERROR
                  - HEADING
                  - WARNING
              hasMoreFragments:
                deprecated: true
                type: boolean
                description: Signals there are additional response fragments incoming.
            type: object
        chatId:
          type: string
          description: The id of the associated Chat the messages belong to, if one exists.
        followUpPrompts:
          type: array
          description: Follow-up prompts for the user to potentially use
          items:
            type: string
        backendTimeMillis:
          type: integer
          format: int64
          description: Time in milliseconds the backend took to respond to the request.
          example: 1100
        chatSessionTrackingToken:
          type: string
          description: A token that is used to track the session.
      type: object
    DeleteChatsRequest:
      required:
        - ids
      properties:
        ids:
          type: array
          description: A non-empty list of ids of the Chats to be deleted.
          items:
            type: string
      type: object
    GetChatRequest:
      required:
        - id
      properties:
        id:
          type: string
          description: The id of the Chat to be retrieved.
      type: object
    GetChatResponse:
      properties:
        chatResult:
          properties:
            chat:
              description: A historical representation of a series of chat messages a user had with Glean Assistant.
              properties:
                id:
                  type: string
                  description: The opaque id of the Chat.
                createTime:
                  type: integer
                  description: Server Unix timestamp of the creation time (in seconds since epoch UTC).
                createdBy:
                  type: object
                  description: Person object
                  additionalProperties: true
                updateTime:
                  type: integer
                  description: Server Unix timestamp of the update time (in seconds since epoch UTC).
                name:
                  type: string
                  description: The name of the Chat.
                applicationId:
                  type: string
                  description: The ID of the AI App that this Chat is associated to.
                applicationName:
                  type: string
                  description: The display name of the AI App that this Chat is associated to.
                icon:
                  description: Defines how to render an icon
                  example:
                    color: '#343CED'
                    key: person_icon
                    iconType: GLYPH
                    name: user
                  properties:
                    generatedBackgroundColorKey:
                      type: string
                    backgroundColor:
                      type: string
                    color:
                      type: string
                    key:
                      type: string
                    iconType:
                      enum:
                        - COLLECTION
                        - CUSTOM
                        - DATASOURCE
                        - DATASOURCE_INSTANCE
                        - FAVICON
                        - FILE_TYPE
                        - GENERATED_BACKGROUND
                        - GLYPH
                        - MIME_TYPE
                        - NO_ICON
                        - PERSON
                        - REACTIONS
                        - URL
                    masked:
                      type: boolean
                      description: Whether the icon should be masked based on current theme.
                    name:
                      type: string
                      description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
                    url:
                      type: string
                      description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
                  type: object
                messages:
                  type: array
                  description: The chat messages within a Chat.
                  items:
                    description: A message that is rendered as one coherent unit with one given sender.
                    properties:
                      agentConfig:
                        description: Describes the agent that executes the request.
                        properties:
                          agent:
                            type: string
                            description: Name of the agent.
                            x-enumDescriptions:
                              DEFAULT: Integrates with your company's knowledge.
                              GPT: Communicates directly with the LLM.
                              UNIVERSAL: Uses both company and web knowledge.
                            enum:
                              - DEFAULT
                              - GPT
                              - UNIVERSAL
                          mode:
                            type: string
                            description: Top level modes to run GleanChat in.
                            x-enumDescriptions:
                              DEFAULT: Used if no mode supplied.
                              QUICK: Deprecated.
                            enum:
                              - DEFAULT
                              - QUICK
                        type: object
                      author:
                        default: USER
                        enum:
                          - USER
                          - GLEAN_AI
                      citations:
                        type: array
                        description: A list of Citations that were used to generate the response.
                        items:
                          description: Information about the source for a ChatMessage.
                          properties:
                            trackingToken:
                              type: string
                              description: An opaque token that represents this particular result in this particular ChatMessage. To be used for /feedback reporting.
                            sourceDocument:
                              type: object
                              description: Document object
                              additionalProperties: true
                            sourceFile:
                              type: object
                              description: Structure for file uploaded by a user for Chat.
                              properties:
                                id:
                                  type: string
                                  description: Unique identifier of the file.
                                  example: FILE_1234
                                url:
                                  type: string
                                  description: Url of the file.
                                  example: www.google.com
                                name:
                                  type: string
                                  description: Name of the uploaded file.
                                  example: sample.pdf
                                metadata:
                                  type: object
                                  description: Metadata of a file uploaded by a user for Chat.
                                  properties:
                                    status:
                                      type: string
                                      description: Current status of the file.
                                      x-include-enum-class-prefix: true
                                      enum:
                                        - PROCESSING
                                        - PROCESSED
                                        - FAILED
                                        - DELETED
                                    uploadTime:
                                      type: integer
                                      format: int64
                                      description: Upload time, in epoch seconds.
                                    processedSize:
                                      type: integer
                                      format: int64
                                      description: Size of the processed file in bytes.
                                    failureReason:
                                      type: string
                                      description: Reason for failed status.
                                      x-include-enum-class-prefix: true
                                      enum:
                                        - PARSE_FAILED
                                        - AV_SCAN_FAILED
                                        - FILE_TOO_SMALL
                                        - FILE_TOO_LARGE
                                        - FILE_EXTENSION_UNSUPPORTED
                                        - FILE_METADATA_VALIDATION_FAIL
                                        - FILE_PROCESSING_TIMED_OUT
                                    mimeType:
                                      description: MIME type of the file.
                                      type: string
                            sourcePerson:
                              type: object
                              description: Person object
                              additionalProperties: true
                            referenceRanges:
                              description: Each reference range and its corresponding snippets
                              type: array
                              items:
                                description: Each text range from the response can correspond to an array of snippets from the citation source.
                                properties:
                                  textRange:
                                    type: object
                                    description: TextRange object
                                    additionalProperties: true
                                  snippets:
                                    type: array
                                    items:
                                      required:
                                        - snippet
                                      example:
                                        snippet: snippet
                                        mimeType: mimeType
                                      properties:
                                        snippet:
                                          type: string
                                          description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                                        mimeType:
                                          type: string
                                          description: The mime type of the snippets, currently either text/plain or text/html.
                                        text:
                                          type: string
                                          description: A matching snippet from the document with no highlights.
                                        snippetTextOrdering:
                                          type: integer
                                          description: Used for sorting based off the snippet's location within all_snippetable_text
                                        ranges:
                                          type: array
                                          description: The bolded ranges within text.
                                          items:
                                            type: object
                                            description: TextRange object
                                            additionalProperties: true
                                        url:
                                          type: string
                                          description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                                      type: object
                                type: object
                          type: object
                      uploadedFileIds:
                        type: array
                        description: IDs of files uploaded in the message that are referenced to generate the answer.
                        items:
                          type: string
                      fragments:
                        type: array
                        description: A list of rich data used to represent the response or formulate a request. These are linearly stitched together to support richer data formats beyond simple text.
                        items:
                          description: Represents a part of a ChatMessage that originates from a single action/tool. It is designed to support rich data formats beyond simple text, allowing for a more dynamic and interactive chat experience. Each fragment can include various types of content, such as text, search queries, action information, and more. Also, each ChatMessageFragment should only have one of structuredResults, querySuggestion, writeAction, followupAction, or file.
                          type: object
                          properties:
                            structuredResults:
                              type: array
                              description: An array of entities in the work graph retrieved via a data request.
                              items:
                                description: A single object that can support any object in the work graph. Only a single object will be populated.
                                properties:
                                  document:
                                    type: object
                                    description: Document object
                                    additionalProperties: true
                                  person:
                                    type: object
                                    description: Person object
                                    additionalProperties: true
                                  customer:
                                    required:
                                      - id
                                      - company
                                    properties:
                                      id:
                                        type: string
                                        description: Unique identifier.
                                      domains:
                                        type: array
                                        description: Link to company's associated website domains.
                                        items:
                                          type: string
                                      company:
                                        required:
                                          - name
                                        properties:
                                          name:
                                            type: string
                                            description: User-friendly display name.
                                          profileUrl:
                                            type: string
                                            description: Link to internal company company profile.
                                          websiteUrls:
                                            type: array
                                            description: Link to company's associated websites.
                                            items:
                                              type: string
                                          logoUrl:
                                            type: string
                                            description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                                          location:
                                            type: string
                                            description: User facing string representing the company's location.
                                            example: New York City
                                          phone:
                                            type: string
                                            description: Phone number as a number string.
                                          fax:
                                            type: string
                                            description: Fax number as a number string.
                                          industry:
                                            type: string
                                            description: User facing string representing the company's industry.
                                            example: Finances
                                          annualRevenue:
                                            type: number
                                            format: double
                                            description: Average company's annual revenue for reference.
                                          numberOfEmployees:
                                            type: integer
                                            format: int64
                                            description: Average company's number of employees for reference.
                                          stockSymbol:
                                            type: string
                                            description: Company's stock symbol if company is public.
                                          foundedDate:
                                            type: string
                                            format: date
                                            description: The date when the company was founded.
                                          about:
                                            type: string
                                            description: User facing description of company.
                                            example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                                        type: object
                                      documentCounts:
                                        type: object
                                        description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                                        additionalProperties:
                                          type: integer
                                      poc:
                                        type: array
                                        description: A list of POC for company.
                                        items:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                      metadata:
                                        properties:
                                          datasourceId:
                                            type: string
                                            description: The user visible id of the salesforce customer account.
                                          customData:
                                            type: object
                                            description: Custom fields specific to individual datasources
                                            additionalProperties:
                                              $ref: '#/components/schemas/CustomDataValue'
                                        type: object
                                      mergedCustomers:
                                        type: array
                                        description: A list of Customers.
                                        items:
                                          type: object
                                          description: Customer object
                                          additionalProperties: true
                                      startDate:
                                        type: string
                                        format: date
                                        description: The date when the interaction with customer started.
                                      contractAnnualRevenue:
                                        type: number
                                        format: double
                                        description: Average contract annual revenue with that customer.
                                      notes:
                                        type: string
                                        description: User facing (potentially generated) notes about company.
                                        example: CIO is interested in trying out the product.
                                    type: object
                                  team:
                                    type: object
                                    properties:
                                      relatedObjects:
                                        type: object
                                        description: A list of objects related to a source object.
                                        additionalProperties:
                                          $ref: '#/components/schemas/RelatedObjectEdge'
                                      permissions:
                                        type: object
                                        description: ObjectPermissions object
                                        additionalProperties: true
                                      id:
                                        type: string
                                        description: Unique identifier
                                      name:
                                        type: string
                                        description: Team name
                                      description:
                                        type: string
                                        description: A description of the team
                                      businessUnit:
                                        type: string
                                        description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                                      department:
                                        type: string
                                        description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                                      photoUrl:
                                        type: string
                                        format: url
                                        description: A link to the team's photo.
                                      bannerUrl:
                                        type: string
                                        format: url
                                        description: A link to the team's banner photo.
                                      externalLink:
                                        type: string
                                        format: uri
                                        description: Link to a team page on the internet or your company's intranet
                                      members:
                                        type: array
                                        description: The members on this team
                                        items:
                                          required:
                                            - person
                                          type: object
                                          description: Metadata about the relationship of a person to a team.
                                          properties:
                                            person:
                                              type: object
                                              description: Person object
                                              additionalProperties: true
                                            relationship:
                                              type: string
                                              description: The team member's relationship to the team. This defaults to MEMBER if not set.
                                              default: MEMBER
                                              enum:
                                                - MEMBER
                                                - MANAGER
                                                - LEAD
                                                - POINT_OF_CONTACT
                                                - OTHER
                                            customRelationshipStr:
                                              type: string
                                              description: Displayed name for the relationship if relationship is set to `OTHER`.
                                            joinDate:
                                              type: string
                                              format: date-time
                                              description: The team member's start date
                                      memberCount:
                                        type: integer
                                        description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                                      emails:
                                        type: array
                                        description: The emails for this team
                                        items:
                                          properties:
                                            email:
                                              type: string
                                              format: email
                                              description: An email address
                                            type:
                                              type: string
                                              enum:
                                                - PRIMARY
                                                - SECONDARY
                                                - ONCALL
                                                - OTHER
                                              default: OTHER
                                            isUserGenerated:
                                              type: boolean
                                              description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                                          type: object
                                      customFields:
                                        type: array
                                        description: Customizable fields for additional team information.
                                        items:
                                          required:
                                            - label
                                            - values
                                            - displayable
                                          properties:
                                            label:
                                              type: string
                                              description: A user-facing label for this field.
                                            values:
                                              type: array
                                              items:
                                                oneOf:
                                                  - properties:
                                                      strText:
                                                        type: string
                                                        description: Text field for string value.
                                                    type: object
                                                  - properties:
                                                      urlAnchor:
                                                        type: string
                                                        description: Anchor text for hyperlink.
                                                      urlLink:
                                                        type: string
                                                        description: Link for this URL.
                                                    type: object
                                                  - properties:
                                                      person:
                                                        type: object
                                                        description: Person object
                                                        additionalProperties: true
                                                    type: object
                                            displayable:
                                              type: boolean
                                              description: Determines whether the client should display this custom field
                                              default: true
                                          type: object
                                      datasourceProfiles:
                                        type: array
                                        description: The datasource profiles of the team
                                        items:
                                          required:
                                            - datasource
                                            - handle
                                          properties:
                                            datasource:
                                              type: string
                                              example: github
                                              description: The datasource the profile is of.
                                            handle:
                                              type: string
                                              description: The display name of the entity in the given datasource.
                                            url:
                                              type: string
                                              description: URL to view the entity's profile.
                                            nativeAppUrl:
                                              type: string
                                              description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                                            isUserGenerated:
                                              type: boolean
                                              description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                                          type: object
                                      datasource:
                                        type: string
                                        description: the data source of the team, e.g. GDRIVE
                                      createdFrom:
                                        type: string
                                        description: For teams created from docs, the doc title. Otherwise empty.
                                      lastUpdatedAt:
                                        type: string
                                        format: date-time
                                        description: when this team was last updated.
                                      status:
                                        type: string
                                        description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                                        default: PROCESSED
                                        enum:
                                          - PROCESSED
                                          - QUEUED_FOR_CREATION
                                          - QUEUED_FOR_DELETION
                                      canBeDeleted:
                                        type: boolean
                                        description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                                        default: true
                                      loggingId:
                                        type: string
                                        description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                                    required:
                                      - id
                                      - name
                                  customEntity:
                                    type: object
                                    properties:
                                      permissions:
                                        type: object
                                        description: ObjectPermissions object
                                        additionalProperties: true
                                      id:
                                        type: string
                                        description: Unique identifier.
                                      title:
                                        type: string
                                        description: Title or name of the custom entity.
                                      datasource:
                                        type: string
                                        description: The datasource the custom entity is from.
                                      objectType:
                                        type: string
                                        description: The type of the entity. Interpretation is specific to each datasource
                                      metadata:
                                        properties:
                                          customData:
                                            type: object
                                            description: Custom fields specific to individual datasources
                                            additionalProperties:
                                              $ref: '#/components/schemas/CustomDataValue'
                                        type: object
                                      roles:
                                        type: array
                                        description: A list of user roles for the custom entity explicitly granted by the owner.
                                        items:
                                          type: object
                                          description: UserRoleSpecification object
                                          additionalProperties: true
                                  answer:
                                    type: object
                                    description: Answer object
                                  extractedQnA:
                                    properties:
                                      heading:
                                        type: string
                                        description: Heading text that was matched to produce this result.
                                      question:
                                        type: string
                                        description: Question text that was matched to produce this result.
                                      questionResult:
                                        type: object
                                        description: Flattened SearchResult
                                        example:
                                          snippets:
                                            - snippet: snippet
                                              mimeType: mimeType
                                          metadata:
                                            container: container
                                            createTime: '2000-01-23T04:56:07.000Z'
                                            datasource: datasource
                                            author:
                                              name: name
                                            documentId: documentId
                                            updateTime: '2000-01-23T04:56:07.000Z'
                                            mimeType: mimeType
                                            objectType: objectType
                                          title: title
                                          url: https://example.com/foo/bar
                                          nativeAppUrl: slack://foo/bar
                                          mustIncludeSuggestions:
                                            - missingTerm: container
                                              query: container
                                        properties:
                                          structuredResults:
                                            type: array
                                            description: An array of entities in the work graph retrieved via a data request.
                                            items:
                                              type: object
                                              description: StructuredResult object (circular reference)
                                              additionalProperties: true
                                          trackingToken:
                                            type: string
                                            description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                                          document:
                                            type: object
                                            description: Document object
                                            additionalProperties: true
                                          title:
                                            type: string
                                          url:
                                            type: string
                                          nativeAppUrl:
                                            type: string
                                            description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                                          snippets:
                                            type: array
                                            description: Text content from the result document which contains search query terms, if available.
                                            items:
                                              required:
                                                - snippet
                                              example:
                                                snippet: snippet
                                                mimeType: mimeType
                                              properties:
                                                snippet:
                                                  type: string
                                                  description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                                                mimeType:
                                                  type: string
                                                  description: The mime type of the snippets, currently either text/plain or text/html.
                                                text:
                                                  type: string
                                                  description: A matching snippet from the document with no highlights.
                                                snippetTextOrdering:
                                                  type: integer
                                                  description: Used for sorting based off the snippet's location within all_snippetable_text
                                                ranges:
                                                  type: array
                                                  description: The bolded ranges within text.
                                                  items:
                                                    type: object
                                                    description: TextRange object
                                                    additionalProperties: true
                                                url:
                                                  type: string
                                                  description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                                              type: object
                                          fullText:
                                            type: string
                                            description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                                          fullTextList:
                                            type: array
                                            description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                                            items:
                                              type: string
                                          relatedResults:
                                            type: array
                                            description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                                            items:
                                              properties:
                                                relation:
                                                  type: string
                                                  description: How this document relates to the including entity.
                                                  enum:
                                                    - ATTACHMENT
                                                    - CANONICAL
                                                    - CASE
                                                    - CONTACT
                                                    - CONVERSATION_MESSAGES
                                                    - EXPERT
                                                    - FROM
                                                    - HIGHLIGHT
                                                    - OPPORTUNITY
                                                    - RECENT
                                                    - SOURCE
                                                    - TICKET
                                                    - TRANSCRIPT
                                                    - WITH
                                                  x-enumDescriptions:
                                                    CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                                associatedEntityId:
                                                  type: string
                                                  description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                                querySuggestion:
                                                  type: object
                                                  description: QuerySuggestion object
                                                  additionalProperties: true
                                                documents:
                                                  type: array
                                                  description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                                  deprecated: true
                                                  items:
                                                    type: object
                                                    description: Document object
                                                    additionalProperties: true
                                                results:
                                                  type: array
                                                  description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                                  items:
                                                    type: object
                                                    description: SearchResult object
                                                    additionalProperties: true
                                              type: object
                                          clusteredResults:
                                            type: array
                                            description: A list of results that should be displayed as associated with this result.
                                            items:
                                              type: object
                                              description: SearchResult object
                                              additionalProperties: true
                                          allClusteredResults:
                                            type: array
                                            description: A list of results that should be displayed as associated with this result.
                                            items:
                                              type: object
                                              description: ClusterGroup object
                                              additionalProperties: true
                                          attachmentCount:
                                            type: integer
                                            description: The total number of attachments.
                                          attachments:
                                            type: array
                                            description: A (potentially partial) list of results representing documents attached to the main result document.
                                            items:
                                              type: object
                                              description: SearchResult object
                                              additionalProperties: true
                                          backlinkResults:
                                            type: array
                                            description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                                            items:
                                              type: object
                                              description: SearchResult object
                                              additionalProperties: true
                                          clusterType:
                                            type: string
                                            description: The reason for inclusion of clusteredResults.
                                            enum:
                                              - SIMILAR
                                              - FRESHNESS
                                              - TITLE
                                              - CONTENT
                                              - NONE
                                              - THREAD_REPLY
                                              - THREAD_ROOT
                                              - PREFIX
                                              - SUFFIX
                                          mustIncludeSuggestions:
                                            properties:
                                              suggestions:
                                                type: array
                                                items:
                                                  type: object
                                                  description: QuerySuggestion object
                                                  additionalProperties: true
                                              person:
                                                type: object
                                                description: Person object
                                                additionalProperties: true
                                            type: object
                                          querySuggestion:
                                            type: object
                                            description: QuerySuggestion object
                                            additionalProperties: true
                                          prominence:
                                            type: string
                                            description: |
                                              The level of visual distinction that should be given to a result.
                                            x-enumDescriptions:
                                              HERO: A high-confidence result that should feature prominently on the page.
                                              PROMOTED: May not be the best result but should be given additional visual distinction.
                                              STANDARD: Should not be distinct from any other results.
                                            enum:
                                              - HERO
                                              - PROMOTED
                                              - STANDARD
                                          attachmentContext:
                                            type: string
                                            description: Additional context for the relationship between the result and the document it's attached to.
                                          pins:
                                            type: array
                                            description: A list of pins associated with this search result.
                                            items:
                                              type: object
                                              properties:
                                                queries:
                                                  type: array
                                                  description: The query strings for which the pinned result will show.
                                                  items:
                                                    type: string
                                                audienceFilters:
                                                  type: array
                                                  description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                                                  items:
                                                    type: object
                                                    description: FacetFilter object
                                                    additionalProperties: true
                                                id:
                                                  type: string
                                                  description: The opaque id of the pin.
                                                documentId:
                                                  type: string
                                                  description: The document which should be a pinned result.
                                                attribution:
                                                  type: object
                                                  description: Person object
                                                  additionalProperties: true
                                                updatedBy:
                                                  type: object
                                                  description: Person object
                                                  additionalProperties: true
                                                createTime:
                                                  type: string
                                                  format: date-time
                                                updateTime:
                                                  type: string
                                                  format: date-time
                                              required:
                                                - documentId
                                    type: object
                                  meeting:
                                    properties:
                                      id:
                                        type: string
                                      title:
                                        type: string
                                      description:
                                        type: string
                                      url:
                                        type: string
                                      startTime:
                                        type: string
                                        format: date-time
                                      endTime:
                                        type: string
                                        format: date-time
                                      attendees:
                                        properties:
                                          people:
                                            type: array
                                            description: Full details of some of the attendees of this event
                                            items:
                                              required:
                                                - person
                                              properties:
                                                isOrganizer:
                                                  type: boolean
                                                  description: Whether or not this attendee is an organizer.
                                                isInGroup:
                                                  type: boolean
                                                  description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                                                person:
                                                  type: object
                                                  description: Person object
                                                  additionalProperties: true
                                                groupAttendees:
                                                  type: array
                                                  description: If this attendee is a group, represents the list of individual attendees in the group.
                                                  items:
                                                    type: object
                                                    description: CalendarAttendee object
                                                    additionalProperties: true
                                                responseStatus:
                                                  type: string
                                                  enum:
                                                    - ACCEPTED
                                                    - DECLINED
                                                    - NO_RESPONSE
                                                    - TENTATIVE
                                              type: object
                                          isLimit:
                                            type: boolean
                                            description: Whether the total count of the people returned is at the retrieval limit.
                                          total:
                                            type: integer
                                            description: Total number of attendees in this event.
                                          numAccepted:
                                            type: integer
                                            description: Total number of attendees who have accepted this event.
                                          numDeclined:
                                            type: integer
                                            description: Total number of attendees who have declined this event.
                                          numNoResponse:
                                            type: integer
                                            description: Total number of attendees who have not responded to this event.
                                          numTentative:
                                            type: integer
                                            description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                                        type: object
                                    type: object
                                  app:
                                    required:
                                      - datasource
                                    properties:
                                      datasource:
                                        type: string
                                        description: The app or other repository type this represents
                                      docType:
                                        type: string
                                        description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                                      mimeType:
                                        type: string
                                        description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                                      iconUrl:
                                        type: string
                                        description: If there is available icon URL.
                                    type: object
                                  collection:
                                    type: object
                                    description: Flattened Collection
                                    properties:
                                      name:
                                        type: string
                                        description: The unique name of the Collection.
                                      description:
                                        type: string
                                        description: A brief summary of the Collection's contents.
                                      addedRoles:
                                        type: array
                                        description: A list of added user roles for the Collection.
                                        items:
                                          type: object
                                          description: UserRoleSpecification object
                                          additionalProperties: true
                                      removedRoles:
                                        type: array
                                        description: A list of removed user roles for the Collection.
                                        items:
                                          type: object
                                          description: UserRoleSpecification object
                                          additionalProperties: true
                                      audienceFilters:
                                        type: array
                                        description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                        items:
                                          type: object
                                          description: FacetFilter object
                                          additionalProperties: true
                                      icon:
                                        type: string
                                        description: The emoji icon of this Collection.
                                      adminLocked:
                                        type: boolean
                                        description: Indicates whether edits are allowed for everyone or only admins.
                                      parentId:
                                        type: integer
                                        description: The parent of this Collection, or 0 if it's a top-level Collection.
                                      thumbnail:
                                        properties:
                                          photoId:
                                            type: string
                                            description: Photo id if the thumbnail is from splash.
                                          url:
                                            type: string
                                            description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                                        type: object
                                      allowedDatasource:
                                        type: string
                                        description: The datasource type this Collection can hold.
                                      permissions:
                                        type: object
                                        description: Flattened ObjectPermissions
                                        properties:
                                          write:
                                            type: object
                                            description: Describes the write permissions levels that a user has for a specific feature
                                            properties:
                                              scopeType:
                                                type: string
                                                description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                                enum:
                                                  - GLOBAL
                                                  - OWN
                                                properties: {}
                                              create:
                                                type: boolean
                                                description: True if user has create permission for this feature and scope
                                              update:
                                                type: boolean
                                                description: True if user has update permission for this feature and scope
                                              delete:
                                                type: boolean
                                                description: True if user has delete permission for this feature and scope
                                      id:
                                        type: integer
                                        description: The unique ID of the Collection.
                                      createTime:
                                        type: string
                                        format: date-time
                                      updateTime:
                                        type: string
                                        format: date-time
                                      creator:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      updatedBy:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      itemCount:
                                        type: integer
                                        description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                                      childCount:
                                        type: integer
                                        description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                                      items:
                                        type: array
                                        description: The items in this Collection.
                                        items:
                                          type: object
                                          description: CollectionItem object
                                          additionalProperties: true
                                      pinMetadata:
                                        required:
                                          - pinnedCategories
                                          - eligibleCategoriesForPinning
                                        properties:
                                          existingPins:
                                            type: array
                                            description: List of targets this Collection is pinned to.
                                            items:
                                              required:
                                                - category
                                              properties:
                                                category:
                                                  type: string
                                                  description: Categories a Collection can be pinned to.
                                                  enum:
                                                    - COMPANY_RESOURCE
                                                    - DEPARTMENT_RESOURCE
                                                    - TEAM_RESOURCE
                                                value:
                                                  type: string
                                                  description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                                target:
                                                  type: string
                                                  description: What targets can a Collection be pinned to.
                                                  enum:
                                                    - RESOURCE_CARD
                                                    - TEAM_PROFILE_PAGE
                                              type: object
                                          eligiblePins:
                                            type: array
                                            description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                                            items:
                                              required:
                                                - id
                                                - target
                                              properties:
                                                id:
                                                  type: integer
                                                  description: The ID of the Collection.
                                                target:
                                                  required:
                                                    - category
                                                  properties:
                                                    category:
                                                      type: string
                                                      description: Categories a Collection can be pinned to.
                                                      enum:
                                                        - COMPANY_RESOURCE
                                                        - DEPARTMENT_RESOURCE
                                                        - TEAM_RESOURCE
                                                    value:
                                                      type: string
                                                      description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                                    target:
                                                      type: string
                                                      description: What targets can a Collection be pinned to.
                                                      enum:
                                                        - RESOURCE_CARD
                                                        - TEAM_PROFILE_PAGE
                                                  type: object
                                              type: object
                                        type: object
                                      shortcuts:
                                        type: array
                                        description: The names of the shortcuts (Go Links) that point to this Collection.
                                        items:
                                          type: string
                                      children:
                                        type: array
                                        description: The children Collections of this Collection.
                                        items:
                                          type: object
                                          description: Collection object
                                          additionalProperties: true
                                      roles:
                                        type: array
                                        description: A list of user roles for the Collection.
                                        items:
                                          type: object
                                          description: UserRoleSpecification object
                                          additionalProperties: true
                                  answerBoard:
                                    type: object
                                    description: PermissionedObject object
                                    properties:
                                      name:
                                        type: string
                                        description: The unique name of the Collection.
                                      description:
                                        type: string
                                        description: A brief summary of the Collection's contents.
                                      addedRoles:
                                        type: array
                                        description: A list of added user roles for the Collection.
                                        items:
                                          type: object
                                          description: UserRoleSpecification object
                                          additionalProperties: true
                                      removedRoles:
                                        type: array
                                        description: A list of removed user roles for the Collection.
                                        items:
                                          type: object
                                          description: UserRoleSpecification object
                                          additionalProperties: true
                                      audienceFilters:
                                        type: array
                                        description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                        items:
                                          type: object
                                          description: FacetFilter object
                                          additionalProperties: true
                                      id:
                                        type: integer
                                        description: The unique ID of the Answer Board.
                                      createTime:
                                        type: string
                                        format: date-time
                                      updateTime:
                                        type: string
                                        format: date-time
                                      creator:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      updatedBy:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      itemCount:
                                        type: integer
                                        description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                                      roles:
                                        type: array
                                        description: A list of user roles for the Answer Board.
                                        items:
                                          type: object
                                          description: UserRoleSpecification object
                                          additionalProperties: true
                                    required:
                                      - name
                                      - id
                                      - description
                                  code:
                                    example:
                                      repoName: scio
                                      fileName: README.md
                                      matches:
                                        - lineNumber: 1
                                          content: Welcome to the beginning
                                          ranges: []
                                        - lineNumber: 2
                                          content: Second line of the file
                                          ranges: []
                                        - lineNumber: 3
                                          content: hello world hello world
                                          ranges:
                                            - startindex: 0
                                              endIndex: 5
                                            - startIndex: 12
                                              endIndex: 17
                                    properties:
                                      repoName:
                                        type: string
                                      fileName:
                                        type: string
                                      fileUrl:
                                        type: string
                                      lines:
                                        type: array
                                        items:
                                          properties:
                                            lineNumber:
                                              type: integer
                                            content:
                                              type: string
                                            ranges:
                                              type: array
                                              description: Index ranges depicting matched sections of the line
                                              items:
                                                type: object
                                                description: TextRange object
                                                additionalProperties: true
                                          type: object
                                      isLastMatch:
                                        type: boolean
                                        description: Last file match for a repo
                                    type: object
                                  shortcut:
                                    type: object
                                    description: PermissionedObject object
                                    properties:
                                      id:
                                        type: integer
                                        description: The opaque id of the user generated content.
                                      inputAlias:
                                        type: string
                                        description: Link text following go/ prefix as entered by the user.
                                      destinationUrl:
                                        type: string
                                        description: Destination URL for the shortcut.
                                      destinationDocumentId:
                                        type: string
                                        description: Glean Document ID for the URL, if known.
                                      description:
                                        type: string
                                        description: A short, plain text blurb to help people understand the intent of the shortcut.
                                      unlisted:
                                        type: boolean
                                        description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                                      urlTemplate:
                                        type: string
                                        description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                                      addedRoles:
                                        type: array
                                        description: A list of user roles added for the Shortcut.
                                        items:
                                          type: object
                                          description: UserRoleSpecification object
                                          additionalProperties: true
                                      removedRoles:
                                        type: array
                                        description: A list of user roles removed for the Shortcut.
                                        items:
                                          type: object
                                          description: UserRoleSpecification object
                                          additionalProperties: true
                                      createdBy:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      createTime:
                                        type: string
                                        format: date-time
                                        description: The time the shortcut was created in ISO format (ISO 8601).
                                      updatedBy:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                      updateTime:
                                        type: string
                                        format: date-time
                                        description: The time the shortcut was updated in ISO format (ISO 8601).
                                      destinationDocument:
                                        type: object
                                        description: Document object
                                        additionalProperties: true
                                      intermediateUrl:
                                        type: string
                                        description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                                      viewPrefix:
                                        type: string
                                        description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                                      isExternal:
                                        type: boolean
                                        description: Indicates whether a shortcut is native or external.
                                      editUrl:
                                        type: string
                                        description: The URL using which the user can access the edit page of the shortcut.
                                      alias:
                                        type: string
                                        description: canonical link text following go/ prefix where hyphen/underscore is removed.
                                      title:
                                        type: string
                                        description: Title for the Go Link
                                      roles:
                                        type: array
                                        description: A list of user roles for the Go Link.
                                        items:
                                          type: object
                                          description: UserRoleSpecification object
                                          additionalProperties: true
                                    required:
                                      - inputAlias
                                  querySuggestions:
                                    properties:
                                      suggestions:
                                        type: array
                                        items:
                                          type: object
                                          description: QuerySuggestion object
                                          additionalProperties: true
                                      person:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                    type: object
                                  relatedDocuments:
                                    type: array
                                    description: A list of documents related to this structured result.
                                    items:
                                      properties:
                                        relation:
                                          type: string
                                          description: How this document relates to the including entity.
                                          enum:
                                            - ATTACHMENT
                                            - CANONICAL
                                            - CASE
                                            - CONTACT
                                            - CONVERSATION_MESSAGES
                                            - EXPERT
                                            - FROM
                                            - HIGHLIGHT
                                            - OPPORTUNITY
                                            - RECENT
                                            - SOURCE
                                            - TICKET
                                            - TRANSCRIPT
                                            - WITH
                                          x-enumDescriptions:
                                            CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                        associatedEntityId:
                                          type: string
                                          description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                        querySuggestion:
                                          type: object
                                          description: QuerySuggestion object
                                          additionalProperties: true
                                        documents:
                                          type: array
                                          description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                          deprecated: true
                                          items:
                                            type: object
                                            description: Document object
                                            additionalProperties: true
                                        results:
                                          type: array
                                          description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                          items:
                                            type: object
                                            description: SearchResult object
                                            additionalProperties: true
                                      type: object
                                  relatedQuestion:
                                    properties:
                                      question:
                                        type: string
                                        description: The text of the related question
                                      answer:
                                        type: string
                                        description: The answer for the related question
                                      ranges:
                                        type: array
                                        description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                                        items:
                                          type: object
                                          description: TextRange object
                                          additionalProperties: true
                                    type: object
                                  disambiguation:
                                    type: object
                                    description: A disambiguation between multiple entities with the same name
                                    properties:
                                      name:
                                        type: string
                                        description: Name of the ambiguous entity
                                      id:
                                        type: string
                                        description: The unique id of the entity in the knowledge graph
                                      type:
                                        type: string
                                        description: The type of entity.
                                        x-include-enum-class-prefix: true
                                        enum:
                                          - PERSON
                                          - PROJECT
                                          - CUSTOMER
                                  snippets:
                                    description: Any snippets associated to the populated object.
                                    type: array
                                    items:
                                      required:
                                        - snippet
                                      example:
                                        snippet: snippet
                                        mimeType: mimeType
                                      properties:
                                        snippet:
                                          type: string
                                          description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                                        mimeType:
                                          type: string
                                          description: The mime type of the snippets, currently either text/plain or text/html.
                                        text:
                                          type: string
                                          description: A matching snippet from the document with no highlights.
                                        snippetTextOrdering:
                                          type: integer
                                          description: Used for sorting based off the snippet's location within all_snippetable_text
                                        ranges:
                                          type: array
                                          description: The bolded ranges within text.
                                          items:
                                            type: object
                                            description: TextRange object
                                            additionalProperties: true
                                        url:
                                          type: string
                                          description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                                      type: object
                                  trackingToken:
                                    type: string
                                    description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                                  prominence:
                                    type: string
                                    description: The level of visual distinction that should be given to a result.
                                    x-enumDescriptions:
                                      HERO: A high-confidence result that should feature prominently on the page.
                                      PROMOTED: May not be the best result but should be given additional visual distinction.
                                      STANDARD: Should not be distinct from any other results.
                                    enum:
                                      - HERO
                                      - PROMOTED
                                      - STANDARD
                                  source:
                                    type: string
                                    description: Source context for this result. Possible values depend on the result type.
                                    enum:
                                      - EXPERT_DETECTION
                                      - ENTITY_NLQ
                                type: object
                            trackingToken:
                              type: string
                              description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                            text:
                              type: string
                            querySuggestion:
                              type: object
                              description: QuerySuggestion object
                              additionalProperties: true
                            file:
                              type: object
                              description: Structure for file uploaded by a user for Chat.
                              properties:
                                id:
                                  type: string
                                  description: Unique identifier of the file.
                                  example: FILE_1234
                                url:
                                  type: string
                                  description: Url of the file.
                                  example: www.google.com
                                name:
                                  type: string
                                  description: Name of the uploaded file.
                                  example: sample.pdf
                                metadata:
                                  type: object
                                  description: Metadata of a file uploaded by a user for Chat.
                                  properties:
                                    status:
                                      type: string
                                      description: Current status of the file.
                                      x-include-enum-class-prefix: true
                                      enum:
                                        - PROCESSING
                                        - PROCESSED
                                        - FAILED
                                        - DELETED
                                    uploadTime:
                                      type: integer
                                      format: int64
                                      description: Upload time, in epoch seconds.
                                    processedSize:
                                      type: integer
                                      format: int64
                                      description: Size of the processed file in bytes.
                                    failureReason:
                                      type: string
                                      description: Reason for failed status.
                                      x-include-enum-class-prefix: true
                                      enum:
                                        - PARSE_FAILED
                                        - AV_SCAN_FAILED
                                        - FILE_TOO_SMALL
                                        - FILE_TOO_LARGE
                                        - FILE_EXTENSION_UNSUPPORTED
                                        - FILE_METADATA_VALIDATION_FAIL
                                        - FILE_PROCESSING_TIMED_OUT
                                    mimeType:
                                      description: MIME type of the file.
                                      type: string
                            action:
                              type: object
                              properties:
                                metadata:
                                  description: The manifest for a tool that can be used to augment Glean Assistant.
                                  required:
                                    - type
                                    - name
                                    - displayName
                                    - displayDescription
                                  properties:
                                    type:
                                      description: The type of tool.
                                      type: string
                                      enum:
                                        - RETRIEVAL
                                        - ACTION
                                    name:
                                      description: Unique identifier for the tool. Name should be understandable by the LLM, and will be used to invoke a tool.
                                      type: string
                                    displayName:
                                      description: Human understandable name of the tool. Max 50 characters.
                                      type: string
                                    toolId:
                                      type: string
                                      description: An opaque id which is unique identifier for the tool.
                                    displayDescription:
                                      description: Description of the tool meant for a human.
                                      type: string
                                    logoUrl:
                                      type: string
                                      description: URL used to fetch the logo.
                                    objectName:
                                      type: string
                                      description: Name of the generated object. This will be used to indicate to the end user what the generated object contains.
                                      example:
                                        - HR ticket
                                        - Email
                                        - Chat message
                                    knowledgeType:
                                      type: string
                                      description: Indicates the kind of knowledge a tool would access or modify.
                                      enum:
                                        - NEUTRAL_KNOWLEDGE
                                        - COMPANY_KNOWLEDGE
                                        - WORLD_KNOWLEDGE
                                    createdBy:
                                      required:
                                        - name
                                        - obfuscatedId
                                      properties:
                                        name:
                                          type: string
                                          description: The display name.
                                        obfuscatedId:
                                          type: string
                                          description: An opaque identifier that can be used to request metadata for a Person.
                                      type: object
                                    lastUpdatedBy:
                                      required:
                                        - name
                                        - obfuscatedId
                                      properties:
                                        name:
                                          type: string
                                          description: The display name.
                                        obfuscatedId:
                                          type: string
                                          description: An opaque identifier that can be used to request metadata for a Person.
                                      type: object
                                    createdAt:
                                      type: string
                                      format: date-time
                                      description: The time the tool was created in ISO format (ISO 8601)
                                    lastUpdatedAt:
                                      type: string
                                      format: date-time
                                      description: The time the tool was last updated in ISO format (ISO 8601)
                                    writeActionType:
                                      type: string
                                      description: Valid only for write actions. Represents the type of write action. REDIRECT - The client renders the URL which contains information for carrying out the action. EXECUTION - Send a request to an external server and execute the action.
                                      enum:
                                        - REDIRECT
                                        - EXECUTION
                                    authType:
                                      type: string
                                      enum:
                                        - NONE
                                        - OAUTH_USER
                                        - OAUTH_ADMIN
                                        - API_KEY
                                        - BASIC_AUTH
                                        - DWD
                                      description: |
                                        The type of authentication being used.
                                        Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                                        'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                                        'OAUTH_USER' uses individual user tokens for external API calls.
                                        'DWD' refers to domain wide delegation.
                                    auth:
                                      description: Config for tool's authentication method.
                                      type: object
                                      properties:
                                        isOnPrem:
                                          type: boolean
                                          description: Whether or not this tool is hosted on-premise.
                                        usesCentralAuth:
                                          type: boolean
                                          description: Whether or not this uses central auth.
                                        type:
                                          type: string
                                          enum:
                                            - NONE
                                            - OAUTH_USER
                                            - OAUTH_ADMIN
                                            - API_KEY
                                            - BASIC_AUTH
                                            - DWD
                                          description: |
                                            The type of authentication being used.
                                            Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                                            'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                                            'OAUTH_USER' uses individual user tokens for external API calls.
                                            'DWD' refers to domain wide delegation.
                                        grantType:
                                          type: string
                                          enum:
                                            - AUTH_CODE
                                            - CLIENT_CREDENTIALS
                                          description: The type of grant type being used.
                                        status:
                                          type: string
                                          description: Auth status of the tool.
                                          enum:
                                            - AWAITING_AUTH
                                            - AUTHORIZED
                                        client_url:
                                          type: string
                                          format: url
                                          description: The URL where users will be directed to start the OAuth flow.
                                        scopes:
                                          type: array
                                          description: A list of strings denoting the different scopes or access levels required by the tool.
                                          items:
                                            type: string
                                        audiences:
                                          type: array
                                          description: A list of strings denoting the different audience which can access the tool.
                                          items:
                                            type: string
                                        authorization_url:
                                          type: string
                                          format: url
                                          description: The OAuth provider's endpoint, where access tokens are requested.
                                        lastAuthorizedAt:
                                          type: string
                                          format: date-time
                                          description: The time the tool was last authorized in ISO format (ISO 8601).
                                    permissions:
                                      type: object
                                      description: ObjectPermissions object
                                      additionalProperties: true
                                    usageInstructions:
                                      description: Usage instructions for the LLM to use this action.
                                      type: string
                                    isSetupFinished:
                                      type: boolean
                                      description: Whether this action has been fully configured and validated.
                                  type: object
                                parameters:
                                  type: object
                                  description: Parameters supported by the tool.
                                  additionalProperties:
                                    $ref: '#/components/schemas/WriteActionParameter'
                      ts:
                        type: string
                        description: Response timestamp of the message.
                      messageId:
                        type: string
                        description: A unique server-side generated ID used to identify a message, automatically populated for any USER authored messages.
                      messageTrackingToken:
                        type: string
                        description: Opaque tracking token generated server-side.
                      messageType:
                        type: string
                        default: CONTENT
                        description: Semantically groups content of a certain type. It can be used for purposes such as differential UI treatment. USER authored messages should be of type CONTENT and do not need `messageType` specified.
                        x-enumDescriptions:
                          UPDATE: An intermediate state message for progress updates.
                          CONTENT: A user query or response message.
                          CONTEXT: A message providing context in addition to the user query.
                          DEBUG: A debug message. Strictly used internally.
                          DEBUG_EXTERNAL: A debug message to be used while debugging Action creation.
                          ERROR: A message that describes an error while processing the request.
                          HEADING: A heading message used to distinguish different sections of the holistic response.
                          WARNING: A warning message to be shown to the user.
                        enum:
                          - UPDATE
                          - CONTENT
                          - CONTEXT
                          - DEBUG
                          - DEBUG_EXTERNAL
                          - ERROR
                          - HEADING
                          - WARNING
                      hasMoreFragments:
                        deprecated: true
                        type: boolean
                        description: Signals there are additional response fragments incoming.
                    type: object
              type: object
            trackingToken:
              type: string
              description: An opaque token that represents this particular Chat. To be used for `/feedback` reporting.
          type: object
      type: object
    ListChatsResponse:
      properties:
        chatResults:
          type: array
          x-includeEmpty: true
          items:
            properties:
              chat:
                description: Metadata of a Chat a user had with Glean Assistant. This contains no actual conversational content.
                properties:
                  id:
                    type: string
                    description: The opaque id of the Chat.
                  createTime:
                    type: integer
                    description: Server Unix timestamp of the creation time (in seconds since epoch UTC).
                  createdBy:
                    type: object
                    description: Person object
                    additionalProperties: true
                  updateTime:
                    type: integer
                    description: Server Unix timestamp of the update time (in seconds since epoch UTC).
                  name:
                    type: string
                    description: The name of the Chat.
                  applicationId:
                    type: string
                    description: The ID of the AI App that this Chat is associated to.
                  applicationName:
                    type: string
                    description: The display name of the AI App that this Chat is associated to.
                  icon:
                    description: Defines how to render an icon
                    example:
                      color: '#343CED'
                      key: person_icon
                      iconType: GLYPH
                      name: user
                    properties:
                      generatedBackgroundColorKey:
                        type: string
                      backgroundColor:
                        type: string
                      color:
                        type: string
                      key:
                        type: string
                      iconType:
                        enum:
                          - COLLECTION
                          - CUSTOM
                          - DATASOURCE
                          - DATASOURCE_INSTANCE
                          - FAVICON
                          - FILE_TYPE
                          - GENERATED_BACKGROUND
                          - GLYPH
                          - MIME_TYPE
                          - NO_ICON
                          - PERSON
                          - REACTIONS
                          - URL
                      masked:
                        type: boolean
                        description: Whether the icon should be masked based on current theme.
                      name:
                        type: string
                        description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
                      url:
                        type: string
                        description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
                    type: object
                type: object
              trackingToken:
                type: string
                description: An opaque token that represents this particular Chat. To be used for `/feedback` reporting.
            type: object
      type: object
    GetChatApplicationRequest:
      required:
        - id
      properties:
        id:
          type: string
          description: The id of the Chat application to be retrieved.
      type: object
    GetChatApplicationResponse:
      properties:
        application: {}
      type: object
    UploadChatFilesRequest:
      required:
        - files
      properties:
        files:
          type: array
          description: Raw files to be uploaded for chat in binary format.
          items:
            type: string
            format: binary
      type: object
    UploadChatFilesResponse:
      properties:
        files:
          type: array
          description: Files uploaded for chat.
          items:
            type: object
            description: Structure for file uploaded by a user for Chat.
            properties:
              id:
                type: string
                description: Unique identifier of the file.
                example: FILE_1234
              url:
                type: string
                description: Url of the file.
                example: www.google.com
              name:
                type: string
                description: Name of the uploaded file.
                example: sample.pdf
              metadata:
                type: object
                description: Metadata of a file uploaded by a user for Chat.
                properties:
                  status:
                    type: string
                    description: Current status of the file.
                    x-include-enum-class-prefix: true
                    enum:
                      - PROCESSING
                      - PROCESSED
                      - FAILED
                      - DELETED
                  uploadTime:
                    type: integer
                    format: int64
                    description: Upload time, in epoch seconds.
                  processedSize:
                    type: integer
                    format: int64
                    description: Size of the processed file in bytes.
                  failureReason:
                    type: string
                    description: Reason for failed status.
                    x-include-enum-class-prefix: true
                    enum:
                      - PARSE_FAILED
                      - AV_SCAN_FAILED
                      - FILE_TOO_SMALL
                      - FILE_TOO_LARGE
                      - FILE_EXTENSION_UNSUPPORTED
                      - FILE_METADATA_VALIDATION_FAIL
                      - FILE_PROCESSING_TIMED_OUT
                  mimeType:
                    description: MIME type of the file.
                    type: string
      type: object
    GetChatFilesRequest:
      required:
        - fileIds
      properties:
        fileIds:
          type: array
          description: IDs of files to fetch.
          items:
            type: string
      type: object
    GetChatFilesResponse:
      properties:
        files:
          description: A map of file IDs to ChatFile structs.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ChatFile'
      type: object
    DeleteChatFilesRequest:
      required:
        - fileIds
      properties:
        fileIds:
          type: array
          description: IDs of files to delete.
          items:
            type: string
      type: object
    ChatRequestStream:
      required:
        - messages
      properties:
        saveChat:
          type: boolean
          description: Save the current interaction as a Chat for the user to access and potentially continue later.
        chatId:
          type: string
          description: The id of the Chat that context should be retrieved from and messages added to. An empty id starts a new Chat, and the Chat is saved if saveChat is true.
        messages:
          type: array
          description: A list of chat messages, from most recent to least recent. It can be assumed that the first chat message in the list is the user's most recent query.
          items:
            description: A message that is rendered as one coherent unit with one given sender.
            properties:
              agentConfig:
                description: Describes the agent that executes the request.
                properties:
                  agent:
                    type: string
                    description: Name of the agent.
                    x-enumDescriptions:
                      DEFAULT: Integrates with your company's knowledge.
                      GPT: Communicates directly with the LLM.
                      UNIVERSAL: Uses both company and web knowledge.
                    enum:
                      - DEFAULT
                      - GPT
                      - UNIVERSAL
                  mode:
                    type: string
                    description: Top level modes to run GleanChat in.
                    x-enumDescriptions:
                      DEFAULT: Used if no mode supplied.
                      QUICK: Deprecated.
                    enum:
                      - DEFAULT
                      - QUICK
                type: object
              author:
                default: USER
                enum:
                  - USER
                  - GLEAN_AI
              citations:
                type: array
                description: A list of Citations that were used to generate the response.
                items:
                  description: Information about the source for a ChatMessage.
                  properties:
                    trackingToken:
                      type: string
                      description: An opaque token that represents this particular result in this particular ChatMessage. To be used for /feedback reporting.
                    sourceDocument:
                      type: object
                      description: Document object
                      additionalProperties: true
                    sourceFile:
                      type: object
                      description: Structure for file uploaded by a user for Chat.
                      properties:
                        id:
                          type: string
                          description: Unique identifier of the file.
                          example: FILE_1234
                        url:
                          type: string
                          description: Url of the file.
                          example: www.google.com
                        name:
                          type: string
                          description: Name of the uploaded file.
                          example: sample.pdf
                        metadata:
                          type: object
                          description: Metadata of a file uploaded by a user for Chat.
                          properties:
                            status:
                              type: string
                              description: Current status of the file.
                              x-include-enum-class-prefix: true
                              enum:
                                - PROCESSING
                                - PROCESSED
                                - FAILED
                                - DELETED
                            uploadTime:
                              type: integer
                              format: int64
                              description: Upload time, in epoch seconds.
                            processedSize:
                              type: integer
                              format: int64
                              description: Size of the processed file in bytes.
                            failureReason:
                              type: string
                              description: Reason for failed status.
                              x-include-enum-class-prefix: true
                              enum:
                                - PARSE_FAILED
                                - AV_SCAN_FAILED
                                - FILE_TOO_SMALL
                                - FILE_TOO_LARGE
                                - FILE_EXTENSION_UNSUPPORTED
                                - FILE_METADATA_VALIDATION_FAIL
                                - FILE_PROCESSING_TIMED_OUT
                            mimeType:
                              description: MIME type of the file.
                              type: string
                    sourcePerson:
                      type: object
                      description: Person object
                      additionalProperties: true
                    referenceRanges:
                      description: Each reference range and its corresponding snippets
                      type: array
                      items:
                        description: Each text range from the response can correspond to an array of snippets from the citation source.
                        properties:
                          textRange:
                            type: object
                            description: TextRange object
                            additionalProperties: true
                          snippets:
                            type: array
                            items:
                              required:
                                - snippet
                              example:
                                snippet: snippet
                                mimeType: mimeType
                              properties:
                                snippet:
                                  type: string
                                  description: A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007.
                                mimeType:
                                  type: string
                                  description: The mime type of the snippets, currently either text/plain or text/html.
                                text:
                                  type: string
                                  description: A matching snippet from the document with no highlights.
                                snippetTextOrdering:
                                  type: integer
                                  description: Used for sorting based off the snippet's location within all_snippetable_text
                                ranges:
                                  type: array
                                  description: The bolded ranges within text.
                                  items:
                                    type: object
                                    description: TextRange object
                                    additionalProperties: true
                                url:
                                  type: string
                                  description: A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text.
                              type: object
                        type: object
                  type: object
              uploadedFileIds:
                type: array
                description: IDs of files uploaded in the message that are referenced to generate the answer.
                items:
                  type: string
              fragments:
                type: array
                description: A list of rich data used to represent the response or formulate a request. These are linearly stitched together to support richer data formats beyond simple text.
                items:
                  description: Represents a part of a ChatMessage that originates from a single action/tool. It is designed to support rich data formats beyond simple text, allowing for a more dynamic and interactive chat experience. Each fragment can include various types of content, such as text, search queries, action information, and more. Also, each ChatMessageFragment should only have one of structuredResults, querySuggestion, writeAction, followupAction, or file.
                  type: object
                  properties:
                    structuredResults:
                      type: array
                      description: An array of entities in the work graph retrieved via a data request.
                      items:
                        description: A single object that can support any object in the work graph. Only a single object will be populated.
                        properties:
                          document:
                            type: object
                            description: Document object
                            additionalProperties: true
                          person:
                            type: object
                            description: Person object
                            additionalProperties: true
                          customer:
                            required:
                              - id
                              - company
                            properties:
                              id:
                                type: string
                                description: Unique identifier.
                              domains:
                                type: array
                                description: Link to company's associated website domains.
                                items:
                                  type: string
                              company:
                                required:
                                  - name
                                properties:
                                  name:
                                    type: string
                                    description: User-friendly display name.
                                  profileUrl:
                                    type: string
                                    description: Link to internal company company profile.
                                  websiteUrls:
                                    type: array
                                    description: Link to company's associated websites.
                                    items:
                                      type: string
                                  logoUrl:
                                    type: string
                                    description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                                  location:
                                    type: string
                                    description: User facing string representing the company's location.
                                    example: New York City
                                  phone:
                                    type: string
                                    description: Phone number as a number string.
                                  fax:
                                    type: string
                                    description: Fax number as a number string.
                                  industry:
                                    type: string
                                    description: User facing string representing the company's industry.
                                    example: Finances
                                  annualRevenue:
                                    type: number
                                    format: double
                                    description: Average company's annual revenue for reference.
                                  numberOfEmployees:
                                    type: integer
                                    format: int64
                                    description: Average company's number of employees for reference.
                                  stockSymbol:
                                    type: string
                                    description: Company's stock symbol if company is public.
                                  foundedDate:
                                    type: string
                                    format: date
                                    description: The date when the company was founded.
                                  about:
                                    type: string
                                    description: User facing description of company.
                                    example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                                type: object
                              documentCounts:
                                type: object
                                description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                                additionalProperties:
                                  type: integer
                              poc:
                                type: array
                                description: A list of POC for company.
                                items:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                              metadata:
                                properties:
                                  datasourceId:
                                    type: string
                                    description: The user visible id of the salesforce customer account.
                                  customData:
                                    type: object
                                    description: Custom fields specific to individual datasources
                                    additionalProperties:
                                      $ref: '#/components/schemas/CustomDataValue'
                                type: object
                              mergedCustomers:
                                type: array
                                description: A list of Customers.
                                items:
                                  type: object
                                  description: Customer object
                                  additionalProperties: true
                              startDate:
                                type: string
                                format: date
                                description: The date when the interaction with customer started.
                              contractAnnualRevenue:
                                type: number
                                format: double
                                description: Average contract annual revenue with that customer.
                              notes:
                                type: string
                                description: User facing (potentially generated) notes about company.
                                example: CIO is interested in trying out the product.
                            type: object
                          team:
                            type: object
                            description: PermissionedObject object
                            properties:
                              relatedObjects:
                                type: object
                                description: A list of objects related to a source object.
                                additionalProperties:
                                  $ref: '#/components/schemas/RelatedObjectEdge'
                              id:
                                type: string
                                description: Unique identifier
                              name:
                                type: string
                                description: Team name
                              description:
                                type: string
                                description: A description of the team
                              businessUnit:
                                type: string
                                description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                              department:
                                type: string
                                description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                              photoUrl:
                                type: string
                                format: url
                                description: A link to the team's photo.
                              bannerUrl:
                                type: string
                                format: url
                                description: A link to the team's banner photo.
                              externalLink:
                                type: string
                                format: uri
                                description: Link to a team page on the internet or your company's intranet
                              members:
                                type: array
                                description: The members on this team
                                items:
                                  required:
                                    - person
                                  type: object
                                  description: Metadata about the relationship of a person to a team.
                                  properties:
                                    person:
                                      type: object
                                      description: Person object
                                      additionalProperties: true
                                    relationship:
                                      type: string
                                      description: The team member's relationship to the team. This defaults to MEMBER if not set.
                                      default: MEMBER
                                      enum:
                                        - MEMBER
                                        - MANAGER
                                        - LEAD
                                        - POINT_OF_CONTACT
                                        - OTHER
                                    customRelationshipStr:
                                      type: string
                                      description: Displayed name for the relationship if relationship is set to `OTHER`.
                                    joinDate:
                                      type: string
                                      format: date-time
                                      description: The team member's start date
                              memberCount:
                                type: integer
                                description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                              emails:
                                type: array
                                description: The emails for this team
                                items:
                                  properties:
                                    email:
                                      type: string
                                      format: email
                                      description: An email address
                                    type:
                                      type: string
                                      enum:
                                        - PRIMARY
                                        - SECONDARY
                                        - ONCALL
                                        - OTHER
                                      default: OTHER
                                    isUserGenerated:
                                      type: boolean
                                      description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                                  type: object
                              customFields:
                                type: array
                                description: Customizable fields for additional team information.
                                items:
                                  required:
                                    - label
                                    - values
                                    - displayable
                                  properties:
                                    label:
                                      type: string
                                      description: A user-facing label for this field.
                                    values:
                                      type: array
                                      items:
                                        oneOf:
                                          - properties:
                                              strText:
                                                type: string
                                                description: Text field for string value.
                                            type: object
                                          - properties:
                                              urlAnchor:
                                                type: string
                                                description: Anchor text for hyperlink.
                                              urlLink:
                                                type: string
                                                description: Link for this URL.
                                            type: object
                                          - properties:
                                              person:
                                                type: object
                                                description: Person object
                                                additionalProperties: true
                                            type: object
                                    displayable:
                                      type: boolean
                                      description: Determines whether the client should display this custom field
                                      default: true
                                  type: object
                              datasourceProfiles:
                                type: array
                                description: The datasource profiles of the team
                                items:
                                  required:
                                    - datasource
                                    - handle
                                  properties:
                                    datasource:
                                      type: string
                                      example: github
                                      description: The datasource the profile is of.
                                    handle:
                                      type: string
                                      description: The display name of the entity in the given datasource.
                                    url:
                                      type: string
                                      description: URL to view the entity's profile.
                                    nativeAppUrl:
                                      type: string
                                      description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                                    isUserGenerated:
                                      type: boolean
                                      description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                                  type: object
                              datasource:
                                type: string
                                description: the data source of the team, e.g. GDRIVE
                              createdFrom:
                                type: string
                                description: For teams created from docs, the doc title. Otherwise empty.
                              lastUpdatedAt:
                                type: string
                                format: date-time
                                description: when this team was last updated.
                              status:
                                type: string
                                description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                                default: PROCESSED
                                enum:
                                  - PROCESSED
                                  - QUEUED_FOR_CREATION
                                  - QUEUED_FOR_DELETION
                              canBeDeleted:
                                type: boolean
                                description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                                default: true
                              loggingId:
                                type: string
                                description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                            required:
                              - id
                              - name
                          customEntity:
                            description: PermissionedObject object
                            type: object
                            properties:
                              id:
                                type: string
                                description: Unique identifier.
                              title:
                                type: string
                                description: Title or name of the custom entity.
                              datasource:
                                type: string
                                description: The datasource the custom entity is from.
                              objectType:
                                type: string
                                description: The type of the entity. Interpretation is specific to each datasource
                              metadata:
                                properties:
                                  customData:
                                    type: object
                                    description: Custom fields specific to individual datasources
                                    additionalProperties:
                                      $ref: '#/components/schemas/CustomDataValue'
                                type: object
                              roles:
                                type: array
                                description: A list of user roles for the custom entity explicitly granted by the owner.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                          answer:
                            type: object
                            description: Answer object
                          extractedQnA:
                            properties:
                              heading:
                                type: string
                                description: Heading text that was matched to produce this result.
                              question:
                                type: string
                                description: Question text that was matched to produce this result.
                              questionResult:
                                type: object
                                description: Flattened SearchResult
                                example:
                                  snippets:
                                    - snippet: snippet
                                      mimeType: mimeType
                                  metadata:
                                    container: container
                                    createTime: '2000-01-23T04:56:07.000Z'
                                    datasource: datasource
                                    author:
                                      name: name
                                    documentId: documentId
                                    updateTime: '2000-01-23T04:56:07.000Z'
                                    mimeType: mimeType
                                    objectType: objectType
                                  title: title
                                  url: https://example.com/foo/bar
                                  nativeAppUrl: slack://foo/bar
                                  mustIncludeSuggestions:
                                    - missingTerm: container
                                      query: container
                                properties:
                                  structuredResults:
                                    type: array
                                    description: An array of entities in the work graph retrieved via a data request.
                                    items:
                                      type: object
                                      description: StructuredResult object (circular reference)
                                      additionalProperties: true
                                  trackingToken:
                                    type: string
                                    description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                                  document:
                                    type: object
                                    description: Document object
                                    additionalProperties: true
                                  title:
                                    type: string
                                  url:
                                    type: string
                                  nativeAppUrl:
                                    type: string
                                    description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                                  snippets:
                                    type: array
                                    description: Text content from the result document which contains search query terms, if available.
                                    items:
                                      type: object
                                      description: SearchResultSnippet object
                                      additionalProperties: true
                                  fullText:
                                    type: string
                                    description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                                  fullTextList:
                                    type: array
                                    description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                                    items:
                                      type: string
                                  relatedResults:
                                    type: array
                                    description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                                    items:
                                      properties:
                                        relation:
                                          type: string
                                          description: How this document relates to the including entity.
                                          enum:
                                            - ATTACHMENT
                                            - CANONICAL
                                            - CASE
                                            - CONTACT
                                            - CONVERSATION_MESSAGES
                                            - EXPERT
                                            - FROM
                                            - HIGHLIGHT
                                            - OPPORTUNITY
                                            - RECENT
                                            - SOURCE
                                            - TICKET
                                            - TRANSCRIPT
                                            - WITH
                                          x-enumDescriptions:
                                            CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                        associatedEntityId:
                                          type: string
                                          description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                        querySuggestion:
                                          type: object
                                          description: QuerySuggestion object
                                          additionalProperties: true
                                        documents:
                                          type: array
                                          description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                          deprecated: true
                                          items:
                                            type: object
                                            description: Document object
                                            additionalProperties: true
                                        results:
                                          type: array
                                          description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                          items:
                                            type: object
                                            description: SearchResult object
                                            additionalProperties: true
                                      type: object
                                  clusteredResults:
                                    type: array
                                    description: A list of results that should be displayed as associated with this result.
                                    items:
                                      type: object
                                      description: SearchResult object
                                      additionalProperties: true
                                  allClusteredResults:
                                    type: array
                                    description: A list of results that should be displayed as associated with this result.
                                    items:
                                      type: object
                                      description: ClusterGroup object
                                      additionalProperties: true
                                  attachmentCount:
                                    type: integer
                                    description: The total number of attachments.
                                  attachments:
                                    type: array
                                    description: A (potentially partial) list of results representing documents attached to the main result document.
                                    items:
                                      type: object
                                      description: SearchResult object
                                      additionalProperties: true
                                  backlinkResults:
                                    type: array
                                    description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                                    items:
                                      type: object
                                      description: SearchResult object
                                      additionalProperties: true
                                  clusterType:
                                    type: string
                                    description: The reason for inclusion of clusteredResults.
                                    enum:
                                      - SIMILAR
                                      - FRESHNESS
                                      - TITLE
                                      - CONTENT
                                      - NONE
                                      - THREAD_REPLY
                                      - THREAD_ROOT
                                      - PREFIX
                                      - SUFFIX
                                  mustIncludeSuggestions:
                                    properties:
                                      suggestions:
                                        type: array
                                        items:
                                          type: object
                                          description: QuerySuggestion object
                                          additionalProperties: true
                                      person:
                                        type: object
                                        description: Person object
                                        additionalProperties: true
                                    type: object
                                  querySuggestion:
                                    type: object
                                    description: QuerySuggestion object
                                    additionalProperties: true
                                  prominence:
                                    type: string
                                    description: |
                                      The level of visual distinction that should be given to a result.
                                    x-enumDescriptions:
                                      HERO: A high-confidence result that should feature prominently on the page.
                                      PROMOTED: May not be the best result but should be given additional visual distinction.
                                      STANDARD: Should not be distinct from any other results.
                                    enum:
                                      - HERO
                                      - PROMOTED
                                      - STANDARD
                                  attachmentContext:
                                    type: string
                                    description: Additional context for the relationship between the result and the document it's attached to.
                                  pins:
                                    type: array
                                    description: A list of pins associated with this search result.
                                    items:
                                      type: object
                                      properties:
                                        queries:
                                          type: array
                                          description: The query strings for which the pinned result will show.
                                          items:
                                            type: string
                                        audienceFilters:
                                          type: array
                                          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                                          items:
                                            type: object
                                            description: FacetFilter object
                                            additionalProperties: true
                                        id:
                                          type: string
                                          description: The opaque id of the pin.
                                        documentId:
                                          type: string
                                          description: The document which should be a pinned result.
                                        attribution:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                        updatedBy:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                        createTime:
                                          type: string
                                          format: date-time
                                        updateTime:
                                          type: string
                                          format: date-time
                                      required:
                                        - documentId
                            type: object
                          meeting:
                            properties:
                              id:
                                type: string
                              title:
                                type: string
                              description:
                                type: string
                              url:
                                type: string
                              startTime:
                                type: string
                                format: date-time
                              endTime:
                                type: string
                                format: date-time
                              attendees:
                                properties:
                                  people:
                                    type: array
                                    description: Full details of some of the attendees of this event
                                    items:
                                      required:
                                        - person
                                      properties:
                                        isOrganizer:
                                          type: boolean
                                          description: Whether or not this attendee is an organizer.
                                        isInGroup:
                                          type: boolean
                                          description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                                        person:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                        groupAttendees:
                                          type: array
                                          description: If this attendee is a group, represents the list of individual attendees in the group.
                                          items:
                                            type: object
                                            description: CalendarAttendee object
                                            additionalProperties: true
                                        responseStatus:
                                          type: string
                                          enum:
                                            - ACCEPTED
                                            - DECLINED
                                            - NO_RESPONSE
                                            - TENTATIVE
                                      type: object
                                  isLimit:
                                    type: boolean
                                    description: Whether the total count of the people returned is at the retrieval limit.
                                  total:
                                    type: integer
                                    description: Total number of attendees in this event.
                                  numAccepted:
                                    type: integer
                                    description: Total number of attendees who have accepted this event.
                                  numDeclined:
                                    type: integer
                                    description: Total number of attendees who have declined this event.
                                  numNoResponse:
                                    type: integer
                                    description: Total number of attendees who have not responded to this event.
                                  numTentative:
                                    type: integer
                                    description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                                type: object
                            type: object
                          app:
                            required:
                              - datasource
                            properties:
                              datasource:
                                type: string
                                description: The app or other repository type this represents
                              docType:
                                type: string
                                description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                              mimeType:
                                type: string
                                description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                              iconUrl:
                                type: string
                                description: If there is available icon URL.
                            type: object
                          collection:
                            type: object
                            description: Flattened Collection
                            properties:
                              name:
                                type: string
                                description: The unique name of the Collection.
                              description:
                                type: string
                                description: A brief summary of the Collection's contents.
                              addedRoles:
                                type: array
                                description: A list of added user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              removedRoles:
                                type: array
                                description: A list of removed user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              audienceFilters:
                                type: array
                                description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                items:
                                  type: object
                                  description: FacetFilter object
                                  additionalProperties: true
                              icon:
                                type: string
                                description: The emoji icon of this Collection.
                              adminLocked:
                                type: boolean
                                description: Indicates whether edits are allowed for everyone or only admins.
                              parentId:
                                type: integer
                                description: The parent of this Collection, or 0 if it's a top-level Collection.
                              thumbnail:
                                properties:
                                  photoId:
                                    type: string
                                    description: Photo id if the thumbnail is from splash.
                                  url:
                                    type: string
                                    description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                                type: object
                              allowedDatasource:
                                type: string
                                description: The datasource type this Collection can hold.
                              permissions:
                                type: object
                                description: Flattened ObjectPermissions
                                properties:
                                  write:
                                    type: object
                                    description: Describes the write permissions levels that a user has for a specific feature
                                    properties:
                                      scopeType:
                                        type: string
                                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                        enum:
                                          - GLOBAL
                                          - OWN
                                        properties: {}
                                      create:
                                        type: boolean
                                        description: True if user has create permission for this feature and scope
                                      update:
                                        type: boolean
                                        description: True if user has update permission for this feature and scope
                                      delete:
                                        type: boolean
                                        description: True if user has delete permission for this feature and scope
                              id:
                                type: integer
                                description: The unique ID of the Collection.
                              createTime:
                                type: string
                                format: date-time
                              updateTime:
                                type: string
                                format: date-time
                              creator:
                                type: object
                                description: Person object
                                additionalProperties: true
                              updatedBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              itemCount:
                                type: integer
                                description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                              childCount:
                                type: integer
                                description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                              items:
                                type: array
                                description: The items in this Collection.
                                items:
                                  type: object
                                  description: CollectionItem object
                                  additionalProperties: true
                              pinMetadata:
                                required:
                                  - pinnedCategories
                                  - eligibleCategoriesForPinning
                                properties:
                                  existingPins:
                                    type: array
                                    description: List of targets this Collection is pinned to.
                                    items:
                                      required:
                                        - category
                                      properties:
                                        category:
                                          type: string
                                          description: Categories a Collection can be pinned to.
                                          enum:
                                            - COMPANY_RESOURCE
                                            - DEPARTMENT_RESOURCE
                                            - TEAM_RESOURCE
                                        value:
                                          type: string
                                          description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                        target:
                                          type: string
                                          description: What targets can a Collection be pinned to.
                                          enum:
                                            - RESOURCE_CARD
                                            - TEAM_PROFILE_PAGE
                                      type: object
                                  eligiblePins:
                                    type: array
                                    description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                                    items:
                                      required:
                                        - id
                                        - target
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the Collection.
                                        target:
                                          required:
                                            - category
                                          properties:
                                            category:
                                              type: string
                                              description: Categories a Collection can be pinned to.
                                              enum:
                                                - COMPANY_RESOURCE
                                                - DEPARTMENT_RESOURCE
                                                - TEAM_RESOURCE
                                            value:
                                              type: string
                                              description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                            target:
                                              type: string
                                              description: What targets can a Collection be pinned to.
                                              enum:
                                                - RESOURCE_CARD
                                                - TEAM_PROFILE_PAGE
                                          type: object
                                      type: object
                                type: object
                              shortcuts:
                                type: array
                                description: The names of the shortcuts (Go Links) that point to this Collection.
                                items:
                                  type: string
                              children:
                                type: array
                                description: The children Collections of this Collection.
                                items:
                                  type: object
                                  description: Collection object
                                  additionalProperties: true
                              roles:
                                type: array
                                description: A list of user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                          answerBoard:
                            type: object
                            description: PermissionedObject object
                            properties:
                              name:
                                type: string
                                description: The unique name of the Collection.
                              description:
                                type: string
                                description: A brief summary of the Collection's contents.
                              addedRoles:
                                type: array
                                description: A list of added user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              removedRoles:
                                type: array
                                description: A list of removed user roles for the Collection.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              audienceFilters:
                                type: array
                                description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                                items:
                                  type: object
                                  description: FacetFilter object
                                  additionalProperties: true
                              id:
                                type: integer
                                description: The unique ID of the Answer Board.
                              createTime:
                                type: string
                                format: date-time
                              updateTime:
                                type: string
                                format: date-time
                              creator:
                                type: object
                                description: Person object
                                additionalProperties: true
                              updatedBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              itemCount:
                                type: integer
                                description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                              roles:
                                type: array
                                description: A list of user roles for the Answer Board.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                            required:
                              - name
                              - id
                              - description
                          code:
                            example:
                              repoName: scio
                              fileName: README.md
                              matches:
                                - lineNumber: 1
                                  content: Welcome to the beginning
                                  ranges: []
                                - lineNumber: 2
                                  content: Second line of the file
                                  ranges: []
                                - lineNumber: 3
                                  content: hello world hello world
                                  ranges:
                                    - startindex: 0
                                      endIndex: 5
                                    - startIndex: 12
                                      endIndex: 17
                            properties:
                              repoName:
                                type: string
                              fileName:
                                type: string
                              fileUrl:
                                type: string
                              lines:
                                type: array
                                items:
                                  properties:
                                    lineNumber:
                                      type: integer
                                    content:
                                      type: string
                                    ranges:
                                      type: array
                                      description: Index ranges depicting matched sections of the line
                                      items:
                                        type: object
                                        description: TextRange object
                                        additionalProperties: true
                                  type: object
                              isLastMatch:
                                type: boolean
                                description: Last file match for a repo
                            type: object
                          shortcut:
                            type: object
                            description: PermissionedObject object
                            properties:
                              id:
                                type: integer
                                description: The opaque id of the user generated content.
                              inputAlias:
                                type: string
                                description: Link text following go/ prefix as entered by the user.
                              destinationUrl:
                                type: string
                                description: Destination URL for the shortcut.
                              destinationDocumentId:
                                type: string
                                description: Glean Document ID for the URL, if known.
                              description:
                                type: string
                                description: A short, plain text blurb to help people understand the intent of the shortcut.
                              unlisted:
                                type: boolean
                                description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                              urlTemplate:
                                type: string
                                description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                              addedRoles:
                                type: array
                                description: A list of user roles added for the Shortcut.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              removedRoles:
                                type: array
                                description: A list of user roles removed for the Shortcut.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                              createdBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              createTime:
                                type: string
                                format: date-time
                                description: The time the shortcut was created in ISO format (ISO 8601).
                              updatedBy:
                                type: object
                                description: Person object
                                additionalProperties: true
                              updateTime:
                                type: string
                                format: date-time
                                description: The time the shortcut was updated in ISO format (ISO 8601).
                              destinationDocument:
                                type: object
                                description: Document object
                                additionalProperties: true
                              intermediateUrl:
                                type: string
                                description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                              viewPrefix:
                                type: string
                                description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                              isExternal:
                                type: boolean
                                description: Indicates whether a shortcut is native or external.
                              editUrl:
                                type: string
                                description: The URL using which the user can access the edit page of the shortcut.
                              alias:
                                type: string
                                description: canonical link text following go/ prefix where hyphen/underscore is removed.
                              title:
                                type: string
                                description: Title for the Go Link
                              roles:
                                type: array
                                description: A list of user roles for the Go Link.
                                items:
                                  type: object
                                  description: UserRoleSpecification object
                                  additionalProperties: true
                            required:
                              - inputAlias
                          querySuggestions:
                            properties:
                              suggestions:
                                type: array
                                items:
                                  type: object
                                  description: QuerySuggestion object
                                  additionalProperties: true
                              person:
                                type: object
                                description: Person object
                                additionalProperties: true
                            type: object
                          relatedDocuments:
                            type: array
                            description: A list of documents related to this structured result.
                            items:
                              properties:
                                relation:
                                  type: string
                                  description: How this document relates to the including entity.
                                  enum:
                                    - ATTACHMENT
                                    - CANONICAL
                                    - CASE
                                    - CONTACT
                                    - CONVERSATION_MESSAGES
                                    - EXPERT
                                    - FROM
                                    - HIGHLIGHT
                                    - OPPORTUNITY
                                    - RECENT
                                    - SOURCE
                                    - TICKET
                                    - TRANSCRIPT
                                    - WITH
                                  x-enumDescriptions:
                                    CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                associatedEntityId:
                                  type: string
                                  description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                querySuggestion:
                                  type: object
                                  description: QuerySuggestion object
                                  additionalProperties: true
                                documents:
                                  type: array
                                  description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                  deprecated: true
                                  items:
                                    type: object
                                    description: Document object
                                    additionalProperties: true
                                results:
                                  type: array
                                  description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                  items:
                                    type: object
                                    description: SearchResult object
                                    additionalProperties: true
                              type: object
                          relatedQuestion:
                            properties:
                              question:
                                type: string
                                description: The text of the related question
                              answer:
                                type: string
                                description: The answer for the related question
                              ranges:
                                type: array
                                description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                                items:
                                  type: object
                                  description: TextRange object
                                  additionalProperties: true
                            type: object
                          disambiguation:
                            type: object
                            description: A disambiguation between multiple entities with the same name
                            properties:
                              name:
                                type: string
                                description: Name of the ambiguous entity
                              id:
                                type: string
                                description: The unique id of the entity in the knowledge graph
                              type:
                                type: string
                                description: The type of entity.
                                x-include-enum-class-prefix: true
                                enum:
                                  - PERSON
                                  - PROJECT
                                  - CUSTOMER
                          snippets:
                            description: Any snippets associated to the populated object.
                            type: array
                            items:
                              type: object
                              description: SearchResultSnippet object
                              additionalProperties: true
                          trackingToken:
                            type: string
                            description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                          prominence:
                            type: string
                            description: The level of visual distinction that should be given to a result.
                            x-enumDescriptions:
                              HERO: A high-confidence result that should feature prominently on the page.
                              PROMOTED: May not be the best result but should be given additional visual distinction.
                              STANDARD: Should not be distinct from any other results.
                            enum:
                              - HERO
                              - PROMOTED
                              - STANDARD
                          source:
                            type: string
                            description: Source context for this result. Possible values depend on the result type.
                            enum:
                              - EXPERT_DETECTION
                              - ENTITY_NLQ
                        type: object
                    trackingToken:
                      type: string
                      description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                    text:
                      type: string
                    querySuggestion:
                      type: object
                      description: QuerySuggestion object
                      additionalProperties: true
                    file:
                      type: object
                      description: Structure for file uploaded by a user for Chat.
                      properties:
                        id:
                          type: string
                          description: Unique identifier of the file.
                          example: FILE_1234
                        url:
                          type: string
                          description: Url of the file.
                          example: www.google.com
                        name:
                          type: string
                          description: Name of the uploaded file.
                          example: sample.pdf
                        metadata:
                          type: object
                          description: Metadata of a file uploaded by a user for Chat.
                          properties:
                            status:
                              type: string
                              description: Current status of the file.
                              x-include-enum-class-prefix: true
                              enum:
                                - PROCESSING
                                - PROCESSED
                                - FAILED
                                - DELETED
                            uploadTime:
                              type: integer
                              format: int64
                              description: Upload time, in epoch seconds.
                            processedSize:
                              type: integer
                              format: int64
                              description: Size of the processed file in bytes.
                            failureReason:
                              type: string
                              description: Reason for failed status.
                              x-include-enum-class-prefix: true
                              enum:
                                - PARSE_FAILED
                                - AV_SCAN_FAILED
                                - FILE_TOO_SMALL
                                - FILE_TOO_LARGE
                                - FILE_EXTENSION_UNSUPPORTED
                                - FILE_METADATA_VALIDATION_FAIL
                                - FILE_PROCESSING_TIMED_OUT
                            mimeType:
                              description: MIME type of the file.
                              type: string
                    action:
                      type: object
                      properties:
                        metadata:
                          description: The manifest for a tool that can be used to augment Glean Assistant.
                          required:
                            - type
                            - name
                            - displayName
                            - displayDescription
                          properties:
                            type:
                              description: The type of tool.
                              type: string
                              enum:
                                - RETRIEVAL
                                - ACTION
                            name:
                              description: Unique identifier for the tool. Name should be understandable by the LLM, and will be used to invoke a tool.
                              type: string
                            displayName:
                              description: Human understandable name of the tool. Max 50 characters.
                              type: string
                            toolId:
                              type: string
                              description: An opaque id which is unique identifier for the tool.
                            displayDescription:
                              description: Description of the tool meant for a human.
                              type: string
                            logoUrl:
                              type: string
                              description: URL used to fetch the logo.
                            objectName:
                              type: string
                              description: Name of the generated object. This will be used to indicate to the end user what the generated object contains.
                              example:
                                - HR ticket
                                - Email
                                - Chat message
                            knowledgeType:
                              type: string
                              description: Indicates the kind of knowledge a tool would access or modify.
                              enum:
                                - NEUTRAL_KNOWLEDGE
                                - COMPANY_KNOWLEDGE
                                - WORLD_KNOWLEDGE
                            createdBy:
                              required:
                                - name
                                - obfuscatedId
                              properties:
                                name:
                                  type: string
                                  description: The display name.
                                obfuscatedId:
                                  type: string
                                  description: An opaque identifier that can be used to request metadata for a Person.
                              type: object
                            lastUpdatedBy:
                              required:
                                - name
                                - obfuscatedId
                              properties:
                                name:
                                  type: string
                                  description: The display name.
                                obfuscatedId:
                                  type: string
                                  description: An opaque identifier that can be used to request metadata for a Person.
                              type: object
                            createdAt:
                              type: string
                              format: date-time
                              description: The time the tool was created in ISO format (ISO 8601)
                            lastUpdatedAt:
                              type: string
                              format: date-time
                              description: The time the tool was last updated in ISO format (ISO 8601)
                            writeActionType:
                              type: string
                              description: Valid only for write actions. Represents the type of write action. REDIRECT - The client renders the URL which contains information for carrying out the action. EXECUTION - Send a request to an external server and execute the action.
                              enum:
                                - REDIRECT
                                - EXECUTION
                            authType:
                              type: string
                              enum:
                                - NONE
                                - OAUTH_USER
                                - OAUTH_ADMIN
                                - API_KEY
                                - BASIC_AUTH
                                - DWD
                              description: |
                                The type of authentication being used.
                                Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                                'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                                'OAUTH_USER' uses individual user tokens for external API calls.
                                'DWD' refers to domain wide delegation.
                            auth:
                              description: Config for tool's authentication method.
                              type: object
                              properties:
                                isOnPrem:
                                  type: boolean
                                  description: Whether or not this tool is hosted on-premise.
                                usesCentralAuth:
                                  type: boolean
                                  description: Whether or not this uses central auth.
                                type:
                                  type: string
                                  enum:
                                    - NONE
                                    - OAUTH_USER
                                    - OAUTH_ADMIN
                                    - API_KEY
                                    - BASIC_AUTH
                                    - DWD
                                  description: |
                                    The type of authentication being used.
                                    Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                                    'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                                    'OAUTH_USER' uses individual user tokens for external API calls.
                                    'DWD' refers to domain wide delegation.
                                grantType:
                                  type: string
                                  enum:
                                    - AUTH_CODE
                                    - CLIENT_CREDENTIALS
                                  description: The type of grant type being used.
                                status:
                                  type: string
                                  description: Auth status of the tool.
                                  enum:
                                    - AWAITING_AUTH
                                    - AUTHORIZED
                                client_url:
                                  type: string
                                  format: url
                                  description: The URL where users will be directed to start the OAuth flow.
                                scopes:
                                  type: array
                                  description: A list of strings denoting the different scopes or access levels required by the tool.
                                  items:
                                    type: string
                                audiences:
                                  type: array
                                  description: A list of strings denoting the different audience which can access the tool.
                                  items:
                                    type: string
                                authorization_url:
                                  type: string
                                  format: url
                                  description: The OAuth provider's endpoint, where access tokens are requested.
                                lastAuthorizedAt:
                                  type: string
                                  format: date-time
                                  description: The time the tool was last authorized in ISO format (ISO 8601).
                            permissions:
                              type: object
                              description: ObjectPermissions object
                              additionalProperties: true
                            usageInstructions:
                              description: Usage instructions for the LLM to use this action.
                              type: string
                            isSetupFinished:
                              type: boolean
                              description: Whether this action has been fully configured and validated.
                          type: object
                        parameters:
                          type: object
                          description: Parameters supported by the tool.
                          additionalProperties:
                            $ref: '#/components/schemas/WriteActionParameter'
              ts:
                type: string
                description: Response timestamp of the message.
              messageId:
                type: string
                description: A unique server-side generated ID used to identify a message, automatically populated for any USER authored messages.
              messageTrackingToken:
                type: string
                description: Opaque tracking token generated server-side.
              messageType:
                type: string
                default: CONTENT
                description: Semantically groups content of a certain type. It can be used for purposes such as differential UI treatment. USER authored messages should be of type CONTENT and do not need `messageType` specified.
                x-enumDescriptions:
                  UPDATE: An intermediate state message for progress updates.
                  CONTENT: A user query or response message.
                  CONTEXT: A message providing context in addition to the user query.
                  DEBUG: A debug message. Strictly used internally.
                  DEBUG_EXTERNAL: A debug message to be used while debugging Action creation.
                  ERROR: A message that describes an error while processing the request.
                  HEADING: A heading message used to distinguish different sections of the holistic response.
                  WARNING: A warning message to be shown to the user.
                enum:
                  - UPDATE
                  - CONTENT
                  - CONTEXT
                  - DEBUG
                  - DEBUG_EXTERNAL
                  - ERROR
                  - HEADING
                  - WARNING
              hasMoreFragments:
                deprecated: true
                type: boolean
                description: Signals there are additional response fragments incoming.
            type: object
        agentConfig:
          description: Describes the agent that executes the request.
          properties:
            agent:
              type: string
              description: Name of the agent.
              x-enumDescriptions:
                DEFAULT: Integrates with your company's knowledge.
                GPT: Communicates directly with the LLM.
                UNIVERSAL: Uses both company and web knowledge.
              enum:
                - DEFAULT
                - GPT
                - UNIVERSAL
            mode:
              type: string
              description: Top level modes to run GleanChat in.
              x-enumDescriptions:
                DEFAULT: Used if no mode supplied.
                QUICK: Deprecated.
              enum:
                - DEFAULT
                - QUICK
          type: object
        inclusions:
          description: RestrictionFilters object
          type: object
          properties:
            documentSpecs:
              type: array
              items:
                type: object
                description: DocumentSpec object
                additionalProperties: true
            datasourceInstances:
              type: array
              items:
                type: string
        exclusions:
          description: RestrictionFilters object
          type: object
          properties:
            documentSpecs:
              type: array
              items:
                type: object
                description: DocumentSpec object
                additionalProperties: true
            datasourceInstances:
              type: array
              items:
                type: string
        timeoutMillis:
          type: integer
          description: Timeout in milliseconds for the request. A `408` error will be returned if handling the request takes longer.
          example: 30000
        applicationId:
          type: string
          description: The ID of the application this request originates from, used to determine the configuration of underlying chat processes. This should correspond to the ID set during admin setup. If not specified, the default chat experience will be used.
        stream:
          type: boolean
          description: If set, response lines will be streamed one-by-one as they become available. Each will be a ChatResponse, formatted as JSON, and separated by a new line. If false, the entire response will be returned at once. Note that if this is set and the model being used does not support streaming, the model's response will not be streamed, but other messages from the endpoint still will be.
          default: true
      type: object
    ChatMessage:
      description: A message that is rendered as one coherent unit with one given sender.
      properties:
        agentConfig:
          description: Describes the agent that executes the request.
          properties:
            agent:
              type: string
              description: Name of the agent.
              x-enumDescriptions:
                DEFAULT: Integrates with your company's knowledge.
                GPT: Communicates directly with the LLM.
                UNIVERSAL: Uses both company and web knowledge.
              enum:
                - DEFAULT
                - GPT
                - UNIVERSAL
            mode:
              type: string
              description: Top level modes to run GleanChat in.
              x-enumDescriptions:
                DEFAULT: Used if no mode supplied.
                QUICK: Deprecated.
              enum:
                - DEFAULT
                - QUICK
          type: object
        author:
          default: USER
          enum:
            - USER
            - GLEAN_AI
        citations:
          type: array
          description: A list of Citations that were used to generate the response.
          items:
            description: Information about the source for a ChatMessage.
            properties:
              trackingToken:
                type: string
                description: An opaque token that represents this particular result in this particular ChatMessage. To be used for /feedback reporting.
              sourceDocument:
                type: object
                description: Document object
                additionalProperties: true
              sourceFile:
                type: object
                description: Structure for file uploaded by a user for Chat.
                properties:
                  id:
                    type: string
                    description: Unique identifier of the file.
                    example: FILE_1234
                  url:
                    type: string
                    description: Url of the file.
                    example: www.google.com
                  name:
                    type: string
                    description: Name of the uploaded file.
                    example: sample.pdf
                  metadata:
                    type: object
                    description: Metadata of a file uploaded by a user for Chat.
                    properties:
                      status:
                        type: string
                        description: Current status of the file.
                        x-include-enum-class-prefix: true
                        enum:
                          - PROCESSING
                          - PROCESSED
                          - FAILED
                          - DELETED
                      uploadTime:
                        type: integer
                        format: int64
                        description: Upload time, in epoch seconds.
                      processedSize:
                        type: integer
                        format: int64
                        description: Size of the processed file in bytes.
                      failureReason:
                        type: string
                        description: Reason for failed status.
                        x-include-enum-class-prefix: true
                        enum:
                          - PARSE_FAILED
                          - AV_SCAN_FAILED
                          - FILE_TOO_SMALL
                          - FILE_TOO_LARGE
                          - FILE_EXTENSION_UNSUPPORTED
                          - FILE_METADATA_VALIDATION_FAIL
                          - FILE_PROCESSING_TIMED_OUT
                      mimeType:
                        description: MIME type of the file.
                        type: string
              sourcePerson:
                type: object
                description: Person object
                additionalProperties: true
              referenceRanges:
                description: Each reference range and its corresponding snippets
                type: array
                items:
                  description: Each text range from the response can correspond to an array of snippets from the citation source.
                  properties:
                    textRange:
                      type: object
                      description: TextRange object
                      additionalProperties: true
                    snippets:
                      type: array
                      items:
                        type: object
                        description: SearchResultSnippet object
                        additionalProperties: true
                  type: object
            type: object
        uploadedFileIds:
          type: array
          description: IDs of files uploaded in the message that are referenced to generate the answer.
          items:
            type: string
        fragments:
          type: array
          description: A list of rich data used to represent the response or formulate a request. These are linearly stitched together to support richer data formats beyond simple text.
          items:
            description: Represents a part of a ChatMessage that originates from a single action/tool. It is designed to support rich data formats beyond simple text, allowing for a more dynamic and interactive chat experience. Each fragment can include various types of content, such as text, search queries, action information, and more. Also, each ChatMessageFragment should only have one of structuredResults, querySuggestion, writeAction, followupAction, or file.
            type: object
            properties:
              structuredResults:
                type: array
                description: An array of entities in the work graph retrieved via a data request.
                items:
                  description: A single object that can support any object in the work graph. Only a single object will be populated.
                  properties:
                    document:
                      type: object
                      description: Document object
                      additionalProperties: true
                    person:
                      type: object
                      description: Person object
                      additionalProperties: true
                    customer:
                      required:
                        - id
                        - company
                      properties:
                        id:
                          type: string
                          description: Unique identifier.
                        domains:
                          type: array
                          description: Link to company's associated website domains.
                          items:
                            type: string
                        company:
                          required:
                            - name
                          properties:
                            name:
                              type: string
                              description: User-friendly display name.
                            profileUrl:
                              type: string
                              description: Link to internal company company profile.
                            websiteUrls:
                              type: array
                              description: Link to company's associated websites.
                              items:
                                type: string
                            logoUrl:
                              type: string
                              description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
                            location:
                              type: string
                              description: User facing string representing the company's location.
                              example: New York City
                            phone:
                              type: string
                              description: Phone number as a number string.
                            fax:
                              type: string
                              description: Fax number as a number string.
                            industry:
                              type: string
                              description: User facing string representing the company's industry.
                              example: Finances
                            annualRevenue:
                              type: number
                              format: double
                              description: Average company's annual revenue for reference.
                            numberOfEmployees:
                              type: integer
                              format: int64
                              description: Average company's number of employees for reference.
                            stockSymbol:
                              type: string
                              description: Company's stock symbol if company is public.
                            foundedDate:
                              type: string
                              format: date
                              description: The date when the company was founded.
                            about:
                              type: string
                              description: User facing description of company.
                              example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
                          type: object
                        documentCounts:
                          type: object
                          description: A map of {string, int} pairs representing counts of each document type associated with this customer.
                          additionalProperties:
                            type: integer
                        poc:
                          type: array
                          description: A list of POC for company.
                          items:
                            type: object
                            description: Person object
                            additionalProperties: true
                        metadata:
                          properties:
                            datasourceId:
                              type: string
                              description: The user visible id of the salesforce customer account.
                            customData:
                              type: object
                              description: Custom fields specific to individual datasources
                              additionalProperties:
                                $ref: '#/components/schemas/CustomDataValue'
                          type: object
                        mergedCustomers:
                          type: array
                          description: A list of Customers.
                          items:
                            type: object
                            description: Customer object
                            additionalProperties: true
                        startDate:
                          type: string
                          format: date
                          description: The date when the interaction with customer started.
                        contractAnnualRevenue:
                          type: number
                          format: double
                          description: Average contract annual revenue with that customer.
                        notes:
                          type: string
                          description: User facing (potentially generated) notes about company.
                          example: CIO is interested in trying out the product.
                      type: object
                    team:
                      type: object
                      description: PermissionedObject object
                      properties:
                        relatedObjects:
                          type: object
                          description: A list of objects related to a source object.
                          additionalProperties:
                            $ref: '#/components/schemas/RelatedObjectEdge'
                        id:
                          type: string
                          description: Unique identifier
                        name:
                          type: string
                          description: Team name
                        description:
                          type: string
                          description: A description of the team
                        businessUnit:
                          type: string
                          description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
                        department:
                          type: string
                          description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
                        photoUrl:
                          type: string
                          format: url
                          description: A link to the team's photo.
                        bannerUrl:
                          type: string
                          format: url
                          description: A link to the team's banner photo.
                        externalLink:
                          type: string
                          format: uri
                          description: Link to a team page on the internet or your company's intranet
                        members:
                          type: array
                          description: The members on this team
                          items:
                            required:
                              - person
                            type: object
                            description: Metadata about the relationship of a person to a team.
                            properties:
                              person:
                                type: object
                                description: Person object
                                additionalProperties: true
                              relationship:
                                type: string
                                description: The team member's relationship to the team. This defaults to MEMBER if not set.
                                default: MEMBER
                                enum:
                                  - MEMBER
                                  - MANAGER
                                  - LEAD
                                  - POINT_OF_CONTACT
                                  - OTHER
                              customRelationshipStr:
                                type: string
                                description: Displayed name for the relationship if relationship is set to `OTHER`.
                              joinDate:
                                type: string
                                format: date-time
                                description: The team member's start date
                        memberCount:
                          type: integer
                          description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
                        emails:
                          type: array
                          description: The emails for this team
                          items:
                            properties:
                              email:
                                type: string
                                format: email
                                description: An email address
                              type:
                                type: string
                                enum:
                                  - PRIMARY
                                  - SECONDARY
                                  - ONCALL
                                  - OTHER
                                default: OTHER
                              isUserGenerated:
                                type: boolean
                                description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
                            type: object
                        customFields:
                          type: array
                          description: Customizable fields for additional team information.
                          items:
                            required:
                              - label
                              - values
                              - displayable
                            properties:
                              label:
                                type: string
                                description: A user-facing label for this field.
                              values:
                                type: array
                                items:
                                  oneOf:
                                    - properties:
                                        strText:
                                          type: string
                                          description: Text field for string value.
                                      type: object
                                    - properties:
                                        urlAnchor:
                                          type: string
                                          description: Anchor text for hyperlink.
                                        urlLink:
                                          type: string
                                          description: Link for this URL.
                                      type: object
                                    - properties:
                                        person:
                                          type: object
                                          description: Person object
                                          additionalProperties: true
                                      type: object
                              displayable:
                                type: boolean
                                description: Determines whether the client should display this custom field
                                default: true
                            type: object
                        datasourceProfiles:
                          type: array
                          description: The datasource profiles of the team
                          items:
                            required:
                              - datasource
                              - handle
                            properties:
                              datasource:
                                type: string
                                example: github
                                description: The datasource the profile is of.
                              handle:
                                type: string
                                description: The display name of the entity in the given datasource.
                              url:
                                type: string
                                description: URL to view the entity's profile.
                              nativeAppUrl:
                                type: string
                                description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
                              isUserGenerated:
                                type: boolean
                                description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
                            type: object
                        datasource:
                          type: string
                          description: the data source of the team, e.g. GDRIVE
                        createdFrom:
                          type: string
                          description: For teams created from docs, the doc title. Otherwise empty.
                        lastUpdatedAt:
                          type: string
                          format: date-time
                          description: when this team was last updated.
                        status:
                          type: string
                          description: whether this team is fully processed or there are still unprocessed operations that'll affect it
                          default: PROCESSED
                          enum:
                            - PROCESSED
                            - QUEUED_FOR_CREATION
                            - QUEUED_FOR_DELETION
                        canBeDeleted:
                          type: boolean
                          description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
                          default: true
                        loggingId:
                          type: string
                          description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
                      required:
                        - id
                        - name
                    customEntity:
                      description: PermissionedObject object
                      type: object
                      properties:
                        id:
                          type: string
                          description: Unique identifier.
                        title:
                          type: string
                          description: Title or name of the custom entity.
                        datasource:
                          type: string
                          description: The datasource the custom entity is from.
                        objectType:
                          type: string
                          description: The type of the entity. Interpretation is specific to each datasource
                        metadata:
                          properties:
                            customData:
                              type: object
                              description: Custom fields specific to individual datasources
                              additionalProperties:
                                $ref: '#/components/schemas/CustomDataValue'
                          type: object
                        roles:
                          type: array
                          description: A list of user roles for the custom entity explicitly granted by the owner.
                          items:
                            type: object
                            description: UserRoleSpecification object
                            additionalProperties: true
                    answer:
                      type: object
                      description: Answer object
                    extractedQnA:
                      properties:
                        heading:
                          type: string
                          description: Heading text that was matched to produce this result.
                        question:
                          type: string
                          description: Question text that was matched to produce this result.
                        questionResult:
                          type: object
                          description: Flattened SearchResult
                          example:
                            snippets:
                              - snippet: snippet
                                mimeType: mimeType
                            metadata:
                              container: container
                              createTime: '2000-01-23T04:56:07.000Z'
                              datasource: datasource
                              author:
                                name: name
                              documentId: documentId
                              updateTime: '2000-01-23T04:56:07.000Z'
                              mimeType: mimeType
                              objectType: objectType
                            title: title
                            url: https://example.com/foo/bar
                            nativeAppUrl: slack://foo/bar
                            mustIncludeSuggestions:
                              - missingTerm: container
                                query: container
                          properties:
                            structuredResults:
                              type: array
                              description: An array of entities in the work graph retrieved via a data request.
                              items:
                                type: object
                                description: StructuredResult object (circular reference)
                                additionalProperties: true
                            trackingToken:
                              type: string
                              description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                            document:
                              type: object
                              description: Document object
                              additionalProperties: true
                            title:
                              type: string
                            url:
                              type: string
                            nativeAppUrl:
                              type: string
                              description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
                            snippets:
                              type: array
                              description: Text content from the result document which contains search query terms, if available.
                              items:
                                type: object
                                description: SearchResultSnippet object
                                additionalProperties: true
                            fullText:
                              type: string
                              description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                            fullTextList:
                              type: array
                              description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                              items:
                                type: string
                            relatedResults:
                              type: array
                              description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                              items:
                                properties:
                                  relation:
                                    type: string
                                    description: How this document relates to the including entity.
                                    enum:
                                      - ATTACHMENT
                                      - CANONICAL
                                      - CASE
                                      - CONTACT
                                      - CONVERSATION_MESSAGES
                                      - EXPERT
                                      - FROM
                                      - HIGHLIGHT
                                      - OPPORTUNITY
                                      - RECENT
                                      - SOURCE
                                      - TICKET
                                      - TRANSCRIPT
                                      - WITH
                                    x-enumDescriptions:
                                      CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                                  associatedEntityId:
                                    type: string
                                    description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                                  querySuggestion:
                                    type: object
                                    description: QuerySuggestion object
                                    additionalProperties: true
                                  documents:
                                    type: array
                                    description: A truncated list of documents with this relation. TO BE DEPRECATED.
                                    deprecated: true
                                    items:
                                      type: object
                                      description: Document object
                                      additionalProperties: true
                                  results:
                                    type: array
                                    description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                                    items:
                                      type: object
                                      description: SearchResult object
                                      additionalProperties: true
                                type: object
                            clusteredResults:
                              type: array
                              description: A list of results that should be displayed as associated with this result.
                              items:
                                type: object
                                description: SearchResult object
                                additionalProperties: true
                            allClusteredResults:
                              type: array
                              description: A list of results that should be displayed as associated with this result.
                              items:
                                type: object
                                description: ClusterGroup object
                                additionalProperties: true
                            attachmentCount:
                              type: integer
                              description: The total number of attachments.
                            attachments:
                              type: array
                              description: A (potentially partial) list of results representing documents attached to the main result document.
                              items:
                                type: object
                                description: SearchResult object
                                additionalProperties: true
                            backlinkResults:
                              type: array
                              description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                              items:
                                type: object
                                description: SearchResult object
                                additionalProperties: true
                            clusterType:
                              type: string
                              description: The reason for inclusion of clusteredResults.
                              enum:
                                - SIMILAR
                                - FRESHNESS
                                - TITLE
                                - CONTENT
                                - NONE
                                - THREAD_REPLY
                                - THREAD_ROOT
                                - PREFIX
                                - SUFFIX
                            mustIncludeSuggestions:
                              properties:
                                suggestions:
                                  type: array
                                  items:
                                    type: object
                                    description: QuerySuggestion object
                                    additionalProperties: true
                                person:
                                  type: object
                                  description: Person object
                                  additionalProperties: true
                              type: object
                            querySuggestion:
                              type: object
                              description: QuerySuggestion object
                              additionalProperties: true
                            prominence:
                              type: string
                              description: |
                                The level of visual distinction that should be given to a result.
                              x-enumDescriptions:
                                HERO: A high-confidence result that should feature prominently on the page.
                                PROMOTED: May not be the best result but should be given additional visual distinction.
                                STANDARD: Should not be distinct from any other results.
                              enum:
                                - HERO
                                - PROMOTED
                                - STANDARD
                            attachmentContext:
                              type: string
                              description: Additional context for the relationship between the result and the document it's attached to.
                            pins:
                              type: array
                              description: A list of pins associated with this search result.
                              items:
                                type: object
                                properties:
                                  queries:
                                    type: array
                                    description: The query strings for which the pinned result will show.
                                    items:
                                      type: string
                                  audienceFilters:
                                    type: array
                                    description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                                    items:
                                      type: object
                                      description: FacetFilter object
                                      additionalProperties: true
                                  id:
                                    type: string
                                    description: The opaque id of the pin.
                                  documentId:
                                    type: string
                                    description: The document which should be a pinned result.
                                  attribution:
                                    type: object
                                    description: Person object
                                    additionalProperties: true
                                  updatedBy:
                                    type: object
                                    description: Person object
                                    additionalProperties: true
                                  createTime:
                                    type: string
                                    format: date-time
                                  updateTime:
                                    type: string
                                    format: date-time
                                required:
                                  - documentId
                      type: object
                    meeting:
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        description:
                          type: string
                        url:
                          type: string
                        startTime:
                          type: string
                          format: date-time
                        endTime:
                          type: string
                          format: date-time
                        attendees:
                          properties:
                            people:
                              type: array
                              description: Full details of some of the attendees of this event
                              items:
                                required:
                                  - person
                                properties:
                                  isOrganizer:
                                    type: boolean
                                    description: Whether or not this attendee is an organizer.
                                  isInGroup:
                                    type: boolean
                                    description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                                  person:
                                    type: object
                                    description: Person object
                                    additionalProperties: true
                                  groupAttendees:
                                    type: array
                                    description: If this attendee is a group, represents the list of individual attendees in the group.
                                    items:
                                      type: object
                                      description: CalendarAttendee object
                                      additionalProperties: true
                                  responseStatus:
                                    type: string
                                    enum:
                                      - ACCEPTED
                                      - DECLINED
                                      - NO_RESPONSE
                                      - TENTATIVE
                                type: object
                            isLimit:
                              type: boolean
                              description: Whether the total count of the people returned is at the retrieval limit.
                            total:
                              type: integer
                              description: Total number of attendees in this event.
                            numAccepted:
                              type: integer
                              description: Total number of attendees who have accepted this event.
                            numDeclined:
                              type: integer
                              description: Total number of attendees who have declined this event.
                            numNoResponse:
                              type: integer
                              description: Total number of attendees who have not responded to this event.
                            numTentative:
                              type: integer
                              description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
                          type: object
                      type: object
                    app:
                      required:
                        - datasource
                      properties:
                        datasource:
                          type: string
                          description: The app or other repository type this represents
                        docType:
                          type: string
                          description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
                        mimeType:
                          type: string
                          description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
                        iconUrl:
                          type: string
                          description: If there is available icon URL.
                      type: object
                    collection:
                      type: object
                      description: Flattened Collection
                      properties:
                        name:
                          type: string
                          description: The unique name of the Collection.
                        description:
                          type: string
                          description: A brief summary of the Collection's contents.
                        addedRoles:
                          type: array
                          description: A list of added user roles for the Collection.
                          items:
                            type: object
                            description: UserRoleSpecification object
                            additionalProperties: true
                        removedRoles:
                          type: array
                          description: A list of removed user roles for the Collection.
                          items:
                            type: object
                            description: UserRoleSpecification object
                            additionalProperties: true
                        audienceFilters:
                          type: array
                          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                          items:
                            type: object
                            description: FacetFilter object
                            additionalProperties: true
                        icon:
                          type: string
                          description: The emoji icon of this Collection.
                        adminLocked:
                          type: boolean
                          description: Indicates whether edits are allowed for everyone or only admins.
                        parentId:
                          type: integer
                          description: The parent of this Collection, or 0 if it's a top-level Collection.
                        thumbnail:
                          properties:
                            photoId:
                              type: string
                              description: Photo id if the thumbnail is from splash.
                            url:
                              type: string
                              description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                          type: object
                        allowedDatasource:
                          type: string
                          description: The datasource type this Collection can hold.
                        permissions:
                          type: object
                          description: Flattened ObjectPermissions
                          properties:
                            write:
                              type: object
                              description: Describes the write permissions levels that a user has for a specific feature
                              properties:
                                scopeType:
                                  type: string
                                  description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                                  enum:
                                    - GLOBAL
                                    - OWN
                                  properties: {}
                                create:
                                  type: boolean
                                  description: True if user has create permission for this feature and scope
                                update:
                                  type: boolean
                                  description: True if user has update permission for this feature and scope
                                delete:
                                  type: boolean
                                  description: True if user has delete permission for this feature and scope
                        id:
                          type: integer
                          description: The unique ID of the Collection.
                        createTime:
                          type: string
                          format: date-time
                        updateTime:
                          type: string
                          format: date-time
                        creator:
                          type: object
                          description: Person object
                          additionalProperties: true
                        updatedBy:
                          type: object
                          description: Person object
                          additionalProperties: true
                        itemCount:
                          type: integer
                          description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
                        childCount:
                          type: integer
                          description: The number of children Collections. Separated from the actual children so we can grab the count without children.
                        items:
                          type: array
                          description: The items in this Collection.
                          items:
                            type: object
                            description: CollectionItem object
                            additionalProperties: true
                        pinMetadata:
                          required:
                            - pinnedCategories
                            - eligibleCategoriesForPinning
                          properties:
                            existingPins:
                              type: array
                              description: List of targets this Collection is pinned to.
                              items:
                                required:
                                  - category
                                properties:
                                  category:
                                    type: string
                                    description: Categories a Collection can be pinned to.
                                    enum:
                                      - COMPANY_RESOURCE
                                      - DEPARTMENT_RESOURCE
                                      - TEAM_RESOURCE
                                  value:
                                    type: string
                                    description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                  target:
                                    type: string
                                    description: What targets can a Collection be pinned to.
                                    enum:
                                      - RESOURCE_CARD
                                      - TEAM_PROFILE_PAGE
                                type: object
                            eligiblePins:
                              type: array
                              description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                              items:
                                required:
                                  - id
                                  - target
                                properties:
                                  id:
                                    type: integer
                                    description: The ID of the Collection.
                                  target:
                                    required:
                                      - category
                                    properties:
                                      category:
                                        type: string
                                        description: Categories a Collection can be pinned to.
                                        enum:
                                          - COMPANY_RESOURCE
                                          - DEPARTMENT_RESOURCE
                                          - TEAM_RESOURCE
                                      value:
                                        type: string
                                        description: Optional. If category supports values, then the additional value for the category e.g. department name for DEPARTMENT_RESOURCE, team name/id for TEAM_RESOURCE and so on.
                                      target:
                                        type: string
                                        description: What targets can a Collection be pinned to.
                                        enum:
                                          - RESOURCE_CARD
                                          - TEAM_PROFILE_PAGE
                                    type: object
                                type: object
                          type: object
                        shortcuts:
                          type: array
                          description: The names of the shortcuts (Go Links) that point to this Collection.
                          items:
                            type: string
                        children:
                          type: array
                          description: The children Collections of this Collection.
                          items:
                            type: object
                            description: Collection object
                            additionalProperties: true
                        roles:
                          type: array
                          description: A list of user roles for the Collection.
                          items:
                            type: object
                            description: UserRoleSpecification object
                            additionalProperties: true
                    answerBoard:
                      type: object
                      description: PermissionedObject object
                      properties:
                        name:
                          type: string
                          description: The unique name of the Collection.
                        description:
                          type: string
                          description: A brief summary of the Collection's contents.
                        addedRoles:
                          type: array
                          description: A list of added user roles for the Collection.
                          items:
                            type: object
                            description: UserRoleSpecification object
                            additionalProperties: true
                        removedRoles:
                          type: array
                          description: A list of removed user roles for the Collection.
                          items:
                            type: object
                            description: UserRoleSpecification object
                            additionalProperties: true
                        audienceFilters:
                          type: array
                          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                          items:
                            type: object
                            description: FacetFilter object
                            additionalProperties: true
                        id:
                          type: integer
                          description: The unique ID of the Answer Board.
                        createTime:
                          type: string
                          format: date-time
                        updateTime:
                          type: string
                          format: date-time
                        creator:
                          type: object
                          description: Person object
                          additionalProperties: true
                        updatedBy:
                          type: object
                          description: Person object
                          additionalProperties: true
                        itemCount:
                          type: integer
                          description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
                        roles:
                          type: array
                          description: A list of user roles for the Answer Board.
                          items:
                            type: object
                            description: UserRoleSpecification object
                            additionalProperties: true
                      required:
                        - name
                        - id
                        - description
                    code:
                      example:
                        repoName: scio
                        fileName: README.md
                        matches:
                          - lineNumber: 1
                            content: Welcome to the beginning
                            ranges: []
                          - lineNumber: 2
                            content: Second line of the file
                            ranges: []
                          - lineNumber: 3
                            content: hello world hello world
                            ranges:
                              - startindex: 0
                                endIndex: 5
                              - startIndex: 12
                                endIndex: 17
                      properties:
                        repoName:
                          type: string
                        fileName:
                          type: string
                        fileUrl:
                          type: string
                        lines:
                          type: array
                          items:
                            properties:
                              lineNumber:
                                type: integer
                              content:
                                type: string
                              ranges:
                                type: array
                                description: Index ranges depicting matched sections of the line
                                items:
                                  type: object
                                  description: TextRange object
                                  additionalProperties: true
                            type: object
                        isLastMatch:
                          type: boolean
                          description: Last file match for a repo
                      type: object
                    shortcut:
                      type: object
                      description: PermissionedObject object
                      properties:
                        id:
                          type: integer
                          description: The opaque id of the user generated content.
                        inputAlias:
                          type: string
                          description: Link text following go/ prefix as entered by the user.
                        destinationUrl:
                          type: string
                          description: Destination URL for the shortcut.
                        destinationDocumentId:
                          type: string
                          description: Glean Document ID for the URL, if known.
                        description:
                          type: string
                          description: A short, plain text blurb to help people understand the intent of the shortcut.
                        unlisted:
                          type: boolean
                          description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
                        urlTemplate:
                          type: string
                          description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
                        addedRoles:
                          type: array
                          description: A list of user roles added for the Shortcut.
                          items:
                            type: object
                            description: UserRoleSpecification object
                            additionalProperties: true
                        removedRoles:
                          type: array
                          description: A list of user roles removed for the Shortcut.
                          items:
                            type: object
                            description: UserRoleSpecification object
                            additionalProperties: true
                        createdBy:
                          type: object
                          description: Person object
                          additionalProperties: true
                        createTime:
                          type: string
                          format: date-time
                          description: The time the shortcut was created in ISO format (ISO 8601).
                        updatedBy:
                          type: object
                          description: Person object
                          additionalProperties: true
                        updateTime:
                          type: string
                          format: date-time
                          description: The time the shortcut was updated in ISO format (ISO 8601).
                        destinationDocument:
                          type: object
                          description: Document object
                          additionalProperties: true
                        intermediateUrl:
                          type: string
                          description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
                        viewPrefix:
                          type: string
                          description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
                        isExternal:
                          type: boolean
                          description: Indicates whether a shortcut is native or external.
                        editUrl:
                          type: string
                          description: The URL using which the user can access the edit page of the shortcut.
                        alias:
                          type: string
                          description: canonical link text following go/ prefix where hyphen/underscore is removed.
                        title:
                          type: string
                          description: Title for the Go Link
                        roles:
                          type: array
                          description: A list of user roles for the Go Link.
                          items:
                            type: object
                            description: UserRoleSpecification object
                            additionalProperties: true
                      required:
                        - inputAlias
                    querySuggestions:
                      properties:
                        suggestions:
                          type: array
                          items:
                            type: object
                            description: QuerySuggestion object
                            additionalProperties: true
                        person:
                          type: object
                          description: Person object
                          additionalProperties: true
                      type: object
                    relatedDocuments:
                      type: array
                      description: A list of documents related to this structured result.
                      items:
                        properties:
                          relation:
                            type: string
                            description: How this document relates to the including entity.
                            enum:
                              - ATTACHMENT
                              - CANONICAL
                              - CASE
                              - CONTACT
                              - CONVERSATION_MESSAGES
                              - EXPERT
                              - FROM
                              - HIGHLIGHT
                              - OPPORTUNITY
                              - RECENT
                              - SOURCE
                              - TICKET
                              - TRANSCRIPT
                              - WITH
                            x-enumDescriptions:
                              CANONICAL: Canonical documents for the entity, such as overview docs, architecture docs elastic.
                          associatedEntityId:
                            type: string
                            description: Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
                          querySuggestion:
                            type: object
                            description: QuerySuggestion object
                            additionalProperties: true
                          documents:
                            type: array
                            description: A truncated list of documents with this relation. TO BE DEPRECATED.
                            deprecated: true
                            items:
                              type: object
                              description: Document object
                              additionalProperties: true
                          results:
                            type: array
                            description: A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
                            items:
                              type: object
                              description: SearchResult object
                              additionalProperties: true
                        type: object
                    relatedQuestion:
                      properties:
                        question:
                          type: string
                          description: The text of the related question
                        answer:
                          type: string
                          description: The answer for the related question
                        ranges:
                          type: array
                          description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
                          items:
                            type: object
                            description: TextRange object
                            additionalProperties: true
                      type: object
                    disambiguation:
                      type: object
                      description: A disambiguation between multiple entities with the same name
                      properties:
                        name:
                          type: string
                          description: Name of the ambiguous entity
                        id:
                          type: string
                          description: The unique id of the entity in the knowledge graph
                        type:
                          type: string
                          description: The type of entity.
                          x-include-enum-class-prefix: true
                          enum:
                            - PERSON
                            - PROJECT
                            - CUSTOMER
                    snippets:
                      description: Any snippets associated to the populated object.
                      type: array
                      items:
                        type: object
                        description: SearchResultSnippet object
                        additionalProperties: true
                    trackingToken:
                      type: string
                      description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                    prominence:
                      type: string
                      description: The level of visual distinction that should be given to a result.
                      x-enumDescriptions:
                        HERO: A high-confidence result that should feature prominently on the page.
                        PROMOTED: May not be the best result but should be given additional visual distinction.
                        STANDARD: Should not be distinct from any other results.
                      enum:
                        - HERO
                        - PROMOTED
                        - STANDARD
                    source:
                      type: string
                      description: Source context for this result. Possible values depend on the result type.
                      enum:
                        - EXPERT_DETECTION
                        - ENTITY_NLQ
                  type: object
              trackingToken:
                type: string
                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
              text:
                type: string
              querySuggestion:
                type: object
                description: QuerySuggestion object
                additionalProperties: true
              file:
                type: object
                description: ChatFile object
                additionalProperties: true
              action:
                type: object
                properties:
                  metadata:
                    description: The manifest for a tool that can be used to augment Glean Assistant.
                    required:
                      - type
                      - name
                      - displayName
                      - displayDescription
                    properties:
                      type:
                        description: The type of tool.
                        type: string
                        enum:
                          - RETRIEVAL
                          - ACTION
                      name:
                        description: Unique identifier for the tool. Name should be understandable by the LLM, and will be used to invoke a tool.
                        type: string
                      displayName:
                        description: Human understandable name of the tool. Max 50 characters.
                        type: string
                      toolId:
                        type: string
                        description: An opaque id which is unique identifier for the tool.
                      displayDescription:
                        description: Description of the tool meant for a human.
                        type: string
                      logoUrl:
                        type: string
                        description: URL used to fetch the logo.
                      objectName:
                        type: string
                        description: Name of the generated object. This will be used to indicate to the end user what the generated object contains.
                        example:
                          - HR ticket
                          - Email
                          - Chat message
                      knowledgeType:
                        type: string
                        description: Indicates the kind of knowledge a tool would access or modify.
                        enum:
                          - NEUTRAL_KNOWLEDGE
                          - COMPANY_KNOWLEDGE
                          - WORLD_KNOWLEDGE
                      createdBy:
                        required:
                          - name
                          - obfuscatedId
                        properties:
                          name:
                            type: string
                            description: The display name.
                          obfuscatedId:
                            type: string
                            description: An opaque identifier that can be used to request metadata for a Person.
                        type: object
                      lastUpdatedBy:
                        required:
                          - name
                          - obfuscatedId
                        properties:
                          name:
                            type: string
                            description: The display name.
                          obfuscatedId:
                            type: string
                            description: An opaque identifier that can be used to request metadata for a Person.
                        type: object
                      createdAt:
                        type: string
                        format: date-time
                        description: The time the tool was created in ISO format (ISO 8601)
                      lastUpdatedAt:
                        type: string
                        format: date-time
                        description: The time the tool was last updated in ISO format (ISO 8601)
                      writeActionType:
                        type: string
                        description: Valid only for write actions. Represents the type of write action. REDIRECT - The client renders the URL which contains information for carrying out the action. EXECUTION - Send a request to an external server and execute the action.
                        enum:
                          - REDIRECT
                          - EXECUTION
                      authType:
                        type: string
                        enum:
                          - NONE
                          - OAUTH_USER
                          - OAUTH_ADMIN
                          - API_KEY
                          - BASIC_AUTH
                          - DWD
                        description: |
                          The type of authentication being used.
                          Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                          'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                          'OAUTH_USER' uses individual user tokens for external API calls.
                          'DWD' refers to domain wide delegation.
                      auth:
                        description: Config for tool's authentication method.
                        type: object
                        properties:
                          isOnPrem:
                            type: boolean
                            description: Whether or not this tool is hosted on-premise.
                          usesCentralAuth:
                            type: boolean
                            description: Whether or not this uses central auth.
                          type:
                            type: string
                            enum:
                              - NONE
                              - OAUTH_USER
                              - OAUTH_ADMIN
                              - API_KEY
                              - BASIC_AUTH
                              - DWD
                            description: |
                              The type of authentication being used.
                              Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                              'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                              'OAUTH_USER' uses individual user tokens for external API calls.
                              'DWD' refers to domain wide delegation.
                          grantType:
                            type: string
                            enum:
                              - AUTH_CODE
                              - CLIENT_CREDENTIALS
                            description: The type of grant type being used.
                          status:
                            type: string
                            description: Auth status of the tool.
                            enum:
                              - AWAITING_AUTH
                              - AUTHORIZED
                          client_url:
                            type: string
                            format: url
                            description: The URL where users will be directed to start the OAuth flow.
                          scopes:
                            type: array
                            description: A list of strings denoting the different scopes or access levels required by the tool.
                            items:
                              type: string
                          audiences:
                            type: array
                            description: A list of strings denoting the different audience which can access the tool.
                            items:
                              type: string
                          authorization_url:
                            type: string
                            format: url
                            description: The OAuth provider's endpoint, where access tokens are requested.
                          lastAuthorizedAt:
                            type: string
                            format: date-time
                            description: The time the tool was last authorized in ISO format (ISO 8601).
                      permissions:
                        type: object
                        description: ObjectPermissions object
                        additionalProperties: true
                      usageInstructions:
                        description: Usage instructions for the LLM to use this action.
                        type: string
                      isSetupFinished:
                        type: boolean
                        description: Whether this action has been fully configured and validated.
                    type: object
                  parameters:
                    type: object
                    description: Parameters supported by the tool.
                    additionalProperties:
                      $ref: '#/components/schemas/WriteActionParameter'
        ts:
          type: string
          description: Response timestamp of the message.
        messageId:
          type: string
          description: A unique server-side generated ID used to identify a message, automatically populated for any USER authored messages.
        messageTrackingToken:
          type: string
          description: Opaque tracking token generated server-side.
        messageType:
          type: string
          default: CONTENT
          description: Semantically groups content of a certain type. It can be used for purposes such as differential UI treatment. USER authored messages should be of type CONTENT and do not need `messageType` specified.
          x-enumDescriptions:
            UPDATE: An intermediate state message for progress updates.
            CONTENT: A user query or response message.
            CONTEXT: A message providing context in addition to the user query.
            DEBUG: A debug message. Strictly used internally.
            DEBUG_EXTERNAL: A debug message to be used while debugging Action creation.
            ERROR: A message that describes an error while processing the request.
            HEADING: A heading message used to distinguish different sections of the holistic response.
            WARNING: A warning message to be shown to the user.
          enum:
            - UPDATE
            - CONTENT
            - CONTEXT
            - DEBUG
            - DEBUG_EXTERNAL
            - ERROR
            - HEADING
            - WARNING
        hasMoreFragments:
          deprecated: true
          type: boolean
          description: Signals there are additional response fragments incoming.
      type: object
    AgentConfig:
      description: Describes the agent that executes the request.
      properties:
        agent:
          type: string
          description: Name of the agent.
          x-enumDescriptions:
            DEFAULT: Integrates with your company's knowledge.
            GPT: Communicates directly with the LLM.
            UNIVERSAL: Uses both company and web knowledge.
          enum:
            - DEFAULT
            - GPT
            - UNIVERSAL
        mode:
          type: string
          description: Top level modes to run GleanChat in.
          x-enumDescriptions:
            DEFAULT: Used if no mode supplied.
            QUICK: Deprecated.
          enum:
            - DEFAULT
            - QUICK
      type: object
    ChatRestrictionFilters:
      description: RestrictionFilters object
      type: object
      properties:
        documentSpecs:
          type: array
          items:
            type: object
            description: DocumentSpec object
            additionalProperties: true
        datasourceInstances:
          type: array
          items:
            type: string
    SessionInfo:
      properties:
        sessionTrackingToken:
          type: string
          description: A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab.
        tabId:
          type: string
          description: A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab.
        lastSeen:
          type: string
          format: date-time
          description: The last time the server saw this token.
        lastQuery:
          type: string
          description: The last query seen by the server.
      type: object
    ChatResult:
      properties:
        chat:
          description: A historical representation of a series of chat messages a user had with Glean Assistant.
          properties:
            id:
              type: string
              description: The opaque id of the Chat.
            createTime:
              type: integer
              description: Server Unix timestamp of the creation time (in seconds since epoch UTC).
            createdBy:
              type: object
              description: Person object
              additionalProperties: true
            updateTime:
              type: integer
              description: Server Unix timestamp of the update time (in seconds since epoch UTC).
            name:
              type: string
              description: The name of the Chat.
            applicationId:
              type: string
              description: The ID of the AI App that this Chat is associated to.
            applicationName:
              type: string
              description: The display name of the AI App that this Chat is associated to.
            icon:
              description: Defines how to render an icon
              example:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              properties:
                generatedBackgroundColorKey:
                  type: string
                backgroundColor:
                  type: string
                color:
                  type: string
                key:
                  type: string
                iconType:
                  enum:
                    - COLLECTION
                    - CUSTOM
                    - DATASOURCE
                    - DATASOURCE_INSTANCE
                    - FAVICON
                    - FILE_TYPE
                    - GENERATED_BACKGROUND
                    - GLYPH
                    - MIME_TYPE
                    - NO_ICON
                    - PERSON
                    - REACTIONS
                    - URL
                masked:
                  type: boolean
                  description: Whether the icon should be masked based on current theme.
                name:
                  type: string
                  description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
                url:
                  type: string
                  description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
              type: object
            messages:
              type: array
              description: The chat messages within a Chat.
              items:
                description: A message that is rendered as one coherent unit with one given sender.
                properties:
                  agentConfig:
                    description: Describes the agent that executes the request.
                    properties:
                      agent:
                        type: string
                        description: Name of the agent.
                        x-enumDescriptions:
                          DEFAULT: Integrates with your company's knowledge.
                          GPT: Communicates directly with the LLM.
                          UNIVERSAL: Uses both company and web knowledge.
                        enum:
                          - DEFAULT
                          - GPT
                          - UNIVERSAL
                      mode:
                        type: string
                        description: Top level modes to run GleanChat in.
                        x-enumDescriptions:
                          DEFAULT: Used if no mode supplied.
                          QUICK: Deprecated.
                        enum:
                          - DEFAULT
                          - QUICK
                    type: object
                  author:
                    default: USER
                    enum:
                      - USER
                      - GLEAN_AI
                  citations:
                    type: array
                    description: A list of Citations that were used to generate the response.
                    items:
                      description: Information about the source for a ChatMessage.
                      properties:
                        trackingToken:
                          type: string
                          description: An opaque token that represents this particular result in this particular ChatMessage. To be used for /feedback reporting.
                        sourceDocument:
                          type: object
                          description: Document object
                          additionalProperties: true
                        sourceFile:
                          type: object
                          description: ChatFile object
                          additionalProperties: true
                        sourcePerson:
                          type: object
                          description: Person object
                          additionalProperties: true
                        referenceRanges:
                          description: Each reference range and its corresponding snippets
                          type: array
                          items:
                            description: Each text range from the response can correspond to an array of snippets from the citation source.
                            properties:
                              textRange:
                                type: object
                                description: TextRange object
                                additionalProperties: true
                              snippets:
                                type: array
                                items:
                                  type: object
                                  description: SearchResultSnippet object
                                  additionalProperties: true
                            type: object
                      type: object
                  uploadedFileIds:
                    type: array
                    description: IDs of files uploaded in the message that are referenced to generate the answer.
                    items:
                      type: string
                  fragments:
                    type: array
                    description: A list of rich data used to represent the response or formulate a request. These are linearly stitched together to support richer data formats beyond simple text.
                    items:
                      description: Represents a part of a ChatMessage that originates from a single action/tool. It is designed to support rich data formats beyond simple text, allowing for a more dynamic and interactive chat experience. Each fragment can include various types of content, such as text, search queries, action information, and more. Also, each ChatMessageFragment should only have one of structuredResults, querySuggestion, writeAction, followupAction, or file.
                      type: object
                      properties:
                        structuredResults:
                          type: array
                          description: An array of entities in the work graph retrieved via a data request.
                          items:
                            type: object
                            description: StructuredResult object
                            additionalProperties: true
                        trackingToken:
                          type: string
                          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                        text:
                          type: string
                        querySuggestion:
                          type: object
                          description: QuerySuggestion object
                          additionalProperties: true
                        file:
                          type: object
                          description: ChatFile object
                          additionalProperties: true
                        action:
                          type: object
                          properties:
                            metadata:
                              description: The manifest for a tool that can be used to augment Glean Assistant.
                              required:
                                - type
                                - name
                                - displayName
                                - displayDescription
                              properties:
                                type:
                                  description: The type of tool.
                                  type: string
                                  enum:
                                    - RETRIEVAL
                                    - ACTION
                                name:
                                  description: Unique identifier for the tool. Name should be understandable by the LLM, and will be used to invoke a tool.
                                  type: string
                                displayName:
                                  description: Human understandable name of the tool. Max 50 characters.
                                  type: string
                                toolId:
                                  type: string
                                  description: An opaque id which is unique identifier for the tool.
                                displayDescription:
                                  description: Description of the tool meant for a human.
                                  type: string
                                logoUrl:
                                  type: string
                                  description: URL used to fetch the logo.
                                objectName:
                                  type: string
                                  description: Name of the generated object. This will be used to indicate to the end user what the generated object contains.
                                  example:
                                    - HR ticket
                                    - Email
                                    - Chat message
                                knowledgeType:
                                  type: string
                                  description: Indicates the kind of knowledge a tool would access or modify.
                                  enum:
                                    - NEUTRAL_KNOWLEDGE
                                    - COMPANY_KNOWLEDGE
                                    - WORLD_KNOWLEDGE
                                createdBy:
                                  type: object
                                  description: PersonObject object
                                  additionalProperties: true
                                lastUpdatedBy:
                                  type: object
                                  description: PersonObject object
                                  additionalProperties: true
                                createdAt:
                                  type: string
                                  format: date-time
                                  description: The time the tool was created in ISO format (ISO 8601)
                                lastUpdatedAt:
                                  type: string
                                  format: date-time
                                  description: The time the tool was last updated in ISO format (ISO 8601)
                                writeActionType:
                                  type: string
                                  description: Valid only for write actions. Represents the type of write action. REDIRECT - The client renders the URL which contains information for carrying out the action. EXECUTION - Send a request to an external server and execute the action.
                                  enum:
                                    - REDIRECT
                                    - EXECUTION
                                authType:
                                  type: string
                                  enum:
                                    - NONE
                                    - OAUTH_USER
                                    - OAUTH_ADMIN
                                    - API_KEY
                                    - BASIC_AUTH
                                    - DWD
                                  description: |
                                    The type of authentication being used.
                                    Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                                    'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                                    'OAUTH_USER' uses individual user tokens for external API calls.
                                    'DWD' refers to domain wide delegation.
                                auth:
                                  description: Config for tool's authentication method.
                                  type: object
                                  properties:
                                    isOnPrem:
                                      type: boolean
                                      description: Whether or not this tool is hosted on-premise.
                                    usesCentralAuth:
                                      type: boolean
                                      description: Whether or not this uses central auth.
                                    type:
                                      type: string
                                      enum:
                                        - NONE
                                        - OAUTH_USER
                                        - OAUTH_ADMIN
                                        - API_KEY
                                        - BASIC_AUTH
                                        - DWD
                                      description: |
                                        The type of authentication being used.
                                        Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                                        'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                                        'OAUTH_USER' uses individual user tokens for external API calls.
                                        'DWD' refers to domain wide delegation.
                                    grantType:
                                      type: string
                                      enum:
                                        - AUTH_CODE
                                        - CLIENT_CREDENTIALS
                                      description: The type of grant type being used.
                                    status:
                                      type: string
                                      description: Auth status of the tool.
                                      enum:
                                        - AWAITING_AUTH
                                        - AUTHORIZED
                                    client_url:
                                      type: string
                                      format: url
                                      description: The URL where users will be directed to start the OAuth flow.
                                    scopes:
                                      type: array
                                      description: A list of strings denoting the different scopes or access levels required by the tool.
                                      items:
                                        type: string
                                    audiences:
                                      type: array
                                      description: A list of strings denoting the different audience which can access the tool.
                                      items:
                                        type: string
                                    authorization_url:
                                      type: string
                                      format: url
                                      description: The OAuth provider's endpoint, where access tokens are requested.
                                    lastAuthorizedAt:
                                      type: string
                                      format: date-time
                                      description: The time the tool was last authorized in ISO format (ISO 8601).
                                permissions:
                                  type: object
                                  description: ObjectPermissions object
                                  additionalProperties: true
                                usageInstructions:
                                  description: Usage instructions for the LLM to use this action.
                                  type: string
                                isSetupFinished:
                                  type: boolean
                                  description: Whether this action has been fully configured and validated.
                              type: object
                            parameters:
                              type: object
                              description: Parameters supported by the tool.
                              additionalProperties:
                                $ref: '#/components/schemas/WriteActionParameter'
                  ts:
                    type: string
                    description: Response timestamp of the message.
                  messageId:
                    type: string
                    description: A unique server-side generated ID used to identify a message, automatically populated for any USER authored messages.
                  messageTrackingToken:
                    type: string
                    description: Opaque tracking token generated server-side.
                  messageType:
                    type: string
                    default: CONTENT
                    description: Semantically groups content of a certain type. It can be used for purposes such as differential UI treatment. USER authored messages should be of type CONTENT and do not need `messageType` specified.
                    x-enumDescriptions:
                      UPDATE: An intermediate state message for progress updates.
                      CONTENT: A user query or response message.
                      CONTEXT: A message providing context in addition to the user query.
                      DEBUG: A debug message. Strictly used internally.
                      DEBUG_EXTERNAL: A debug message to be used while debugging Action creation.
                      ERROR: A message that describes an error while processing the request.
                      HEADING: A heading message used to distinguish different sections of the holistic response.
                      WARNING: A warning message to be shown to the user.
                    enum:
                      - UPDATE
                      - CONTENT
                      - CONTEXT
                      - DEBUG
                      - DEBUG_EXTERNAL
                      - ERROR
                      - HEADING
                      - WARNING
                  hasMoreFragments:
                    deprecated: true
                    type: boolean
                    description: Signals there are additional response fragments incoming.
                type: object
          type: object
        trackingToken:
          type: string
          description: An opaque token that represents this particular Chat. To be used for `/feedback` reporting.
      type: object
    ChatMetadataResult:
      properties:
        chat:
          description: Metadata of a Chat a user had with Glean Assistant. This contains no actual conversational content.
          properties:
            id:
              type: string
              description: The opaque id of the Chat.
            createTime:
              type: integer
              description: Server Unix timestamp of the creation time (in seconds since epoch UTC).
            createdBy:
              type: object
              description: Person object
              additionalProperties: true
            updateTime:
              type: integer
              description: Server Unix timestamp of the update time (in seconds since epoch UTC).
            name:
              type: string
              description: The name of the Chat.
            applicationId:
              type: string
              description: The ID of the AI App that this Chat is associated to.
            applicationName:
              type: string
              description: The display name of the AI App that this Chat is associated to.
            icon:
              description: Defines how to render an icon
              example:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              properties:
                generatedBackgroundColorKey:
                  type: string
                backgroundColor:
                  type: string
                color:
                  type: string
                key:
                  type: string
                iconType:
                  enum:
                    - COLLECTION
                    - CUSTOM
                    - DATASOURCE
                    - DATASOURCE_INSTANCE
                    - FAVICON
                    - FILE_TYPE
                    - GENERATED_BACKGROUND
                    - GLYPH
                    - MIME_TYPE
                    - NO_ICON
                    - PERSON
                    - REACTIONS
                    - URL
                masked:
                  type: boolean
                  description: Whether the icon should be masked based on current theme.
                name:
                  type: string
                  description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
                url:
                  type: string
                  description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
              type: object
          type: object
        trackingToken:
          type: string
          description: An opaque token that represents this particular Chat. To be used for `/feedback` reporting.
      type: object
    ChatApplicationDetails: {}
    ChatFile:
      type: object
      description: ChatFile object
      additionalProperties: true
    ChatMessageCitation:
      description: Information about the source for a ChatMessage.
      properties:
        trackingToken:
          type: string
          description: An opaque token that represents this particular result in this particular ChatMessage. To be used for /feedback reporting.
        sourceDocument:
          type: object
          description: Document object
          additionalProperties: true
        sourceFile:
          type: object
          description: ChatFile object
          additionalProperties: true
        sourcePerson:
          type: object
          description: Person object
          additionalProperties: true
        referenceRanges:
          description: Each reference range and its corresponding snippets
          type: array
          items:
            description: Each text range from the response can correspond to an array of snippets from the citation source.
            properties:
              textRange:
                type: object
                description: TextRange object
                additionalProperties: true
              snippets:
                type: array
                items:
                  type: object
                  description: SearchResultSnippet object
                  additionalProperties: true
            type: object
      type: object
    ChatMessageFragment:
      description: Represents a part of a ChatMessage that originates from a single action/tool. It is designed to support rich data formats beyond simple text, allowing for a more dynamic and interactive chat experience. Each fragment can include various types of content, such as text, search queries, action information, and more. Also, each ChatMessageFragment should only have one of structuredResults, querySuggestion, writeAction, followupAction, or file.
      type: object
      properties:
        structuredResults:
          type: array
          description: An array of entities in the work graph retrieved via a data request.
          items:
            type: object
            description: StructuredResult object
            additionalProperties: true
        trackingToken:
          type: string
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
        text:
          type: string
        querySuggestion:
          type: object
          description: QuerySuggestion object
          additionalProperties: true
        file:
          type: object
          description: ChatFile object
          additionalProperties: true
        action:
          type: object
          properties:
            metadata:
              description: The manifest for a tool that can be used to augment Glean Assistant.
              required:
                - type
                - name
                - displayName
                - displayDescription
              properties:
                type:
                  description: The type of tool.
                  type: string
                  enum:
                    - RETRIEVAL
                    - ACTION
                name:
                  description: Unique identifier for the tool. Name should be understandable by the LLM, and will be used to invoke a tool.
                  type: string
                displayName:
                  description: Human understandable name of the tool. Max 50 characters.
                  type: string
                toolId:
                  type: string
                  description: An opaque id which is unique identifier for the tool.
                displayDescription:
                  description: Description of the tool meant for a human.
                  type: string
                logoUrl:
                  type: string
                  description: URL used to fetch the logo.
                objectName:
                  type: string
                  description: Name of the generated object. This will be used to indicate to the end user what the generated object contains.
                  example:
                    - HR ticket
                    - Email
                    - Chat message
                knowledgeType:
                  type: string
                  description: Indicates the kind of knowledge a tool would access or modify.
                  enum:
                    - NEUTRAL_KNOWLEDGE
                    - COMPANY_KNOWLEDGE
                    - WORLD_KNOWLEDGE
                createdBy:
                  type: object
                  description: PersonObject object
                  additionalProperties: true
                lastUpdatedBy:
                  type: object
                  description: PersonObject object
                  additionalProperties: true
                createdAt:
                  type: string
                  format: date-time
                  description: The time the tool was created in ISO format (ISO 8601)
                lastUpdatedAt:
                  type: string
                  format: date-time
                  description: The time the tool was last updated in ISO format (ISO 8601)
                writeActionType:
                  type: string
                  description: Valid only for write actions. Represents the type of write action. REDIRECT - The client renders the URL which contains information for carrying out the action. EXECUTION - Send a request to an external server and execute the action.
                  enum:
                    - REDIRECT
                    - EXECUTION
                authType:
                  type: string
                  enum:
                    - NONE
                    - OAUTH_USER
                    - OAUTH_ADMIN
                    - API_KEY
                    - BASIC_AUTH
                    - DWD
                  description: |
                    The type of authentication being used.
                    Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                    'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                    'OAUTH_USER' uses individual user tokens for external API calls.
                    'DWD' refers to domain wide delegation.
                auth:
                  description: Config for tool's authentication method.
                  type: object
                  properties:
                    isOnPrem:
                      type: boolean
                      description: Whether or not this tool is hosted on-premise.
                    usesCentralAuth:
                      type: boolean
                      description: Whether or not this uses central auth.
                    type:
                      type: string
                      enum:
                        - NONE
                        - OAUTH_USER
                        - OAUTH_ADMIN
                        - API_KEY
                        - BASIC_AUTH
                        - DWD
                      description: |
                        The type of authentication being used.
                        Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                        'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                        'OAUTH_USER' uses individual user tokens for external API calls.
                        'DWD' refers to domain wide delegation.
                    grantType:
                      type: string
                      enum:
                        - AUTH_CODE
                        - CLIENT_CREDENTIALS
                      description: The type of grant type being used.
                    status:
                      type: string
                      description: Auth status of the tool.
                      enum:
                        - AWAITING_AUTH
                        - AUTHORIZED
                    client_url:
                      type: string
                      format: url
                      description: The URL where users will be directed to start the OAuth flow.
                    scopes:
                      type: array
                      description: A list of strings denoting the different scopes or access levels required by the tool.
                      items:
                        type: string
                    audiences:
                      type: array
                      description: A list of strings denoting the different audience which can access the tool.
                      items:
                        type: string
                    authorization_url:
                      type: string
                      format: url
                      description: The OAuth provider's endpoint, where access tokens are requested.
                    lastAuthorizedAt:
                      type: string
                      format: date-time
                      description: The time the tool was last authorized in ISO format (ISO 8601).
                permissions:
                  type: object
                  description: ObjectPermissions object
                  additionalProperties: true
                usageInstructions:
                  description: Usage instructions for the LLM to use this action.
                  type: string
                isSetupFinished:
                  type: boolean
                  description: Whether this action has been fully configured and validated.
              type: object
            parameters:
              type: object
              description: Parameters supported by the tool.
              additionalProperties:
                $ref: '#/components/schemas/WriteActionParameter'
    RestrictionFilters:
      type: object
      description: RestrictionFilters object
      additionalProperties: true
    DocumentSpec:
      type: object
      description: DocumentSpec object
      additionalProperties: true
    Chat:
      description: A historical representation of a series of chat messages a user had with Glean Assistant.
      properties:
        id:
          type: string
          description: The opaque id of the Chat.
        createTime:
          type: integer
          description: Server Unix timestamp of the creation time (in seconds since epoch UTC).
        createdBy:
          type: object
          description: Person object
          additionalProperties: true
        updateTime:
          type: integer
          description: Server Unix timestamp of the update time (in seconds since epoch UTC).
        name:
          type: string
          description: The name of the Chat.
        applicationId:
          type: string
          description: The ID of the AI App that this Chat is associated to.
        applicationName:
          type: string
          description: The display name of the AI App that this Chat is associated to.
        icon:
          description: Defines how to render an icon
          example:
            color: '#343CED'
            key: person_icon
            iconType: GLYPH
            name: user
          properties:
            generatedBackgroundColorKey:
              type: string
            backgroundColor:
              type: string
            color:
              type: string
            key:
              type: string
            iconType:
              enum:
                - COLLECTION
                - CUSTOM
                - DATASOURCE
                - DATASOURCE_INSTANCE
                - FAVICON
                - FILE_TYPE
                - GENERATED_BACKGROUND
                - GLYPH
                - MIME_TYPE
                - NO_ICON
                - PERSON
                - REACTIONS
                - URL
            masked:
              type: boolean
              description: Whether the icon should be masked based on current theme.
            name:
              type: string
              description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
            url:
              type: string
              description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
          type: object
        messages:
          type: array
          description: The chat messages within a Chat.
          items:
            description: A message that is rendered as one coherent unit with one given sender.
            properties:
              agentConfig:
                description: Describes the agent that executes the request.
                properties:
                  agent:
                    type: string
                    description: Name of the agent.
                    x-enumDescriptions:
                      DEFAULT: Integrates with your company's knowledge.
                      GPT: Communicates directly with the LLM.
                      UNIVERSAL: Uses both company and web knowledge.
                    enum:
                      - DEFAULT
                      - GPT
                      - UNIVERSAL
                  mode:
                    type: string
                    description: Top level modes to run GleanChat in.
                    x-enumDescriptions:
                      DEFAULT: Used if no mode supplied.
                      QUICK: Deprecated.
                    enum:
                      - DEFAULT
                      - QUICK
                type: object
              author:
                default: USER
                enum:
                  - USER
                  - GLEAN_AI
              citations:
                type: array
                description: A list of Citations that were used to generate the response.
                items:
                  description: Information about the source for a ChatMessage.
                  properties:
                    trackingToken:
                      type: string
                      description: An opaque token that represents this particular result in this particular ChatMessage. To be used for /feedback reporting.
                    sourceDocument:
                      type: object
                      description: Document object
                      additionalProperties: true
                    sourceFile:
                      type: object
                      description: ChatFile object
                      additionalProperties: true
                    sourcePerson:
                      type: object
                      description: Person object
                      additionalProperties: true
                    referenceRanges:
                      description: Each reference range and its corresponding snippets
                      type: array
                      items:
                        description: Each text range from the response can correspond to an array of snippets from the citation source.
                        properties:
                          textRange:
                            type: object
                            description: TextRange object
                            additionalProperties: true
                          snippets:
                            type: array
                            items:
                              type: object
                              description: SearchResultSnippet object
                              additionalProperties: true
                        type: object
                  type: object
              uploadedFileIds:
                type: array
                description: IDs of files uploaded in the message that are referenced to generate the answer.
                items:
                  type: string
              fragments:
                type: array
                description: A list of rich data used to represent the response or formulate a request. These are linearly stitched together to support richer data formats beyond simple text.
                items:
                  description: Represents a part of a ChatMessage that originates from a single action/tool. It is designed to support rich data formats beyond simple text, allowing for a more dynamic and interactive chat experience. Each fragment can include various types of content, such as text, search queries, action information, and more. Also, each ChatMessageFragment should only have one of structuredResults, querySuggestion, writeAction, followupAction, or file.
                  type: object
                  properties:
                    structuredResults:
                      type: array
                      description: An array of entities in the work graph retrieved via a data request.
                      items:
                        type: object
                        description: StructuredResult object
                        additionalProperties: true
                    trackingToken:
                      type: string
                      description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
                    text:
                      type: string
                    querySuggestion:
                      type: object
                      description: QuerySuggestion object
                      additionalProperties: true
                    file:
                      type: object
                      description: ChatFile object
                      additionalProperties: true
                    action:
                      type: object
                      properties:
                        metadata:
                          description: The manifest for a tool that can be used to augment Glean Assistant.
                          required:
                            - type
                            - name
                            - displayName
                            - displayDescription
                          properties:
                            type:
                              description: The type of tool.
                              type: string
                              enum:
                                - RETRIEVAL
                                - ACTION
                            name:
                              description: Unique identifier for the tool. Name should be understandable by the LLM, and will be used to invoke a tool.
                              type: string
                            displayName:
                              description: Human understandable name of the tool. Max 50 characters.
                              type: string
                            toolId:
                              type: string
                              description: An opaque id which is unique identifier for the tool.
                            displayDescription:
                              description: Description of the tool meant for a human.
                              type: string
                            logoUrl:
                              type: string
                              description: URL used to fetch the logo.
                            objectName:
                              type: string
                              description: Name of the generated object. This will be used to indicate to the end user what the generated object contains.
                              example:
                                - HR ticket
                                - Email
                                - Chat message
                            knowledgeType:
                              type: string
                              description: Indicates the kind of knowledge a tool would access or modify.
                              enum:
                                - NEUTRAL_KNOWLEDGE
                                - COMPANY_KNOWLEDGE
                                - WORLD_KNOWLEDGE
                            createdBy:
                              type: object
                              description: PersonObject object
                              additionalProperties: true
                            lastUpdatedBy:
                              type: object
                              description: PersonObject object
                              additionalProperties: true
                            createdAt:
                              type: string
                              format: date-time
                              description: The time the tool was created in ISO format (ISO 8601)
                            lastUpdatedAt:
                              type: string
                              format: date-time
                              description: The time the tool was last updated in ISO format (ISO 8601)
                            writeActionType:
                              type: string
                              description: Valid only for write actions. Represents the type of write action. REDIRECT - The client renders the URL which contains information for carrying out the action. EXECUTION - Send a request to an external server and execute the action.
                              enum:
                                - REDIRECT
                                - EXECUTION
                            authType:
                              type: string
                              enum:
                                - NONE
                                - OAUTH_USER
                                - OAUTH_ADMIN
                                - API_KEY
                                - BASIC_AUTH
                                - DWD
                              description: |
                                The type of authentication being used.
                                Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                                'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                                'OAUTH_USER' uses individual user tokens for external API calls.
                                'DWD' refers to domain wide delegation.
                            auth:
                              description: Config for tool's authentication method.
                              type: object
                              properties:
                                isOnPrem:
                                  type: boolean
                                  description: Whether or not this tool is hosted on-premise.
                                usesCentralAuth:
                                  type: boolean
                                  description: Whether or not this uses central auth.
                                type:
                                  type: string
                                  enum:
                                    - NONE
                                    - OAUTH_USER
                                    - OAUTH_ADMIN
                                    - API_KEY
                                    - BASIC_AUTH
                                    - DWD
                                  description: |
                                    The type of authentication being used.
                                    Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                                    'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                                    'OAUTH_USER' uses individual user tokens for external API calls.
                                    'DWD' refers to domain wide delegation.
                                grantType:
                                  type: string
                                  enum:
                                    - AUTH_CODE
                                    - CLIENT_CREDENTIALS
                                  description: The type of grant type being used.
                                status:
                                  type: string
                                  description: Auth status of the tool.
                                  enum:
                                    - AWAITING_AUTH
                                    - AUTHORIZED
                                client_url:
                                  type: string
                                  format: url
                                  description: The URL where users will be directed to start the OAuth flow.
                                scopes:
                                  type: array
                                  description: A list of strings denoting the different scopes or access levels required by the tool.
                                  items:
                                    type: string
                                audiences:
                                  type: array
                                  description: A list of strings denoting the different audience which can access the tool.
                                  items:
                                    type: string
                                authorization_url:
                                  type: string
                                  format: url
                                  description: The OAuth provider's endpoint, where access tokens are requested.
                                lastAuthorizedAt:
                                  type: string
                                  format: date-time
                                  description: The time the tool was last authorized in ISO format (ISO 8601).
                            permissions:
                              type: object
                              description: ObjectPermissions object
                              additionalProperties: true
                            usageInstructions:
                              description: Usage instructions for the LLM to use this action.
                              type: string
                            isSetupFinished:
                              type: boolean
                              description: Whether this action has been fully configured and validated.
                          type: object
                        parameters:
                          type: object
                          description: Parameters supported by the tool.
                          additionalProperties:
                            $ref: '#/components/schemas/WriteActionParameter'
              ts:
                type: string
                description: Response timestamp of the message.
              messageId:
                type: string
                description: A unique server-side generated ID used to identify a message, automatically populated for any USER authored messages.
              messageTrackingToken:
                type: string
                description: Opaque tracking token generated server-side.
              messageType:
                type: string
                default: CONTENT
                description: Semantically groups content of a certain type. It can be used for purposes such as differential UI treatment. USER authored messages should be of type CONTENT and do not need `messageType` specified.
                x-enumDescriptions:
                  UPDATE: An intermediate state message for progress updates.
                  CONTENT: A user query or response message.
                  CONTEXT: A message providing context in addition to the user query.
                  DEBUG: A debug message. Strictly used internally.
                  DEBUG_EXTERNAL: A debug message to be used while debugging Action creation.
                  ERROR: A message that describes an error while processing the request.
                  HEADING: A heading message used to distinguish different sections of the holistic response.
                  WARNING: A warning message to be shown to the user.
                enum:
                  - UPDATE
                  - CONTENT
                  - CONTEXT
                  - DEBUG
                  - DEBUG_EXTERNAL
                  - ERROR
                  - HEADING
                  - WARNING
              hasMoreFragments:
                deprecated: true
                type: boolean
                description: Signals there are additional response fragments incoming.
            type: object
      type: object
    ChatMetadata:
      description: Metadata of a Chat a user had with Glean Assistant. This contains no actual conversational content.
      properties:
        id:
          type: string
          description: The opaque id of the Chat.
        createTime:
          type: integer
          description: Server Unix timestamp of the creation time (in seconds since epoch UTC).
        createdBy:
          type: object
          description: Person object
          additionalProperties: true
        updateTime:
          type: integer
          description: Server Unix timestamp of the update time (in seconds since epoch UTC).
        name:
          type: string
          description: The name of the Chat.
        applicationId:
          type: string
          description: The ID of the AI App that this Chat is associated to.
        applicationName:
          type: string
          description: The display name of the AI App that this Chat is associated to.
        icon:
          description: Defines how to render an icon
          example:
            color: '#343CED'
            key: person_icon
            iconType: GLYPH
            name: user
          properties:
            generatedBackgroundColorKey:
              type: string
            backgroundColor:
              type: string
            color:
              type: string
            key:
              type: string
            iconType:
              enum:
                - COLLECTION
                - CUSTOM
                - DATASOURCE
                - DATASOURCE_INSTANCE
                - FAVICON
                - FILE_TYPE
                - GENERATED_BACKGROUND
                - GLYPH
                - MIME_TYPE
                - NO_ICON
                - PERSON
                - REACTIONS
                - URL
            masked:
              type: boolean
              description: Whether the icon should be masked based on current theme.
            name:
              type: string
              description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
            url:
              type: string
              description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
          type: object
      type: object
    ChatFileMetadata:
      type: object
      description: ChatFileMetadata object
      additionalProperties: true
    Document:
      type: object
      description: Document object
      additionalProperties: true
    Person:
      type: object
      description: Person object
      additionalProperties: true
    ReferenceRange:
      description: Each text range from the response can correspond to an array of snippets from the citation source.
      properties:
        textRange:
          type: object
          description: TextRange object
          additionalProperties: true
        snippets:
          type: array
          items:
            type: object
            description: SearchResultSnippet object
            additionalProperties: true
      type: object
    Result:
      properties:
        structuredResults:
          type: array
          description: An array of entities in the work graph retrieved via a data request.
          items:
            type: object
            description: StructuredResult object
            additionalProperties: true
        trackingToken:
          type: string
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
      type: object
    QuerySuggestion:
      type: object
      description: QuerySuggestion object
      additionalProperties: true
    ToolInfo:
      type: object
      properties:
        metadata:
          description: The manifest for a tool that can be used to augment Glean Assistant.
          required:
            - type
            - name
            - displayName
            - displayDescription
          properties:
            type:
              description: The type of tool.
              type: string
              enum:
                - RETRIEVAL
                - ACTION
            name:
              description: Unique identifier for the tool. Name should be understandable by the LLM, and will be used to invoke a tool.
              type: string
            displayName:
              description: Human understandable name of the tool. Max 50 characters.
              type: string
            toolId:
              type: string
              description: An opaque id which is unique identifier for the tool.
            displayDescription:
              description: Description of the tool meant for a human.
              type: string
            logoUrl:
              type: string
              description: URL used to fetch the logo.
            objectName:
              type: string
              description: Name of the generated object. This will be used to indicate to the end user what the generated object contains.
              example:
                - HR ticket
                - Email
                - Chat message
            knowledgeType:
              type: string
              description: Indicates the kind of knowledge a tool would access or modify.
              enum:
                - NEUTRAL_KNOWLEDGE
                - COMPANY_KNOWLEDGE
                - WORLD_KNOWLEDGE
            createdBy:
              type: object
              description: PersonObject object
              additionalProperties: true
            lastUpdatedBy:
              type: object
              description: PersonObject object
              additionalProperties: true
            createdAt:
              type: string
              format: date-time
              description: The time the tool was created in ISO format (ISO 8601)
            lastUpdatedAt:
              type: string
              format: date-time
              description: The time the tool was last updated in ISO format (ISO 8601)
            writeActionType:
              type: string
              description: Valid only for write actions. Represents the type of write action. REDIRECT - The client renders the URL which contains information for carrying out the action. EXECUTION - Send a request to an external server and execute the action.
              enum:
                - REDIRECT
                - EXECUTION
            authType:
              type: string
              enum:
                - NONE
                - OAUTH_USER
                - OAUTH_ADMIN
                - API_KEY
                - BASIC_AUTH
                - DWD
              description: |
                The type of authentication being used.
                Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                'OAUTH_USER' uses individual user tokens for external API calls.
                'DWD' refers to domain wide delegation.
            auth:
              description: Config for tool's authentication method.
              type: object
              properties:
                isOnPrem:
                  type: boolean
                  description: Whether or not this tool is hosted on-premise.
                usesCentralAuth:
                  type: boolean
                  description: Whether or not this uses central auth.
                type:
                  type: string
                  enum:
                    - NONE
                    - OAUTH_USER
                    - OAUTH_ADMIN
                    - API_KEY
                    - BASIC_AUTH
                    - DWD
                  description: |
                    The type of authentication being used.
                    Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                    'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                    'OAUTH_USER' uses individual user tokens for external API calls.
                    'DWD' refers to domain wide delegation.
                grantType:
                  type: string
                  enum:
                    - AUTH_CODE
                    - CLIENT_CREDENTIALS
                  description: The type of grant type being used.
                status:
                  type: string
                  description: Auth status of the tool.
                  enum:
                    - AWAITING_AUTH
                    - AUTHORIZED
                client_url:
                  type: string
                  format: url
                  description: The URL where users will be directed to start the OAuth flow.
                scopes:
                  type: array
                  description: A list of strings denoting the different scopes or access levels required by the tool.
                  items:
                    type: string
                audiences:
                  type: array
                  description: A list of strings denoting the different audience which can access the tool.
                  items:
                    type: string
                authorization_url:
                  type: string
                  format: url
                  description: The OAuth provider's endpoint, where access tokens are requested.
                lastAuthorizedAt:
                  type: string
                  format: date-time
                  description: The time the tool was last authorized in ISO format (ISO 8601).
            permissions:
              type: object
              description: ObjectPermissions object
              additionalProperties: true
            usageInstructions:
              description: Usage instructions for the LLM to use this action.
              type: string
            isSetupFinished:
              type: boolean
              description: Whether this action has been fully configured and validated.
          type: object
        parameters:
          type: object
          description: Parameters supported by the tool.
          additionalProperties:
            $ref: '#/components/schemas/WriteActionParameter'
    IconConfig:
      description: Defines how to render an icon
      example:
        color: '#343CED'
        key: person_icon
        iconType: GLYPH
        name: user
      properties:
        generatedBackgroundColorKey:
          type: string
        backgroundColor:
          type: string
        color:
          type: string
        key:
          type: string
        iconType:
          enum:
            - COLLECTION
            - CUSTOM
            - DATASOURCE
            - DATASOURCE_INSTANCE
            - FAVICON
            - FILE_TYPE
            - GENERATED_BACKGROUND
            - GLYPH
            - MIME_TYPE
            - NO_ICON
            - PERSON
            - REACTIONS
            - URL
        masked:
          type: boolean
          description: Whether the icon should be masked based on current theme.
        name:
          type: string
          description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
        url:
          type: string
          description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
      type: object
    ChatFileStatus:
      type: object
      description: ChatFileStatus object
      additionalProperties: true
    ChatFileFailureReason:
      type: object
      description: ChatFileFailureReason object
      additionalProperties: true
    ConnectorType:
      type: object
      description: ConnectorType object
      additionalProperties: true
    DocumentContent:
      type: object
      description: DocumentContent object
      additionalProperties: true
    DocumentMetadata:
      example:
        container: container
        parentId: JIRA_EN-1337
        createTime: '2000-01-23T04:56:07.000Z'
        datasource: datasource
        author:
          name: name
        documentId: documentId
        updateTime: '2000-01-23T04:56:07.000Z'
        mimeType: mimeType
        objectType: Feature Request
        components:
          - Backend
          - Networking
        status:
          - Done
        customData:
          someCustomField: someCustomValue
      properties:
        datasource:
          type: string
        datasourceInstance:
          type: string
          description: The datasource instance from which the document was extracted.
        objectType:
          type: string
          description: The type of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
        container:
          type: string
          description: The name of the container (higher level parent, not direct parent) of the result. Interpretation is specific to each datasource (e.g. Channels for Slack, Project for Jira). cf. parentId
        containerId:
          type: string
          description: The Glean Document ID of the container. Uniquely identifies the container.
        superContainerId:
          type: string
          description: The Glean Document ID of the super container. Super container represents a broader abstraction that contains many containers. For example, whereas container might refer to a folder, super container would refer to a drive.
        parentId:
          type: string
          description: The id of the direct parent of the result. Interpretation is specific to each datasource (e.g. parent issue for Jira). cf. container
        mimeType:
          type: string
        documentId:
          type: string
          description: The index-wide unique identifier.
        loggingId:
          type: string
          description: A unique identifier used to represent the document in any logging or feedback requests in place of documentId.
        documentIdHash:
          type: string
          description: Hash of the Glean Document ID.
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        author:
          type: object
          description: Person object
          additionalProperties: true
        owner:
          type: object
          description: Person object
          additionalProperties: true
        mentionedPeople:
          type: array
          description: A list of people mentioned in the document.
          items:
            type: object
            description: Person object
            additionalProperties: true
        visibility:
          type: string
          description: The level of visibility of the document as understood by our system.
          x-enumDescriptions:
            PRIVATE: Only one person is able to see the document.
            SPECIFIC_PEOPLE_AND_GROUPS: Only specific people and/or groups can see the document.
            DOMAIN_LINK: Anyone in the domain with the link can see the document.
            DOMAIN_VISIBLE: Anyone in the domain can search for the document.
            PUBLIC_LINK: Anyone with the link can see the document.
            PUBLIC_VISIBLE: Anyone on the internet can search for the document.
          enum:
            - PRIVATE
            - SPECIFIC_PEOPLE_AND_GROUPS
            - DOMAIN_LINK
            - DOMAIN_VISIBLE
            - PUBLIC_LINK
            - PUBLIC_VISIBLE
        components:
          type: array
          description: A list of components this result is associated with. Interpretation is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)
          items:
            type: string
        status:
          type: string
          description: The status or disposition of the result. Interpretation is specific to each datasource. (e.g. for Jira issues, this is the issue status such as Done, In Progress or Will Not Fix).
        statusCategory:
          type: string
          description: The status category of the result. Meant to be more general than status. Interpretation is specific to each datasource.
        pins:
          type: array
          description: A list of stars associated with this result.  "Pin" is an older name.
          items:
            type: object
            properties:
              queries:
                type: array
                description: The query strings for which the pinned result will show.
                items:
                  type: string
              audienceFilters:
                type: array
                description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                items:
                  type: object
                  description: FacetFilter object
                  additionalProperties: true
              id:
                type: string
                description: The opaque id of the pin.
              documentId:
                type: string
                description: The document which should be a pinned result.
              attribution:
                type: object
                description: Person object
                additionalProperties: true
              updatedBy:
                type: object
                description: Person object
                additionalProperties: true
              createTime:
                type: string
                format: date-time
              updateTime:
                type: string
                format: date-time
            required:
              - documentId
        priority:
          type: string
          description: The document priority. Interpretation is datasource specific.
        assignedTo:
          type: object
          description: Person object
          additionalProperties: true
        updatedBy:
          type: object
          description: Person object
          additionalProperties: true
        labels:
          type: array
          description: A list of tags for the document. Interpretation is datasource specific.
          items:
            type: string
        collections:
          type: array
          description: A list of collections that the document belongs to.
          items:
            type: object
            description: Flattened Collection
            properties:
              name:
                type: string
                description: The unique name of the Collection.
              description:
                type: string
                description: A brief summary of the Collection's contents.
              addedRoles:
                type: array
                description: A list of added user roles for the Collection.
                items:
                  type: object
                  description: UserRoleSpecification object
                  additionalProperties: true
              removedRoles:
                type: array
                description: A list of removed user roles for the Collection.
                items:
                  type: object
                  description: UserRoleSpecification object
                  additionalProperties: true
              audienceFilters:
                type: array
                description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                items:
                  type: object
                  description: FacetFilter object
                  additionalProperties: true
              icon:
                type: string
                description: The emoji icon of this Collection.
              adminLocked:
                type: boolean
                description: Indicates whether edits are allowed for everyone or only admins.
              parentId:
                type: integer
                description: The parent of this Collection, or 0 if it's a top-level Collection.
              thumbnail:
                properties:
                  photoId:
                    type: string
                    description: Photo id if the thumbnail is from splash.
                  url:
                    type: string
                    description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                type: object
              allowedDatasource:
                type: string
                description: The datasource type this Collection can hold.
              permissions:
                type: object
                description: Flattened ObjectPermissions
                properties:
                  write:
                    type: object
                    description: Describes the write permissions levels that a user has for a specific feature
                    properties:
                      scopeType:
                        type: string
                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                        enum:
                          - GLOBAL
                          - OWN
                        properties: {}
                      create:
                        type: boolean
                        description: True if user has create permission for this feature and scope
                      update:
                        type: boolean
                        description: True if user has update permission for this feature and scope
                      delete:
                        type: boolean
                        description: True if user has delete permission for this feature and scope
              id:
                type: integer
                description: The unique ID of the Collection.
              createTime:
                type: string
                format: date-time
              updateTime:
                type: string
                format: date-time
              creator:
                type: object
                description: Person object
                additionalProperties: true
              updatedBy:
                type: object
                description: Person object
                additionalProperties: true
              itemCount:
                type: integer
                description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
              childCount:
                type: integer
                description: The number of children Collections. Separated from the actual children so we can grab the count without children.
              items:
                type: array
                description: The items in this Collection.
                items:
                  type: object
                  description: CollectionItem object
                  additionalProperties: true
              pinMetadata:
                required:
                  - pinnedCategories
                  - eligibleCategoriesForPinning
                properties:
                  existingPins:
                    type: array
                    description: List of targets this Collection is pinned to.
                    items:
                      type: object
                      description: CollectionPinTarget object
                      additionalProperties: true
                  eligiblePins:
                    type: array
                    description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                    items:
                      required:
                        - id
                        - target
                      properties:
                        id:
                          type: integer
                          description: The ID of the Collection.
                        target:
                          type: object
                          description: CollectionPinTarget object
                          additionalProperties: true
                      type: object
                type: object
              shortcuts:
                type: array
                description: The names of the shortcuts (Go Links) that point to this Collection.
                items:
                  type: string
              children:
                type: array
                description: The children Collections of this Collection.
                items:
                  type: object
                  description: Collection object
                  additionalProperties: true
              roles:
                type: array
                description: A list of user roles for the Collection.
                items:
                  type: object
                  description: UserRoleSpecification object
                  additionalProperties: true
        datasourceId:
          type: string
          description: The user-visible datasource specific id (e.g. Salesforce case number for example, GitHub PR number).
        interactions:
          properties:
            numComments:
              type: integer
              description: The count of comments (thread replies in the case of slack).
            numReactions:
              type: integer
              description: The count of reactions on the document.
            reactions:
              type: array
              description: To be deprecated in favor of reacts. A (potentially non-exhaustive) list of reactions for the document.
              deprecated: true
              items:
                type: string
            reacts:
              type: array
              items:
                properties:
                  type:
                    type: string
                  count:
                    type: integer
                    description: The count of the reaction type on the document.
                  reactors:
                    type: array
                    items:
                      type: object
                      description: Person object
                      additionalProperties: true
                  reactedByViewer:
                    type: boolean
                    description: Whether the user in context reacted with this type to the document.
                type: object
            shares:
              type: array
              description: Describes instances of someone posting a link to this document in one of our indexed datasources.
              items:
                description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
                required:
                  - numDaysAgo
                properties:
                  numDaysAgo:
                    type: integer
                    description: The number of days that has passed since the share happened
                  sharer:
                    type: object
                    description: Person object
                    additionalProperties: true
                  sharingDocument:
                    type: object
                    description: Document object
                    additionalProperties: true
                type: object
            visitorCount:
              required:
                - count
              properties:
                count:
                  type: integer
                  description: The counter value
                period:
                  properties:
                    minDaysFromNow:
                      type: integer
                      description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                      deprecated: true
                    maxDaysFromNow:
                      type: integer
                      description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                      deprecated: true
                    start:
                      properties:
                        epochSeconds:
                          type: integer
                          description: Epoch seconds. Has precedence over daysFromNow.
                        daysFromNow:
                          type: integer
                          description: The number of days from now. Specification relative to current time. Can be negative.
                      type: object
                    end:
                      properties:
                        epochSeconds:
                          type: integer
                          description: Epoch seconds. Has precedence over daysFromNow.
                        daysFromNow:
                          type: integer
                          description: The number of days from now. Specification relative to current time. Can be negative.
                      type: object
                  type: object
                org:
                  type: string
                  description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
              type: object
          type: object
        verification:
          required:
            - state
          properties:
            state:
              type: string
              enum:
                - UNVERIFIED
                - VERIFIED
                - DEPRECATED
              description: The verification state for the document.
            metadata:
              required:
                - documentId
              properties:
                lastVerifier:
                  type: object
                  description: Person object
                  additionalProperties: true
                lastVerificationTs:
                  type: integer
                  description: The unix timestamp of the verification (in seconds since epoch UTC).
                expirationTs:
                  type: integer
                  description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
                document:
                  type: object
                  description: Document object
                  additionalProperties: true
                reminders:
                  type: array
                  description: Info about all outstanding verification reminders for the document if exists.
                  items:
                    required:
                      - assignee
                      - remindAt
                    properties:
                      assignee:
                        type: object
                        description: Person object
                        additionalProperties: true
                      requestor:
                        type: object
                        description: Person object
                        additionalProperties: true
                      remindAt:
                        type: integer
                        description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                      createdAt:
                        type: integer
                        description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                      reason:
                        type: string
                        description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                    type: object
                lastReminder:
                  required:
                    - assignee
                    - remindAt
                  properties:
                    assignee:
                      type: object
                      description: Person object
                      additionalProperties: true
                    requestor:
                      type: object
                      description: Person object
                      additionalProperties: true
                    remindAt:
                      type: integer
                      description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                    createdAt:
                      type: integer
                      description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                    reason:
                      type: string
                      description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                  type: object
                visitorCount:
                  type: array
                  description: Number of visitors to the document during included time periods.
                  items:
                    required:
                      - count
                    properties:
                      count:
                        type: integer
                        description: The counter value
                      period:
                        properties:
                          minDaysFromNow:
                            type: integer
                            description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                            deprecated: true
                          maxDaysFromNow:
                            type: integer
                            description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                            deprecated: true
                          start:
                            properties:
                              epochSeconds:
                                type: integer
                                description: Epoch seconds. Has precedence over daysFromNow.
                              daysFromNow:
                                type: integer
                                description: The number of days from now. Specification relative to current time. Can be negative.
                            type: object
                          end:
                            properties:
                              epochSeconds:
                                type: integer
                                description: Epoch seconds. Has precedence over daysFromNow.
                              daysFromNow:
                                type: integer
                                description: The number of days from now. Specification relative to current time. Can be negative.
                            type: object
                        type: object
                      org:
                        type: string
                        description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                    type: object
                candidateVerifiers:
                  type: array
                  description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
                  items:
                    type: object
                    description: Person object
                    additionalProperties: true
              type: object
          type: object
        viewerInfo:
          properties:
            role:
              type: string
              enum:
                - ANSWER_MODERATOR
                - OWNER
                - VIEWER
              description: DEPRECATED - use permissions instead. Viewer's role on the specific document.
              deprecated: true
            lastViewedTime:
              type: string
              format: date-time
          type: object
        permissions:
          type: object
          description: ObjectPermissions object
          additionalProperties: true
        visitCount:
          required:
            - count
          properties:
            count:
              type: integer
              description: The counter value
            period:
              properties:
                minDaysFromNow:
                  type: integer
                  description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                  deprecated: true
                maxDaysFromNow:
                  type: integer
                  description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                  deprecated: true
                start:
                  properties:
                    epochSeconds:
                      type: integer
                      description: Epoch seconds. Has precedence over daysFromNow.
                    daysFromNow:
                      type: integer
                      description: The number of days from now. Specification relative to current time. Can be negative.
                  type: object
                end:
                  properties:
                    epochSeconds:
                      type: integer
                      description: Epoch seconds. Has precedence over daysFromNow.
                    daysFromNow:
                      type: integer
                      description: The number of days from now. Specification relative to current time. Can be negative.
                  type: object
              type: object
            org:
              type: string
              description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
          type: object
        shortcuts:
          type: array
          description: A list of shortcuts of which destination URL is for the document.
          items:
            type: object
            description: PermissionedObject object
            properties:
              id:
                type: integer
                description: The opaque id of the user generated content.
              inputAlias:
                type: string
                description: Link text following go/ prefix as entered by the user.
              destinationUrl:
                type: string
                description: Destination URL for the shortcut.
              destinationDocumentId:
                type: string
                description: Glean Document ID for the URL, if known.
              description:
                type: string
                description: A short, plain text blurb to help people understand the intent of the shortcut.
              unlisted:
                type: boolean
                description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
              urlTemplate:
                type: string
                description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
              addedRoles:
                type: array
                description: A list of user roles added for the Shortcut.
                items:
                  type: object
                  description: UserRoleSpecification object
                  additionalProperties: true
              removedRoles:
                type: array
                description: A list of user roles removed for the Shortcut.
                items:
                  type: object
                  description: UserRoleSpecification object
                  additionalProperties: true
              createdBy:
                type: object
                description: Person object
                additionalProperties: true
              createTime:
                type: string
                format: date-time
                description: The time the shortcut was created in ISO format (ISO 8601).
              updatedBy:
                type: object
                description: Person object
                additionalProperties: true
              updateTime:
                type: string
                format: date-time
                description: The time the shortcut was updated in ISO format (ISO 8601).
              destinationDocument:
                type: object
                description: Document object
                additionalProperties: true
              intermediateUrl:
                type: string
                description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
              viewPrefix:
                type: string
                description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
              isExternal:
                type: boolean
                description: Indicates whether a shortcut is native or external.
              editUrl:
                type: string
                description: The URL using which the user can access the edit page of the shortcut.
              alias:
                type: string
                description: canonical link text following go/ prefix where hyphen/underscore is removed.
              title:
                type: string
                description: Title for the Go Link
              roles:
                type: array
                description: A list of user roles for the Go Link.
                items:
                  type: object
                  description: UserRoleSpecification object
                  additionalProperties: true
            required:
              - inputAlias
        path:
          type: string
          description: For file datasources like onedrive/github etc this has the path to the file
        customData:
          type: object
          description: CustomData object
          additionalProperties: true
        documentCategory:
          type: string
          description: The document's document_category(.proto).
        contactPerson:
          type: object
          description: Person object
          additionalProperties: true
        thumbnail:
          properties:
            photoId:
              type: string
              description: Photo id if the thumbnail is from splash.
            url:
              type: string
              description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
          type: object
        indexStatus:
          properties:
            lastCrawledTime:
              description: When the document was last crawled
              type: string
              format: date-time
            lastIndexedTime:
              description: When the document was last indexed
              type: string
              format: date-time
          type: object
        ancestors:
          type: array
          description: A list of documents that are ancestors of this document in the hierarchy of the document's datasource, for example parent folders or containers. Ancestors can be of different types and some may not be indexed. Higher level ancestors appear earlier in the list.
          items:
            type: object
            description: Document object
            additionalProperties: true
      type: object
    DocumentSection:
      type: object
      description: DocumentSection object
      additionalProperties: true
    RelatedDocuments:
      type: object
      description: RelatedDocuments object
      additionalProperties: true
    PersonMetadata:
      example:
        department: Movies
        email: george@example.com
        location: Hollywood, CA
        phone: 6505551234
        photoUrl: https://example.com/george.jpg
        startDate: '2000-01-23'
        title: Actor
      properties:
        type:
          type: string
          x-enumDescriptions:
            FULL_TIME: The person is a current full-time employee of the company.
            CONTRACTOR: The person is a current contractor of the company.
            NON_EMPLOYEE: The person object represents a non-human actor such as a service or admin account.
            FORMER_EMPLOYEE: The person is a previous employee of the company.
          enum:
            - FULL_TIME
            - CONTRACTOR
            - NON_EMPLOYEE
            - FORMER_EMPLOYEE
          example: FULL_TIME
        firstName:
          type: string
          description: The first name of the person
        lastName:
          type: string
          description: The last name of the person
        title:
          type: string
          description: Job title.
        businessUnit:
          type: string
          description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
        department:
          type: string
          description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
        teams:
          description: Info about the employee's team(s).
          type: array
          items:
            description: Use `id` if you index teams via Glean, and use `name` and `externalLink` if you want to use your own team pages
            properties:
              id:
                type: string
                description: Unique identifier
              name:
                type: string
                description: Team name
              externalLink:
                type: string
                format: uri
                description: Link to a team page on the internet or your company's intranet
              relationship:
                type: string
                description: The team member's relationship to the team. This defaults to MEMBER if not set.
                default: MEMBER
                enum:
                  - MEMBER
                  - MANAGER
                  - LEAD
                  - POINT_OF_CONTACT
                  - OTHER
              joinDate:
                type: string
                format: date-time
                description: The team member's start date
            type: object
        departmentCount:
          type: integer
          description: The number of people in this person's department.
        email:
          type: string
          description: The user's primary email address
        aliasEmails:
          type: array
          description: Additional email addresses of this user beyond the primary, if any.
          items:
            type: string
        location:
          type: string
          description: User facing string representing the person's location.
        structuredLocation:
          type: object
          description: Detailed location with information about country, state, city etc.
          properties:
            deskLocation:
              type: string
              description: Desk number.
            timezone:
              type: string
              description: Location's timezone, e.g. UTC, PST.
            address:
              type: string
              description: Office address or name.
            city:
              type: string
              description: Name of the city.
            state:
              type: string
              description: State code.
            region:
              type: string
              description: Region information, e.g. NORAM, APAC.
            zipCode:
              type: string
              description: ZIP Code for the address.
            country:
              type: string
              description: Country name.
            countryCode:
              type: string
              description: Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA.
        externalProfileLink:
          type: string
          description: Link to a customer's internal profile page. This is set to '#' when no link is desired.
        manager:
          type: object
          description: Person object
          additionalProperties: true
        managementChain:
          description: The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
          type: array
          items:
            type: object
            description: Person object
            additionalProperties: true
        phone:
          type: string
          description: Phone number as a number string.
        timezone:
          type: string
          description: The timezone of the person. E.g. "Pacific Daylight Time".
        timezoneOffset:
          type: integer
          format: int64
          description: The offset of the person's timezone in seconds from UTC.
        photoUrl:
          type: string
          format: url
          description: The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
        uneditedPhotoUrl:
          type: string
          format: url
          description: The original photo URL of the person's avatar before any edits they made are applied
        bannerUrl:
          type: string
          format: url
          description: The URL of the person's banner photo.
        reports:
          type: array
          items:
            type: object
            description: Person object
            additionalProperties: true
        startDate:
          type: string
          description: The date when the employee started.
          format: date
        endDate:
          type: string
          format: date
          description: If a former employee, the last date of employment.
        bio:
          type: string
          description: Short biography or mission statement of the employee.
        pronoun:
          type: string
          description: She/her, He/his or other pronoun.
        orgSizeCount:
          type: integer
          description: The total recursive size of the people reporting to this person, or 1
        directReportsCount:
          type: integer
          description: The total number of people who directly report to this person, or 0
        preferredName:
          type: string
          description: The preferred name of the person, or a nickname.
        socialNetwork:
          description: List of social network profiles.
          type: array
          items:
            required:
              - name
              - profileUrl
            properties:
              name:
                type: string
                description: Possible values are "twitter", "linkedin".
              profileName:
                type: string
                description: Human-readable profile name.
              profileUrl:
                type: string
                format: url
                description: Link to profile.
            type: object
        datasourceProfile:
          type: array
          description: List of profiles this user has in different datasources / tools that they use.
          items:
            required:
              - datasource
              - handle
            properties:
              datasource:
                type: string
                example: github
                description: The datasource the profile is of.
              handle:
                type: string
                description: The display name of the entity in the given datasource.
              url:
                type: string
                description: URL to view the entity's profile.
              nativeAppUrl:
                type: string
                description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
              isUserGenerated:
                type: boolean
                description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
            type: object
        querySuggestions:
          type: object
          description: QuerySuggestionList object
          additionalProperties: true
        peopleDistance:
          type: array
          description: List of people and distances to those people from this person. Optionally with metadata.
          items:
            required:
              - name
              - obfuscatedId
              - distance
            properties:
              name:
                type: string
                description: The display name.
              obfuscatedId:
                type: string
                description: An opaque identifier that can be used to request metadata for a Person.
              distance:
                type: number
                format: float
                description: Distance to person, refer to PeopleDistance pipeline on interpretation of the value.
            type: object
        inviteInfo:
          type: object
          description: InviteInfo object
        isSignedUp:
          type: boolean
          description: Whether the user has signed into Glean at least once.
        lastExtensionUse:
          type: string
          format: date-time
          description: The last time the user has used the Glean extension in ISO 8601 format.
        permissions:
          description: |-
            Describes the permissions levels that a user has for permissioned features. When the client sends this, Permissions.read and Permissions.write are the additional permissions granted to a user on top of what they have via their roles.
            When the server sends this, Permissions.read and Permissions.write are the complete (merged) set of permissions the user has, and Permissions.roles is just for display purposes.
          properties:
            canAdminSearch:
              type: boolean
              description: TODO--deprecate in favor of the read and write properties. True if the user has access to /adminsearch
            canAdminClientApiGlobalTokens:
              type: boolean
              description: TODO--deprecate in favor of the read and write properties. True if the user can administrate client API tokens with global scope
            canDlp:
              type: boolean
              description: TODO--deprecate in favor of the read and write properties. True if the user has access to data loss prevention (DLP) features
            read:
              description: Describes the read permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
              additionalProperties:
                type: array
                description: List of read permissions (for different scopes but same feature)
                items:
                  $ref: '#/components/schemas/ReadPermission'
            write:
              description: Describes the write permissions levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
              additionalProperties:
                type: array
                description: List of write permissions (for different scopes but same feature)
                items:
                  $ref: '#/components/schemas/WritePermission'
            grant:
              description: Describes the grant permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
              additionalProperties:
                type: array
                description: List of grant permissions (for different scopes but same feature)
                items:
                  $ref: '#/components/schemas/GrantPermission'
            role:
              type: string
              description: The roleId of the canonical role a user has. The displayName is equal to the roleId.
            roles:
              type: array
              description: The roleIds of the roles a user has.
              items:
                type: string
          type: object
        customFields:
          type: array
          description: User customizable fields for additional people information.
          items:
            required:
              - label
              - values
              - displayable
            properties:
              label:
                type: string
                description: A user-facing label for this field.
              values:
                type: array
                items:
                  oneOf:
                    - properties:
                        strText:
                          type: string
                          description: Text field for string value.
                      type: object
                    - properties:
                        urlAnchor:
                          type: string
                          description: Anchor text for hyperlink.
                        urlLink:
                          type: string
                          description: Link for this URL.
                      type: object
                    - properties:
                        person:
                          type: object
                          description: Person object
                          additionalProperties: true
                      type: object
              displayable:
                type: boolean
                description: Determines whether the client should display this custom field
                default: true
            type: object
        loggingId:
          type: string
          description: The logging id of the person used in scrubbed logs, tracking GA metrics.
        startDatePercentile:
          type: number
          format: float
          description: Percentage of the company that started strictly after this person. Between [0,100).
        busyEvents:
          type: array
          description: Intervals of busy time for this person, along with the type of event they're busy with.
          items:
            description: A generic, light-weight calendar event.
            type: object
            properties:
              time:
                required:
                  - start
                  - end
                properties:
                  start:
                    type: string
                    description: The RFC3339 timestamp formatted start time of this event.
                  end:
                    type: string
                    description: The RFC3339 timestamp formatted end time of this event.
                type: object
              eventType:
                description: The nature of the event, for example "out of office".
                type: string
                enum:
                  - DEFAULT
                  - OUT_OF_OFFICE
        profileBoolSettings:
          type: object
          additionalProperties:
            type: boolean
          description: flag settings to indicate user profile settings for certain items
        badges:
          type: array
          description: The badges that a user has earned over their lifetime.
          items:
            type: object
            description: Displays a user's accomplishment or milestone
            example:
              key: deployment_name_new_hire
              displayName: New hire
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
            properties:
              key:
                type: string
                description: An auto generated unique identifier.
              displayName:
                type: string
                description: The badge name displayed to users
              iconConfig:
                description: Defines how to render an icon
                example:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                properties:
                  generatedBackgroundColorKey:
                    type: string
                  backgroundColor:
                    type: string
                  color:
                    type: string
                  key:
                    type: string
                  iconType:
                    enum:
                      - COLLECTION
                      - CUSTOM
                      - DATASOURCE
                      - DATASOURCE_INSTANCE
                      - FAVICON
                      - FILE_TYPE
                      - GENERATED_BACKGROUND
                      - GLYPH
                      - MIME_TYPE
                      - NO_ICON
                      - PERSON
                      - REACTIONS
                      - URL
                  masked:
                    type: boolean
                    description: Whether the icon should be masked based on current theme.
                  name:
                    type: string
                    description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
                  url:
                    type: string
                    description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
                type: object
              pinned:
                type: boolean
                description: The badge should be shown on the PersonAttribution
        isOrgRoot:
          type: boolean
          description: Whether this person is a "root" node in their organization's hierarchy.
      type: object
    TextRange:
      type: object
      description: TextRange object
      additionalProperties: true
    SearchResultSnippet:
      type: object
      description: SearchResultSnippet object
      additionalProperties: true
    StructuredResult:
      type: object
      description: StructuredResult object
      additionalProperties: true
    SearchProviderInfo:
      type: object
      description: SearchProviderInfo object
      additionalProperties: true
    SearchRequestOptions:
      type: object
      description: SearchRequestOptions object
      additionalProperties: true
    SearchRequestInputDetails:
      type: object
      description: SearchRequestInputDetails object
      additionalProperties: true
    ToolMetadata:
      description: The manifest for a tool that can be used to augment Glean Assistant.
      required:
        - type
        - name
        - displayName
        - displayDescription
      properties:
        type:
          description: The type of tool.
          type: string
          enum:
            - RETRIEVAL
            - ACTION
        name:
          description: Unique identifier for the tool. Name should be understandable by the LLM, and will be used to invoke a tool.
          type: string
        displayName:
          description: Human understandable name of the tool. Max 50 characters.
          type: string
        toolId:
          type: string
          description: An opaque id which is unique identifier for the tool.
        displayDescription:
          description: Description of the tool meant for a human.
          type: string
        logoUrl:
          type: string
          description: URL used to fetch the logo.
        objectName:
          type: string
          description: Name of the generated object. This will be used to indicate to the end user what the generated object contains.
          example:
            - HR ticket
            - Email
            - Chat message
        knowledgeType:
          type: string
          description: Indicates the kind of knowledge a tool would access or modify.
          enum:
            - NEUTRAL_KNOWLEDGE
            - COMPANY_KNOWLEDGE
            - WORLD_KNOWLEDGE
        createdBy:
          type: object
          description: PersonObject object
          additionalProperties: true
        lastUpdatedBy:
          type: object
          description: PersonObject object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
          description: The time the tool was created in ISO format (ISO 8601)
        lastUpdatedAt:
          type: string
          format: date-time
          description: The time the tool was last updated in ISO format (ISO 8601)
        writeActionType:
          type: string
          description: Valid only for write actions. Represents the type of write action. REDIRECT - The client renders the URL which contains information for carrying out the action. EXECUTION - Send a request to an external server and execute the action.
          enum:
            - REDIRECT
            - EXECUTION
        authType:
          type: string
          enum:
            - NONE
            - OAUTH_USER
            - OAUTH_ADMIN
            - API_KEY
            - BASIC_AUTH
            - DWD
          description: |
            The type of authentication being used.
            Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
            'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
            'OAUTH_USER' uses individual user tokens for external API calls.
            'DWD' refers to domain wide delegation.
        auth:
          description: Config for tool's authentication method.
          type: object
          properties:
            isOnPrem:
              type: boolean
              description: Whether or not this tool is hosted on-premise.
            usesCentralAuth:
              type: boolean
              description: Whether or not this uses central auth.
            type:
              type: string
              enum:
                - NONE
                - OAUTH_USER
                - OAUTH_ADMIN
                - API_KEY
                - BASIC_AUTH
                - DWD
              description: |
                The type of authentication being used.
                Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
                'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
                'OAUTH_USER' uses individual user tokens for external API calls.
                'DWD' refers to domain wide delegation.
            grantType:
              type: string
              enum:
                - AUTH_CODE
                - CLIENT_CREDENTIALS
              description: The type of grant type being used.
            status:
              type: string
              description: Auth status of the tool.
              enum:
                - AWAITING_AUTH
                - AUTHORIZED
            client_url:
              type: string
              format: url
              description: The URL where users will be directed to start the OAuth flow.
            scopes:
              type: array
              description: A list of strings denoting the different scopes or access levels required by the tool.
              items:
                type: string
            audiences:
              type: array
              description: A list of strings denoting the different audience which can access the tool.
              items:
                type: string
            authorization_url:
              type: string
              format: url
              description: The OAuth provider's endpoint, where access tokens are requested.
            lastAuthorizedAt:
              type: string
              format: date-time
              description: The time the tool was last authorized in ISO format (ISO 8601).
        permissions:
          type: object
          description: ObjectPermissions object
          additionalProperties: true
        usageInstructions:
          description: Usage instructions for the LLM to use this action.
          type: string
        isSetupFinished:
          type: boolean
          description: Whether this action has been fully configured and validated.
      type: object
    WriteActionParameter:
      type: object
      properties:
        type:
          type: string
          description: The type of the value (e.g., integer, string, boolean, etc.)
          enum:
            - UNKNOWN
            - INTEGER
            - STRING
            - BOOLEAN
        displayName:
          type: string
          description: Human readable display name for the key.
        value:
          type: string
          description: The value of the field.
        isRequired:
          type: boolean
          description: Is the parameter a required field.
        description:
          type: string
          description: Description of the parameter.
        possibleValues:
          type: array
          description: Possible values that the parameter can take.
          items:
            type: object
            description: Possible value of a specific parameter
            properties:
              value:
                type: string
                description: Possible value
              label:
                type: string
                description: User-friendly label associated with the value
    DocumentVisibility:
      type: string
      description: The level of visibility of the document as understood by our system.
      x-enumDescriptions:
        PRIVATE: Only one person is able to see the document.
        SPECIFIC_PEOPLE_AND_GROUPS: Only specific people and/or groups can see the document.
        DOMAIN_LINK: Anyone in the domain with the link can see the document.
        DOMAIN_VISIBLE: Anyone in the domain can search for the document.
        PUBLIC_LINK: Anyone with the link can see the document.
        PUBLIC_VISIBLE: Anyone on the internet can search for the document.
      enum:
        - PRIVATE
        - SPECIFIC_PEOPLE_AND_GROUPS
        - DOMAIN_LINK
        - DOMAIN_VISIBLE
        - PUBLIC_LINK
        - PUBLIC_VISIBLE
    PinDocument:
      type: object
      properties:
        queries:
          type: array
          description: The query strings for which the pinned result will show.
          items:
            type: string
        audienceFilters:
          type: array
          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
        id:
          type: string
          description: The opaque id of the pin.
        documentId:
          type: string
          description: The document which should be a pinned result.
        attribution:
          type: object
          description: Person object
          additionalProperties: true
        updatedBy:
          type: object
          description: Person object
          additionalProperties: true
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
      required:
        - documentId
    Collection:
      type: object
      description: Flattened Collection
      properties:
        name:
          type: string
          description: The unique name of the Collection.
        description:
          type: string
          description: A brief summary of the Collection's contents.
        addedRoles:
          type: array
          description: A list of added user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        removedRoles:
          type: array
          description: A list of removed user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        audienceFilters:
          type: array
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
        icon:
          type: string
          description: The emoji icon of this Collection.
        adminLocked:
          type: boolean
          description: Indicates whether edits are allowed for everyone or only admins.
        parentId:
          type: integer
          description: The parent of this Collection, or 0 if it's a top-level Collection.
        thumbnail:
          properties:
            photoId:
              type: string
              description: Photo id if the thumbnail is from splash.
            url:
              type: string
              description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
          type: object
        allowedDatasource:
          type: string
          description: The datasource type this Collection can hold.
        permissions:
          type: object
          description: Flattened ObjectPermissions
          properties:
            write:
              type: object
              description: Describes the write permissions levels that a user has for a specific feature
              properties:
                scopeType:
                  type: string
                  description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                  enum:
                    - GLOBAL
                    - OWN
                  properties: {}
                create:
                  type: boolean
                  description: True if user has create permission for this feature and scope
                update:
                  type: boolean
                  description: True if user has update permission for this feature and scope
                delete:
                  type: boolean
                  description: True if user has delete permission for this feature and scope
        id:
          type: integer
          description: The unique ID of the Collection.
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        creator:
          type: object
          description: Person object
          additionalProperties: true
        updatedBy:
          type: object
          description: Person object
          additionalProperties: true
        itemCount:
          type: integer
          description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
        childCount:
          type: integer
          description: The number of children Collections. Separated from the actual children so we can grab the count without children.
        items:
          type: array
          description: The items in this Collection.
          items:
            type: object
            description: CollectionItem object
            additionalProperties: true
        pinMetadata:
          required:
            - pinnedCategories
            - eligibleCategoriesForPinning
          properties:
            existingPins:
              type: array
              description: List of targets this Collection is pinned to.
              items:
                type: object
                description: CollectionPinTarget object
                additionalProperties: true
            eligiblePins:
              type: array
              description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
              items:
                required:
                  - id
                  - target
                properties:
                  id:
                    type: integer
                    description: The ID of the Collection.
                  target:
                    type: object
                    description: CollectionPinTarget object
                    additionalProperties: true
                type: object
          type: object
        shortcuts:
          type: array
          description: The names of the shortcuts (Go Links) that point to this Collection.
          items:
            type: string
        children:
          type: array
          description: The children Collections of this Collection.
          items:
            type: object
            description: Collection object
            additionalProperties: true
        roles:
          type: array
          description: A list of user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
    DocumentInteractions:
      properties:
        numComments:
          type: integer
          description: The count of comments (thread replies in the case of slack).
        numReactions:
          type: integer
          description: The count of reactions on the document.
        reactions:
          type: array
          description: To be deprecated in favor of reacts. A (potentially non-exhaustive) list of reactions for the document.
          deprecated: true
          items:
            type: string
        reacts:
          type: array
          items:
            properties:
              type:
                type: string
              count:
                type: integer
                description: The count of the reaction type on the document.
              reactors:
                type: array
                items:
                  type: object
                  description: Person object
                  additionalProperties: true
              reactedByViewer:
                type: boolean
                description: Whether the user in context reacted with this type to the document.
            type: object
        shares:
          type: array
          description: Describes instances of someone posting a link to this document in one of our indexed datasources.
          items:
            description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
            required:
              - numDaysAgo
            properties:
              numDaysAgo:
                type: integer
                description: The number of days that has passed since the share happened
              sharer:
                type: object
                description: Person object
                additionalProperties: true
              sharingDocument:
                type: object
                description: Document object
                additionalProperties: true
            type: object
        visitorCount:
          required:
            - count
          properties:
            count:
              type: integer
              description: The counter value
            period:
              properties:
                minDaysFromNow:
                  type: integer
                  description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                  deprecated: true
                maxDaysFromNow:
                  type: integer
                  description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                  deprecated: true
                start:
                  properties:
                    epochSeconds:
                      type: integer
                      description: Epoch seconds. Has precedence over daysFromNow.
                    daysFromNow:
                      type: integer
                      description: The number of days from now. Specification relative to current time. Can be negative.
                  type: object
                end:
                  properties:
                    epochSeconds:
                      type: integer
                      description: Epoch seconds. Has precedence over daysFromNow.
                    daysFromNow:
                      type: integer
                      description: The number of days from now. Specification relative to current time. Can be negative.
                  type: object
              type: object
            org:
              type: string
              description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
          type: object
      type: object
    Verification:
      required:
        - state
      properties:
        state:
          type: string
          enum:
            - UNVERIFIED
            - VERIFIED
            - DEPRECATED
          description: The verification state for the document.
        metadata:
          required:
            - documentId
          properties:
            lastVerifier:
              type: object
              description: Person object
              additionalProperties: true
            lastVerificationTs:
              type: integer
              description: The unix timestamp of the verification (in seconds since epoch UTC).
            expirationTs:
              type: integer
              description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
            document:
              type: object
              description: Document object
              additionalProperties: true
            reminders:
              type: array
              description: Info about all outstanding verification reminders for the document if exists.
              items:
                required:
                  - assignee
                  - remindAt
                properties:
                  assignee:
                    type: object
                    description: Person object
                    additionalProperties: true
                  requestor:
                    type: object
                    description: Person object
                    additionalProperties: true
                  remindAt:
                    type: integer
                    description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                  createdAt:
                    type: integer
                    description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                  reason:
                    type: string
                    description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                type: object
            lastReminder:
              required:
                - assignee
                - remindAt
              properties:
                assignee:
                  type: object
                  description: Person object
                  additionalProperties: true
                requestor:
                  type: object
                  description: Person object
                  additionalProperties: true
                remindAt:
                  type: integer
                  description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                createdAt:
                  type: integer
                  description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                reason:
                  type: string
                  description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
              type: object
            visitorCount:
              type: array
              description: Number of visitors to the document during included time periods.
              items:
                required:
                  - count
                properties:
                  count:
                    type: integer
                    description: The counter value
                  period:
                    properties:
                      minDaysFromNow:
                        type: integer
                        description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                        deprecated: true
                      maxDaysFromNow:
                        type: integer
                        description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                        deprecated: true
                      start:
                        properties:
                          epochSeconds:
                            type: integer
                            description: Epoch seconds. Has precedence over daysFromNow.
                          daysFromNow:
                            type: integer
                            description: The number of days from now. Specification relative to current time. Can be negative.
                        type: object
                      end:
                        properties:
                          epochSeconds:
                            type: integer
                            description: Epoch seconds. Has precedence over daysFromNow.
                          daysFromNow:
                            type: integer
                            description: The number of days from now. Specification relative to current time. Can be negative.
                        type: object
                    type: object
                  org:
                    type: string
                    description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                type: object
            candidateVerifiers:
              type: array
              description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
              items:
                type: object
                description: Person object
                additionalProperties: true
          type: object
      type: object
    ViewerInfo:
      properties:
        role:
          type: string
          enum:
            - ANSWER_MODERATOR
            - OWNER
            - VIEWER
          description: DEPRECATED - use permissions instead. Viewer's role on the specific document.
          deprecated: true
        lastViewedTime:
          type: string
          format: date-time
      type: object
    ObjectPermissions:
      type: object
      description: ObjectPermissions object
      additionalProperties: true
    CountInfo:
      required:
        - count
      properties:
        count:
          type: integer
          description: The counter value
        period:
          properties:
            minDaysFromNow:
              type: integer
              description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
              deprecated: true
            maxDaysFromNow:
              type: integer
              description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
              deprecated: true
            start:
              type: object
              description: TimePoint object
              additionalProperties: true
            end:
              type: object
              description: TimePoint object
              additionalProperties: true
          type: object
        org:
          type: string
          description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
      type: object
    Shortcut:
      type: object
      description: PermissionedObject object
      properties:
        id:
          type: integer
          description: The opaque id of the user generated content.
        inputAlias:
          type: string
          description: Link text following go/ prefix as entered by the user.
        destinationUrl:
          type: string
          description: Destination URL for the shortcut.
        destinationDocumentId:
          type: string
          description: Glean Document ID for the URL, if known.
        description:
          type: string
          description: A short, plain text blurb to help people understand the intent of the shortcut.
        unlisted:
          type: boolean
          description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
        urlTemplate:
          type: string
          description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
        addedRoles:
          type: array
          description: A list of user roles added for the Shortcut.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        removedRoles:
          type: array
          description: A list of user roles removed for the Shortcut.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        createdBy:
          type: object
          description: Person object
          additionalProperties: true
        createTime:
          type: string
          format: date-time
          description: The time the shortcut was created in ISO format (ISO 8601).
        updatedBy:
          type: object
          description: Person object
          additionalProperties: true
        updateTime:
          type: string
          format: date-time
          description: The time the shortcut was updated in ISO format (ISO 8601).
        destinationDocument:
          type: object
          description: Document object
          additionalProperties: true
        intermediateUrl:
          type: string
          description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
        viewPrefix:
          type: string
          description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
        isExternal:
          type: boolean
          description: Indicates whether a shortcut is native or external.
        editUrl:
          type: string
          description: The URL using which the user can access the edit page of the shortcut.
        alias:
          type: string
          description: canonical link text following go/ prefix where hyphen/underscore is removed.
        title:
          type: string
          description: Title for the Go Link
        roles:
          type: array
          description: A list of user roles for the Go Link.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
      required:
        - inputAlias
    CustomData:
      type: object
      description: CustomData object
      additionalProperties: true
    Thumbnail:
      properties:
        photoId:
          type: string
          description: Photo id if the thumbnail is from splash.
        url:
          type: string
          description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
      type: object
    IndexStatus:
      properties:
        lastCrawledTime:
          description: When the document was last crawled
          type: string
          format: date-time
        lastIndexedTime:
          description: When the document was last indexed
          type: string
          format: date-time
      type: object
    SearchResult:
      type: object
      description: Flattened SearchResult
      example:
        snippets:
          - snippet: snippet
            mimeType: mimeType
        metadata:
          container: container
          createTime: '2000-01-23T04:56:07.000Z'
          datasource: datasource
          author:
            name: name
          documentId: documentId
          updateTime: '2000-01-23T04:56:07.000Z'
          mimeType: mimeType
          objectType: objectType
        title: title
        url: https://example.com/foo/bar
        nativeAppUrl: slack://foo/bar
        mustIncludeSuggestions:
          - missingTerm: container
            query: container
      properties:
        structuredResults:
          type: array
          description: An array of entities in the work graph retrieved via a data request.
          items:
            type: object
            description: StructuredResult object
            additionalProperties: true
        trackingToken:
          type: string
          description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
        document:
          type: object
          description: Document object
          additionalProperties: true
        title:
          type: string
        url:
          type: string
        nativeAppUrl:
          type: string
          description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
        snippets:
          type: array
          description: Text content from the result document which contains search query terms, if available.
          items:
            type: object
            description: SearchResultSnippet object
            additionalProperties: true
        fullText:
          type: string
          description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
        fullTextList:
          type: array
          description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
          items:
            type: string
        relatedResults:
          type: array
          description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
          items:
            type: object
            description: RelatedDocuments object
            additionalProperties: true
        clusteredResults:
          type: array
          description: A list of results that should be displayed as associated with this result.
          items:
            type: object
            description: SearchResult object
            additionalProperties: true
        allClusteredResults:
          type: array
          description: A list of results that should be displayed as associated with this result.
          items:
            type: object
            description: ClusterGroup object
            additionalProperties: true
        attachmentCount:
          type: integer
          description: The total number of attachments.
        attachments:
          type: array
          description: A (potentially partial) list of results representing documents attached to the main result document.
          items:
            type: object
            description: SearchResult object
            additionalProperties: true
        backlinkResults:
          type: array
          description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
          items:
            type: object
            description: SearchResult object
            additionalProperties: true
        clusterType:
          type: string
          description: The reason for inclusion of clusteredResults.
          enum:
            - SIMILAR
            - FRESHNESS
            - TITLE
            - CONTENT
            - NONE
            - THREAD_REPLY
            - THREAD_ROOT
            - PREFIX
            - SUFFIX
        mustIncludeSuggestions:
          type: object
          description: QuerySuggestionList object
          additionalProperties: true
        querySuggestion:
          type: object
          description: QuerySuggestion object
          additionalProperties: true
        prominence:
          type: string
          description: |
            The level of visual distinction that should be given to a result.
          x-enumDescriptions:
            HERO: A high-confidence result that should feature prominently on the page.
            PROMOTED: May not be the best result but should be given additional visual distinction.
            STANDARD: Should not be distinct from any other results.
          enum:
            - HERO
            - PROMOTED
            - STANDARD
        attachmentContext:
          type: string
          description: Additional context for the relationship between the result and the document it's attached to.
        pins:
          type: array
          description: A list of pins associated with this search result.
          items:
            type: object
            properties:
              queries:
                type: array
                description: The query strings for which the pinned result will show.
                items:
                  type: string
              audienceFilters:
                type: array
                description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                items:
                  type: object
                  description: FacetFilter object
                  additionalProperties: true
              id:
                type: string
                description: The opaque id of the pin.
              documentId:
                type: string
                description: The document which should be a pinned result.
              attribution:
                type: object
                description: Person object
                additionalProperties: true
              updatedBy:
                type: object
                description: Person object
                additionalProperties: true
              createTime:
                type: string
                format: date-time
              updateTime:
                type: string
                format: date-time
            required:
              - documentId
    PersonTeam:
      description: Use `id` if you index teams via Glean, and use `name` and `externalLink` if you want to use your own team pages
      properties:
        id:
          type: string
          description: Unique identifier
        name:
          type: string
          description: Team name
        externalLink:
          type: string
          format: uri
          description: Link to a team page on the internet or your company's intranet
        relationship:
          type: string
          description: The team member's relationship to the team. This defaults to MEMBER if not set.
          default: MEMBER
          enum:
            - MEMBER
            - MANAGER
            - LEAD
            - POINT_OF_CONTACT
            - OTHER
        joinDate:
          type: string
          format: date-time
          description: The team member's start date
      type: object
    StructuredLocation:
      type: object
      description: Detailed location with information about country, state, city etc.
      properties:
        deskLocation:
          type: string
          description: Desk number.
        timezone:
          type: string
          description: Location's timezone, e.g. UTC, PST.
        address:
          type: string
          description: Office address or name.
        city:
          type: string
          description: Name of the city.
        state:
          type: string
          description: State code.
        region:
          type: string
          description: Region information, e.g. NORAM, APAC.
        zipCode:
          type: string
          description: ZIP Code for the address.
        country:
          type: string
          description: Country name.
        countryCode:
          type: string
          description: Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA.
    SocialNetwork:
      required:
        - name
        - profileUrl
      properties:
        name:
          type: string
          description: Possible values are "twitter", "linkedin".
        profileName:
          type: string
          description: Human-readable profile name.
        profileUrl:
          type: string
          format: url
          description: Link to profile.
      type: object
    DatasourceProfile:
      required:
        - datasource
        - handle
      properties:
        datasource:
          type: string
          example: github
          description: The datasource the profile is of.
        handle:
          type: string
          description: The display name of the entity in the given datasource.
        url:
          type: string
          description: URL to view the entity's profile.
        nativeAppUrl:
          type: string
          description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
        isUserGenerated:
          type: boolean
          description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
      type: object
    QuerySuggestionList:
      type: object
      description: QuerySuggestionList object
      additionalProperties: true
    PersonDistance:
      required:
        - name
        - obfuscatedId
        - distance
      properties:
        name:
          type: string
          description: The display name.
        obfuscatedId:
          type: string
          description: An opaque identifier that can be used to request metadata for a Person.
        distance:
          type: number
          format: float
          description: Distance to person, refer to PeopleDistance pipeline on interpretation of the value.
      type: object
    InviteInfo:
      description: Information regarding the invite status of a person.
      properties:
        signUpTime:
          type: string
          format: date-time
          description: The time this person signed up in ISO format (ISO 8601).
        invites:
          type: array
          description: Latest invites received by the user for each channel
          items:
            description: Information regarding the invite status of a person for a particular channel.
            properties:
              channel:
                type: string
                enum:
                  - COMMUNICATION_CHANNEL_EMAIL
                  - COMMUNICATION_CHANNEL_SLACK
              isAutoInvite:
                description: Bit that tracks if this invite was automatically sent or user-sent
                type: boolean
              inviter:
                type: object
                description: Person object
                additionalProperties: true
              inviteTime:
                type: string
                format: date-time
                description: The time this person was invited in ISO format (ISO 8601).
              reminderTime:
                type: string
                format: date-time
                description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
            type: object
        inviter:
          type: object
          description: Person object
          additionalProperties: true
        inviteTime:
          deprecated: true
          type: string
          format: date-time
          description: The time this person was invited in ISO format (ISO 8601).
        reminderTime:
          deprecated: true
          type: string
          format: date-time
          description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
      type: object
    Permissions:
      description: |-
        Describes the permissions levels that a user has for permissioned features. When the client sends this, Permissions.read and Permissions.write are the additional permissions granted to a user on top of what they have via their roles.
        When the server sends this, Permissions.read and Permissions.write are the complete (merged) set of permissions the user has, and Permissions.roles is just for display purposes.
      properties:
        canAdminSearch:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user has access to /adminsearch
        canAdminClientApiGlobalTokens:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user can administrate client API tokens with global scope
        canDlp:
          type: boolean
          description: TODO--deprecate in favor of the read and write properties. True if the user has access to data loss prevention (DLP) features
        read:
          description: Describes the read permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
          additionalProperties:
            type: array
            description: List of read permissions (for different scopes but same feature)
            items:
              $ref: '#/components/schemas/ReadPermission'
        write:
          description: Describes the write permissions levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
          additionalProperties:
            type: array
            description: List of write permissions (for different scopes but same feature)
            items:
              $ref: '#/components/schemas/WritePermission'
        grant:
          description: Describes the grant permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
          additionalProperties:
            type: array
            description: List of grant permissions (for different scopes but same feature)
            items:
              $ref: '#/components/schemas/GrantPermission'
        role:
          type: string
          description: The roleId of the canonical role a user has. The displayName is equal to the roleId.
        roles:
          type: array
          description: The roleIds of the roles a user has.
          items:
            type: string
      type: object
    CustomFieldData:
      required:
        - label
        - values
        - displayable
      properties:
        label:
          type: string
          description: A user-facing label for this field.
        values:
          type: array
          items:
            oneOf:
              - properties:
                  strText:
                    type: string
                    description: Text field for string value.
                type: object
              - properties:
                  urlAnchor:
                    type: string
                    description: Anchor text for hyperlink.
                  urlLink:
                    type: string
                    description: Link for this URL.
                type: object
              - properties:
                  person:
                    type: object
                    description: Person object
                    additionalProperties: true
                type: object
        displayable:
          type: boolean
          description: Determines whether the client should display this custom field
          default: true
      type: object
    AnonymousEvent:
      description: A generic, light-weight calendar event.
      type: object
      properties:
        time:
          required:
            - start
            - end
          properties:
            start:
              type: string
              description: The RFC3339 timestamp formatted start time of this event.
            end:
              type: string
              description: The RFC3339 timestamp formatted end time of this event.
          type: object
        eventType:
          description: The nature of the event, for example "out of office".
          type: string
          enum:
            - DEFAULT
            - OUT_OF_OFFICE
    Badge:
      type: object
      description: Displays a user's accomplishment or milestone
      example:
        key: deployment_name_new_hire
        displayName: New hire
        iconConfig:
          color: '#343CED'
          key: person_icon
          iconType: GLYPH
          name: user
      properties:
        key:
          type: string
          description: An auto generated unique identifier.
        displayName:
          type: string
          description: The badge name displayed to users
        iconConfig:
          description: Defines how to render an icon
          example:
            color: '#343CED'
            key: person_icon
            iconType: GLYPH
            name: user
          properties:
            generatedBackgroundColorKey:
              type: string
            backgroundColor:
              type: string
            color:
              type: string
            key:
              type: string
            iconType:
              enum:
                - COLLECTION
                - CUSTOM
                - DATASOURCE
                - DATASOURCE_INSTANCE
                - FAVICON
                - FILE_TYPE
                - GENERATED_BACKGROUND
                - GLYPH
                - MIME_TYPE
                - NO_ICON
                - PERSON
                - REACTIONS
                - URL
            masked:
              type: boolean
              description: Whether the icon should be masked based on current theme.
            name:
              type: string
              description: The name of the icon if applicable, e.g. the glyph name for `IconType.GLYPH` icons.
            url:
              type: string
              description: The URL to an image to be displayed if applicable, e.g. the URL for `iconType.URL` icons.
          type: object
        pinned:
          type: boolean
          description: The badge should be shown on the PersonAttribution
    Customer:
      required:
        - id
        - company
      properties:
        id:
          type: string
          description: Unique identifier.
        domains:
          type: array
          description: Link to company's associated website domains.
          items:
            type: string
        company:
          required:
            - name
          properties:
            name:
              type: string
              description: User-friendly display name.
            profileUrl:
              type: string
              description: Link to internal company company profile.
            websiteUrls:
              type: array
              description: Link to company's associated websites.
              items:
                type: string
            logoUrl:
              type: string
              description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
            location:
              type: string
              description: User facing string representing the company's location.
              example: New York City
            phone:
              type: string
              description: Phone number as a number string.
            fax:
              type: string
              description: Fax number as a number string.
            industry:
              type: string
              description: User facing string representing the company's industry.
              example: Finances
            annualRevenue:
              type: number
              format: double
              description: Average company's annual revenue for reference.
            numberOfEmployees:
              type: integer
              format: int64
              description: Average company's number of employees for reference.
            stockSymbol:
              type: string
              description: Company's stock symbol if company is public.
            foundedDate:
              type: string
              format: date
              description: The date when the company was founded.
            about:
              type: string
              description: User facing description of company.
              example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
          type: object
        documentCounts:
          type: object
          description: A map of {string, int} pairs representing counts of each document type associated with this customer.
          additionalProperties:
            type: integer
        poc:
          type: array
          description: A list of POC for company.
          items:
            type: object
            description: Person object
            additionalProperties: true
        metadata:
          properties:
            datasourceId:
              type: string
              description: The user visible id of the salesforce customer account.
            customData:
              type: object
              description: CustomData object
              additionalProperties: true
          type: object
        mergedCustomers:
          type: array
          description: A list of Customers.
          items:
            type: object
            description: Customer object
            additionalProperties: true
        startDate:
          type: string
          format: date
          description: The date when the interaction with customer started.
        contractAnnualRevenue:
          type: number
          format: double
          description: Average contract annual revenue with that customer.
        notes:
          type: string
          description: User facing (potentially generated) notes about company.
          example: CIO is interested in trying out the product.
      type: object
    Team:
      type: object
      description: PermissionedObject object
      properties:
        relatedObjects:
          type: object
          description: A list of objects related to a source object.
          additionalProperties:
            $ref: '#/components/schemas/RelatedObjectEdge'
        id:
          type: string
          description: Unique identifier
        name:
          type: string
          description: Team name
        description:
          type: string
          description: A description of the team
        businessUnit:
          type: string
          description: Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
        department:
          type: string
          description: An organizational unit where everyone has a similar task, e.g. `Engineering`.
        photoUrl:
          type: string
          format: url
          description: A link to the team's photo.
        bannerUrl:
          type: string
          format: url
          description: A link to the team's banner photo.
        externalLink:
          type: string
          format: uri
          description: Link to a team page on the internet or your company's intranet
        members:
          type: array
          description: The members on this team
          items:
            required:
              - person
            type: object
            description: Metadata about the relationship of a person to a team.
            properties:
              person:
                type: object
                description: Person object
                additionalProperties: true
              relationship:
                type: string
                description: The team member's relationship to the team. This defaults to MEMBER if not set.
                default: MEMBER
                enum:
                  - MEMBER
                  - MANAGER
                  - LEAD
                  - POINT_OF_CONTACT
                  - OTHER
              customRelationshipStr:
                type: string
                description: Displayed name for the relationship if relationship is set to `OTHER`.
              joinDate:
                type: string
                format: date-time
                description: The team member's start date
        memberCount:
          type: integer
          description: Number of members on this team (recursive; includes all individuals that belong to this team, and all individuals that belong to a subteam within this team)
        emails:
          type: array
          description: The emails for this team
          items:
            properties:
              email:
                type: string
                format: email
                description: An email address
              type:
                type: string
                enum:
                  - PRIMARY
                  - SECONDARY
                  - ONCALL
                  - OTHER
                default: OTHER
              isUserGenerated:
                type: boolean
                description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
            type: object
        customFields:
          type: array
          description: Customizable fields for additional team information.
          items:
            required:
              - label
              - values
              - displayable
            properties:
              label:
                type: string
                description: A user-facing label for this field.
              values:
                type: array
                items:
                  oneOf:
                    - properties:
                        strText:
                          type: string
                          description: Text field for string value.
                      type: object
                    - properties:
                        urlAnchor:
                          type: string
                          description: Anchor text for hyperlink.
                        urlLink:
                          type: string
                          description: Link for this URL.
                      type: object
                    - properties:
                        person:
                          type: object
                          description: Person object
                          additionalProperties: true
                      type: object
              displayable:
                type: boolean
                description: Determines whether the client should display this custom field
                default: true
            type: object
        datasourceProfiles:
          type: array
          description: The datasource profiles of the team
          items:
            required:
              - datasource
              - handle
            properties:
              datasource:
                type: string
                example: github
                description: The datasource the profile is of.
              handle:
                type: string
                description: The display name of the entity in the given datasource.
              url:
                type: string
                description: URL to view the entity's profile.
              nativeAppUrl:
                type: string
                description: A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...).
              isUserGenerated:
                type: boolean
                description: For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)
            type: object
        datasource:
          type: string
          description: the data source of the team, e.g. GDRIVE
        createdFrom:
          type: string
          description: For teams created from docs, the doc title. Otherwise empty.
        lastUpdatedAt:
          type: string
          format: date-time
          description: when this team was last updated.
        status:
          type: string
          description: whether this team is fully processed or there are still unprocessed operations that'll affect it
          default: PROCESSED
          enum:
            - PROCESSED
            - QUEUED_FOR_CREATION
            - QUEUED_FOR_DELETION
        canBeDeleted:
          type: boolean
          description: can this team be deleted. Some manually ingested teams like GCS_CSV or PUSH_API cannot
          default: true
        loggingId:
          type: string
          description: The logging id of the team used in scrubbed logs, client analytics, and metrics.
      required:
        - id
        - name
    CustomEntity:
      description: PermissionedObject object
      type: object
      properties:
        id:
          type: string
          description: Unique identifier.
        title:
          type: string
          description: Title or name of the custom entity.
        datasource:
          type: string
          description: The datasource the custom entity is from.
        objectType:
          type: string
          description: The type of the entity. Interpretation is specific to each datasource
        metadata:
          properties:
            customData:
              type: object
              description: CustomData object
              additionalProperties: true
          type: object
        roles:
          type: array
          description: A list of user roles for the custom entity explicitly granted by the owner.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
    Answer:
      type: object
      description: PermissionedObject object
      properties:
        id:
          type: integer
          description: The opaque ID of the Answer.
          example: 3
        docId:
          type: string
          description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
          example: ANSWERS_answer_3
        question:
          type: string
          example: Why is the sky blue?
        questionVariations:
          type: array
          description: Additional ways of phrasing this question.
          items:
            type: string
        bodyText:
          type: string
          description: The plain text answer to the question.
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
        boardId:
          type: integer
          description: The parent board ID of this Answer, or 0 if it's a floating Answer.
        audienceFilters:
          type: array
          description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
        addedRoles:
          type: array
          description: A list of user roles for the answer added by the owner.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        removedRoles:
          type: array
          description: A list of user roles for the answer removed by the owner.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        roles:
          type: array
          description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        sourceDocumentSpec:
          type: object
          description: DocumentSpec object
          additionalProperties: true
        sourceType:
          type: string
          enum:
            - DOCUMENT
            - ASSISTANT
        combinedAnswerText:
          type: object
          properties:
            text:
              type: string
              example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
            structuredList:
              type: array
              description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
              items:
                properties:
                  link:
                    type: string
                    example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
                  document:
                    type: object
                    description: Document object
                    additionalProperties: true
                  text:
                    type: string
                    example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
                  structuredResult:
                    type: object
                    description: StructuredResult object
                    additionalProperties: true
                type: object
          required:
            - text
        likes:
          required:
            - likedBy
            - likedByUser
            - numLikes
          properties:
            likedBy:
              type: array
              items:
                properties:
                  user:
                    type: object
                    description: Person object
                    additionalProperties: true
                  createTime:
                    type: string
                    format: date-time
                    description: The time the user liked the answer in ISO format (ISO 8601).
                type: object
            likedByUser:
              type: boolean
              description: Whether the user in context liked the answer.
            numLikes:
              type: integer
              description: The total number of likes for the answer.
          type: object
        author:
          type: object
          description: Person object
          additionalProperties: true
        createTime:
          type: string
          format: date-time
          description: The time the answer was created in ISO format (ISO 8601).
        updateTime:
          type: string
          format: date-time
          description: The time the answer was last updated in ISO format (ISO 8601).
        updatedBy:
          type: object
          description: Person object
          additionalProperties: true
        verification:
          required:
            - state
          properties:
            state:
              type: string
              enum:
                - UNVERIFIED
                - VERIFIED
                - DEPRECATED
              description: The verification state for the document.
            metadata:
              required:
                - documentId
              properties:
                lastVerifier:
                  type: object
                  description: Person object
                  additionalProperties: true
                lastVerificationTs:
                  type: integer
                  description: The unix timestamp of the verification (in seconds since epoch UTC).
                expirationTs:
                  type: integer
                  description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
                document:
                  type: object
                  description: Document object
                  additionalProperties: true
                reminders:
                  type: array
                  description: Info about all outstanding verification reminders for the document if exists.
                  items:
                    required:
                      - assignee
                      - remindAt
                    properties:
                      assignee:
                        type: object
                        description: Person object
                        additionalProperties: true
                      requestor:
                        type: object
                        description: Person object
                        additionalProperties: true
                      remindAt:
                        type: integer
                        description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                      createdAt:
                        type: integer
                        description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                      reason:
                        type: string
                        description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                    type: object
                lastReminder:
                  required:
                    - assignee
                    - remindAt
                  properties:
                    assignee:
                      type: object
                      description: Person object
                      additionalProperties: true
                    requestor:
                      type: object
                      description: Person object
                      additionalProperties: true
                    remindAt:
                      type: integer
                      description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
                    createdAt:
                      type: integer
                      description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
                    reason:
                      type: string
                      description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
                  type: object
                visitorCount:
                  type: array
                  description: Number of visitors to the document during included time periods.
                  items:
                    required:
                      - count
                    properties:
                      count:
                        type: integer
                        description: The counter value
                      period:
                        properties:
                          minDaysFromNow:
                            type: integer
                            description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                            deprecated: true
                          maxDaysFromNow:
                            type: integer
                            description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                            deprecated: true
                          start:
                            type: object
                            description: TimePoint object
                            additionalProperties: true
                          end:
                            type: object
                            description: TimePoint object
                            additionalProperties: true
                        type: object
                      org:
                        type: string
                        description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
                    type: object
                candidateVerifiers:
                  type: array
                  description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
                  items:
                    type: object
                    description: Person object
                    additionalProperties: true
              type: object
          type: object
        board:
          type: object
          description: PermissionedObject object
          properties:
            name:
              type: string
              description: The unique name of the Collection.
            description:
              type: string
              description: A brief summary of the Collection's contents.
            addedRoles:
              type: array
              description: A list of added user roles for the Collection.
              items:
                type: object
                description: UserRoleSpecification object
                additionalProperties: true
            removedRoles:
              type: array
              description: A list of removed user roles for the Collection.
              items:
                type: object
                description: UserRoleSpecification object
                additionalProperties: true
            audienceFilters:
              type: array
              description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
              items:
                type: object
                description: FacetFilter object
                additionalProperties: true
            id:
              type: integer
              description: The unique ID of the Answer Board.
            createTime:
              type: string
              format: date-time
            updateTime:
              type: string
              format: date-time
            creator:
              type: object
              description: Person object
              additionalProperties: true
            updatedBy:
              type: object
              description: Person object
              additionalProperties: true
            itemCount:
              type: integer
              description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
            roles:
              type: array
              description: A list of user roles for the Answer Board.
              items:
                type: object
                description: UserRoleSpecification object
                additionalProperties: true
          required:
            - name
            - id
            - description
        collections:
          type: array
          description: The collections to which the answer belongs.
          items:
            type: object
            description: Flattened Collection
            properties:
              name:
                type: string
                description: The unique name of the Collection.
              description:
                type: string
                description: A brief summary of the Collection's contents.
              addedRoles:
                type: array
                description: A list of added user roles for the Collection.
                items:
                  type: object
                  description: UserRoleSpecification object
                  additionalProperties: true
              removedRoles:
                type: array
                description: A list of removed user roles for the Collection.
                items:
                  type: object
                  description: UserRoleSpecification object
                  additionalProperties: true
              audienceFilters:
                type: array
                description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
                items:
                  type: object
                  description: FacetFilter object
                  additionalProperties: true
              icon:
                type: string
                description: The emoji icon of this Collection.
              adminLocked:
                type: boolean
                description: Indicates whether edits are allowed for everyone or only admins.
              parentId:
                type: integer
                description: The parent of this Collection, or 0 if it's a top-level Collection.
              thumbnail:
                properties:
                  photoId:
                    type: string
                    description: Photo id if the thumbnail is from splash.
                  url:
                    type: string
                    description: Thumbnail URL. This can be user provided image and/or from downloaded images hosted by Glean.
                type: object
              allowedDatasource:
                type: string
                description: The datasource type this Collection can hold.
              permissions:
                type: object
                description: Flattened ObjectPermissions
                properties:
                  write:
                    type: object
                    description: Describes the write permissions levels that a user has for a specific feature
                    properties:
                      scopeType:
                        type: string
                        description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                        enum:
                          - GLOBAL
                          - OWN
                        properties: {}
                      create:
                        type: boolean
                        description: True if user has create permission for this feature and scope
                      update:
                        type: boolean
                        description: True if user has update permission for this feature and scope
                      delete:
                        type: boolean
                        description: True if user has delete permission for this feature and scope
              id:
                type: integer
                description: The unique ID of the Collection.
              createTime:
                type: string
                format: date-time
              updateTime:
                type: string
                format: date-time
              creator:
                type: object
                description: Person object
                additionalProperties: true
              updatedBy:
                type: object
                description: Person object
                additionalProperties: true
              itemCount:
                type: integer
                description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
              childCount:
                type: integer
                description: The number of children Collections. Separated from the actual children so we can grab the count without children.
              items:
                type: array
                description: The items in this Collection.
                items:
                  type: object
                  description: CollectionItem object
                  additionalProperties: true
              pinMetadata:
                required:
                  - pinnedCategories
                  - eligibleCategoriesForPinning
                properties:
                  existingPins:
                    type: array
                    description: List of targets this Collection is pinned to.
                    items:
                      type: object
                      description: CollectionPinTarget object
                      additionalProperties: true
                  eligiblePins:
                    type: array
                    description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                    items:
                      required:
                        - id
                        - target
                      properties:
                        id:
                          type: integer
                          description: The ID of the Collection.
                        target:
                          type: object
                          description: CollectionPinTarget object
                          additionalProperties: true
                      type: object
                type: object
              shortcuts:
                type: array
                description: The names of the shortcuts (Go Links) that point to this Collection.
                items:
                  type: string
              children:
                type: array
                description: The children Collections of this Collection.
                items:
                  type: object
                  description: Collection object
                  additionalProperties: true
              roles:
                type: array
                description: A list of user roles for the Collection.
                items:
                  type: object
                  description: UserRoleSpecification object
                  additionalProperties: true
        documentCategory:
          type: string
          description: The document's document_category(.proto).
        sourceDocument:
          type: object
          description: Document object
          additionalProperties: true
      required:
        - id
    ExtractedQnA:
      properties:
        heading:
          type: string
          description: Heading text that was matched to produce this result.
        question:
          type: string
          description: Question text that was matched to produce this result.
        questionResult:
          type: object
          description: Flattened SearchResult
          example:
            snippets:
              - snippet: snippet
                mimeType: mimeType
            metadata:
              container: container
              createTime: '2000-01-23T04:56:07.000Z'
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: '2000-01-23T04:56:07.000Z'
              mimeType: mimeType
              objectType: objectType
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
              - missingTerm: container
                query: container
          properties:
            structuredResults:
              type: array
              description: An array of entities in the work graph retrieved via a data request.
              items:
                type: object
                description: StructuredResult object
                additionalProperties: true
            trackingToken:
              type: string
              description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
            document:
              type: object
              description: Document object
              additionalProperties: true
            title:
              type: string
            url:
              type: string
            nativeAppUrl:
              type: string
              description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
            snippets:
              type: array
              description: Text content from the result document which contains search query terms, if available.
              items:
                type: object
                description: SearchResultSnippet object
                additionalProperties: true
            fullText:
              type: string
              description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
            fullTextList:
              type: array
              description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
              items:
                type: string
            relatedResults:
              type: array
              description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
              items:
                type: object
                description: RelatedDocuments object
                additionalProperties: true
            clusteredResults:
              type: array
              description: A list of results that should be displayed as associated with this result.
              items:
                type: object
                description: SearchResult object
                additionalProperties: true
            allClusteredResults:
              type: array
              description: A list of results that should be displayed as associated with this result.
              items:
                type: object
                description: ClusterGroup object
                additionalProperties: true
            attachmentCount:
              type: integer
              description: The total number of attachments.
            attachments:
              type: array
              description: A (potentially partial) list of results representing documents attached to the main result document.
              items:
                type: object
                description: SearchResult object
                additionalProperties: true
            backlinkResults:
              type: array
              description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
              items:
                type: object
                description: SearchResult object
                additionalProperties: true
            clusterType:
              type: string
              description: The reason for inclusion of clusteredResults.
              enum:
                - SIMILAR
                - FRESHNESS
                - TITLE
                - CONTENT
                - NONE
                - THREAD_REPLY
                - THREAD_ROOT
                - PREFIX
                - SUFFIX
            mustIncludeSuggestions:
              type: object
              description: QuerySuggestionList object
              additionalProperties: true
            querySuggestion:
              type: object
              description: QuerySuggestion object
              additionalProperties: true
            prominence:
              type: string
              description: |
                The level of visual distinction that should be given to a result.
              x-enumDescriptions:
                HERO: A high-confidence result that should feature prominently on the page.
                PROMOTED: May not be the best result but should be given additional visual distinction.
                STANDARD: Should not be distinct from any other results.
              enum:
                - HERO
                - PROMOTED
                - STANDARD
            attachmentContext:
              type: string
              description: Additional context for the relationship between the result and the document it's attached to.
            pins:
              type: array
              description: A list of pins associated with this search result.
              items:
                type: object
                properties:
                  queries:
                    type: array
                    description: The query strings for which the pinned result will show.
                    items:
                      type: string
                  audienceFilters:
                    type: array
                    description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                    items:
                      type: object
                      description: FacetFilter object
                      additionalProperties: true
                  id:
                    type: string
                    description: The opaque id of the pin.
                  documentId:
                    type: string
                    description: The document which should be a pinned result.
                  attribution:
                    type: object
                    description: Person object
                    additionalProperties: true
                  updatedBy:
                    type: object
                    description: Person object
                    additionalProperties: true
                  createTime:
                    type: string
                    format: date-time
                  updateTime:
                    type: string
                    format: date-time
                required:
                  - documentId
      type: object
    Meeting:
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        url:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        attendees:
          properties:
            people:
              type: array
              description: Full details of some of the attendees of this event
              items:
                required:
                  - person
                properties:
                  isOrganizer:
                    type: boolean
                    description: Whether or not this attendee is an organizer.
                  isInGroup:
                    type: boolean
                    description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
                  person:
                    type: object
                    description: Person object
                    additionalProperties: true
                  groupAttendees:
                    type: array
                    description: If this attendee is a group, represents the list of individual attendees in the group.
                    items:
                      type: object
                      description: CalendarAttendee object
                      additionalProperties: true
                  responseStatus:
                    type: string
                    enum:
                      - ACCEPTED
                      - DECLINED
                      - NO_RESPONSE
                      - TENTATIVE
                type: object
            isLimit:
              type: boolean
              description: Whether the total count of the people returned is at the retrieval limit.
            total:
              type: integer
              description: Total number of attendees in this event.
            numAccepted:
              type: integer
              description: Total number of attendees who have accepted this event.
            numDeclined:
              type: integer
              description: Total number of attendees who have declined this event.
            numNoResponse:
              type: integer
              description: Total number of attendees who have not responded to this event.
            numTentative:
              type: integer
              description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
          type: object
      type: object
    AppResult:
      required:
        - datasource
      properties:
        datasource:
          type: string
          description: The app or other repository type this represents
        docType:
          type: string
          description: The datasource-specific type of the document (e.g. for Jira issues, this is the issue type such as Bug or Feature Request).
        mimeType:
          type: string
          description: Mimetype is used to differentiate between sub applications from a datasource (e.g. Sheets, Docs from Gdrive)
        iconUrl:
          type: string
          description: If there is available icon URL.
      type: object
    AnswerBoard:
      type: object
      description: PermissionedObject object
      properties:
        name:
          type: string
          description: The unique name of the Collection.
        description:
          type: string
          description: A brief summary of the Collection's contents.
        addedRoles:
          type: array
          description: A list of added user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        removedRoles:
          type: array
          description: A list of removed user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        audienceFilters:
          type: array
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
        id:
          type: integer
          description: The unique ID of the Answer Board.
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        creator:
          type: object
          description: Person object
          additionalProperties: true
        updatedBy:
          type: object
          description: Person object
          additionalProperties: true
        itemCount:
          type: integer
          description: The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items.
        roles:
          type: array
          description: A list of user roles for the Answer Board.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
      required:
        - name
        - id
        - description
    Code:
      example:
        repoName: scio
        fileName: README.md
        matches:
          - lineNumber: 1
            content: Welcome to the beginning
            ranges: []
          - lineNumber: 2
            content: Second line of the file
            ranges: []
          - lineNumber: 3
            content: hello world hello world
            ranges:
              - startindex: 0
                endIndex: 5
              - startIndex: 12
                endIndex: 17
      properties:
        repoName:
          type: string
        fileName:
          type: string
        fileUrl:
          type: string
        lines:
          type: array
          items:
            properties:
              lineNumber:
                type: integer
              content:
                type: string
              ranges:
                type: array
                description: Index ranges depicting matched sections of the line
                items:
                  type: object
                  description: TextRange object
                  additionalProperties: true
            type: object
        isLastMatch:
          type: boolean
          description: Last file match for a repo
      type: object
    RelatedQuestion:
      properties:
        question:
          type: string
          description: The text of the related question
        answer:
          type: string
          description: The answer for the related question
        ranges:
          type: array
          description: Subsections of the answer string to which some special formatting should be applied (eg. bold)
          items:
            type: object
            description: TextRange object
            additionalProperties: true
      type: object
    Disambiguation:
      type: object
      description: A disambiguation between multiple entities with the same name
      properties:
        name:
          type: string
          description: Name of the ambiguous entity
        id:
          type: string
          description: The unique id of the entity in the knowledge graph
        type:
          type: string
          description: The type of entity.
          x-include-enum-class-prefix: true
          enum:
            - PERSON
            - PROJECT
            - CUSTOMER
    FacetFilter:
      type: object
      description: FacetFilter object
      additionalProperties: true
    FacetFilterSet:
      type: object
      description: FacetFilterSet object
      additionalProperties: true
    FacetBucketFilter:
      type: object
      description: FacetBucketFilter object
      additionalProperties: true
    AuthToken:
      type: object
      description: AuthToken object
      additionalProperties: true
    displayName:
      type: object
      description: displayName object
      additionalProperties: true
    logoUrl:
      type: object
      description: logoUrl object
      additionalProperties: true
    objectName:
      type: object
      description: objectName object
      additionalProperties: true
    PersonObject:
      type: object
      description: PersonObject object
      additionalProperties: true
    AuthConfig:
      type: object
      description: AuthConfig object
      additionalProperties: true
    PossibleValue:
      type: object
      description: Possible value of a specific parameter
      properties:
        value:
          type: string
          description: Possible value
        label:
          type: string
          description: User-friendly label associated with the value
    PinDocumentMutableProperties:
      properties:
        queries:
          type: array
          description: The query strings for which the pinned result will show.
          items:
            type: string
        audienceFilters:
          type: array
          description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
      type: object
    CollectionMutableProperties:
      type: object
      properties:
        name:
          type: string
          description: The unique name of the Collection.
        description:
          type: string
          description: A brief summary of the Collection's contents.
        addedRoles:
          type: array
          description: A list of added user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        removedRoles:
          type: array
          description: A list of removed user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        audienceFilters:
          type: array
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
        icon:
          type: string
          description: The emoji icon of this Collection.
        adminLocked:
          type: boolean
          description: Indicates whether edits are allowed for everyone or only admins.
        parentId:
          type: integer
          description: The parent of this Collection, or 0 if it's a top-level Collection.
        thumbnail:
          type: object
          description: Thumbnail object
          additionalProperties: true
        allowedDatasource:
          type: string
          description: The datasource type this Collection can hold.
      required:
        - name
    PermissionedObject:
      type: object
      description: PermissionedObject object
      additionalProperties: true
    CollectionItem:
      type: object
      properties:
        name:
          type: string
          description: The optional name of the Collection item.
        description:
          type: string
          description: A helpful description of why this CollectionItem is in the Collection that it's in.
        icon:
          type: string
          description: The emoji icon for this CollectionItem. Only used for Text type items.
        collectionId:
          type: integer
          description: The Collection ID of the Collection that this CollectionItem belongs in.
        documentId:
          type: string
          description: If this CollectionItem is indexed, the Glean Document ID of that document.
        url:
          type: string
          description: The URL of this CollectionItem.
        itemId:
          type: string
          description: Unique identifier for the item within the Collection it belongs to.
        createdBy:
          type: object
          description: Person object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
          description: Unix timestamp for when the item was first added (in seconds since epoch UTC).
        document:
          type: object
          description: Document object
          additionalProperties: true
        shortcut:
          type: object
          description: PermissionedObject object
          properties:
            id:
              type: integer
              description: The opaque id of the user generated content.
            inputAlias:
              type: string
              description: Link text following go/ prefix as entered by the user.
            destinationUrl:
              type: string
              description: Destination URL for the shortcut.
            destinationDocumentId:
              type: string
              description: Glean Document ID for the URL, if known.
            description:
              type: string
              description: A short, plain text blurb to help people understand the intent of the shortcut.
            unlisted:
              type: boolean
              description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
            urlTemplate:
              type: string
              description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
            addedRoles:
              type: array
              description: A list of user roles added for the Shortcut.
              items:
                type: object
                description: UserRoleSpecification object
                additionalProperties: true
            removedRoles:
              type: array
              description: A list of user roles removed for the Shortcut.
              items:
                type: object
                description: UserRoleSpecification object
                additionalProperties: true
            createdBy:
              type: object
              description: Person object
              additionalProperties: true
            createTime:
              type: string
              format: date-time
              description: The time the shortcut was created in ISO format (ISO 8601).
            updatedBy:
              type: object
              description: Person object
              additionalProperties: true
            updateTime:
              type: string
              format: date-time
              description: The time the shortcut was updated in ISO format (ISO 8601).
            destinationDocument:
              type: object
              description: Document object
              additionalProperties: true
            intermediateUrl:
              type: string
              description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
            viewPrefix:
              type: string
              description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
            isExternal:
              type: boolean
              description: Indicates whether a shortcut is native or external.
            editUrl:
              type: string
              description: The URL using which the user can access the edit page of the shortcut.
            alias:
              type: string
              description: canonical link text following go/ prefix where hyphen/underscore is removed.
            title:
              type: string
              description: Title for the Go Link
            roles:
              type: array
              description: A list of user roles for the Go Link.
              items:
                type: object
                description: UserRoleSpecification object
                additionalProperties: true
          required:
            - inputAlias
        collection:
          type: object
          description: Flattened Collection
          properties:
            name:
              type: string
              description: The unique name of the Collection.
            description:
              type: string
              description: A brief summary of the Collection's contents.
            addedRoles:
              type: array
              description: A list of added user roles for the Collection.
              items:
                type: object
                description: UserRoleSpecification object
                additionalProperties: true
            removedRoles:
              type: array
              description: A list of removed user roles for the Collection.
              items:
                type: object
                description: UserRoleSpecification object
                additionalProperties: true
            audienceFilters:
              type: array
              description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
              items:
                type: object
                description: FacetFilter object
                additionalProperties: true
            icon:
              type: string
              description: The emoji icon of this Collection.
            adminLocked:
              type: boolean
              description: Indicates whether edits are allowed for everyone or only admins.
            parentId:
              type: integer
              description: The parent of this Collection, or 0 if it's a top-level Collection.
            thumbnail:
              type: object
              description: Thumbnail object
              additionalProperties: true
            allowedDatasource:
              type: string
              description: The datasource type this Collection can hold.
            permissions:
              type: object
              description: Flattened ObjectPermissions
              properties:
                write:
                  type: object
                  description: Describes the write permissions levels that a user has for a specific feature
                  properties:
                    scopeType:
                      type: string
                      description: Describes the scope for a ReadPermission, WritePermission, or GrantPermission object
                      enum:
                        - GLOBAL
                        - OWN
                      properties: {}
                    create:
                      type: boolean
                      description: True if user has create permission for this feature and scope
                    update:
                      type: boolean
                      description: True if user has update permission for this feature and scope
                    delete:
                      type: boolean
                      description: True if user has delete permission for this feature and scope
            id:
              type: integer
              description: The unique ID of the Collection.
            createTime:
              type: string
              format: date-time
            updateTime:
              type: string
              format: date-time
            creator:
              type: object
              description: Person object
              additionalProperties: true
            updatedBy:
              type: object
              description: Person object
              additionalProperties: true
            itemCount:
              type: integer
              description: The number of items currently in the Collection. Separated from the actual items so we can grab the count without items.
            childCount:
              type: integer
              description: The number of children Collections. Separated from the actual children so we can grab the count without children.
            items:
              type: array
              description: The items in this Collection.
              items:
                type: object
                description: CollectionItem object
                additionalProperties: true
            pinMetadata:
              required:
                - pinnedCategories
                - eligibleCategoriesForPinning
              properties:
                existingPins:
                  type: array
                  description: List of targets this Collection is pinned to.
                  items:
                    type: object
                    description: CollectionPinTarget object
                    additionalProperties: true
                eligiblePins:
                  type: array
                  description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
                  items:
                    required:
                      - id
                      - target
                    properties:
                      id:
                        type: integer
                        description: The ID of the Collection.
                      target:
                        type: object
                        description: CollectionPinTarget object
                        additionalProperties: true
                    type: object
              type: object
            shortcuts:
              type: array
              description: The names of the shortcuts (Go Links) that point to this Collection.
              items:
                type: string
            children:
              type: array
              description: The children Collections of this Collection.
              items:
                type: object
                description: Collection object
                additionalProperties: true
            roles:
              type: array
              description: A list of user roles for the Collection.
              items:
                type: object
                description: UserRoleSpecification object
                additionalProperties: true
        itemType:
          type: string
          enum:
            - DOCUMENT
            - TEXT
            - URL
            - COLLECTION
      required:
        - collectionId
        - itemType
    CollectionPinnedMetadata:
      required:
        - pinnedCategories
        - eligibleCategoriesForPinning
      properties:
        existingPins:
          type: array
          description: List of targets this Collection is pinned to.
          items:
            type: object
            description: CollectionPinTarget object
            additionalProperties: true
        eligiblePins:
          type: array
          description: List of targets this Collection can be pinned to, excluding the targets this Collection is already pinned to. We also include Collection ID already is pinned to each eligible target, which will be 0 if the target has no pinned Collection.
          items:
            required:
              - id
              - target
            properties:
              id:
                type: integer
                description: The ID of the Collection.
              target:
                type: object
                description: CollectionPinTarget object
                additionalProperties: true
            type: object
      type: object
    UserRoleSpecification:
      type: object
      description: UserRoleSpecification object
      additionalProperties: true
    Reaction:
      properties:
        type:
          type: string
        count:
          type: integer
          description: The count of the reaction type on the document.
        reactors:
          type: array
          items:
            type: object
            description: Person object
            additionalProperties: true
        reactedByViewer:
          type: boolean
          description: Whether the user in context reacted with this type to the document.
      type: object
    Share:
      description: Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip
      required:
        - numDaysAgo
      properties:
        numDaysAgo:
          type: integer
          description: The number of days that has passed since the share happened
        sharer:
          type: object
          description: Person object
          additionalProperties: true
        sharingDocument:
          type: object
          description: Document object
          additionalProperties: true
      type: object
    VerificationMetadata:
      required:
        - documentId
      properties:
        lastVerifier:
          type: object
          description: Person object
          additionalProperties: true
        lastVerificationTs:
          type: integer
          description: The unix timestamp of the verification (in seconds since epoch UTC).
        expirationTs:
          type: integer
          description: The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC).
        document:
          type: object
          description: Document object
          additionalProperties: true
        reminders:
          type: array
          description: Info about all outstanding verification reminders for the document if exists.
          items:
            required:
              - assignee
              - remindAt
            properties:
              assignee:
                type: object
                description: Person object
                additionalProperties: true
              requestor:
                type: object
                description: Person object
                additionalProperties: true
              remindAt:
                type: integer
                description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
              createdAt:
                type: integer
                description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
              reason:
                type: string
                description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
            type: object
        lastReminder:
          required:
            - assignee
            - remindAt
          properties:
            assignee:
              type: object
              description: Person object
              additionalProperties: true
            requestor:
              type: object
              description: Person object
              additionalProperties: true
            remindAt:
              type: integer
              description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
            createdAt:
              type: integer
              description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
            reason:
              type: string
              description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
          type: object
        visitorCount:
          type: array
          description: Number of visitors to the document during included time periods.
          items:
            required:
              - count
            properties:
              count:
                type: integer
                description: The counter value
              period:
                properties:
                  minDaysFromNow:
                    type: integer
                    description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
                    deprecated: true
                  maxDaysFromNow:
                    type: integer
                    description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
                    deprecated: true
                  start:
                    type: object
                    description: TimePoint object
                    additionalProperties: true
                  end:
                    type: object
                    description: TimePoint object
                    additionalProperties: true
                type: object
              org:
                type: string
                description: The unit of organization over which we did the count aggregation, e.g. org (department) or company
            type: object
        candidateVerifiers:
          type: array
          description: List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions.
          items:
            type: object
            description: Person object
            additionalProperties: true
      type: object
    WritePermission:
      type: object
      description: WritePermission object
      additionalProperties: true
    Period:
      properties:
        minDaysFromNow:
          type: integer
          description: DEPRECATED - The number of days from now in the past to define upper boundary of time period.
          deprecated: true
        maxDaysFromNow:
          type: integer
          description: DEPRECATED - The number of days from now in the past to define lower boundary of time period.
          deprecated: true
        start:
          type: object
          description: TimePoint object
          additionalProperties: true
        end:
          type: object
          description: TimePoint object
          additionalProperties: true
      type: object
    UserGeneratedContentId:
      properties:
        id:
          type: integer
          description: The opaque id of the user generated content.
      type: object
    ShortcutMutableProperties:
      properties:
        inputAlias:
          type: string
          description: Link text following go/ prefix as entered by the user.
        destinationUrl:
          type: string
          description: Destination URL for the shortcut.
        destinationDocumentId:
          type: string
          description: Glean Document ID for the URL, if known.
        description:
          type: string
          description: A short, plain text blurb to help people understand the intent of the shortcut.
        unlisted:
          type: boolean
          description: Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only.
        urlTemplate:
          type: string
          description: For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL.
        addedRoles:
          type: array
          description: A list of user roles added for the Shortcut.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        removedRoles:
          type: array
          description: A list of user roles removed for the Shortcut.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
      type: object
    ShortcutMetadata:
      properties:
        createdBy:
          type: object
          description: Person object
          additionalProperties: true
        createTime:
          type: string
          format: date-time
          description: The time the shortcut was created in ISO format (ISO 8601).
        updatedBy:
          type: object
          description: Person object
          additionalProperties: true
        updateTime:
          type: string
          format: date-time
          description: The time the shortcut was updated in ISO format (ISO 8601).
        destinationDocument:
          type: object
          description: Document object
          additionalProperties: true
        intermediateUrl:
          type: string
          description: The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>.
        viewPrefix:
          type: string
          description: The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with "/". e.g. "go/" for native shortcuts.
        isExternal:
          type: boolean
          description: Indicates whether a shortcut is native or external.
        editUrl:
          type: string
          description: The URL using which the user can access the edit page of the shortcut.
      type: object
    CustomDataValue:
      properties:
        displayLabel:
          type: string
        stringValue:
          type: string
        stringListValue:
          type: array
          description: list of strings for multi-value properties
          items:
            type: string
        numberValue:
          type: number
        booleanValue:
          type: boolean
      type: object
    ClusterGroup:
      required:
        - visibleCountHint
      properties:
        clusteredResults:
          type: array
          description: A list of results that should be displayed as associated with this result.
          items:
            type: object
            description: Flattened SearchResult
            example:
              snippets:
                - snippet: snippet
                  mimeType: mimeType
              metadata:
                container: container
                createTime: '2000-01-23T04:56:07.000Z'
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: '2000-01-23T04:56:07.000Z'
                mimeType: mimeType
                objectType: objectType
              title: title
              url: https://example.com/foo/bar
              nativeAppUrl: slack://foo/bar
              mustIncludeSuggestions:
                - missingTerm: container
                  query: container
            properties:
              structuredResults:
                type: array
                description: An array of entities in the work graph retrieved via a data request.
                items:
                  type: object
                  description: StructuredResult object
                  additionalProperties: true
              trackingToken:
                type: string
                description: An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
              document:
                type: object
                description: Document object
                additionalProperties: true
              title:
                type: string
              url:
                type: string
              nativeAppUrl:
                type: string
                description: A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
              snippets:
                type: array
                description: Text content from the result document which contains search query terms, if available.
                items:
                  type: object
                  description: SearchResultSnippet object
                  additionalProperties: true
              fullText:
                type: string
                description: The full body text of the result if not already contained in the snippets. Only populated for conversation results (e.g. results from a messaging app such as Slack).
              fullTextList:
                type: array
                description: The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text. Only populated for conversation results (e.g. results from a messaging app such as Slack).
                items:
                  type: string
              relatedResults:
                type: array
                description: A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
                items:
                  type: object
                  description: RelatedDocuments object
                  additionalProperties: true
              clusteredResults:
                type: array
                description: A list of results that should be displayed as associated with this result.
                items:
                  type: object
                  description: SearchResult object
                  additionalProperties: true
              allClusteredResults:
                type: array
                description: A list of results that should be displayed as associated with this result.
                items:
                  type: object
                  description: ClusterGroup object
                  additionalProperties: true
              attachmentCount:
                type: integer
                description: The total number of attachments.
              attachments:
                type: array
                description: A (potentially partial) list of results representing documents attached to the main result document.
                items:
                  type: object
                  description: SearchResult object
                  additionalProperties: true
              backlinkResults:
                type: array
                description: A list of results that should be displayed as backlinks of this result in reverse chronological order.
                items:
                  type: object
                  description: SearchResult object
                  additionalProperties: true
              clusterType:
                type: string
                description: The reason for inclusion of clusteredResults.
                enum:
                  - SIMILAR
                  - FRESHNESS
                  - TITLE
                  - CONTENT
                  - NONE
                  - THREAD_REPLY
                  - THREAD_ROOT
                  - PREFIX
                  - SUFFIX
              mustIncludeSuggestions:
                type: object
                description: QuerySuggestionList object
                additionalProperties: true
              querySuggestion:
                type: object
                description: QuerySuggestion object
                additionalProperties: true
              prominence:
                type: string
                description: |
                  The level of visual distinction that should be given to a result.
                x-enumDescriptions:
                  HERO: A high-confidence result that should feature prominently on the page.
                  PROMOTED: May not be the best result but should be given additional visual distinction.
                  STANDARD: Should not be distinct from any other results.
                enum:
                  - HERO
                  - PROMOTED
                  - STANDARD
              attachmentContext:
                type: string
                description: Additional context for the relationship between the result and the document it's attached to.
              pins:
                type: array
                description: A list of pins associated with this search result.
                items:
                  description: PinDocumentMutableProperties object
                  type: object
                  properties:
                    id:
                      type: string
                      description: The opaque id of the pin.
                    documentId:
                      type: string
                      description: The document which should be a pinned result.
                    audienceFilters:
                      type: array
                      description: Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
                      items:
                        type: object
                        description: FacetFilter object
                        additionalProperties: true
                    attribution:
                      type: object
                      description: Person object
                      additionalProperties: true
                    updatedBy:
                      type: object
                      description: Person object
                      additionalProperties: true
                    createTime:
                      type: string
                      format: date-time
                    updateTime:
                      type: string
                      format: date-time
                  required:
                    - documentId
        clusterType:
          type: string
          description: The reason for inclusion of clusteredResults.
          enum:
            - SIMILAR
            - FRESHNESS
            - TITLE
            - CONTENT
            - NONE
            - THREAD_REPLY
            - THREAD_ROOT
            - PREFIX
            - SUFFIX
        visibleCountHint:
          type: integer
          description: The default number of results to display before truncating and showing a "see more" link
      type: object
    ClusterTypeEnum:
      type: string
      description: The reason for inclusion of clusteredResults.
      enum:
        - SIMILAR
        - FRESHNESS
        - TITLE
        - CONTENT
        - NONE
        - THREAD_REPLY
        - THREAD_ROOT
        - PREFIX
        - SUFFIX
    SearchResultProminenceEnum:
      type: string
      description: |
        The level of visual distinction that should be given to a result.
      x-enumDescriptions:
        HERO: A high-confidence result that should feature prominently on the page.
        PROMOTED: May not be the best result but should be given additional visual distinction.
        STANDARD: Should not be distinct from any other results.
      enum:
        - HERO
        - PROMOTED
        - STANDARD
    ChannelInviteInfo:
      description: Information regarding the invite status of a person for a particular channel.
      properties:
        channel:
          type: string
          enum:
            - COMMUNICATION_CHANNEL_EMAIL
            - COMMUNICATION_CHANNEL_SLACK
        isAutoInvite:
          description: Bit that tracks if this invite was automatically sent or user-sent
          type: boolean
        inviter:
          type: object
          description: Person object
          additionalProperties: true
        inviteTime:
          type: string
          format: date-time
          description: The time this person was invited in ISO format (ISO 8601).
        reminderTime:
          type: string
          format: date-time
          description: The time this person was reminded in ISO format (ISO 8601) if a reminder was sent.
      type: object
    ReadPermissions:
      description: Describes the read permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of read permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/ReadPermission'
    WritePermissions:
      description: Describes the write permissions levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of write permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/WritePermission'
    GrantPermissions:
      description: Describes the grant permission levels that a user has for permissioned features. Key must be PermissionedFeatureOrObject
      additionalProperties:
        type: array
        description: List of grant permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/GrantPermission'
    CustomFieldValue:
      oneOf:
        - properties:
            strText:
              type: string
              description: Text field for string value.
          type: object
        - properties:
            urlAnchor:
              type: string
              description: Anchor text for hyperlink.
            urlLink:
              type: string
              description: Link for this URL.
          type: object
        - properties:
            person:
              type: object
              description: Person object
              additionalProperties: true
          type: object
    TimeInterval:
      required:
        - start
        - end
      properties:
        start:
          type: string
          description: The RFC3339 timestamp formatted start time of this event.
        end:
          type: string
          description: The RFC3339 timestamp formatted end time of this event.
      type: object
    Company:
      required:
        - name
      properties:
        name:
          type: string
          description: User-friendly display name.
        profileUrl:
          type: string
          description: Link to internal company company profile.
        websiteUrls:
          type: array
          description: Link to company's associated websites.
          items:
            type: string
        logoUrl:
          type: string
          description: The URL of the company's logo. Public, Glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
        location:
          type: string
          description: User facing string representing the company's location.
          example: New York City
        phone:
          type: string
          description: Phone number as a number string.
        fax:
          type: string
          description: Fax number as a number string.
        industry:
          type: string
          description: User facing string representing the company's industry.
          example: Finances
        annualRevenue:
          type: number
          format: double
          description: Average company's annual revenue for reference.
        numberOfEmployees:
          type: integer
          format: int64
          description: Average company's number of employees for reference.
        stockSymbol:
          type: string
          description: Company's stock symbol if company is public.
        foundedDate:
          type: string
          format: date
          description: The date when the company was founded.
        about:
          type: string
          description: User facing description of company.
          example: Financial, software, data, and media company headquartered in Midtown Manhattan, New York City
      type: object
    DocumentCounts:
      type: object
      description: A map of {string, int} pairs representing counts of each document type associated with this customer.
      additionalProperties:
        type: integer
    CustomerMetadata:
      properties:
        datasourceId:
          type: string
          description: The user visible id of the salesforce customer account.
        customData:
          type: object
          description: CustomData object
          additionalProperties: true
      type: object
    RelatedObjects:
      properties:
        relatedObjects:
          type: object
          description: A list of objects related to a source object.
          additionalProperties:
            $ref: '#/components/schemas/RelatedObjectEdge'
      type: object
    PersonToTeamRelationship:
      required:
        - person
      type: object
      description: Metadata about the relationship of a person to a team.
      properties:
        person:
          type: object
          description: Person object
          additionalProperties: true
        relationship:
          type: string
          description: The team member's relationship to the team. This defaults to MEMBER if not set.
          default: MEMBER
          enum:
            - MEMBER
            - MANAGER
            - LEAD
            - POINT_OF_CONTACT
            - OTHER
        customRelationshipStr:
          type: string
          description: Displayed name for the relationship if relationship is set to `OTHER`.
        joinDate:
          type: string
          format: date-time
          description: The team member's start date
    TeamEmail:
      properties:
        email:
          type: string
          format: email
          description: An email address
        type:
          type: string
          enum:
            - PRIMARY
            - SECONDARY
            - ONCALL
            - OTHER
          default: OTHER
        isUserGenerated:
          type: boolean
          description: true iff the email was manually added by a user from within Glean (aka not from the original data source)
      type: object
    CustomEntityMetadata:
      properties:
        customData:
          type: object
          description: CustomData object
          additionalProperties: true
      type: object
    AnswerId:
      properties:
        id:
          type: integer
          description: The opaque ID of the Answer.
          example: 3
      type: object
    AnswerDocId:
      properties:
        docId:
          type: string
          description: Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID isn't available. If both are available, using the Answer ID is preferred.
          example: ANSWERS_answer_3
      type: object
    AnswerMutableProperties:
      properties:
        question:
          type: string
          example: Why is the sky blue?
        questionVariations:
          type: array
          description: Additional ways of phrasing this question.
          items:
            type: string
        bodyText:
          type: string
          description: The plain text answer to the question.
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
        boardId:
          type: integer
          description: The parent board ID of this Answer, or 0 if it's a floating Answer.
        audienceFilters:
          type: array
          description: Filters which restrict who should see the answer. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
        addedRoles:
          type: array
          description: A list of user roles for the answer added by the owner.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        removedRoles:
          type: array
          description: A list of user roles for the answer removed by the owner.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        roles:
          type: array
          description: A list of roles for this answer explicitly granted by an owner, editor, or admin.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        sourceDocumentSpec:
          type: object
          description: DocumentSpec object
          additionalProperties: true
        sourceType:
          type: string
          enum:
            - DOCUMENT
            - ASSISTANT
      type: object
    StructuredText:
      type: object
      properties:
        text:
          type: string
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
        structuredList:
          type: array
          description: An array of objects each of which contains either a string or a link which optionally corresponds to a document.
          items:
            properties:
              link:
                type: string
                example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
              document:
                type: object
                description: Document object
                additionalProperties: true
              text:
                type: string
                example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
              structuredResult:
                type: object
                description: StructuredResult object
                additionalProperties: true
            type: object
      required:
        - text
    AnswerLikes:
      required:
        - likedBy
        - likedByUser
        - numLikes
      properties:
        likedBy:
          type: array
          items:
            properties:
              user:
                type: object
                description: Person object
                additionalProperties: true
              createTime:
                type: string
                format: date-time
                description: The time the user liked the answer in ISO format (ISO 8601).
            type: object
        likedByUser:
          type: boolean
          description: Whether the user in context liked the answer.
        numLikes:
          type: integer
          description: The total number of likes for the answer.
      type: object
    CalendarAttendees:
      properties:
        people:
          type: array
          description: Full details of some of the attendees of this event
          items:
            required:
              - person
            properties:
              isOrganizer:
                type: boolean
                description: Whether or not this attendee is an organizer.
              isInGroup:
                type: boolean
                description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
              person:
                type: object
                description: Person object
                additionalProperties: true
              groupAttendees:
                type: array
                description: If this attendee is a group, represents the list of individual attendees in the group.
                items:
                  type: object
                  description: CalendarAttendee object
                  additionalProperties: true
              responseStatus:
                type: string
                enum:
                  - ACCEPTED
                  - DECLINED
                  - NO_RESPONSE
                  - TENTATIVE
            type: object
        isLimit:
          type: boolean
          description: Whether the total count of the people returned is at the retrieval limit.
        total:
          type: integer
          description: Total number of attendees in this event.
        numAccepted:
          type: integer
          description: Total number of attendees who have accepted this event.
        numDeclined:
          type: integer
          description: Total number of attendees who have declined this event.
        numNoResponse:
          type: integer
          description: Total number of attendees who have not responded to this event.
        numTentative:
          type: integer
          description: Total number of attendees who have responded tentatively (i.e. responded maybe) to this event.
      type: object
    AnswerBoardMutableProperties:
      type: object
      properties:
        name:
          type: string
          description: The unique name of the Collection.
        description:
          type: string
          description: A brief summary of the Collection's contents.
        addedRoles:
          type: array
          description: A list of added user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        removedRoles:
          type: array
          description: A list of removed user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        audienceFilters:
          type: array
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
      required:
        - name
    CodeLine:
      properties:
        lineNumber:
          type: integer
        content:
          type: string
        ranges:
          type: array
          description: Index ranges depicting matched sections of the line
          items:
            type: object
            description: TextRange object
            additionalProperties: true
      type: object
    EntityType:
      type: string
      description: The type of entity.
      x-include-enum-class-prefix: true
      enum:
        - PERSON
        - PROJECT
        - CUSTOMER
    FacetFilterValue:
      type: object
      description: FacetFilterValue object
      additionalProperties: true
    CollectionBaseMutableProperties:
      required:
        - name
      properties:
        name:
          type: string
          description: The unique name of the Collection.
        description:
          type: string
          description: A brief summary of the Collection's contents.
        addedRoles:
          type: array
          description: A list of added user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        removedRoles:
          type: array
          description: A list of removed user roles for the Collection.
          items:
            type: object
            description: UserRoleSpecification object
            additionalProperties: true
        audienceFilters:
          type: array
          description: Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search.
          items:
            type: object
            description: FacetFilter object
            additionalProperties: true
      type: object
    CollectionItemMutableProperties:
      properties:
        name:
          type: string
          description: The optional name of the Collection item.
        description:
          type: string
          description: A helpful description of why this CollectionItem is in the Collection that it's in.
        icon:
          type: string
          description: The emoji icon for this CollectionItem. Only used for Text type items.
      type: object
    CollectionPinTarget:
      type: object
      description: CollectionPinTarget object
      additionalProperties: true
    CollectionPinMetadata:
      type: object
      description: CollectionPinMetadata object
      additionalProperties: true
    Group:
      type: object
      description: Group object
      additionalProperties: true
    UserRole:
      type: object
      description: UserRole object
      additionalProperties: true
    Reminder:
      required:
        - assignee
        - remindAt
      properties:
        assignee:
          type: object
          description: Person object
          additionalProperties: true
        requestor:
          type: object
          description: Person object
          additionalProperties: true
        remindAt:
          type: integer
          description: Unix timestamp for when the reminder should trigger (in seconds since epoch UTC).
        createdAt:
          type: integer
          description: Unix timestamp for when the reminder was first created (in seconds since epoch UTC).
        reason:
          type: string
          description: An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, "Duplicate", "Incomplete", "Incorrect").
      type: object
    ScopeType:
      type: object
      description: ScopeType object
      additionalProperties: true
    TimePoint:
      type: object
      description: TimePoint object
      additionalProperties: true
    CommunicationChannel:
      type: string
      enum:
        - COMMUNICATION_CHANNEL_EMAIL
        - COMMUNICATION_CHANNEL_SLACK
    ReadPermission:
      description: Describes the read permission level that a user has for a specific feature
      properties:
        scopeType:
          type: object
          description: ScopeType object
          additionalProperties: true
      type: object
    GrantPermission:
      description: Describes the grant permission level that a user has for a specific feature
      properties:
        scopeType:
          type: object
          description: ScopeType object
          additionalProperties: true
      type: object
    CustomFieldValueStr:
      properties:
        strText:
          type: string
          description: Text field for string value.
      type: object
    CustomFieldValueHyperlink:
      properties:
        urlAnchor:
          type: string
          description: Anchor text for hyperlink.
        urlLink:
          type: string
          description: Link for this URL.
      type: object
    CustomFieldValuePerson:
      properties:
        person:
          type: object
          description: Person object
          additionalProperties: true
      type: object
    RelatedObjectEdge:
      properties:
        objects:
          type: array
          items:
            required:
              - id
            properties:
              id:
                type: string
                description: The ID of the related object
              metadata:
                type: object
                description: Some metadata of the object which can be displayed, while not having the actual object.
                properties:
                  name:
                    type: string
                    description: Placeholder name of the object, not the relationship.
            type: object
      type: object
    StructuredTextMutableProperties:
      required:
        - text
      properties:
        text:
          type: string
          example: From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.
      type: object
    StructuredTextItem:
      properties:
        link:
          type: string
          example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
        document:
          type: object
          description: Document object
          additionalProperties: true
        text:
          type: string
          example: Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.
        structuredResult:
          type: object
          description: StructuredResult object
          additionalProperties: true
      type: object
    AnswerLike:
      properties:
        user:
          type: object
          description: Person object
          additionalProperties: true
        createTime:
          type: string
          format: date-time
          description: The time the user liked the answer in ISO format (ISO 8601).
      type: object
    CalendarAttendee:
      required:
        - person
      properties:
        isOrganizer:
          type: boolean
          description: Whether or not this attendee is an organizer.
        isInGroup:
          type: boolean
          description: Whether or not this attendee is in a group. Needed temporarily at least to support both flat attendees and tree for compatibility.
        person:
          type: object
          description: Person object
          additionalProperties: true
        groupAttendees:
          type: array
          description: If this attendee is a group, represents the list of individual attendees in the group.
          items:
            type: object
            description: CalendarAttendee object
            additionalProperties: true
        responseStatus:
          type: string
          enum:
            - ACCEPTED
            - DECLINED
            - NO_RESPONSE
            - TENTATIVE
      type: object
    CollectionPinnableCategories:
      type: object
      description: CollectionPinnableCategories object
      additionalProperties: true
    CollectionPinnableTargets:
      type: object
      description: CollectionPinnableTargets object
      additionalProperties: true
    GroupType:
      type: object
      description: GroupType object
      additionalProperties: true
    RelatedObject:
      required:
        - id
      properties:
        id:
          type: string
          description: The ID of the related object
        metadata:
          type: object
          description: Some metadata of the object which can be displayed, while not having the actual object.
          properties:
            name:
              type: string
              description: Placeholder name of the object, not the relationship.
      type: object
  parameters:
    timezoneOffset:
      name: timezoneOffset
      in: query
      description: The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
      schema:
        type: integer
  securitySchemes:
    APIToken:
      scheme: bearer
      type: http
