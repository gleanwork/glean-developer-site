Getting API URLs from sitemap...
Checking 202 URLs for API reference pages...
Found 109 API reference pages
Processing first 4 APIs for testing
Found 109 API sections in llms-full.txt
Scraping https://developers.glean.com/api/client-api/activity/activity...
HERE2 <h2 class="anchor anchorWithStickyNavbar_LWe7 openapi-tabs__heading" id="request">Request<a aria-label="Direct link to Request" class="hash-link" href="#request" title="Direct link to Request">​</a></h2>
HERE3 ['\n', <div class="tabs-container"><div class="tabs__container"><div class="openapi-tabs__mime-container"><ul aria-orientation="horizontal" class="openapi-tabs__mime-list-container tabs openapi-tabs__mime" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__mime-item active" role="tab" tabindex="0">application/json</li></ul></div></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details mime" data-collapsed="false" open=""><summary><h3 class="openapi-markdown__details-summary-header-body">Body<strong class="openapi-schema__required">required</strong></h3></summary><div style="display: block; overflow: visible; height: auto;"><div class="collapsibleContent_i85q"><div style="text-align: left; margin-left: 1rem;"></div><ul style="margin-left: 1rem;"><div id="request-events"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-events"><span class="openapi-schema__container"><strong class="openapi-schema__property">events</strong><span class="openapi-schema__name"> ActivityEvent[]</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="request-events-id"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">id</strong><span class="openapi-schema__name">string</span></span><p>Universally unique identifier of the event. To allow for reliable retransmission, only the earliest received event of a given UUID is considered valid by the server and subsequent are ignored.</p></div></div></div><div id="request-events-action"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">action</strong><span class="openapi-schema__name">string</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p>The type of activity this represents.</p><div style="margin-top: 0.5rem;">
<table><thead><tr><th>Enum Value</th><th>Description</th></tr></thead><tbody><tr><td>VIEW</td><td>Represents a visit to the given <code>url</code>.</td></tr><tr><td>EDIT</td><td>Represents an edit of the document represented by the <code>url</code>.</td></tr><tr><td>SEARCH</td><td>Represents a search performed at the given <code>url</code>.</td></tr><tr><td>COMMENT</td><td>Represents a comment on the document represented by the <code>url</code>.</td></tr><tr><td>CRAWL</td><td>Represents an explicit request to index the given <code>url</code> along with associated attributes in this payload.</td></tr><tr><td>HISTORICAL_SEARCH</td><td>Represents a search performed at the given <code>url</code> as indicated by the user's history.</td></tr><tr><td>HISTORICAL_VIEW</td><td>Represents a visit to the given <code>url</code> as indicated by the user's history.</td></tr></tbody></table></div><p><strong>Possible values:</strong> [<code>VIEW</code>, <code>EDIT</code>, <code>SEARCH</code>, <code>COMMENT</code>, <code>CRAWL</code>, <code>HISTORICAL_SEARCH</code>, <code>HISTORICAL_VIEW</code>]</p></div></div></div><div id="request-events-params"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-events-params"><span class="openapi-schema__container"><strong class="openapi-schema__property">params</strong><span class="openapi-schema__name"> ActivityEventParams</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div id="request-events-params-bodycontent"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">bodyContent</strong><span class="openapi-schema__name">string</span></span><p>The HTML content of the page body.</p></div></div></div><div id="request-events-params-datasourceinstance"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">datasourceInstance</strong><span class="openapi-schema__name">string</span></span><p>The full datasource instance name inferred from the URL of the event</p></div></div></div><div id="request-events-params-datasource"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">datasource</strong><span class="openapi-schema__name">string</span></span><p>The datasource without the instance inferred from the URL of the event</p></div></div></div><div id="request-events-params-instanceonlyname"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">instanceOnlyName</strong><span class="openapi-schema__name">string</span></span><p>The instance only name of the datasource instance, e.g. 1 for jira_1, inferred from the URL of the event</p></div></div></div><div id="request-events-params-duration"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">duration</strong><span class="openapi-schema__name">integer</span></span><p>Length in seconds of the activity. For VIEWS, this represents the amount the page was visible in the foreground.</p></div></div></div><div id="request-events-params-query"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">query</strong><span class="openapi-schema__name">string</span></span><p>The user's search query associated with a SEARCH.</p></div></div></div><div id="request-events-params-referrer"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">referrer</strong><span class="openapi-schema__name">string</span></span><p>The referring URL of the VIEW or SEARCH.</p></div></div></div><div id="request-events-params-title"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">title</strong><span class="openapi-schema__name">string</span></span><p>The page title associated with the URL of the event</p></div></div></div><div id="request-events-params-truncated"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">truncated</strong><span class="openapi-schema__name">boolean</span></span><p>Indicates that the parameters are incomplete and more parameters may be sent with the same action+timestamp+URL in the future. This is used for sending the duration when a <code>VIEW</code> is finished.</p></div></div></div></div></div></div></details></div></div><div id="request-events-timestamp"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">timestamp</strong><span class="openapi-schema__name">string&lt;date-time&gt;</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p>The ISO 8601 timestamp when the activity began.</p></div></div></div><div id="request-events-url"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">url</strong><span class="openapi-schema__name">string</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p>The URL of the activity.</p></div></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div></ul></div></div></details></div></div></div>, '\n', <div class="openapi-tabs__container"><div class="openapi-tabs__response-header-section"><h2 class="anchor anchorWithStickyNavbar_LWe7 openapi-tabs__heading openapi-tabs__response-header" id="responses">Responses<a aria-label="Direct link to Responses" class="hash-link" href="#responses" title="Direct link to Responses">​</a></h2><div class="openapi-tabs__response-container"><ul aria-orientation="horizontal" class="openapi-tabs__response-list-container tabs" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__response-code-item success active" role="tab" tabindex="0">200</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">400</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">401</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">429</li></ul></div></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>OK</p></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Invalid request</p></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Not Authorized</p></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Too Many Requests</p></div></div></div></div></div>]
HEREIMP <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-events"><span class="openapi-schema__container"><strong class="openapi-schema__property">events</strong><span class="openapi-schema__name"> ActivityEvent[]</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="request-events-id"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">id</strong><span class="openapi-schema__name">string</span></span><p>Universally unique identifier of the event. To allow for reliable retransmission, only the earliest received event of a given UUID is considered valid by the server and subsequent are ignored.</p></div></div></div><div id="request-events-action"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">action</strong><span class="openapi-schema__name">string</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p>The type of activity this represents.</p><div style="margin-top: 0.5rem;">
<table><thead><tr><th>Enum Value</th><th>Description</th></tr></thead><tbody><tr><td>VIEW</td><td>Represents a visit to the given <code>url</code>.</td></tr><tr><td>EDIT</td><td>Represents an edit of the document represented by the <code>url</code>.</td></tr><tr><td>SEARCH</td><td>Represents a search performed at the given <code>url</code>.</td></tr><tr><td>COMMENT</td><td>Represents a comment on the document represented by the <code>url</code>.</td></tr><tr><td>CRAWL</td><td>Represents an explicit request to index the given <code>url</code> along with associated attributes in this payload.</td></tr><tr><td>HISTORICAL_SEARCH</td><td>Represents a search performed at the given <code>url</code> as indicated by the user's history.</td></tr><tr><td>HISTORICAL_VIEW</td><td>Represents a visit to the given <code>url</code> as indicated by the user's history.</td></tr></tbody></table></div><p><strong>Possible values:</strong> [<code>VIEW</code>, <code>EDIT</code>, <code>SEARCH</code>, <code>COMMENT</code>, <code>CRAWL</code>, <code>HISTORICAL_SEARCH</code>, <code>HISTORICAL_VIEW</code>]</p></div></div></div><div id="request-events-params"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-events-params"><span class="openapi-schema__container"><strong class="openapi-schema__property">params</strong><span class="openapi-schema__name"> ActivityEventParams</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div id="request-events-params-bodycontent"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">bodyContent</strong><span class="openapi-schema__name">string</span></span><p>The HTML content of the page body.</p></div></div></div><div id="request-events-params-datasourceinstance"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">datasourceInstance</strong><span class="openapi-schema__name">string</span></span><p>The full datasource instance name inferred from the URL of the event</p></div></div></div><div id="request-events-params-datasource"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">datasource</strong><span class="openapi-schema__name">string</span></span><p>The datasource without the instance inferred from the URL of the event</p></div></div></div><div id="request-events-params-instanceonlyname"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">instanceOnlyName</strong><span class="openapi-schema__name">string</span></span><p>The instance only name of the datasource instance, e.g. 1 for jira_1, inferred from the URL of the event</p></div></div></div><div id="request-events-params-duration"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">duration</strong><span class="openapi-schema__name">integer</span></span><p>Length in seconds of the activity. For VIEWS, this represents the amount the page was visible in the foreground.</p></div></div></div><div id="request-events-params-query"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">query</strong><span class="openapi-schema__name">string</span></span><p>The user's search query associated with a SEARCH.</p></div></div></div><div id="request-events-params-referrer"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">referrer</strong><span class="openapi-schema__name">string</span></span><p>The referring URL of the VIEW or SEARCH.</p></div></div></div><div id="request-events-params-title"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">title</strong><span class="openapi-schema__name">string</span></span><p>The page title associated with the URL of the event</p></div></div></div><div id="request-events-params-truncated"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">truncated</strong><span class="openapi-schema__name">boolean</span></span><p>Indicates that the parameters are incomplete and more parameters may be sent with the same action+timestamp+URL in the future. This is used for sending the duration when a <code>VIEW</code> is finished.</p></div></div></div></div></div></div></details></div></div><div id="request-events-timestamp"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">timestamp</strong><span class="openapi-schema__name">string&lt;date-time&gt;</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p>The ISO 8601 timestamp when the activity began.</p></div></div></div><div id="request-events-url"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">url</strong><span class="openapi-schema__name">string</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p>The URL of the activity.</p></div></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details>
HERESCHEMA {'events': {'type': 'ActivityEvent[]', 'description': '', 'required': True, 'is_array': True, 'properties': {'id': {'type': 'string', 'description': 'Universally unique identifier of the event. To allow for reliable retransmission, only the earliest received event of a given UUID is considered valid by the server and subsequent are ignored.', 'required': False}, 'action': {'type': 'string', 'description': 'The type of activity this represents.', 'required': True}, 'params': {'type': 'ActivityEventParams', 'description': '', 'required': False, 'is_array': False, 'properties': {'bodyContent': {'type': 'string', 'description': 'The HTML content of the page body.', 'required': False}, 'datasourceInstance': {'type': 'string', 'description': 'The full datasource instance name inferred from the URL of the event', 'required': False}, 'datasource': {'type': 'string', 'description': 'The datasource without the instance inferred from the URL of the event', 'required': False}, 'instanceOnlyName': {'type': 'string', 'description': 'The instance only name of the datasource instance, e.g. 1 for jira_1, inferred from the URL of the event', 'required': False}, 'duration': {'type': 'integer', 'description': 'Length in seconds of the activity. For VIEWS, this represents the amount the page was visible in the foreground.', 'required': False}, 'query': {'type': 'string', 'description': "The user's search query associated with a SEARCH.", 'required': False}, 'referrer': {'type': 'string', 'description': 'The referring URL of the VIEW or SEARCH.', 'required': False}, 'title': {'type': 'string', 'description': 'The page title associated with the URL of the event', 'required': False}, 'truncated': {'type': 'boolean', 'description': 'Indicates that the parameters are incomplete and more parameters may be sent with the same action+timestamp+URL in the future. This is used for sending the duration when aVIEWis finished.', 'required': False}}}, 'timestamp': {'type': 'string<date-time>', 'description': 'The ISO 8601 timestamp when the activity began.', 'required': True}, 'url': {'type': 'string', 'description': 'The URL of the activity.', 'required': True}}}}
HERE2 <h2 class="anchor anchorWithStickyNavbar_LWe7 openapi-tabs__heading openapi-tabs__response-header" id="responses">Responses<a aria-label="Direct link to Responses" class="hash-link" href="#responses" title="Direct link to Responses">​</a></h2>
HERE3 [<div class="openapi-tabs__response-container"><ul aria-orientation="horizontal" class="openapi-tabs__response-list-container tabs" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__response-code-item success active" role="tab" tabindex="0">200</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">400</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">401</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">429</li></ul></div>]
HERESCHEMA {}
HEREREQUEST {'events': {'type': 'ActivityEvent[]', 'description': '', 'required': True, 'is_array': True, 'properties': {'id': {'type': 'string', 'description': 'Universally unique identifier of the event. To allow for reliable retransmission, only the earliest received event of a given UUID is considered valid by the server and subsequent are ignored.', 'required': False}, 'action': {'type': 'string', 'description': 'The type of activity this represents.', 'required': True}, 'params': {'type': 'ActivityEventParams', 'description': '', 'required': False, 'is_array': False, 'properties': {'bodyContent': {'type': 'string', 'description': 'The HTML content of the page body.', 'required': False}, 'datasourceInstance': {'type': 'string', 'description': 'The full datasource instance name inferred from the URL of the event', 'required': False}, 'datasource': {'type': 'string', 'description': 'The datasource without the instance inferred from the URL of the event', 'required': False}, 'instanceOnlyName': {'type': 'string', 'description': 'The instance only name of the datasource instance, e.g. 1 for jira_1, inferred from the URL of the event', 'required': False}, 'duration': {'type': 'integer', 'description': 'Length in seconds of the activity. For VIEWS, this represents the amount the page was visible in the foreground.', 'required': False}, 'query': {'type': 'string', 'description': "The user's search query associated with a SEARCH.", 'required': False}, 'referrer': {'type': 'string', 'description': 'The referring URL of the VIEW or SEARCH.', 'required': False}, 'title': {'type': 'string', 'description': 'The page title associated with the URL of the event', 'required': False}, 'truncated': {'type': 'boolean', 'description': 'Indicates that the parameters are incomplete and more parameters may be sent with the same action+timestamp+URL in the future. This is used for sending the duration when aVIEWis finished.', 'required': False}}}, 'timestamp': {'type': 'string<date-time>', 'description': 'The ISO 8601 timestamp when the activity began.', 'required': True}, 'url': {'type': 'string', 'description': 'The URL of the activity.', 'required': True}}}}
HERERESPONSE {}
HERE {'title': 'Report document activity', 'url': 'https://developers.glean.com/api/client-api/activity/activity', 'authentication': 'Authorization: http', 'request_schema': {'events': {'type': 'ActivityEvent[]', 'description': '', 'required': True, 'is_array': True, 'properties': {'id': {'type': 'string', 'description': 'Universally unique identifier of the event. To allow for reliable retransmission, only the earliest received event of a given UUID is considered valid by the server and subsequent are ignored.', 'required': False}, 'action': {'type': 'string', 'description': 'The type of activity this represents.', 'required': True}, 'params': {'type': 'ActivityEventParams', 'description': '', 'required': False, 'is_array': False, 'properties': {'bodyContent': {'type': 'string', 'description': 'The HTML content of the page body.', 'required': False}, 'datasourceInstance': {'type': 'string', 'description': 'The full datasource instance name inferred from the URL of the event', 'required': False}, 'datasource': {'type': 'string', 'description': 'The datasource without the instance inferred from the URL of the event', 'required': False}, 'instanceOnlyName': {'type': 'string', 'description': 'The instance only name of the datasource instance, e.g. 1 for jira_1, inferred from the URL of the event', 'required': False}, 'duration': {'type': 'integer', 'description': 'Length in seconds of the activity. For VIEWS, this represents the amount the page was visible in the foreground.', 'required': False}, 'query': {'type': 'string', 'description': "The user's search query associated with a SEARCH.", 'required': False}, 'referrer': {'type': 'string', 'description': 'The referring URL of the VIEW or SEARCH.', 'required': False}, 'title': {'type': 'string', 'description': 'The page title associated with the URL of the event', 'required': False}, 'truncated': {'type': 'boolean', 'description': 'Indicates that the parameters are incomplete and more parameters may be sent with the same action+timestamp+URL in the future. This is used for sending the duration when aVIEWis finished.', 'required': False}}}, 'timestamp': {'type': 'string<date-time>', 'description': 'The ISO 8601 timestamp when the activity began.', 'required': True}, 'url': {'type': 'string', 'description': 'The URL of the activity.', 'required': True}}}}, 'response_schema': {}, 'python_code_sample': 'from glean.api_client import Glean, models\nfrom glean.api_client.utils import parse_datetime\nimport os\nwith Glean(\n    api_token=os.getenv("GLEAN_API_TOKEN", ""),\n    instance=os.getenv("GLEAN_INSTANCE", ""),\n) as glean:\n    glean.client.activity.report(events=[\n        {\n            "action": models.ActivityEventAction.HISTORICAL_VIEW,\n            "timestamp": parse_datetime("2000-01-23T04:56:07.000Z"),\n            "url": "https://example.com/",\n        },\n        {\n            "action": models.ActivityEventAction.SEARCH,\n            "params": {\n                "query": "query",\n            },\n            "timestamp": parse_datetime("2000-01-23T04:56:07.000Z"),\n            "url": "https://example.com/search?q=query",\n        },\n        {\n            "action": models.ActivityEventAction.VIEW,\n            "params": {\n                "duration": 20,\n                "referrer": "https://example.com/document",\n            },\n            "timestamp": parse_datetime("2000-01-23T04:56:07.000Z"),\n            "url": "https://example.com/",\n        },\n    ])\n    # Use the SDK ...\nimport http.client\nimport json\nconn = http.client.HTTPSConnection("instance-name-be.glean.com")\npayload = json.dumps({\n  "events": [\n    {\n      "url": "https://example.com/",\n      "action": "HISTORICAL_VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z"\n    },\n    {\n      "url": "https://example.com/search?q=query",\n      "action": "SEARCH",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "query": "query"\n      }\n    },\n    {\n      "url": "https://example.com/",\n      "action": "VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "duration": 20,\n        "referrer": "https://example.com/document"\n      }\n    }\n  ]\n})\nheaders = {\n  \'Content-Type\': \'application/json\',\n  \'Authorization\': \'Bearer <token>\'\n}\nconn.request("POST", "/rest/api/v1/activity", payload, headers)\nres = conn.getresponse()\ndata = res.read()\nprint(data.decode("utf-8"))', 'go_code_sample': 'package main\nimport(\n\t"context"\n\t"os"\n\tapiclientgo "github.com/gleanwork/api-client-go"\n\t"github.com/gleanwork/api-client-go/models/components"\n\t"github.com/gleanwork/api-client-go/types"\n\t"log"\n)\nfunc main() {\n    ctx := context.Background()\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv("GLEAN_API_TOKEN")),\n        apiclientgo.WithInstance(os.Getenv("GLEAN_INSTANCE")),\n    )\n    res, err := s.Client.Activity.Report(ctx, components.Activity{\n        Events: []components.ActivityEvent{\n            components.ActivityEvent{\n                Action: components.ActivityEventActionHistoricalView,\n                Timestamp: types.MustTimeFromString("2000-01-23T04:56:07.000Z"),\n                URL: "https://example.com/",\n            },\n            components.ActivityEvent{\n                Action: components.ActivityEventActionSearch,\n                Params: &components.ActivityEventParams{\n                    Query: apiclientgo.String("query"),\n                },\n                Timestamp: types.MustTimeFromString("2000-01-23T04:56:07.000Z"),\n                URL: "https://example.com/search?q=query",\n            },\n            components.ActivityEvent{\n                Action: components.ActivityEventActionView,\n                Params: &components.ActivityEventParams{\n                    Duration: apiclientgo.Int64(20),\n                    Referrer: apiclientgo.String("https://example.com/document"),\n                },\n                Timestamp: types.MustTimeFromString("2000-01-23T04:56:07.000Z"),\n                URL: "https://example.com/",\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}\npackage main\nimport (\n  "fmt"\n  "strings"\n  "net/http"\n  "io"\n)\nfunc main() {\n  url := "https://instance-name-be.glean.com/rest/api/v1/activity"\n  method := "POST"\n  payload := strings.NewReader(`{\n  "events": [\n    {\n      "url": "https://example.com/",\n      "action": "HISTORICAL_VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z"\n    },\n    {\n      "url": "https://example.com/search?q=query",\n      "action": "SEARCH",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "query": "query"\n      }\n    },\n    {\n      "url": "https://example.com/",\n      "action": "VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "duration": 20,\n        "referrer": "https://example.com/document"\n      }\n    }\n  ]\n}`)\n  client := &http.Client {\n  }\n  req, err := http.NewRequest(method, url, payload)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  req.Header.Add("Content-Type", "application/json")\n  req.Header.Add("Authorization", "Bearer <token>")\n  res, err := client.Do(req)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  defer res.Body.Close()\n  body, err := io.ReadAll(res.Body)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  fmt.Println(string(body))\n}', 'java_code_sample': 'package hello.world;\nimport java.lang.Exception;\nimport java.time.OffsetDateTime;\nimport java.util.List;\nimport org.openapis.openapi.Glean;\nimport org.openapis.openapi.models.components.*;\nimport org.openapis.openapi.models.operations.ActivityResponse;\npublic class Application {\n    public static void main(String[] args) throws Exception {\n        Glean sdk = Glean.builder()\n                .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))\n            .build();\n        Activity req = Activity.builder()\n                .events(List.of(\n                    ActivityEvent.builder()\n                        .action(ActivityEventAction.HISTORICAL_VIEW)\n                        .timestamp(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))\n                        .url("https://example.com/")\n                        .build(),\n                    ActivityEvent.builder()\n                        .action(ActivityEventAction.SEARCH)\n                        .timestamp(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))\n                        .url("https://example.com/search?q=query")\n                        .params(ActivityEventParams.builder()\n                            .query("query")\n                            .build())\n                        .build(),\n                    ActivityEvent.builder()\n                        .action(ActivityEventAction.VIEW)\n                        .timestamp(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))\n                        .url("https://example.com/")\n                        .params(ActivityEventParams.builder()\n                            .duration(20L)\n                            .referrer("https://example.com/document")\n                            .build())\n                        .build()))\n                .build();\n        ActivityResponse res = sdk.client().activity().report()\n                .request(req)\n                .call();\n        // handle response\n    }\n}\nOkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nMediaType mediaType = MediaType.parse("application/json");\nRequestBody body = RequestBody.create(mediaType, "{\\n  \\"events\\": [\\n    {\\n      \\"url\\": \\"https://example.com/\\",\\n      \\"action\\": \\"HISTORICAL_VIEW\\",\\n      \\"timestamp\\": \\"2000-01-23T04:56:07.000Z\\"\\n    },\\n    {\\n      \\"url\\": \\"https://example.com/search?q=query\\",\\n      \\"action\\": \\"SEARCH\\",\\n      \\"timestamp\\": \\"2000-01-23T04:56:07.000Z\\",\\n      \\"params\\": {\\n        \\"query\\": \\"query\\"\\n      }\\n    },\\n    {\\n      \\"url\\": \\"https://example.com/\\",\\n      \\"action\\": \\"VIEW\\",\\n      \\"timestamp\\": \\"2000-01-23T04:56:07.000Z\\",\\n      \\"params\\": {\\n        \\"duration\\": 20,\\n        \\"referrer\\": \\"https://example.com/document\\"\\n      }\\n    }\\n  ]\\n}");\nRequest request = new Request.Builder()\n  .url("https://instance-name-be.glean.com/rest/api/v1/activity")\n  .method("POST", body)\n  .addHeader("Content-Type", "application/json")\n  .addHeader("Authorization", "Bearer <token>")\n  .build();\nResponse response = client.newCall(request).execute();', 'typescript_code_sample': 'import { Glean } from "@gleanwork/api-client";\nconst glean = new Glean({\n  apiToken: process.env["GLEAN_API_TOKEN"] ?? "",\n  instance: process.env["GLEAN_INSTANCE"] ?? "",\n});\nasync function run() {\n  await glean.client.activity.report({\n    events: [\n      {\n        action: "HISTORICAL_VIEW",\n        timestamp: new Date("2000-01-23T04:56:07.000Z"),\n        url: "https://example.com/",\n      },\n      {\n        action: "SEARCH",\n        params: {\n          query: "query",\n        },\n        timestamp: new Date("2000-01-23T04:56:07.000Z"),\n        url: "https://example.com/search?q=query",\n      },\n      {\n        action: "VIEW",\n        params: {\n          duration: 20,\n          referrer: "https://example.com/document",\n        },\n        timestamp: new Date("2000-01-23T04:56:07.000Z"),\n        url: "https://example.com/",\n      },\n    ],\n  });\n}\nrun();\nconst myHeaders = new Headers();\nmyHeaders.append("Content-Type", "application/json");\nmyHeaders.append("Authorization", "Bearer <token>");\nconst raw = JSON.stringify({\n  "events": [\n    {\n      "url": "https://example.com/",\n      "action": "HISTORICAL_VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z"\n    },\n    {\n      "url": "https://example.com/search?q=query",\n      "action": "SEARCH",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "query": "query"\n      }\n    },\n    {\n      "url": "https://example.com/",\n      "action": "VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "duration": 20,\n        "referrer": "https://example.com/document"\n      }\n    }\n  ]\n});\nconst requestOptions = {\n  method: "POST",\n  headers: myHeaders,\n  body: raw,\n  redirect: "follow"\n};\nfetch("https://instance-name-be.glean.com/rest/api/v1/activity", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));', 'curl_code_sample': 'curl -L \'https://instance-name-be.glean.com/rest/api/v1/activity\' \\\n-H \'Content-Type: application/json\' \\\n-H \'Authorization: Bearer <token>\' \\\n-d \'{\n  "events": [\n    {\n      "url": "https://example.com/",\n      "action": "HISTORICAL_VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z"\n    },\n    {\n      "url": "https://example.com/search?q=query",\n      "action": "SEARCH",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "query": "query"\n      }\n    },\n    {\n      "url": "https://example.com/",\n      "action": "VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "duration": 20,\n        "referrer": "https://example.com/document"\n      }\n    }\n  ]\n}\''}
Scraping https://developers.glean.com/api/client-api/activity/feedback...
HERE2 <h2 class="anchor anchorWithStickyNavbar_LWe7 openapi-tabs__heading" id="request">Request<a aria-label="Direct link to Request" class="hash-link" href="#request" title="Direct link to Request">​</a></h2>
HERE3 ['\n', <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="false" open="" style="margin-bottom: 1rem;"><summary><h3 class="openapi-markdown__details-summary-header-params">Query Parameters</h3></summary><div style="display: block; overflow: visible; height: auto;"><div class="collapsibleContent_i85q"><ul><div class="openapi-params__list-item"><span class="openapi-schema__container"><strong class="openapi-schema__property">feedback</strong><span class="openapi-schema__type"> string</span></span><p>A URL encoded versions of Feedback. This is useful for requests.</p></div></ul></div></div></details>, '\n', <div class="tabs-container"><div class="tabs__container"><div class="openapi-tabs__mime-container"><ul aria-orientation="horizontal" class="openapi-tabs__mime-list-container tabs openapi-tabs__mime" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__mime-item active" role="tab" tabindex="0">application/json</li></ul></div></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details mime" data-collapsed="false" open=""><summary><h3 class="openapi-markdown__details-summary-header-body">Body</h3></summary><div style="display: block; overflow: visible; height: auto;"><div class="collapsibleContent_i85q"><div style="text-align: left; margin-left: 1rem;"></div><ul style="margin-left: 1rem;"><div id="request-id"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">id</strong><span class="openapi-schema__name">string</span></span><p>Universally unique identifier of the event. To allow for reliable retransmission, only the earliest received event of a given UUID is considered valid by the server and subsequent are ignored.</p></div></div></div><div id="request-category"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">category</strong><span class="openapi-schema__name">string</span></span><p>The feature category to which the feedback applies. These should be broad product areas such as Announcements, Answers, Search, etc. rather than specific components or UI treatments within those areas.</p><p><strong>Possible values:</strong> [<code>ANNOUNCEMENT</code>, <code>AUTOCOMPLETE</code>, <code>COLLECTIONS</code>, <code>FEED</code>, <code>SEARCH</code>, <code>CHAT</code>, <code>NTP</code>, <code>WORKFLOWS</code>, <code>SUMMARY</code>, <code>GENERAL</code>, <code>PROMPTS</code>]</p></div></div></div><div id="request-trackingtokens"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">trackingTokens</strong><span class="openapi-schema__name">string[]</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p>A list of server-generated trackingTokens to which this event applies.</p></div></div></div><div id="request-event"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">event</strong><span class="openapi-schema__name">string</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p>The action the user took within a Glean client with respect to the object referred to by the given <code>trackingToken</code>.</p><div style="margin-top: 0.5rem;">
<table><thead><tr><th>Enum Value</th><th>Description</th></tr></thead><tbody><tr><td>CLICK</td><td>The object's primary link was clicked with the intent to view its full representation. Depending on the object type, this may imply an external navigation or navigating to a new page or view within the Glean app.</td></tr><tr><td>CONTAINER_CLICK</td><td>A link to the object's parent container (e.g. the folder in which it's located) was clicked.</td></tr><tr><td>COPY_LINK</td><td>The user copied a link to the primary link.</td></tr><tr><td>CREATE</td><td>The user creates a document.</td></tr><tr><td>DISMISS</td><td>The user dismissed the object such that it was hidden from view.</td></tr><tr><td>DOWNVOTE</td><td>The user gave feedback that the object was not useful.</td></tr><tr><td>EMAIL</td><td>The user attempted to send an email.</td></tr><tr><td>EXECUTE</td><td>The user executed the object (e.g. ran a workflow).</td></tr><tr><td>FILTER</td><td>The user applied a filter.</td></tr><tr><td>FIRST_TOKEN</td><td>The first token of a streaming response is received.</td></tr><tr><td>FOCUS_IN</td><td>The user clicked into an interactive element, e.g. the search box.</td></tr><tr><td>LAST_TOKEN</td><td>The final token of a streaming response is received.</td></tr><tr><td>MANUAL_FEEDBACK</td><td>The user submitted textual manual feedback regarding the object.</td></tr><tr><td>MARK_AS_READ</td><td>The user explicitly marked the content as read.</td></tr><tr><td>MESSAGE</td><td>The user attempted to send a message using their default messaing app.</td></tr><tr><td>MIDDLE_CLICK</td><td>The user middle clicked the object's primary link with the intent to open its full representation in a new tab.</td></tr><tr><td>PAGE_BLUR</td><td>The user puts a page out of focus but keeps it in the background.</td></tr><tr><td>PAGE_FOCUS</td><td>The user puts a page in focus, meaning it is the first to receive keyboard events.</td></tr><tr><td>PAGE_LEAVE</td><td>The user leaves a page and it is unloaded (by clicking a link, closing the tab/window, etc).</td></tr><tr><td>PREVIEW</td><td>The user clicked the object's inline preview affordance.</td></tr><tr><td>RIGHT_CLICK</td><td>The user right clicked the object's primary link. This may indicate an intent to open it in a new tab or copy it.</td></tr><tr><td>SECTION_CLICK</td><td>The user clicked a link to a subsection of the primary object.</td></tr><tr><td>SEEN</td><td>The user has likely seen the object (e.g. took action to make the object visible within the user's viewport).</td></tr><tr><td>SHARE</td><td>The user shared the object with another user.</td></tr><tr><td>SHOW_MORE</td><td>The user clicked the object's show more affordance.</td></tr><tr><td>UPVOTE</td><td>The user gave feedback that the object was useful.</td></tr><tr><td>VIEW</td><td>The object was visible within the user's viewport.</td></tr><tr><td>VISIBLE</td><td>The object was visible within the user's viewport.</td></tr></tbody></table></div><p><strong>Possible values:</strong> [<code>CLICK</code>, <code>CONTAINER_CLICK</code>, <code>COPY_LINK</code>, <code>CREATE</code>, <code>DISMISS</code>, <code>DOWNVOTE</code>, <code>EMAIL</code>, <code>EXECUTE</code>, <code>FILTER</code>, <code>FIRST_TOKEN</code>, <code>FOCUS_IN</code>, <code>LAST_TOKEN</code>, <code>MANUAL_FEEDBACK</code>, <code>MARK_AS_READ</code>, <code>MESSAGE</code>, <code>MIDDLE_CLICK</code>, <code>PAGE_BLUR</code>, <code>PAGE_FOCUS</code>, <code>PAGE_LEAVE</code>, <code>PREVIEW</code>, <code>RELATED_CLICK</code>, <code>RIGHT_CLICK</code>, <code>SECTION_CLICK</code>, <code>SEEN</code>, <code>SHARE</code>, <code>SHOW_MORE</code>, <code>UPVOTE</code>, <code>VIEW</code>, <code>VISIBLE</code>]</p></div></div></div><div id="request-position"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">position</strong><span class="openapi-schema__name">integer</span></span><p>Position of the element in the case that the client controls order (such as feed and autocomplete).</p></div></div></div><div id="request-payload"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">payload</strong><span class="openapi-schema__name">string</span></span><p>For type MANUAL_FEEDBACK, contains string of user feedback. For autocomplete, partial query string. For feed, string of user feedback in addition to manual feedback signals extracted from all suggested content.</p></div></div></div><div id="request-sessioninfo"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-sessioninfo"><span class="openapi-schema__container"><strong class="openapi-schema__property">sessionInfo</strong><span class="openapi-schema__name"> SessionInfo</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div id="request-sessioninfo-sessiontrackingtoken"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">sessionTrackingToken</strong><span class="openapi-schema__name">string</span></span><p>A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab.</p></div></div></div><div id="request-sessioninfo-tabid"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">tabId</strong><span class="openapi-schema__name">string</span></span><p>A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab.</p></div></div></div><div id="request-sessioninfo-lastseen"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">lastSeen</strong><span class="openapi-schema__name">string&lt;date-time&gt;</span></span><p>The last time the server saw this token.</p></div></div></div><div id="request-sessioninfo-lastquery"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">lastQuery</strong><span class="openapi-schema__name">string</span></span><p>The last query seen by the server.</p></div></div></div></div></div></div></details></div></div><div id="request-timestamp"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">timestamp</strong><span class="openapi-schema__name">string&lt;date-time&gt;</span></span><p>The ISO 8601 timestamp when the event occured.</p></div></div></div><div id="request-user"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-user"><span class="openapi-schema__container"><strong class="openapi-schema__property">user</strong><span class="openapi-schema__name"> User</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div id="request-user-userid"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">userID</strong><span class="openapi-schema__name">string</span></span><p>An opaque user ID for the claimed authority (i.e., the actas param, or the origid if actas is not specified).</p></div></div></div><div id="request-user-origid"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">origID</strong><span class="openapi-schema__name">string</span></span><p>An opaque user ID for the authenticated user (ignores actas).</p></div></div></div></div></div></div></details></div></div><div id="request-pathname"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">pathname</strong><span class="openapi-schema__name">string</span></span><p>The path the client was at when the feedback event triggered.</p></div></div></div><div id="request-channels"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">channels</strong><span class="openapi-schema__name">string[]</span></span><p>Where the feedback will be sent, e.g. to Glean, the user's company, or both. If no channels are specified, feedback will go only to Glean.</p><p><strong>Possible values:</strong> [<code>COMPANY</code>, <code>GLEAN</code>]</p></div></div></div><div id="request-url"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">url</strong><span class="openapi-schema__name">string</span></span><p>The URL the client was at when the feedback event triggered.</p></div></div></div><div id="request-uitree"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">uiTree</strong><span class="openapi-schema__name">string[]</span></span><p>The UI element tree associated with the event, if any.</p></div></div></div><div id="request-uielement"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">uiElement</strong><span class="openapi-schema__name">string</span></span><p>The UI element associated with the event, if any.</p></div></div></div><div id="request-manualfeedbackinfo"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-manualfeedbackinfo"><span class="openapi-schema__container"><strong class="openapi-schema__property">manualFeedbackInfo</strong><span class="openapi-schema__name"> ManualFeedbackInfo</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div id="request-manualfeedbackinfo-email"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">email</strong><span class="openapi-schema__name">string</span></span><p>The email address of the user who submitted the Feedback.event.MANUAL_FEEDBACK event.</p></div></div></div><div id="request-manualfeedbackinfo-source"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">source</strong><span class="openapi-schema__name">string</span></span><p>The source associated with the Feedback.event.MANUAL_FEEDBACK event.</p><p><strong>Possible values:</strong> [<code>AUTOCOMPLETE</code>, <code>CALENDAR</code>, <code>CHAT</code>, <code>CHAT_GENERAL</code>, <code>CONCEPT_CARD</code>, <code>DESKTOP_APP</code>, <code>DISAMBIGUATION_CARD</code>, <code>EXPERT_DETECTION</code>, <code>FEED</code>, <code>GENERATED_Q_AND_A</code>, <code>INLINE_MENU</code>, <code>NATIVE_RESULT</code>, <code>Q_AND_A</code>, <code>RELATED_QUESTIONS</code>, <code>REPORT_ISSUE</code>, <code>SCIOBOT</code>, <code>SEARCH</code>, <code>SIDEBAR</code>, <code>SUMMARY</code>]</p></div></div></div><div id="request-manualfeedbackinfo-issue"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property openapi-schema__strikethrough">issue</strong><span class="openapi-schema__name">string</span><span class="openapi-schema__divider"></span><span class="openapi-schema__deprecated">deprecated</span></span><p>The issue the user indicated in the feedback.</p></div></div></div><div id="request-manualfeedbackinfo-issues"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">issues</strong><span class="openapi-schema__name">string[]</span></span><p>The issue(s) the user indicated in the feedback.</p><p><strong>Possible values:</strong> [<code>INACCURATE_RESPONSE</code>, <code>INCOMPLETE_OR_NO_ANSWER</code>, <code>INCORRECT_CITATION</code>, <code>MISSING_CITATION</code>, <code>OTHER</code>, <code>OUTDATED_RESPONSE</code>, <code>RESULT_MISSING</code>, <code>RESULT_SHOULD_NOT_APPEAR</code>, <code>RESULTS_HELPFUL</code>, <code>RESULTS_POOR_ORDER</code>, <code>TOO_MUCH_ONE_KIND</code>]</p></div></div></div><div id="request-manualfeedbackinfo-imageurls"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">imageUrls</strong><span class="openapi-schema__name">string[]</span></span><p>URLs of images uploaded by user when providing feedback</p></div></div></div><div id="request-manualfeedbackinfo-query"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">query</strong><span class="openapi-schema__name">string</span></span><p>The query associated with the Feedback.event.MANUAL_FEEDBACK event.</p></div></div></div><div id="request-manualfeedbackinfo-obscuredquery"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">obscuredQuery</strong><span class="openapi-schema__name">string</span></span><p>The query associated with the Feedback.event.MANUAL_FEEDBACK event, but obscured such that the vowels are replaced with special characters. For search feedback events only.</p></div></div></div><div id="request-manualfeedbackinfo-activetab"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">activeTab</strong><span class="openapi-schema__name">string</span></span><p>Which tabs the user had chosen at the time of the Feedback.event.MANUAL_FEEDBACK event. For search feedback events only.</p></div></div></div><div id="request-manualfeedbackinfo-comments"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">comments</strong><span class="openapi-schema__name">string</span></span><p>The comments users can optionally add to the Feedback.event.MANUAL_FEEDBACK events.</p></div></div></div><div id="request-manualfeedbackinfo-searchresults"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">searchResults</strong><span class="openapi-schema__name">string[]</span></span><p>The array of search result Glean Document IDs, ordered by top to bottom result.</p></div></div></div><div id="request-manualfeedbackinfo-previousmessages"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">previousMessages</strong><span class="openapi-schema__name">string[]</span></span><p>The array of previous messages in a chat session, ordered by oldest to newest.</p></div></div></div><div id="request-manualfeedbackinfo-chattranscript"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-manualfeedbackinfo-chattranscript"><span class="openapi-schema__container"><strong class="openapi-schema__property">chatTranscript</strong><span class="openapi-schema__name"> FeedbackChatExchange[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Array of previous request/response exchanges, ordered by oldest to newest.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="request-manualfeedbackinfo-chattranscript-timestamp"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">timestamp</strong><span class="openapi-schema__name">integer&lt;int64&gt;</span></span><p>Unix timestamp in millis for the chat request.</p></div></div></div><div id="request-manualfeedbackinfo-chattranscript-agent"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">agent</strong><span class="openapi-schema__name">string</span></span><p>Either DEFAULT (company knowledge) or GPT (world knowledge).</p></div></div></div><div id="request-manualfeedbackinfo-chattranscript-userquery"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">userQuery</strong><span class="openapi-schema__name">string</span></span><p>Initial query entered by the user.</p></div></div></div><div id="request-manualfeedbackinfo-chattranscript-searchquery"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">searchQuery</strong><span class="openapi-schema__name">string</span></span><p>Search query performed by the agent.</p></div></div></div><div id="request-manualfeedbackinfo-chattranscript-resultdocuments"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-manualfeedbackinfo-chattranscript-resultdocuments"><span class="openapi-schema__container"><strong class="openapi-schema__property">resultDocuments</strong><span class="openapi-schema__name"> undefined[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>List of documents read by the agent.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="request-manualfeedbackinfo-chattranscript-resultdocuments-title"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">title</strong><span class="openapi-schema__name">string</span></span></div></div></div><div id="request-manualfeedbackinfo-chattranscript-resultdocuments-url"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">url</strong><span class="openapi-schema__name">string</span></span></div></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><div id="request-manualfeedbackinfo-chattranscript-response"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">response</strong><span class="openapi-schema__name">string</span></span></div></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><div id="request-manualfeedbackinfo-numqueriesfromfirstrun"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">numQueriesFromFirstRun</strong><span class="openapi-schema__name">integer</span></span><p>How many times this query has been run in the past.</p></div></div></div><div id="request-manualfeedbackinfo-vote"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">vote</strong><span class="openapi-schema__name">string</span></span><p>The vote associated with the Feedback.event.MANUAL_FEEDBACK event.</p><p><strong>Possible values:</strong> [<code>UPVOTE</code>, <code>DOWNVOTE</code>]</p></div></div></div><div id="request-manualfeedbackinfo-rating"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">rating</strong><span class="openapi-schema__name">integer</span></span><p>A rating associated with the user feedback. The value will be between one and the maximum given by ratingScale, inclusive.</p></div></div></div><div id="request-manualfeedbackinfo-ratingkey"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">ratingKey</strong><span class="openapi-schema__name">string</span></span><p>A description of the rating that contextualizes how it appeared to the user, e.g. "satisfied".</p></div></div></div><div id="request-manualfeedbackinfo-ratingscale"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">ratingScale</strong><span class="openapi-schema__name">integer</span></span><p>The scale of comparison for a rating associated with the feedback. Rating values start from one and go up to the maximum specified by ratingScale. For example, a five-option satisfaction rating will have a ratingScale of 5 and a thumbs-up/thumbs-down rating will have a ratingScale of 2.</p></div></div></div></div></div></div></details></div></div><div id="request-seenfeedbackinfo"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-seenfeedbackinfo"><span class="openapi-schema__container"><strong class="openapi-schema__property">seenFeedbackInfo</strong><span class="openapi-schema__name"> SeenFeedbackInfo</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div id="request-seenfeedbackinfo-isexplicit"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">isExplicit</strong><span class="openapi-schema__name">boolean</span></span><p>The confidence of the user seeing the object is high because they explicitly interacted with it e.g. answer impression in SERP with additional user interaction.</p></div></div></div></div></div></div></details></div></div><div id="request-userviewinfo"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-userviewinfo"><span class="openapi-schema__container"><strong class="openapi-schema__property">userViewInfo</strong><span class="openapi-schema__name"> UserViewInfo</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div id="request-userviewinfo-docid"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">docId</strong><span class="openapi-schema__name">string</span></span><p>Unique Glean Document ID of the associated document.</p></div></div></div><div id="request-userviewinfo-doctitle"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">docTitle</strong><span class="openapi-schema__name">string</span></span><p>Title of associated document.</p></div></div></div><div id="request-userviewinfo-docurl"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">docUrl</strong><span class="openapi-schema__name">string</span></span><p>URL of associated document.</p></div></div></div></div></div></div></details></div></div><div id="request-workflowfeedbackinfo"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-workflowfeedbackinfo"><span class="openapi-schema__container"><strong class="openapi-schema__property">workflowFeedbackInfo</strong><span class="openapi-schema__name"> WorkflowFeedbackInfo</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div id="request-workflowfeedbackinfo-source"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">source</strong><span class="openapi-schema__name">string</span></span><p>Where the feedback of the workflow originated from</p><p><strong>Possible values:</strong> [<code>ZERO_STATE</code>, <code>LIBRARY</code>, <code>HOMEPAGE</code>]</p></div></div></div></div></div></div></details></div></div><div id="request-applicationid"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">applicationId</strong><span class="openapi-schema__name">string</span></span><p>The application ID of the client that sent the feedback event.</p></div></div></div><div id="request-agentid"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">agentId</strong><span class="openapi-schema__name">string</span></span><p>The agent ID of the client that sent the feedback event.</p></div></div></div></ul></div></div></details></div></div></div>, '\n', <div class="openapi-tabs__container"><div class="openapi-tabs__response-header-section"><h2 class="anchor anchorWithStickyNavbar_LWe7 openapi-tabs__heading openapi-tabs__response-header" id="responses">Responses<a aria-label="Direct link to Responses" class="hash-link" href="#responses" title="Direct link to Responses">​</a></h2><div class="openapi-tabs__response-container"><ul aria-orientation="horizontal" class="openapi-tabs__response-list-container tabs" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__response-code-item success active" role="tab" tabindex="0">200</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">400</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">401</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">429</li></ul></div></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>OK</p></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Invalid request</p></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Not Authorized</p></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Too Many Requests</p></div></div></div></div></div>]
HEREIMP <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-sessioninfo"><span class="openapi-schema__container"><strong class="openapi-schema__property">sessionInfo</strong><span class="openapi-schema__name"> SessionInfo</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div id="request-sessioninfo-sessiontrackingtoken"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">sessionTrackingToken</strong><span class="openapi-schema__name">string</span></span><p>A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab.</p></div></div></div><div id="request-sessioninfo-tabid"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">tabId</strong><span class="openapi-schema__name">string</span></span><p>A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab.</p></div></div></div><div id="request-sessioninfo-lastseen"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">lastSeen</strong><span class="openapi-schema__name">string&lt;date-time&gt;</span></span><p>The last time the server saw this token.</p></div></div></div><div id="request-sessioninfo-lastquery"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">lastQuery</strong><span class="openapi-schema__name">string</span></span><p>The last query seen by the server.</p></div></div></div></div></div></div></details>
HEREIMP <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-user"><span class="openapi-schema__container"><strong class="openapi-schema__property">user</strong><span class="openapi-schema__name"> User</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div id="request-user-userid"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">userID</strong><span class="openapi-schema__name">string</span></span><p>An opaque user ID for the claimed authority (i.e., the actas param, or the origid if actas is not specified).</p></div></div></div><div id="request-user-origid"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">origID</strong><span class="openapi-schema__name">string</span></span><p>An opaque user ID for the authenticated user (ignores actas).</p></div></div></div></div></div></div></details>
HEREIMP <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-manualfeedbackinfo"><span class="openapi-schema__container"><strong class="openapi-schema__property">manualFeedbackInfo</strong><span class="openapi-schema__name"> ManualFeedbackInfo</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div id="request-manualfeedbackinfo-email"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">email</strong><span class="openapi-schema__name">string</span></span><p>The email address of the user who submitted the Feedback.event.MANUAL_FEEDBACK event.</p></div></div></div><div id="request-manualfeedbackinfo-source"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">source</strong><span class="openapi-schema__name">string</span></span><p>The source associated with the Feedback.event.MANUAL_FEEDBACK event.</p><p><strong>Possible values:</strong> [<code>AUTOCOMPLETE</code>, <code>CALENDAR</code>, <code>CHAT</code>, <code>CHAT_GENERAL</code>, <code>CONCEPT_CARD</code>, <code>DESKTOP_APP</code>, <code>DISAMBIGUATION_CARD</code>, <code>EXPERT_DETECTION</code>, <code>FEED</code>, <code>GENERATED_Q_AND_A</code>, <code>INLINE_MENU</code>, <code>NATIVE_RESULT</code>, <code>Q_AND_A</code>, <code>RELATED_QUESTIONS</code>, <code>REPORT_ISSUE</code>, <code>SCIOBOT</code>, <code>SEARCH</code>, <code>SIDEBAR</code>, <code>SUMMARY</code>]</p></div></div></div><div id="request-manualfeedbackinfo-issue"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property openapi-schema__strikethrough">issue</strong><span class="openapi-schema__name">string</span><span class="openapi-schema__divider"></span><span class="openapi-schema__deprecated">deprecated</span></span><p>The issue the user indicated in the feedback.</p></div></div></div><div id="request-manualfeedbackinfo-issues"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">issues</strong><span class="openapi-schema__name">string[]</span></span><p>The issue(s) the user indicated in the feedback.</p><p><strong>Possible values:</strong> [<code>INACCURATE_RESPONSE</code>, <code>INCOMPLETE_OR_NO_ANSWER</code>, <code>INCORRECT_CITATION</code>, <code>MISSING_CITATION</code>, <code>OTHER</code>, <code>OUTDATED_RESPONSE</code>, <code>RESULT_MISSING</code>, <code>RESULT_SHOULD_NOT_APPEAR</code>, <code>RESULTS_HELPFUL</code>, <code>RESULTS_POOR_ORDER</code>, <code>TOO_MUCH_ONE_KIND</code>]</p></div></div></div><div id="request-manualfeedbackinfo-imageurls"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">imageUrls</strong><span class="openapi-schema__name">string[]</span></span><p>URLs of images uploaded by user when providing feedback</p></div></div></div><div id="request-manualfeedbackinfo-query"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">query</strong><span class="openapi-schema__name">string</span></span><p>The query associated with the Feedback.event.MANUAL_FEEDBACK event.</p></div></div></div><div id="request-manualfeedbackinfo-obscuredquery"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">obscuredQuery</strong><span class="openapi-schema__name">string</span></span><p>The query associated with the Feedback.event.MANUAL_FEEDBACK event, but obscured such that the vowels are replaced with special characters. For search feedback events only.</p></div></div></div><div id="request-manualfeedbackinfo-activetab"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">activeTab</strong><span class="openapi-schema__name">string</span></span><p>Which tabs the user had chosen at the time of the Feedback.event.MANUAL_FEEDBACK event. For search feedback events only.</p></div></div></div><div id="request-manualfeedbackinfo-comments"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">comments</strong><span class="openapi-schema__name">string</span></span><p>The comments users can optionally add to the Feedback.event.MANUAL_FEEDBACK events.</p></div></div></div><div id="request-manualfeedbackinfo-searchresults"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">searchResults</strong><span class="openapi-schema__name">string[]</span></span><p>The array of search result Glean Document IDs, ordered by top to bottom result.</p></div></div></div><div id="request-manualfeedbackinfo-previousmessages"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">previousMessages</strong><span class="openapi-schema__name">string[]</span></span><p>The array of previous messages in a chat session, ordered by oldest to newest.</p></div></div></div><div id="request-manualfeedbackinfo-chattranscript"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-manualfeedbackinfo-chattranscript"><span class="openapi-schema__container"><strong class="openapi-schema__property">chatTranscript</strong><span class="openapi-schema__name"> FeedbackChatExchange[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Array of previous request/response exchanges, ordered by oldest to newest.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="request-manualfeedbackinfo-chattranscript-timestamp"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">timestamp</strong><span class="openapi-schema__name">integer&lt;int64&gt;</span></span><p>Unix timestamp in millis for the chat request.</p></div></div></div><div id="request-manualfeedbackinfo-chattranscript-agent"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">agent</strong><span class="openapi-schema__name">string</span></span><p>Either DEFAULT (company knowledge) or GPT (world knowledge).</p></div></div></div><div id="request-manualfeedbackinfo-chattranscript-userquery"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">userQuery</strong><span class="openapi-schema__name">string</span></span><p>Initial query entered by the user.</p></div></div></div><div id="request-manualfeedbackinfo-chattranscript-searchquery"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">searchQuery</strong><span class="openapi-schema__name">string</span></span><p>Search query performed by the agent.</p></div></div></div><div id="request-manualfeedbackinfo-chattranscript-resultdocuments"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-manualfeedbackinfo-chattranscript-resultdocuments"><span class="openapi-schema__container"><strong class="openapi-schema__property">resultDocuments</strong><span class="openapi-schema__name"> undefined[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>List of documents read by the agent.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="request-manualfeedbackinfo-chattranscript-resultdocuments-title"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">title</strong><span class="openapi-schema__name">string</span></span></div></div></div><div id="request-manualfeedbackinfo-chattranscript-resultdocuments-url"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">url</strong><span class="openapi-schema__name">string</span></span></div></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><div id="request-manualfeedbackinfo-chattranscript-response"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">response</strong><span class="openapi-schema__name">string</span></span></div></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><div id="request-manualfeedbackinfo-numqueriesfromfirstrun"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">numQueriesFromFirstRun</strong><span class="openapi-schema__name">integer</span></span><p>How many times this query has been run in the past.</p></div></div></div><div id="request-manualfeedbackinfo-vote"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">vote</strong><span class="openapi-schema__name">string</span></span><p>The vote associated with the Feedback.event.MANUAL_FEEDBACK event.</p><p><strong>Possible values:</strong> [<code>UPVOTE</code>, <code>DOWNVOTE</code>]</p></div></div></div><div id="request-manualfeedbackinfo-rating"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">rating</strong><span class="openapi-schema__name">integer</span></span><p>A rating associated with the user feedback. The value will be between one and the maximum given by ratingScale, inclusive.</p></div></div></div><div id="request-manualfeedbackinfo-ratingkey"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">ratingKey</strong><span class="openapi-schema__name">string</span></span><p>A description of the rating that contextualizes how it appeared to the user, e.g. "satisfied".</p></div></div></div><div id="request-manualfeedbackinfo-ratingscale"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">ratingScale</strong><span class="openapi-schema__name">integer</span></span><p>The scale of comparison for a rating associated with the feedback. Rating values start from one and go up to the maximum specified by ratingScale. For example, a five-option satisfaction rating will have a ratingScale of 5 and a thumbs-up/thumbs-down rating will have a ratingScale of 2.</p></div></div></div></div></div></div></details>
HEREIMP <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-seenfeedbackinfo"><span class="openapi-schema__container"><strong class="openapi-schema__property">seenFeedbackInfo</strong><span class="openapi-schema__name"> SeenFeedbackInfo</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div id="request-seenfeedbackinfo-isexplicit"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">isExplicit</strong><span class="openapi-schema__name">boolean</span></span><p>The confidence of the user seeing the object is high because they explicitly interacted with it e.g. answer impression in SERP with additional user interaction.</p></div></div></div></div></div></div></details>
HEREIMP <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-userviewinfo"><span class="openapi-schema__container"><strong class="openapi-schema__property">userViewInfo</strong><span class="openapi-schema__name"> UserViewInfo</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div id="request-userviewinfo-docid"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">docId</strong><span class="openapi-schema__name">string</span></span><p>Unique Glean Document ID of the associated document.</p></div></div></div><div id="request-userviewinfo-doctitle"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">docTitle</strong><span class="openapi-schema__name">string</span></span><p>Title of associated document.</p></div></div></div><div id="request-userviewinfo-docurl"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">docUrl</strong><span class="openapi-schema__name">string</span></span><p>URL of associated document.</p></div></div></div></div></div></div></details>
HEREIMP <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-workflowfeedbackinfo"><span class="openapi-schema__container"><strong class="openapi-schema__property">workflowFeedbackInfo</strong><span class="openapi-schema__name"> WorkflowFeedbackInfo</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div id="request-workflowfeedbackinfo-source"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">source</strong><span class="openapi-schema__name">string</span></span><p>Where the feedback of the workflow originated from</p><p><strong>Possible values:</strong> [<code>ZERO_STATE</code>, <code>LIBRARY</code>, <code>HOMEPAGE</code>]</p></div></div></div></div></div></div></details>
HERESCHEMA {'sessionInfo': {'type': 'SessionInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'sessionTrackingToken': {'type': 'string', 'description': "A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab.", 'required': False}, 'tabId': {'type': 'string', 'description': 'A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab.', 'required': False}, 'lastSeen': {'type': 'string<date-time>', 'description': 'The last time the server saw this token.', 'required': False}, 'lastQuery': {'type': 'string', 'description': 'The last query seen by the server.', 'required': False}}}, 'user': {'type': 'User', 'description': '', 'required': False, 'is_array': False, 'properties': {'userID': {'type': 'string', 'description': 'An opaque user ID for the claimed authority (i.e., the actas param, or the origid if actas is not specified).', 'required': False}, 'origID': {'type': 'string', 'description': 'An opaque user ID for the authenticated user (ignores actas).', 'required': False}}}, 'manualFeedbackInfo': {'type': 'ManualFeedbackInfo', 'description': '', 'required': False, 'is_array': True, 'properties': {'email': {'type': 'string', 'description': 'The email address of the user who submitted the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'source': {'type': 'string', 'description': 'The source associated with the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'issue': {'type': 'string', 'description': 'The issue the user indicated in the feedback.', 'required': False}, 'issues': {'type': 'string[]', 'description': 'The issue(s) the user indicated in the feedback.', 'required': False}, 'imageUrls': {'type': 'string[]', 'description': 'URLs of images uploaded by user when providing feedback', 'required': False}, 'query': {'type': 'string', 'description': 'The query associated with the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'obscuredQuery': {'type': 'string', 'description': 'The query associated with the Feedback.event.MANUAL_FEEDBACK event, but obscured such that the vowels are replaced with special characters. For search feedback events only.', 'required': False}, 'activeTab': {'type': 'string', 'description': 'Which tabs the user had chosen at the time of the Feedback.event.MANUAL_FEEDBACK event. For search feedback events only.', 'required': False}, 'comments': {'type': 'string', 'description': 'The comments users can optionally add to the Feedback.event.MANUAL_FEEDBACK events.', 'required': False}, 'searchResults': {'type': 'string[]', 'description': 'The array of search result Glean Document IDs, ordered by top to bottom result.', 'required': False}, 'previousMessages': {'type': 'string[]', 'description': 'The array of previous messages in a chat session, ordered by oldest to newest.', 'required': False}, 'chatTranscript': {'type': 'FeedbackChatExchange[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'timestamp': {'type': 'integer<int64>', 'description': 'Unix timestamp in millis for the chat request.', 'required': False}, 'agent': {'type': 'string', 'description': 'Either DEFAULT (company knowledge) or GPT (world knowledge).', 'required': False}, 'userQuery': {'type': 'string', 'description': 'Initial query entered by the user.', 'required': False}, 'searchQuery': {'type': 'string', 'description': 'Search query performed by the agent.', 'required': False}, 'resultDocuments': {'type': 'undefined[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'title': {'type': 'string', 'description': '', 'required': False}, 'url': {'type': 'string', 'description': '', 'required': False}}}, 'response': {'type': 'string', 'description': '', 'required': False}}}, 'numQueriesFromFirstRun': {'type': 'integer', 'description': 'How many times this query has been run in the past.', 'required': False}, 'vote': {'type': 'string', 'description': 'The vote associated with the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'rating': {'type': 'integer', 'description': 'A rating associated with the user feedback. The value will be between one and the maximum given by ratingScale, inclusive.', 'required': False}, 'ratingKey': {'type': 'string', 'description': 'A description of the rating that contextualizes how it appeared to the user, e.g. "satisfied".', 'required': False}, 'ratingScale': {'type': 'integer', 'description': 'The scale of comparison for a rating associated with the feedback. Rating values start from one and go up to the maximum specified by ratingScale. For example, a five-option satisfaction rating will have a ratingScale of 5 and a thumbs-up/thumbs-down rating will have a ratingScale of 2.', 'required': False}}}, 'seenFeedbackInfo': {'type': 'SeenFeedbackInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'isExplicit': {'type': 'boolean', 'description': 'The confidence of the user seeing the object is high because they explicitly interacted with it e.g. answer impression in SERP with additional user interaction.', 'required': False}}}, 'userViewInfo': {'type': 'UserViewInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'docId': {'type': 'string', 'description': 'Unique Glean Document ID of the associated document.', 'required': False}, 'docTitle': {'type': 'string', 'description': 'Title of associated document.', 'required': False}, 'docUrl': {'type': 'string', 'description': 'URL of associated document.', 'required': False}}}, 'workflowFeedbackInfo': {'type': 'WorkflowFeedbackInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'source': {'type': 'string', 'description': 'Where the feedback of the workflow originated from', 'required': False}}}}
HERE2 <h2 class="anchor anchorWithStickyNavbar_LWe7 openapi-tabs__heading openapi-tabs__response-header" id="responses">Responses<a aria-label="Direct link to Responses" class="hash-link" href="#responses" title="Direct link to Responses">​</a></h2>
HERE3 [<div class="openapi-tabs__response-container"><ul aria-orientation="horizontal" class="openapi-tabs__response-list-container tabs" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__response-code-item success active" role="tab" tabindex="0">200</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">400</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">401</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">429</li></ul></div>]
HERESCHEMA {}
HEREREQUEST {'sessionInfo': {'type': 'SessionInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'sessionTrackingToken': {'type': 'string', 'description': "A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab.", 'required': False}, 'tabId': {'type': 'string', 'description': 'A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab.', 'required': False}, 'lastSeen': {'type': 'string<date-time>', 'description': 'The last time the server saw this token.', 'required': False}, 'lastQuery': {'type': 'string', 'description': 'The last query seen by the server.', 'required': False}}}, 'user': {'type': 'User', 'description': '', 'required': False, 'is_array': False, 'properties': {'userID': {'type': 'string', 'description': 'An opaque user ID for the claimed authority (i.e., the actas param, or the origid if actas is not specified).', 'required': False}, 'origID': {'type': 'string', 'description': 'An opaque user ID for the authenticated user (ignores actas).', 'required': False}}}, 'manualFeedbackInfo': {'type': 'ManualFeedbackInfo', 'description': '', 'required': False, 'is_array': True, 'properties': {'email': {'type': 'string', 'description': 'The email address of the user who submitted the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'source': {'type': 'string', 'description': 'The source associated with the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'issue': {'type': 'string', 'description': 'The issue the user indicated in the feedback.', 'required': False}, 'issues': {'type': 'string[]', 'description': 'The issue(s) the user indicated in the feedback.', 'required': False}, 'imageUrls': {'type': 'string[]', 'description': 'URLs of images uploaded by user when providing feedback', 'required': False}, 'query': {'type': 'string', 'description': 'The query associated with the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'obscuredQuery': {'type': 'string', 'description': 'The query associated with the Feedback.event.MANUAL_FEEDBACK event, but obscured such that the vowels are replaced with special characters. For search feedback events only.', 'required': False}, 'activeTab': {'type': 'string', 'description': 'Which tabs the user had chosen at the time of the Feedback.event.MANUAL_FEEDBACK event. For search feedback events only.', 'required': False}, 'comments': {'type': 'string', 'description': 'The comments users can optionally add to the Feedback.event.MANUAL_FEEDBACK events.', 'required': False}, 'searchResults': {'type': 'string[]', 'description': 'The array of search result Glean Document IDs, ordered by top to bottom result.', 'required': False}, 'previousMessages': {'type': 'string[]', 'description': 'The array of previous messages in a chat session, ordered by oldest to newest.', 'required': False}, 'chatTranscript': {'type': 'FeedbackChatExchange[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'timestamp': {'type': 'integer<int64>', 'description': 'Unix timestamp in millis for the chat request.', 'required': False}, 'agent': {'type': 'string', 'description': 'Either DEFAULT (company knowledge) or GPT (world knowledge).', 'required': False}, 'userQuery': {'type': 'string', 'description': 'Initial query entered by the user.', 'required': False}, 'searchQuery': {'type': 'string', 'description': 'Search query performed by the agent.', 'required': False}, 'resultDocuments': {'type': 'undefined[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'title': {'type': 'string', 'description': '', 'required': False}, 'url': {'type': 'string', 'description': '', 'required': False}}}, 'response': {'type': 'string', 'description': '', 'required': False}}}, 'numQueriesFromFirstRun': {'type': 'integer', 'description': 'How many times this query has been run in the past.', 'required': False}, 'vote': {'type': 'string', 'description': 'The vote associated with the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'rating': {'type': 'integer', 'description': 'A rating associated with the user feedback. The value will be between one and the maximum given by ratingScale, inclusive.', 'required': False}, 'ratingKey': {'type': 'string', 'description': 'A description of the rating that contextualizes how it appeared to the user, e.g. "satisfied".', 'required': False}, 'ratingScale': {'type': 'integer', 'description': 'The scale of comparison for a rating associated with the feedback. Rating values start from one and go up to the maximum specified by ratingScale. For example, a five-option satisfaction rating will have a ratingScale of 5 and a thumbs-up/thumbs-down rating will have a ratingScale of 2.', 'required': False}}}, 'seenFeedbackInfo': {'type': 'SeenFeedbackInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'isExplicit': {'type': 'boolean', 'description': 'The confidence of the user seeing the object is high because they explicitly interacted with it e.g. answer impression in SERP with additional user interaction.', 'required': False}}}, 'userViewInfo': {'type': 'UserViewInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'docId': {'type': 'string', 'description': 'Unique Glean Document ID of the associated document.', 'required': False}, 'docTitle': {'type': 'string', 'description': 'Title of associated document.', 'required': False}, 'docUrl': {'type': 'string', 'description': 'URL of associated document.', 'required': False}}}, 'workflowFeedbackInfo': {'type': 'WorkflowFeedbackInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'source': {'type': 'string', 'description': 'Where the feedback of the workflow originated from', 'required': False}}}}
HERERESPONSE {}
HERE {'title': 'Report client activity', 'url': 'https://developers.glean.com/api/client-api/activity/feedback', 'authentication': 'Authorization: http', 'request_schema': {'sessionInfo': {'type': 'SessionInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'sessionTrackingToken': {'type': 'string', 'description': "A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab.", 'required': False}, 'tabId': {'type': 'string', 'description': 'A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab.', 'required': False}, 'lastSeen': {'type': 'string<date-time>', 'description': 'The last time the server saw this token.', 'required': False}, 'lastQuery': {'type': 'string', 'description': 'The last query seen by the server.', 'required': False}}}, 'user': {'type': 'User', 'description': '', 'required': False, 'is_array': False, 'properties': {'userID': {'type': 'string', 'description': 'An opaque user ID for the claimed authority (i.e., the actas param, or the origid if actas is not specified).', 'required': False}, 'origID': {'type': 'string', 'description': 'An opaque user ID for the authenticated user (ignores actas).', 'required': False}}}, 'manualFeedbackInfo': {'type': 'ManualFeedbackInfo', 'description': '', 'required': False, 'is_array': True, 'properties': {'email': {'type': 'string', 'description': 'The email address of the user who submitted the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'source': {'type': 'string', 'description': 'The source associated with the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'issue': {'type': 'string', 'description': 'The issue the user indicated in the feedback.', 'required': False}, 'issues': {'type': 'string[]', 'description': 'The issue(s) the user indicated in the feedback.', 'required': False}, 'imageUrls': {'type': 'string[]', 'description': 'URLs of images uploaded by user when providing feedback', 'required': False}, 'query': {'type': 'string', 'description': 'The query associated with the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'obscuredQuery': {'type': 'string', 'description': 'The query associated with the Feedback.event.MANUAL_FEEDBACK event, but obscured such that the vowels are replaced with special characters. For search feedback events only.', 'required': False}, 'activeTab': {'type': 'string', 'description': 'Which tabs the user had chosen at the time of the Feedback.event.MANUAL_FEEDBACK event. For search feedback events only.', 'required': False}, 'comments': {'type': 'string', 'description': 'The comments users can optionally add to the Feedback.event.MANUAL_FEEDBACK events.', 'required': False}, 'searchResults': {'type': 'string[]', 'description': 'The array of search result Glean Document IDs, ordered by top to bottom result.', 'required': False}, 'previousMessages': {'type': 'string[]', 'description': 'The array of previous messages in a chat session, ordered by oldest to newest.', 'required': False}, 'chatTranscript': {'type': 'FeedbackChatExchange[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'timestamp': {'type': 'integer<int64>', 'description': 'Unix timestamp in millis for the chat request.', 'required': False}, 'agent': {'type': 'string', 'description': 'Either DEFAULT (company knowledge) or GPT (world knowledge).', 'required': False}, 'userQuery': {'type': 'string', 'description': 'Initial query entered by the user.', 'required': False}, 'searchQuery': {'type': 'string', 'description': 'Search query performed by the agent.', 'required': False}, 'resultDocuments': {'type': 'undefined[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'title': {'type': 'string', 'description': '', 'required': False}, 'url': {'type': 'string', 'description': '', 'required': False}}}, 'response': {'type': 'string', 'description': '', 'required': False}}}, 'numQueriesFromFirstRun': {'type': 'integer', 'description': 'How many times this query has been run in the past.', 'required': False}, 'vote': {'type': 'string', 'description': 'The vote associated with the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'rating': {'type': 'integer', 'description': 'A rating associated with the user feedback. The value will be between one and the maximum given by ratingScale, inclusive.', 'required': False}, 'ratingKey': {'type': 'string', 'description': 'A description of the rating that contextualizes how it appeared to the user, e.g. "satisfied".', 'required': False}, 'ratingScale': {'type': 'integer', 'description': 'The scale of comparison for a rating associated with the feedback. Rating values start from one and go up to the maximum specified by ratingScale. For example, a five-option satisfaction rating will have a ratingScale of 5 and a thumbs-up/thumbs-down rating will have a ratingScale of 2.', 'required': False}}}, 'seenFeedbackInfo': {'type': 'SeenFeedbackInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'isExplicit': {'type': 'boolean', 'description': 'The confidence of the user seeing the object is high because they explicitly interacted with it e.g. answer impression in SERP with additional user interaction.', 'required': False}}}, 'userViewInfo': {'type': 'UserViewInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'docId': {'type': 'string', 'description': 'Unique Glean Document ID of the associated document.', 'required': False}, 'docTitle': {'type': 'string', 'description': 'Title of associated document.', 'required': False}, 'docUrl': {'type': 'string', 'description': 'URL of associated document.', 'required': False}}}, 'workflowFeedbackInfo': {'type': 'WorkflowFeedbackInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'source': {'type': 'string', 'description': 'Where the feedback of the workflow originated from', 'required': False}}}}, 'response_schema': {}, 'python_code_sample': 'from glean.api_client import Glean, models\nimport os\nwith Glean(\n    api_token=os.getenv("GLEAN_API_TOKEN", ""),\n    instance=os.getenv("GLEAN_INSTANCE", ""),\n) as glean:\n    glean.client.activity.feedback(feedback1={\n        "tracking_tokens": [\n            "trackingTokens",\n        ],\n        "event": models.Event.VIEW,\n    })\n    # Use the SDK ...\nimport http.client\nimport json\nconn = http.client.HTTPSConnection("instance-name-be.glean.com")\npayload = json.dumps({\n  "trackingTokens": [\n    "trackingTokens"\n  ],\n  "event": "VIEW"\n})\nheaders = {\n  \'Content-Type\': \'application/json\',\n  \'Authorization\': \'Bearer <token>\'\n}\nconn.request("POST", "/rest/api/v1/feedback", payload, headers)\nres = conn.getresponse()\ndata = res.read()\nprint(data.decode("utf-8"))', 'go_code_sample': 'package main\nimport(\n\t"context"\n\t"os"\n\tapiclientgo "github.com/gleanwork/api-client-go"\n\t"github.com/gleanwork/api-client-go/models/components"\n\t"log"\n)\nfunc main() {\n    ctx := context.Background()\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv("GLEAN_API_TOKEN")),\n        apiclientgo.WithInstance(os.Getenv("GLEAN_INSTANCE")),\n    )\n    res, err := s.Client.Activity.Feedback(ctx, nil, &components.Feedback{\n        TrackingTokens: []string{\n            "trackingTokens",\n        },\n        Event: components.EventView,\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}\npackage main\nimport (\n  "fmt"\n  "strings"\n  "net/http"\n  "io"\n)\nfunc main() {\n  url := "https://instance-name-be.glean.com/rest/api/v1/feedback"\n  method := "POST"\n  payload := strings.NewReader(`{\n  "trackingTokens": [\n    "trackingTokens"\n  ],\n  "event": "VIEW"\n}`)\n  client := &http.Client {\n  }\n  req, err := http.NewRequest(method, url, payload)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  req.Header.Add("Content-Type", "application/json")\n  req.Header.Add("Authorization", "Bearer <token>")\n  res, err := client.Do(req)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  defer res.Body.Close()\n  body, err := io.ReadAll(res.Body)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  fmt.Println(string(body))\n}', 'java_code_sample': 'package hello.world;\nimport java.lang.Exception;\nimport java.util.List;\nimport org.openapis.openapi.Glean;\nimport org.openapis.openapi.models.components.Event;\nimport org.openapis.openapi.models.components.Feedback;\nimport org.openapis.openapi.models.operations.FeedbackResponse;\npublic class Application {\n    public static void main(String[] args) throws Exception {\n        Glean sdk = Glean.builder()\n                .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))\n            .build();\n        FeedbackResponse res = sdk.client().activity().feedback()\n                .feedback1(Feedback.builder()\n                    .trackingTokens(List.of(\n                        "trackingTokens"))\n                    .event(Event.VIEW)\n                    .build())\n                .call();\n        // handle response\n    }\n}\nOkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nMediaType mediaType = MediaType.parse("application/json");\nRequestBody body = RequestBody.create(mediaType, "{\\n  \\"trackingTokens\\": [\\n    \\"trackingTokens\\"\\n  ],\\n  \\"event\\": \\"VIEW\\"\\n}");\nRequest request = new Request.Builder()\n  .url("https://instance-name-be.glean.com/rest/api/v1/feedback")\n  .method("POST", body)\n  .addHeader("Content-Type", "application/json")\n  .addHeader("Authorization", "Bearer <token>")\n  .build();\nResponse response = client.newCall(request).execute();', 'typescript_code_sample': 'import { Glean } from "@gleanwork/api-client";\nconst glean = new Glean({\n  apiToken: process.env["GLEAN_API_TOKEN"] ?? "",\n  instance: process.env["GLEAN_INSTANCE"] ?? "",\n});\nasync function run() {\n  await glean.client.activity.feedback({\n    trackingTokens: [\n      "trackingTokens",\n    ],\n    event: "VIEW",\n  });\n}\nrun();\nconst myHeaders = new Headers();\nmyHeaders.append("Content-Type", "application/json");\nmyHeaders.append("Authorization", "Bearer <token>");\nconst raw = JSON.stringify({\n  "trackingTokens": [\n    "trackingTokens"\n  ],\n  "event": "VIEW"\n});\nconst requestOptions = {\n  method: "POST",\n  headers: myHeaders,\n  body: raw,\n  redirect: "follow"\n};\nfetch("https://instance-name-be.glean.com/rest/api/v1/feedback", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));', 'curl_code_sample': 'curl -L \'https://instance-name-be.glean.com/rest/api/v1/feedback\' \\\n-H \'Content-Type: application/json\' \\\n-H \'Authorization: Bearer <token>\' \\\n-d \'{\n  "trackingTokens": [\n    "trackingTokens"\n  ],\n  "event": "VIEW"\n}\''}
Scraping https://developers.glean.com/api/client-api/agents/create-and-stream-run...
HERE2 <h2 class="anchor anchorWithStickyNavbar_LWe7 openapi-tabs__heading" id="request">Request<a aria-label="Direct link to Request" class="hash-link" href="#request" title="Direct link to Request">​</a></h2>
HERE3 ['\n', <div class="tabs-container"><div class="tabs__container"><div class="openapi-tabs__mime-container"><ul aria-orientation="horizontal" class="openapi-tabs__mime-list-container tabs openapi-tabs__mime" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__mime-item active" role="tab" tabindex="0">application/json</li></ul></div></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details mime" data-collapsed="false" open=""><summary><h3 class="openapi-markdown__details-summary-header-body">Body<strong class="openapi-schema__required">required</strong></h3></summary><div style="display: block; overflow: visible; height: auto;"><div class="collapsibleContent_i85q"><div style="text-align: left; margin-left: 1rem;"></div><ul style="margin-left: 1rem;"><div id="request-agent-id"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">agent_id</strong><span class="openapi-schema__name">Agent Id (string)</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p>The ID of the agent to run.</p></div></div></div><div id="request-input"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-input"><span class="openapi-schema__container"><strong class="openapi-schema__property">input</strong><span class="openapi-schema__name"> object</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The input to the agent.</p></div><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">property</strong><span class="openapi-schema__name">any</span></span><p>The input to the agent.</p></div></div></div></div></div></details></div></div><div id="request-messages"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-messages"><span class="openapi-schema__container"><strong class="openapi-schema__property">messages</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The messages to pass an input to the agent.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="request-messages-role"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">role</strong><span class="openapi-schema__name">Role (string)</span></span><p>The role of the message.</p><div><strong>Example: </strong><span><code>USER</code></span></div></div></div></div><div id="request-messages-content"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-messages-content"><span class="openapi-schema__container"><strong class="openapi-schema__property">content</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The content of the message.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="request-messages-content-text"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">text</strong><span class="openapi-schema__name">string</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span></div></div></div><div id="request-messages-content-type"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">type</strong><span class="openapi-schema__name">ContentType (string)</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p><strong>Possible values:</strong> [<code>text</code>]</p></div></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><div id="request-metadata"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-metadata"><span class="openapi-schema__container"><strong class="openapi-schema__property">metadata</strong><span class="openapi-schema__name"> object</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The metadata to pass to the agent.</p></div><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">property</strong><span class="openapi-schema__name">any</span></span><p>The metadata to pass to the agent.</p></div></div></div></div></div></details></div></div></ul></div></div></details></div></div></div>, '\n', <div class="openapi-tabs__container"><div class="openapi-tabs__response-header-section"><h2 class="anchor anchorWithStickyNavbar_LWe7 openapi-tabs__heading openapi-tabs__response-header" id="responses">Responses<a aria-label="Direct link to Responses" class="hash-link" href="#responses" title="Direct link to Responses">​</a></h2><div class="openapi-tabs__response-container"><button class="openapi-tabs__arrow left"></button><ul aria-orientation="horizontal" class="openapi-tabs__response-list-container tabs" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__response-code-item success active" role="tab" tabindex="0">200</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">400</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">403</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">404</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">409</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">422</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">500</li></ul><button class="openapi-tabs__arrow right"></button></div></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Success</p></div></div><div class="tabs-container"><div class="tabs__container"><div class="openapi-tabs__mime-container"><ul aria-orientation="horizontal" class="openapi-tabs__mime-list-container tabs openapi-tabs__mime" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__mime-item active" role="tab" tabindex="0">text/event-stream</li></ul></div></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><div class="openapi-tabs__schema-container"><div class="openapi-tabs__schema-tabs-container"><ul aria-orientation="horizontal" class="openapi-tabs__schema-list-container tabs openapi-tabs__schema" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__schema-item active" role="tab" tabindex="0"><span class="openapi-tabs__schema-label">Schema</span></li><li aria-selected="false" class="tabs__item openapi-tabs__schema-item" role="tab" tabindex="-1"><span class="openapi-tabs__schema-label">Example (auto)</span></li></ul></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details response" data-collapsed="false" open=""><summary><strong class="openapi-markdown__details-summary-response">Schema</strong></summary><div style="display: block; overflow: visible; height: auto;"><div class="collapsibleContent_i85q"><div style="text-align: left; margin-left: 1rem;"></div><ul style="margin-left: 1rem;"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">string</strong><span class="openapi-schema__name">string</span></span><p>The server will send a stream of events in server-sent events (SSE) format.</p><div><strong>Example: </strong><span><code>id: 1
event: message
data: {"messages":[{"role":"GLEAN_AI","content":[{"text":"Hello","type":"text"}]}]}

id: 2
event: message
data: {"messages":[{"role":"GLEAN_AI","content":[{"text":",","type":"text"}]}]}

id: 3
event: message
data: {"messages":[{"role":"GLEAN_AI","content":[{"text":" I'm","type":"text"}]}]}

id: 4
event: message
data: {"messages":[{"role":"GLEAN_AI","content":[{"text":" your","type":"text"}]}]}
</code></span></div></div></div></ul></div></div></details></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div class="openapi-code__code-samples-container"><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #393A34; --prism-background-color: #f6f8fa;"><div class="codeBlockContent_QJqH"><pre class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color: rgb(57, 58, 52); background-color: rgb(246, 248, 250);" tabindex="0"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token string" style="color: rgb(227, 17, 108);">"id: 1\nevent: message\ndata: {\"messages\":[{\"role\":\"GLEAN_AI\",\"content\":[{\"text\":\"Hello\",\"type\":\"text\"}]}]}\n\nid: 2\nevent: message\ndata: {\"messages\":[{\"role\":\"GLEAN_AI\",\"content\":[{\"text\":\",\",\"type\":\"text\"}]}]}\n\nid: 3\nevent: message\ndata: {\"messages\":[{\"role\":\"GLEAN_AI\",\"content\":[{\"text\":\" I'm\",\"type\":\"text\"}]}]}\n\nid: 4\nevent: message\ndata: {\"messages\":[{\"role\":\"GLEAN_AI\",\"content\":[{\"text\":\" your\",\"type\":\"text\"}]}]}\n"</span><br/></span></code></pre><div class="buttonGroup_M5ko"><button aria-label="Copy code to clipboard" class="clean-btn" title="Copy" type="button"><span aria-hidden="true" class="copyButtonIcons_IEyt"><svg class="copyButtonIcon_TrPX" viewbox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z" fill="currentColor"></path></svg><svg class="copyButtonSuccessIcon_cVMy" viewbox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" fill="currentColor"></path></svg></span></button></div></div></div></div></div></div></div></div></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Bad request</p></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Forbidden</p></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Not Found</p></div></div><div class="tabs-container"><div class="tabs__container"><div class="openapi-tabs__mime-container"><ul aria-orientation="horizontal" class="openapi-tabs__mime-list-container tabs openapi-tabs__mime" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__mime-item active" role="tab" tabindex="0">application/json</li></ul></div></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><div class="openapi-tabs__schema-container"><div class="openapi-tabs__schema-tabs-container"><ul aria-orientation="horizontal" class="openapi-tabs__schema-list-container tabs openapi-tabs__schema" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__schema-item active" role="tab" tabindex="0"><span class="openapi-tabs__schema-label">Schema</span></li><li aria-selected="false" class="tabs__item openapi-tabs__schema-item" role="tab" tabindex="-1"><span class="openapi-tabs__schema-label">Example (auto)</span></li></ul></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details response" data-collapsed="false" open=""><summary><strong class="openapi-markdown__details-summary-response">Schema</strong></summary><div style="display: block; overflow: visible; height: auto;"><div class="collapsibleContent_i85q"><div style="text-align: left; margin-left: 1rem;"></div><ul style="margin-left: 1rem;"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">string</strong><span class="openapi-schema__name">ErrorResponse (string)</span></span><p>Error message returned from the server</p></div></div></ul></div></div></details></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div class="openapi-code__code-samples-container"><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #393A34; --prism-background-color: #f6f8fa;"><div class="codeBlockContent_QJqH"><pre class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color: rgb(57, 58, 52); background-color: rgb(246, 248, 250);" tabindex="0"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token string" style="color: rgb(227, 17, 108);">"string"</span><br/></span></code></pre><div class="buttonGroup_M5ko"><button aria-label="Copy code to clipboard" class="clean-btn" title="Copy" type="button"><span aria-hidden="true" class="copyButtonIcons_IEyt"><svg class="copyButtonIcon_TrPX" viewbox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z" fill="currentColor"></path></svg><svg class="copyButtonSuccessIcon_cVMy" viewbox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" fill="currentColor"></path></svg></span></button></div></div></div></div></div></div></div></div></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Conflict</p></div></div><div class="tabs-container"><div class="tabs__container"><div class="openapi-tabs__mime-container"><ul aria-orientation="horizontal" class="openapi-tabs__mime-list-container tabs openapi-tabs__mime" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__mime-item active" role="tab" tabindex="0">application/json</li></ul></div></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><div class="openapi-tabs__schema-container"><div class="openapi-tabs__schema-tabs-container"><ul aria-orientation="horizontal" class="openapi-tabs__schema-list-container tabs openapi-tabs__schema" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__schema-item active" role="tab" tabindex="0"><span class="openapi-tabs__schema-label">Schema</span></li><li aria-selected="false" class="tabs__item openapi-tabs__schema-item" role="tab" tabindex="-1"><span class="openapi-tabs__schema-label">Example (auto)</span></li></ul></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details response" data-collapsed="false" open=""><summary><strong class="openapi-markdown__details-summary-response">Schema</strong></summary><div style="display: block; overflow: visible; height: auto;"><div class="collapsibleContent_i85q"><div style="text-align: left; margin-left: 1rem;"></div><ul style="margin-left: 1rem;"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">string</strong><span class="openapi-schema__name">ErrorResponse (string)</span></span><p>Error message returned from the server</p></div></div></ul></div></div></details></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div class="openapi-code__code-samples-container"><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #393A34; --prism-background-color: #f6f8fa;"><div class="codeBlockContent_QJqH"><pre class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color: rgb(57, 58, 52); background-color: rgb(246, 248, 250);" tabindex="0"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token string" style="color: rgb(227, 17, 108);">"string"</span><br/></span></code></pre><div class="buttonGroup_M5ko"><button aria-label="Copy code to clipboard" class="clean-btn" title="Copy" type="button"><span aria-hidden="true" class="copyButtonIcons_IEyt"><svg class="copyButtonIcon_TrPX" viewbox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z" fill="currentColor"></path></svg><svg class="copyButtonSuccessIcon_cVMy" viewbox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" fill="currentColor"></path></svg></span></button></div></div></div></div></div></div></div></div></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Validation Error</p></div></div><div class="tabs-container"><div class="tabs__container"><div class="openapi-tabs__mime-container"><ul aria-orientation="horizontal" class="openapi-tabs__mime-list-container tabs openapi-tabs__mime" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__mime-item active" role="tab" tabindex="0">application/json</li></ul></div></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><div class="openapi-tabs__schema-container"><div class="openapi-tabs__schema-tabs-container"><ul aria-orientation="horizontal" class="openapi-tabs__schema-list-container tabs openapi-tabs__schema" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__schema-item active" role="tab" tabindex="0"><span class="openapi-tabs__schema-label">Schema</span></li><li aria-selected="false" class="tabs__item openapi-tabs__schema-item" role="tab" tabindex="-1"><span class="openapi-tabs__schema-label">Example (auto)</span></li></ul></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details response" data-collapsed="false" open=""><summary><strong class="openapi-markdown__details-summary-response">Schema</strong></summary><div style="display: block; overflow: visible; height: auto;"><div class="collapsibleContent_i85q"><div style="text-align: left; margin-left: 1rem;"></div><ul style="margin-left: 1rem;"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">string</strong><span class="openapi-schema__name">ErrorResponse (string)</span></span><p>Error message returned from the server</p></div></div></ul></div></div></details></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div class="openapi-code__code-samples-container"><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #393A34; --prism-background-color: #f6f8fa;"><div class="codeBlockContent_QJqH"><pre class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color: rgb(57, 58, 52); background-color: rgb(246, 248, 250);" tabindex="0"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token string" style="color: rgb(227, 17, 108);">"string"</span><br/></span></code></pre><div class="buttonGroup_M5ko"><button aria-label="Copy code to clipboard" class="clean-btn" title="Copy" type="button"><span aria-hidden="true" class="copyButtonIcons_IEyt"><svg class="copyButtonIcon_TrPX" viewbox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z" fill="currentColor"></path></svg><svg class="copyButtonSuccessIcon_cVMy" viewbox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" fill="currentColor"></path></svg></span></button></div></div></div></div></div></div></div></div></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Internal server error</p></div></div></div></div></div>]
HEREIMP <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-input"><span class="openapi-schema__container"><strong class="openapi-schema__property">input</strong><span class="openapi-schema__name"> object</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The input to the agent.</p></div><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">property</strong><span class="openapi-schema__name">any</span></span><p>The input to the agent.</p></div></div></div></div></div></details>
HEREIMP <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-messages"><span class="openapi-schema__container"><strong class="openapi-schema__property">messages</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The messages to pass an input to the agent.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="request-messages-role"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">role</strong><span class="openapi-schema__name">Role (string)</span></span><p>The role of the message.</p><div><strong>Example: </strong><span><code>USER</code></span></div></div></div></div><div id="request-messages-content"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-messages-content"><span class="openapi-schema__container"><strong class="openapi-schema__property">content</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The content of the message.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="request-messages-content-text"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">text</strong><span class="openapi-schema__name">string</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span></div></div></div><div id="request-messages-content-type"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">type</strong><span class="openapi-schema__name">ContentType (string)</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p><strong>Possible values:</strong> [<code>text</code>]</p></div></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details>
HEREIMP <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-metadata"><span class="openapi-schema__container"><strong class="openapi-schema__property">metadata</strong><span class="openapi-schema__name"> object</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The metadata to pass to the agent.</p></div><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">property</strong><span class="openapi-schema__name">any</span></span><p>The metadata to pass to the agent.</p></div></div></div></div></div></details>
HERESCHEMA {'input': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'messages': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'role': {'type': 'Role (string)', 'description': 'The role of the message.', 'required': False}, 'content': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'text': {'type': 'string', 'description': '', 'required': True}, 'type': {'type': 'ContentType (string)', 'description': 'Possible values:[text]', 'required': True}}}}}, 'metadata': {'type': 'object', 'description': '', 'required': False, 'is_array': False}}
HERE2 <h2 class="anchor anchorWithStickyNavbar_LWe7 openapi-tabs__heading openapi-tabs__response-header" id="responses">Responses<a aria-label="Direct link to Responses" class="hash-link" href="#responses" title="Direct link to Responses">​</a></h2>
HERE3 [<div class="openapi-tabs__response-container"><button class="openapi-tabs__arrow left"></button><ul aria-orientation="horizontal" class="openapi-tabs__response-list-container tabs" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__response-code-item success active" role="tab" tabindex="0">200</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">400</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">403</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">404</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">409</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">422</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">500</li></ul><button class="openapi-tabs__arrow right"></button></div>]
HERESCHEMA {}
HEREREQUEST {'input': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'messages': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'role': {'type': 'Role (string)', 'description': 'The role of the message.', 'required': False}, 'content': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'text': {'type': 'string', 'description': '', 'required': True}, 'type': {'type': 'ContentType (string)', 'description': 'Possible values:[text]', 'required': True}}}}}, 'metadata': {'type': 'object', 'description': '', 'required': False, 'is_array': False}}
HERERESPONSE {}
HERE {'title': 'Create an agent run and stream the response', 'url': 'https://developers.glean.com/api/client-api/agents/create-and-stream-run', 'authentication': 'Authorization: http', 'request_schema': {'input': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'messages': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'role': {'type': 'Role (string)', 'description': 'The role of the message.', 'required': False}, 'content': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'text': {'type': 'string', 'description': '', 'required': True}, 'type': {'type': 'ContentType (string)', 'description': 'Possible values:[text]', 'required': True}}}}}, 'metadata': {'type': 'object', 'description': '', 'required': False, 'is_array': False}}, 'response_schema': {}, 'python_code_sample': 'from glean.api_client import Glean\nimport os\nwith Glean(\n    api_token=os.getenv("GLEAN_API_TOKEN", ""),\n    instance=os.getenv("GLEAN_INSTANCE", ""),\n) as glean:\n    res = glean.client.agents.run_stream(agent_id="<id>", messages=[\n        {\n            "role": "USER",\n        },\n    ])\n    # Handle response\n    print(res)\nimport http.client\nimport json\nconn = http.client.HTTPSConnection("instance-name-be.glean.com")\npayload = json.dumps({\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n})\nheaders = {\n  \'Content-Type\': \'application/json\',\n  \'Accept\': \'text/event-stream\',\n  \'Authorization\': \'Bearer <token>\'\n}\nconn.request("POST", "/rest/api/v1/agents/runs/stream", payload, headers)\nres = conn.getresponse()\ndata = res.read()\nprint(data.decode("utf-8"))', 'go_code_sample': 'package main\nimport(\n\t"context"\n\t"os"\n\tapiclientgo "github.com/gleanwork/api-client-go"\n\t"github.com/gleanwork/api-client-go/models/components"\n\t"log"\n)\nfunc main() {\n    ctx := context.Background()\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv("GLEAN_API_TOKEN")),\n        apiclientgo.WithInstance(os.Getenv("GLEAN_INSTANCE")),\n    )\n    res, err := s.Client.Agents.RunStream(ctx, components.AgentRunCreate{\n        AgentID: "<id>",\n        Messages: []components.Message{\n            components.Message{\n                Role: apiclientgo.String("USER"),\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.Res != nil {\n        // handle response\n    }\n}\npackage main\nimport (\n  "fmt"\n  "strings"\n  "net/http"\n  "io"\n)\nfunc main() {\n  url := "https://instance-name-be.glean.com/rest/api/v1/agents/runs/stream"\n  method := "POST"\n  payload := strings.NewReader(`{\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n}`)\n  client := &http.Client {\n  }\n  req, err := http.NewRequest(method, url, payload)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  req.Header.Add("Content-Type", "application/json")\n  req.Header.Add("Accept", "text/event-stream")\n  req.Header.Add("Authorization", "Bearer <token>")\n  res, err := client.Do(req)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  defer res.Body.Close()\n  body, err := io.ReadAll(res.Body)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  fmt.Println(string(body))\n}', 'java_code_sample': 'package hello.world;\nimport java.lang.Exception;\nimport java.util.List;\nimport org.openapis.openapi.Glean;\nimport org.openapis.openapi.models.components.AgentRunCreate;\nimport org.openapis.openapi.models.components.Message;\nimport org.openapis.openapi.models.operations.CreateAndStreamRunResponse;\npublic class Application {\n    public static void main(String[] args) throws Exception {\n        Glean sdk = Glean.builder()\n                .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))\n            .build();\n        AgentRunCreate req = AgentRunCreate.builder()\n                .agentId("<id>")\n                .messages(List.of(\n                    Message.builder()\n                        .role("USER")\n                        .build()))\n                .build();\n        CreateAndStreamRunResponse res = sdk.client().agents().runStream()\n                .request(req)\n                .call();\n        if (res.res().isPresent()) {\n            // handle response\n        }\n    }\n}\nOkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nMediaType mediaType = MediaType.parse("application/json");\nRequestBody body = RequestBody.create(mediaType, "{\\n  \\"agent_id\\": \\"string\\",\\n  \\"input\\": {},\\n  \\"messages\\": [\\n    {\\n      \\"role\\": \\"USER\\",\\n      \\"content\\": [\\n        {\\n          \\"text\\": \\"string\\",\\n          \\"type\\": \\"text\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\"metadata\\": {}\\n}");\nRequest request = new Request.Builder()\n  .url("https://instance-name-be.glean.com/rest/api/v1/agents/runs/stream")\n  .method("POST", body)\n  .addHeader("Content-Type", "application/json")\n  .addHeader("Accept", "text/event-stream")\n  .addHeader("Authorization", "Bearer <token>")\n  .build();\nResponse response = client.newCall(request).execute();', 'typescript_code_sample': 'import { Glean } from "@gleanwork/api-client";\nconst glean = new Glean({\n  apiToken: process.env["GLEAN_API_TOKEN"] ?? "",\n  instance: process.env["GLEAN_INSTANCE"] ?? "",\n});\nasync function run() {\n  const result = await glean.client.agents.runStream({\n    agentId: "<id>",\n    messages: [\n      {\n        role: "USER",\n      },\n      {\n        role: "USER",\n      },\n      {\n        role: "USER",\n      },\n    ],\n  });\n  // Handle the result\n  console.log(result);\n}\nrun();\nconst myHeaders = new Headers();\nmyHeaders.append("Content-Type", "application/json");\nmyHeaders.append("Accept", "text/event-stream");\nmyHeaders.append("Authorization", "Bearer <token>");\nconst raw = JSON.stringify({\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n});\nconst requestOptions = {\n  method: "POST",\n  headers: myHeaders,\n  body: raw,\n  redirect: "follow"\n};\nfetch("https://instance-name-be.glean.com/rest/api/v1/agents/runs/stream", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));', 'curl_code_sample': 'curl -L \'https://instance-name-be.glean.com/rest/api/v1/agents/runs/stream\' \\\n-H \'Content-Type: application/json\' \\\n-H \'Accept: text/event-stream\' \\\n-H \'Authorization: Bearer <token>\' \\\n-d \'{\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n}\''}
Scraping https://developers.glean.com/api/client-api/agents/create-and-wait-run...
HERE2 <h2 class="anchor anchorWithStickyNavbar_LWe7 openapi-tabs__heading" id="request">Request<a aria-label="Direct link to Request" class="hash-link" href="#request" title="Direct link to Request">​</a></h2>
HERE3 ['\n', <div class="tabs-container"><div class="tabs__container"><div class="openapi-tabs__mime-container"><ul aria-orientation="horizontal" class="openapi-tabs__mime-list-container tabs openapi-tabs__mime" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__mime-item active" role="tab" tabindex="0">application/json</li></ul></div></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details mime" data-collapsed="false" open=""><summary><h3 class="openapi-markdown__details-summary-header-body">Body<strong class="openapi-schema__required">required</strong></h3></summary><div style="display: block; overflow: visible; height: auto;"><div class="collapsibleContent_i85q"><div style="text-align: left; margin-left: 1rem;"></div><ul style="margin-left: 1rem;"><div id="request-agent-id"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">agent_id</strong><span class="openapi-schema__name">Agent Id (string)</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p>The ID of the agent to run.</p></div></div></div><div id="request-input"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-input"><span class="openapi-schema__container"><strong class="openapi-schema__property">input</strong><span class="openapi-schema__name"> object</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The input to the agent.</p></div><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">property</strong><span class="openapi-schema__name">any</span></span><p>The input to the agent.</p></div></div></div></div></div></details></div></div><div id="request-messages"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-messages"><span class="openapi-schema__container"><strong class="openapi-schema__property">messages</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The messages to pass an input to the agent.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="request-messages-role"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">role</strong><span class="openapi-schema__name">Role (string)</span></span><p>The role of the message.</p><div><strong>Example: </strong><span><code>USER</code></span></div></div></div></div><div id="request-messages-content"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-messages-content"><span class="openapi-schema__container"><strong class="openapi-schema__property">content</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The content of the message.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="request-messages-content-text"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">text</strong><span class="openapi-schema__name">string</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span></div></div></div><div id="request-messages-content-type"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">type</strong><span class="openapi-schema__name">ContentType (string)</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p><strong>Possible values:</strong> [<code>text</code>]</p></div></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><div id="request-metadata"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-metadata"><span class="openapi-schema__container"><strong class="openapi-schema__property">metadata</strong><span class="openapi-schema__name"> object</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The metadata to pass to the agent.</p></div><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">property</strong><span class="openapi-schema__name">any</span></span><p>The metadata to pass to the agent.</p></div></div></div></div></div></details></div></div></ul></div></div></details></div></div></div>, '\n', <div class="openapi-tabs__container"><div class="openapi-tabs__response-header-section"><h2 class="anchor anchorWithStickyNavbar_LWe7 openapi-tabs__heading openapi-tabs__response-header" id="responses">Responses<a aria-label="Direct link to Responses" class="hash-link" href="#responses" title="Direct link to Responses">​</a></h2><div class="openapi-tabs__response-container"><button class="openapi-tabs__arrow left"></button><ul aria-orientation="horizontal" class="openapi-tabs__response-list-container tabs" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__response-code-item success active" role="tab" tabindex="0">200</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">400</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">403</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">404</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">409</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">422</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">500</li></ul><button class="openapi-tabs__arrow right"></button></div></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Success</p></div></div><div class="tabs-container"><div class="tabs__container"><div class="openapi-tabs__mime-container"><ul aria-orientation="horizontal" class="openapi-tabs__mime-list-container tabs openapi-tabs__mime" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__mime-item active" role="tab" tabindex="0">application/json</li></ul></div></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><div class="openapi-tabs__schema-container"><div class="openapi-tabs__schema-tabs-container"><ul aria-orientation="horizontal" class="openapi-tabs__schema-list-container tabs openapi-tabs__schema" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__schema-item active" role="tab" tabindex="0"><span class="openapi-tabs__schema-label">Schema</span></li><li aria-selected="false" class="tabs__item openapi-tabs__schema-item" role="tab" tabindex="-1"><span class="openapi-tabs__schema-label">Example (auto)</span></li></ul></div><div class="margin-top--md"><div class="tabItem_Ymn6" role="tabpanel"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details response" data-collapsed="false" open=""><summary><strong class="openapi-markdown__details-summary-response">Schema</strong></summary><div style="display: block; overflow: visible; height: auto;"><div class="collapsibleContent_i85q"><div style="text-align: left; margin-left: 1rem;"></div><ul style="margin-left: 1rem;"><div id="response-run"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="response-run"><span class="openapi-schema__container"><strong class="openapi-schema__property">run</strong><span class="openapi-schema__name"> object</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The run information.</p></div><div id="response-run-agent-id"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">agent_id</strong><span class="openapi-schema__name">Agent Id (string)</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p>The ID of the agent to run.</p></div></div></div><div id="response-run-input"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="response-run-input"><span class="openapi-schema__container"><strong class="openapi-schema__property">input</strong><span class="openapi-schema__name"> object</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The input to the agent.</p></div><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">property</strong><span class="openapi-schema__name">any</span></span><p>The input to the agent.</p></div></div></div></div></div></details></div></div><div id="response-run-messages"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="response-run-messages"><span class="openapi-schema__container"><strong class="openapi-schema__property">messages</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The messages to pass an input to the agent.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="response-run-messages-role"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">role</strong><span class="openapi-schema__name">Role (string)</span></span><p>The role of the message.</p><div><strong>Example: </strong><span><code>USER</code></span></div></div></div></div><div id="response-run-messages-content"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="response-run-messages-content"><span class="openapi-schema__container"><strong class="openapi-schema__property">content</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The content of the message.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="response-run-messages-content-text"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">text</strong><span class="openapi-schema__name">string</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span></div></div></div><div id="response-run-messages-content-type"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">type</strong><span class="openapi-schema__name">ContentType (string)</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p><strong>Possible values:</strong> [<code>text</code>]</p></div></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><div id="response-run-metadata"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="response-run-metadata"><span class="openapi-schema__container"><strong class="openapi-schema__property">metadata</strong><span class="openapi-schema__name"> object</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The metadata to pass to the agent.</p></div><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">property</strong><span class="openapi-schema__name">any</span></span><p>The metadata to pass to the agent.</p></div></div></div></div></div></details></div></div><div id="response-run-status"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">status</strong><span class="openapi-schema__name">AgentExecutionStatus (string)</span></span><p>The status of the run. One of 'error', 'success'.</p><p><strong>Possible values:</strong> [<code>error</code>, <code>success</code>]</p></div></div></div></div></div></div></details></div></div><div id="response-messages"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="response-messages"><span class="openapi-schema__container"><strong class="openapi-schema__property">messages</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The messages returned by the run.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="response-messages-role"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">role</strong><span class="openapi-schema__name">Role (string)</span></span><p>The role of the message.</p><div><strong>Example: </strong><span><code>USER</code></span></div></div></div></div><div id="response-messages-content"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="response-messages-content"><span class="openapi-schema__container"><strong class="openapi-schema__property">content</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The content of the message.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="response-messages-content-text"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">text</strong><span class="openapi-schema__name">string</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span></div></div></div><div id="response-messages-content-type"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">type</strong><span class="openapi-schema__name">ContentType (string)</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p><strong>Possible values:</strong> [<code>text</code>]</p></div></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div></ul></div></div></details></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div class="openapi-code__code-samples-container"><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #393A34; --prism-background-color: #f6f8fa;"><div class="codeBlockContent_QJqH"><pre class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color: rgb(57, 58, 52); background-color: rgb(246, 248, 250);" tabindex="0"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token property" style="color: rgb(54, 172, 170);">"run"</span><span class="token operator" style="color: rgb(57, 58, 52);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">    </span><span class="token property" style="color: rgb(54, 172, 170);">"agent_id"</span><span class="token operator" style="color: rgb(57, 58, 52);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(227, 17, 108);">"string"</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">    </span><span class="token property" style="color: rgb(54, 172, 170);">"input"</span><span class="token operator" style="color: rgb(57, 58, 52);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">    </span><span class="token property" style="color: rgb(54, 172, 170);">"messages"</span><span class="token operator" style="color: rgb(57, 58, 52);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">[</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">      </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">        </span><span class="token property" style="color: rgb(54, 172, 170);">"role"</span><span class="token operator" style="color: rgb(57, 58, 52);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(227, 17, 108);">"USER"</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">        </span><span class="token property" style="color: rgb(54, 172, 170);">"content"</span><span class="token operator" style="color: rgb(57, 58, 52);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">[</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">          </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">            </span><span class="token property" style="color: rgb(54, 172, 170);">"text"</span><span class="token operator" style="color: rgb(57, 58, 52);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(227, 17, 108);">"string"</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">            </span><span class="token property" style="color: rgb(54, 172, 170);">"type"</span><span class="token operator" style="color: rgb(57, 58, 52);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(227, 17, 108);">"text"</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">          </span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">        </span><span class="token punctuation" style="color: rgb(57, 58, 52);">]</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">      </span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(57, 58, 52);">]</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">    </span><span class="token property" style="color: rgb(54, 172, 170);">"metadata"</span><span class="token operator" style="color: rgb(57, 58, 52);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">    </span><span class="token property" style="color: rgb(54, 172, 170);">"status"</span><span class="token operator" style="color: rgb(57, 58, 52);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(227, 17, 108);">"error"</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token property" style="color: rgb(54, 172, 170);">"messages"</span><span class="token operator" style="color: rgb(57, 58, 52);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">[</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">      </span><span class="token property" style="color: rgb(54, 172, 170);">"role"</span><span class="token operator" style="color: rgb(57, 58, 52);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(227, 17, 108);">"USER"</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">      </span><span class="token property" style="color: rgb(54, 172, 170);">"content"</span><span class="token operator" style="color: rgb(57, 58, 52);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">[</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">        </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">          </span><span class="token property" style="color: rgb(54, 172, 170);">"text"</span><span class="token operator" style="color: rgb(57, 58, 52);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(227, 17, 108);">"string"</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">          </span><span class="token property" style="color: rgb(54, 172, 170);">"type"</span><span class="token operator" style="color: rgb(57, 58, 52);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(227, 17, 108);">"text"</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">        </span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">      </span><span class="token punctuation" style="color: rgb(57, 58, 52);">]</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(57, 58, 52);">]</span><span class="token plain"></span><br/></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><br/></span></code></pre><div class="buttonGroup_M5ko"><button aria-label="Copy code to clipboard" class="clean-btn" title="Copy" type="button"><span aria-hidden="true" class="copyButtonIcons_IEyt"><svg class="copyButtonIcon_TrPX" viewbox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z" fill="currentColor"></path></svg><svg class="copyButtonSuccessIcon_cVMy" viewbox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" fill="currentColor"></path></svg></span></button></div></div></div></div></div></div></div></div></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Bad request</p></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Forbidden</p></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Not Found</p></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Conflict</p></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Validation Error</p></div></div></div><div class="tabItem_Ymn6" hidden="" role="tabpanel"><div><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>Internal server error</p></div></div></div></div></div>]
HEREIMP <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-input"><span class="openapi-schema__container"><strong class="openapi-schema__property">input</strong><span class="openapi-schema__name"> object</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The input to the agent.</p></div><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">property</strong><span class="openapi-schema__name">any</span></span><p>The input to the agent.</p></div></div></div></div></div></details>
HEREIMP <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-messages"><span class="openapi-schema__container"><strong class="openapi-schema__property">messages</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The messages to pass an input to the agent.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="request-messages-role"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">role</strong><span class="openapi-schema__name">Role (string)</span></span><p>The role of the message.</p><div><strong>Example: </strong><span><code>USER</code></span></div></div></div></div><div id="request-messages-content"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-messages-content"><span class="openapi-schema__container"><strong class="openapi-schema__property">content</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The content of the message.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="request-messages-content-text"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">text</strong><span class="openapi-schema__name">string</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span></div></div></div><div id="request-messages-content-type"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">type</strong><span class="openapi-schema__name">ContentType (string)</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p><strong>Possible values:</strong> [<code>text</code>]</p></div></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details>
HEREIMP <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="request-metadata"><span class="openapi-schema__container"><strong class="openapi-schema__property">metadata</strong><span class="openapi-schema__name"> object</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The metadata to pass to the agent.</p></div><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">property</strong><span class="openapi-schema__name">any</span></span><p>The metadata to pass to the agent.</p></div></div></div></div></div></details>
HEREIMP <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="response-run"><span class="openapi-schema__container"><strong class="openapi-schema__property">run</strong><span class="openapi-schema__name"> object</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The run information.</p></div><div id="response-run-agent-id"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">agent_id</strong><span class="openapi-schema__name">Agent Id (string)</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p>The ID of the agent to run.</p></div></div></div><div id="response-run-input"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="response-run-input"><span class="openapi-schema__container"><strong class="openapi-schema__property">input</strong><span class="openapi-schema__name"> object</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The input to the agent.</p></div><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">property</strong><span class="openapi-schema__name">any</span></span><p>The input to the agent.</p></div></div></div></div></div></details></div></div><div id="response-run-messages"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="response-run-messages"><span class="openapi-schema__container"><strong class="openapi-schema__property">messages</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The messages to pass an input to the agent.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="response-run-messages-role"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">role</strong><span class="openapi-schema__name">Role (string)</span></span><p>The role of the message.</p><div><strong>Example: </strong><span><code>USER</code></span></div></div></div></div><div id="response-run-messages-content"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="response-run-messages-content"><span class="openapi-schema__container"><strong class="openapi-schema__property">content</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The content of the message.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="response-run-messages-content-text"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">text</strong><span class="openapi-schema__name">string</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span></div></div></div><div id="response-run-messages-content-type"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">type</strong><span class="openapi-schema__name">ContentType (string)</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p><strong>Possible values:</strong> [<code>text</code>]</p></div></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><div id="response-run-metadata"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="response-run-metadata"><span class="openapi-schema__container"><strong class="openapi-schema__property">metadata</strong><span class="openapi-schema__name"> object</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The metadata to pass to the agent.</p></div><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">property</strong><span class="openapi-schema__name">any</span></span><p>The metadata to pass to the agent.</p></div></div></div></div></div></details></div></div><div id="response-run-status"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">status</strong><span class="openapi-schema__name">AgentExecutionStatus (string)</span></span><p>The status of the run. One of 'error', 'success'.</p><p><strong>Possible values:</strong> [<code>error</code>, <code>success</code>]</p></div></div></div></div></div></div></details>
HEREIMP <details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="response-messages"><span class="openapi-schema__container"><strong class="openapi-schema__property">messages</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The messages returned by the run.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="response-messages-role"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">role</strong><span class="openapi-schema__name">Role (string)</span></span><p>The role of the message.</p><div><strong>Example: </strong><span><code>USER</code></span></div></div></div></div><div id="response-messages-content"><div class="openapi-schema__list-item"><details class="details_lb9f isBrowser_bmU9 alert alert--info details_b_Ee openapi-markdown__details" data-collapsed="true"><summary id="response-messages-content"><span class="openapi-schema__container"><strong class="openapi-schema__property">content</strong><span class="openapi-schema__name"> object[]</span></span></summary><div style="display: none; overflow: hidden; height: 0px;"><div class="collapsibleContent_i85q"><div style="margin-left: 1rem;"><div style="margin-top: 0.5rem; margin-bottom: 0.5rem;"><p>The content of the message.</p></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem; padding-bottom: 0.5rem;">Array [</div></li><div id="response-messages-content-text"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">text</strong><span class="openapi-schema__name">string</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span></div></div></div><div id="response-messages-content-type"><div class="openapi-schema__list-item"><div><span class="openapi-schema__container"><strong class="openapi-schema__property">type</strong><span class="openapi-schema__name">ContentType (string)</span><span class="openapi-schema__divider"></span><span class="openapi-schema__required">required</span></span><p><strong>Possible values:</strong> [<code>text</code>]</p></div></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details></div></div><li><div style="font-size: var(--ifm-code-font-size); opacity: 0.6; margin-left: -0.5rem;">]</div></li></div></div></div></details>
HERESCHEMA {'input': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'messages': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'role': {'type': 'Role (string)', 'description': 'The role of the message.', 'required': False}, 'content': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'text': {'type': 'string', 'description': '', 'required': True}, 'type': {'type': 'ContentType (string)', 'description': 'Possible values:[text]', 'required': True}}}}}, 'metadata': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'run': {'type': 'object', 'description': '', 'required': False, 'is_array': True, 'properties': {'agent_id': {'type': 'Agent Id (string)', 'description': 'The ID of the agent to run.', 'required': True}, 'input': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'messages': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'role': {'type': 'Role (string)', 'description': 'The role of the message.', 'required': False}, 'content': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'text': {'type': 'string', 'description': '', 'required': True}, 'type': {'type': 'ContentType (string)', 'description': 'Possible values:[text]', 'required': True}}}}}, 'metadata': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'status': {'type': 'AgentExecutionStatus (string)', 'description': "The status of the run. One of 'error', 'success'.", 'required': False}}}}
HERE2 <h2 class="anchor anchorWithStickyNavbar_LWe7 openapi-tabs__heading openapi-tabs__response-header" id="responses">Responses<a aria-label="Direct link to Responses" class="hash-link" href="#responses" title="Direct link to Responses">​</a></h2>
HERE3 [<div class="openapi-tabs__response-container"><button class="openapi-tabs__arrow left"></button><ul aria-orientation="horizontal" class="openapi-tabs__response-list-container tabs" role="tablist"><li aria-selected="true" class="tabs__item openapi-tabs__response-code-item success active" role="tab" tabindex="0">200</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">400</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">403</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">404</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">409</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">422</li><li aria-selected="false" class="tabs__item openapi-tabs__response-code-item danger" role="tab" tabindex="-1">500</li></ul><button class="openapi-tabs__arrow right"></button></div>]
HERESCHEMA {}
HEREREQUEST {'input': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'messages': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'role': {'type': 'Role (string)', 'description': 'The role of the message.', 'required': False}, 'content': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'text': {'type': 'string', 'description': '', 'required': True}, 'type': {'type': 'ContentType (string)', 'description': 'Possible values:[text]', 'required': True}}}}}, 'metadata': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'run': {'type': 'object', 'description': '', 'required': False, 'is_array': True, 'properties': {'agent_id': {'type': 'Agent Id (string)', 'description': 'The ID of the agent to run.', 'required': True}, 'input': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'messages': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'role': {'type': 'Role (string)', 'description': 'The role of the message.', 'required': False}, 'content': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'text': {'type': 'string', 'description': '', 'required': True}, 'type': {'type': 'ContentType (string)', 'description': 'Possible values:[text]', 'required': True}}}}}, 'metadata': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'status': {'type': 'AgentExecutionStatus (string)', 'description': "The status of the run. One of 'error', 'success'.", 'required': False}}}}
HERERESPONSE {}
HERE {'title': 'Create an agent run and wait for the response', 'url': 'https://developers.glean.com/api/client-api/agents/create-and-wait-run', 'authentication': 'Authorization: http', 'request_schema': {'input': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'messages': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'role': {'type': 'Role (string)', 'description': 'The role of the message.', 'required': False}, 'content': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'text': {'type': 'string', 'description': '', 'required': True}, 'type': {'type': 'ContentType (string)', 'description': 'Possible values:[text]', 'required': True}}}}}, 'metadata': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'run': {'type': 'object', 'description': '', 'required': False, 'is_array': True, 'properties': {'agent_id': {'type': 'Agent Id (string)', 'description': 'The ID of the agent to run.', 'required': True}, 'input': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'messages': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'role': {'type': 'Role (string)', 'description': 'The role of the message.', 'required': False}, 'content': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'text': {'type': 'string', 'description': '', 'required': True}, 'type': {'type': 'ContentType (string)', 'description': 'Possible values:[text]', 'required': True}}}}}, 'metadata': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'status': {'type': 'AgentExecutionStatus (string)', 'description': "The status of the run. One of 'error', 'success'.", 'required': False}}}}, 'response_schema': {}, 'python_code_sample': 'from glean.api_client import Glean\nimport os\nwith Glean(\n    api_token=os.getenv("GLEAN_API_TOKEN", ""),\n    instance=os.getenv("GLEAN_INSTANCE", ""),\n) as glean:\n    res = glean.client.agents.run(agent_id="<id>", messages=[\n        {\n            "role": "USER",\n        },\n    ])\n    # Handle response\n    print(res)\nimport http.client\nimport json\nconn = http.client.HTTPSConnection("instance-name-be.glean.com")\npayload = json.dumps({\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n})\nheaders = {\n  \'Content-Type\': \'application/json\',\n  \'Accept\': \'application/json\',\n  \'Authorization\': \'Bearer <token>\'\n}\nconn.request("POST", "/rest/api/v1/agents/runs/wait", payload, headers)\nres = conn.getresponse()\ndata = res.read()\nprint(data.decode("utf-8"))', 'go_code_sample': 'package main\nimport(\n\t"context"\n\t"os"\n\tapiclientgo "github.com/gleanwork/api-client-go"\n\t"github.com/gleanwork/api-client-go/models/components"\n\t"log"\n)\nfunc main() {\n    ctx := context.Background()\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv("GLEAN_API_TOKEN")),\n        apiclientgo.WithInstance(os.Getenv("GLEAN_INSTANCE")),\n    )\n    res, err := s.Client.Agents.Run(ctx, components.AgentRunCreate{\n        AgentID: "<id>",\n        Messages: []components.Message{\n            components.Message{\n                Role: apiclientgo.String("USER"),\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.AgentRunWaitResponse != nil {\n        // handle response\n    }\n}\npackage main\nimport (\n  "fmt"\n  "strings"\n  "net/http"\n  "io"\n)\nfunc main() {\n  url := "https://instance-name-be.glean.com/rest/api/v1/agents/runs/wait"\n  method := "POST"\n  payload := strings.NewReader(`{\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n}`)\n  client := &http.Client {\n  }\n  req, err := http.NewRequest(method, url, payload)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  req.Header.Add("Content-Type", "application/json")\n  req.Header.Add("Accept", "application/json")\n  req.Header.Add("Authorization", "Bearer <token>")\n  res, err := client.Do(req)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  defer res.Body.Close()\n  body, err := io.ReadAll(res.Body)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  fmt.Println(string(body))\n}', 'java_code_sample': 'package hello.world;\nimport java.lang.Exception;\nimport java.util.List;\nimport org.openapis.openapi.Glean;\nimport org.openapis.openapi.models.components.AgentRunCreate;\nimport org.openapis.openapi.models.components.Message;\nimport org.openapis.openapi.models.operations.CreateAndWaitRunResponse;\npublic class Application {\n    public static void main(String[] args) throws Exception {\n        Glean sdk = Glean.builder()\n                .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))\n            .build();\n        AgentRunCreate req = AgentRunCreate.builder()\n                .agentId("<id>")\n                .messages(List.of(\n                    Message.builder()\n                        .role("USER")\n                        .build()))\n                .build();\n        CreateAndWaitRunResponse res = sdk.client().agents().run()\n                .request(req)\n                .call();\n        if (res.agentRunWaitResponse().isPresent()) {\n            // handle response\n        }\n    }\n}\nOkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nMediaType mediaType = MediaType.parse("application/json");\nRequestBody body = RequestBody.create(mediaType, "{\\n  \\"agent_id\\": \\"string\\",\\n  \\"input\\": {},\\n  \\"messages\\": [\\n    {\\n      \\"role\\": \\"USER\\",\\n      \\"content\\": [\\n        {\\n          \\"text\\": \\"string\\",\\n          \\"type\\": \\"text\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\"metadata\\": {}\\n}");\nRequest request = new Request.Builder()\n  .url("https://instance-name-be.glean.com/rest/api/v1/agents/runs/wait")\n  .method("POST", body)\n  .addHeader("Content-Type", "application/json")\n  .addHeader("Accept", "application/json")\n  .addHeader("Authorization", "Bearer <token>")\n  .build();\nResponse response = client.newCall(request).execute();', 'typescript_code_sample': 'import { Glean } from "@gleanwork/api-client";\nconst glean = new Glean({\n  apiToken: process.env["GLEAN_API_TOKEN"] ?? "",\n  instance: process.env["GLEAN_INSTANCE"] ?? "",\n});\nasync function run() {\n  const result = await glean.client.agents.run({\n    agentId: "<id>",\n    messages: [\n      {\n        role: "USER",\n      },\n    ],\n  });\n  // Handle the result\n  console.log(result);\n}\nrun();\nconst myHeaders = new Headers();\nmyHeaders.append("Content-Type", "application/json");\nmyHeaders.append("Accept", "application/json");\nmyHeaders.append("Authorization", "Bearer <token>");\nconst raw = JSON.stringify({\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n});\nconst requestOptions = {\n  method: "POST",\n  headers: myHeaders,\n  body: raw,\n  redirect: "follow"\n};\nfetch("https://instance-name-be.glean.com/rest/api/v1/agents/runs/wait", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));', 'curl_code_sample': 'curl -L \'https://instance-name-be.glean.com/rest/api/v1/agents/runs/wait\' \\\n-H \'Content-Type: application/json\' \\\n-H \'Accept: application/json\' \\\n-H \'Authorization: Bearer <token>\' \\\n-d \'{\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n}\''}
Successfully scraped 4 APIs
HEREAPI {'title': 'Report document activity', 'url': 'https://developers.glean.com/api/client-api/activity/activity', 'authentication': 'Authorization: http', 'request_schema': {'events': {'type': 'ActivityEvent[]', 'description': '', 'required': True, 'is_array': True, 'properties': {'id': {'type': 'string', 'description': 'Universally unique identifier of the event. To allow for reliable retransmission, only the earliest received event of a given UUID is considered valid by the server and subsequent are ignored.', 'required': False}, 'action': {'type': 'string', 'description': 'The type of activity this represents.', 'required': True}, 'params': {'type': 'ActivityEventParams', 'description': '', 'required': False, 'is_array': False, 'properties': {'bodyContent': {'type': 'string', 'description': 'The HTML content of the page body.', 'required': False}, 'datasourceInstance': {'type': 'string', 'description': 'The full datasource instance name inferred from the URL of the event', 'required': False}, 'datasource': {'type': 'string', 'description': 'The datasource without the instance inferred from the URL of the event', 'required': False}, 'instanceOnlyName': {'type': 'string', 'description': 'The instance only name of the datasource instance, e.g. 1 for jira_1, inferred from the URL of the event', 'required': False}, 'duration': {'type': 'integer', 'description': 'Length in seconds of the activity. For VIEWS, this represents the amount the page was visible in the foreground.', 'required': False}, 'query': {'type': 'string', 'description': "The user's search query associated with a SEARCH.", 'required': False}, 'referrer': {'type': 'string', 'description': 'The referring URL of the VIEW or SEARCH.', 'required': False}, 'title': {'type': 'string', 'description': 'The page title associated with the URL of the event', 'required': False}, 'truncated': {'type': 'boolean', 'description': 'Indicates that the parameters are incomplete and more parameters may be sent with the same action+timestamp+URL in the future. This is used for sending the duration when aVIEWis finished.', 'required': False}}}, 'timestamp': {'type': 'string<date-time>', 'description': 'The ISO 8601 timestamp when the activity began.', 'required': True}, 'url': {'type': 'string', 'description': 'The URL of the activity.', 'required': True}}}}, 'response_schema': {}, 'python_code_sample': 'from glean.api_client import Glean, models\nfrom glean.api_client.utils import parse_datetime\nimport os\nwith Glean(\n    api_token=os.getenv("GLEAN_API_TOKEN", ""),\n    instance=os.getenv("GLEAN_INSTANCE", ""),\n) as glean:\n    glean.client.activity.report(events=[\n        {\n            "action": models.ActivityEventAction.HISTORICAL_VIEW,\n            "timestamp": parse_datetime("2000-01-23T04:56:07.000Z"),\n            "url": "https://example.com/",\n        },\n        {\n            "action": models.ActivityEventAction.SEARCH,\n            "params": {\n                "query": "query",\n            },\n            "timestamp": parse_datetime("2000-01-23T04:56:07.000Z"),\n            "url": "https://example.com/search?q=query",\n        },\n        {\n            "action": models.ActivityEventAction.VIEW,\n            "params": {\n                "duration": 20,\n                "referrer": "https://example.com/document",\n            },\n            "timestamp": parse_datetime("2000-01-23T04:56:07.000Z"),\n            "url": "https://example.com/",\n        },\n    ])\n    # Use the SDK ...\nimport http.client\nimport json\nconn = http.client.HTTPSConnection("instance-name-be.glean.com")\npayload = json.dumps({\n  "events": [\n    {\n      "url": "https://example.com/",\n      "action": "HISTORICAL_VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z"\n    },\n    {\n      "url": "https://example.com/search?q=query",\n      "action": "SEARCH",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "query": "query"\n      }\n    },\n    {\n      "url": "https://example.com/",\n      "action": "VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "duration": 20,\n        "referrer": "https://example.com/document"\n      }\n    }\n  ]\n})\nheaders = {\n  \'Content-Type\': \'application/json\',\n  \'Authorization\': \'Bearer <token>\'\n}\nconn.request("POST", "/rest/api/v1/activity", payload, headers)\nres = conn.getresponse()\ndata = res.read()\nprint(data.decode("utf-8"))', 'go_code_sample': 'package main\nimport(\n\t"context"\n\t"os"\n\tapiclientgo "github.com/gleanwork/api-client-go"\n\t"github.com/gleanwork/api-client-go/models/components"\n\t"github.com/gleanwork/api-client-go/types"\n\t"log"\n)\nfunc main() {\n    ctx := context.Background()\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv("GLEAN_API_TOKEN")),\n        apiclientgo.WithInstance(os.Getenv("GLEAN_INSTANCE")),\n    )\n    res, err := s.Client.Activity.Report(ctx, components.Activity{\n        Events: []components.ActivityEvent{\n            components.ActivityEvent{\n                Action: components.ActivityEventActionHistoricalView,\n                Timestamp: types.MustTimeFromString("2000-01-23T04:56:07.000Z"),\n                URL: "https://example.com/",\n            },\n            components.ActivityEvent{\n                Action: components.ActivityEventActionSearch,\n                Params: &components.ActivityEventParams{\n                    Query: apiclientgo.String("query"),\n                },\n                Timestamp: types.MustTimeFromString("2000-01-23T04:56:07.000Z"),\n                URL: "https://example.com/search?q=query",\n            },\n            components.ActivityEvent{\n                Action: components.ActivityEventActionView,\n                Params: &components.ActivityEventParams{\n                    Duration: apiclientgo.Int64(20),\n                    Referrer: apiclientgo.String("https://example.com/document"),\n                },\n                Timestamp: types.MustTimeFromString("2000-01-23T04:56:07.000Z"),\n                URL: "https://example.com/",\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}\npackage main\nimport (\n  "fmt"\n  "strings"\n  "net/http"\n  "io"\n)\nfunc main() {\n  url := "https://instance-name-be.glean.com/rest/api/v1/activity"\n  method := "POST"\n  payload := strings.NewReader(`{\n  "events": [\n    {\n      "url": "https://example.com/",\n      "action": "HISTORICAL_VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z"\n    },\n    {\n      "url": "https://example.com/search?q=query",\n      "action": "SEARCH",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "query": "query"\n      }\n    },\n    {\n      "url": "https://example.com/",\n      "action": "VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "duration": 20,\n        "referrer": "https://example.com/document"\n      }\n    }\n  ]\n}`)\n  client := &http.Client {\n  }\n  req, err := http.NewRequest(method, url, payload)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  req.Header.Add("Content-Type", "application/json")\n  req.Header.Add("Authorization", "Bearer <token>")\n  res, err := client.Do(req)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  defer res.Body.Close()\n  body, err := io.ReadAll(res.Body)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  fmt.Println(string(body))\n}', 'java_code_sample': 'package hello.world;\nimport java.lang.Exception;\nimport java.time.OffsetDateTime;\nimport java.util.List;\nimport org.openapis.openapi.Glean;\nimport org.openapis.openapi.models.components.*;\nimport org.openapis.openapi.models.operations.ActivityResponse;\npublic class Application {\n    public static void main(String[] args) throws Exception {\n        Glean sdk = Glean.builder()\n                .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))\n            .build();\n        Activity req = Activity.builder()\n                .events(List.of(\n                    ActivityEvent.builder()\n                        .action(ActivityEventAction.HISTORICAL_VIEW)\n                        .timestamp(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))\n                        .url("https://example.com/")\n                        .build(),\n                    ActivityEvent.builder()\n                        .action(ActivityEventAction.SEARCH)\n                        .timestamp(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))\n                        .url("https://example.com/search?q=query")\n                        .params(ActivityEventParams.builder()\n                            .query("query")\n                            .build())\n                        .build(),\n                    ActivityEvent.builder()\n                        .action(ActivityEventAction.VIEW)\n                        .timestamp(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))\n                        .url("https://example.com/")\n                        .params(ActivityEventParams.builder()\n                            .duration(20L)\n                            .referrer("https://example.com/document")\n                            .build())\n                        .build()))\n                .build();\n        ActivityResponse res = sdk.client().activity().report()\n                .request(req)\n                .call();\n        // handle response\n    }\n}\nOkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nMediaType mediaType = MediaType.parse("application/json");\nRequestBody body = RequestBody.create(mediaType, "{\\n  \\"events\\": [\\n    {\\n      \\"url\\": \\"https://example.com/\\",\\n      \\"action\\": \\"HISTORICAL_VIEW\\",\\n      \\"timestamp\\": \\"2000-01-23T04:56:07.000Z\\"\\n    },\\n    {\\n      \\"url\\": \\"https://example.com/search?q=query\\",\\n      \\"action\\": \\"SEARCH\\",\\n      \\"timestamp\\": \\"2000-01-23T04:56:07.000Z\\",\\n      \\"params\\": {\\n        \\"query\\": \\"query\\"\\n      }\\n    },\\n    {\\n      \\"url\\": \\"https://example.com/\\",\\n      \\"action\\": \\"VIEW\\",\\n      \\"timestamp\\": \\"2000-01-23T04:56:07.000Z\\",\\n      \\"params\\": {\\n        \\"duration\\": 20,\\n        \\"referrer\\": \\"https://example.com/document\\"\\n      }\\n    }\\n  ]\\n}");\nRequest request = new Request.Builder()\n  .url("https://instance-name-be.glean.com/rest/api/v1/activity")\n  .method("POST", body)\n  .addHeader("Content-Type", "application/json")\n  .addHeader("Authorization", "Bearer <token>")\n  .build();\nResponse response = client.newCall(request).execute();', 'typescript_code_sample': 'import { Glean } from "@gleanwork/api-client";\nconst glean = new Glean({\n  apiToken: process.env["GLEAN_API_TOKEN"] ?? "",\n  instance: process.env["GLEAN_INSTANCE"] ?? "",\n});\nasync function run() {\n  await glean.client.activity.report({\n    events: [\n      {\n        action: "HISTORICAL_VIEW",\n        timestamp: new Date("2000-01-23T04:56:07.000Z"),\n        url: "https://example.com/",\n      },\n      {\n        action: "SEARCH",\n        params: {\n          query: "query",\n        },\n        timestamp: new Date("2000-01-23T04:56:07.000Z"),\n        url: "https://example.com/search?q=query",\n      },\n      {\n        action: "VIEW",\n        params: {\n          duration: 20,\n          referrer: "https://example.com/document",\n        },\n        timestamp: new Date("2000-01-23T04:56:07.000Z"),\n        url: "https://example.com/",\n      },\n    ],\n  });\n}\nrun();\nconst myHeaders = new Headers();\nmyHeaders.append("Content-Type", "application/json");\nmyHeaders.append("Authorization", "Bearer <token>");\nconst raw = JSON.stringify({\n  "events": [\n    {\n      "url": "https://example.com/",\n      "action": "HISTORICAL_VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z"\n    },\n    {\n      "url": "https://example.com/search?q=query",\n      "action": "SEARCH",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "query": "query"\n      }\n    },\n    {\n      "url": "https://example.com/",\n      "action": "VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "duration": 20,\n        "referrer": "https://example.com/document"\n      }\n    }\n  ]\n});\nconst requestOptions = {\n  method: "POST",\n  headers: myHeaders,\n  body: raw,\n  redirect: "follow"\n};\nfetch("https://instance-name-be.glean.com/rest/api/v1/activity", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));', 'curl_code_sample': 'curl -L \'https://instance-name-be.glean.com/rest/api/v1/activity\' \\\n-H \'Content-Type: application/json\' \\\n-H \'Authorization: Bearer <token>\' \\\n-d \'{\n  "events": [\n    {\n      "url": "https://example.com/",\n      "action": "HISTORICAL_VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z"\n    },\n    {\n      "url": "https://example.com/search?q=query",\n      "action": "SEARCH",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "query": "query"\n      }\n    },\n    {\n      "url": "https://example.com/",\n      "action": "VIEW",\n      "timestamp": "2000-01-23T04:56:07.000Z",\n      "params": {\n        "duration": 20,\n        "referrer": "https://example.com/document"\n      }\n    }\n  ]\n}\''}
HEREAPI {'title': 'Report client activity', 'url': 'https://developers.glean.com/api/client-api/activity/feedback', 'authentication': 'Authorization: http', 'request_schema': {'sessionInfo': {'type': 'SessionInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'sessionTrackingToken': {'type': 'string', 'description': "A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab.", 'required': False}, 'tabId': {'type': 'string', 'description': 'A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab.', 'required': False}, 'lastSeen': {'type': 'string<date-time>', 'description': 'The last time the server saw this token.', 'required': False}, 'lastQuery': {'type': 'string', 'description': 'The last query seen by the server.', 'required': False}}}, 'user': {'type': 'User', 'description': '', 'required': False, 'is_array': False, 'properties': {'userID': {'type': 'string', 'description': 'An opaque user ID for the claimed authority (i.e., the actas param, or the origid if actas is not specified).', 'required': False}, 'origID': {'type': 'string', 'description': 'An opaque user ID for the authenticated user (ignores actas).', 'required': False}}}, 'manualFeedbackInfo': {'type': 'ManualFeedbackInfo', 'description': '', 'required': False, 'is_array': True, 'properties': {'email': {'type': 'string', 'description': 'The email address of the user who submitted the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'source': {'type': 'string', 'description': 'The source associated with the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'issue': {'type': 'string', 'description': 'The issue the user indicated in the feedback.', 'required': False}, 'issues': {'type': 'string[]', 'description': 'The issue(s) the user indicated in the feedback.', 'required': False}, 'imageUrls': {'type': 'string[]', 'description': 'URLs of images uploaded by user when providing feedback', 'required': False}, 'query': {'type': 'string', 'description': 'The query associated with the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'obscuredQuery': {'type': 'string', 'description': 'The query associated with the Feedback.event.MANUAL_FEEDBACK event, but obscured such that the vowels are replaced with special characters. For search feedback events only.', 'required': False}, 'activeTab': {'type': 'string', 'description': 'Which tabs the user had chosen at the time of the Feedback.event.MANUAL_FEEDBACK event. For search feedback events only.', 'required': False}, 'comments': {'type': 'string', 'description': 'The comments users can optionally add to the Feedback.event.MANUAL_FEEDBACK events.', 'required': False}, 'searchResults': {'type': 'string[]', 'description': 'The array of search result Glean Document IDs, ordered by top to bottom result.', 'required': False}, 'previousMessages': {'type': 'string[]', 'description': 'The array of previous messages in a chat session, ordered by oldest to newest.', 'required': False}, 'chatTranscript': {'type': 'FeedbackChatExchange[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'timestamp': {'type': 'integer<int64>', 'description': 'Unix timestamp in millis for the chat request.', 'required': False}, 'agent': {'type': 'string', 'description': 'Either DEFAULT (company knowledge) or GPT (world knowledge).', 'required': False}, 'userQuery': {'type': 'string', 'description': 'Initial query entered by the user.', 'required': False}, 'searchQuery': {'type': 'string', 'description': 'Search query performed by the agent.', 'required': False}, 'resultDocuments': {'type': 'undefined[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'title': {'type': 'string', 'description': '', 'required': False}, 'url': {'type': 'string', 'description': '', 'required': False}}}, 'response': {'type': 'string', 'description': '', 'required': False}}}, 'numQueriesFromFirstRun': {'type': 'integer', 'description': 'How many times this query has been run in the past.', 'required': False}, 'vote': {'type': 'string', 'description': 'The vote associated with the Feedback.event.MANUAL_FEEDBACK event.', 'required': False}, 'rating': {'type': 'integer', 'description': 'A rating associated with the user feedback. The value will be between one and the maximum given by ratingScale, inclusive.', 'required': False}, 'ratingKey': {'type': 'string', 'description': 'A description of the rating that contextualizes how it appeared to the user, e.g. "satisfied".', 'required': False}, 'ratingScale': {'type': 'integer', 'description': 'The scale of comparison for a rating associated with the feedback. Rating values start from one and go up to the maximum specified by ratingScale. For example, a five-option satisfaction rating will have a ratingScale of 5 and a thumbs-up/thumbs-down rating will have a ratingScale of 2.', 'required': False}}}, 'seenFeedbackInfo': {'type': 'SeenFeedbackInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'isExplicit': {'type': 'boolean', 'description': 'The confidence of the user seeing the object is high because they explicitly interacted with it e.g. answer impression in SERP with additional user interaction.', 'required': False}}}, 'userViewInfo': {'type': 'UserViewInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'docId': {'type': 'string', 'description': 'Unique Glean Document ID of the associated document.', 'required': False}, 'docTitle': {'type': 'string', 'description': 'Title of associated document.', 'required': False}, 'docUrl': {'type': 'string', 'description': 'URL of associated document.', 'required': False}}}, 'workflowFeedbackInfo': {'type': 'WorkflowFeedbackInfo', 'description': '', 'required': False, 'is_array': False, 'properties': {'source': {'type': 'string', 'description': 'Where the feedback of the workflow originated from', 'required': False}}}}, 'response_schema': {}, 'python_code_sample': 'from glean.api_client import Glean, models\nimport os\nwith Glean(\n    api_token=os.getenv("GLEAN_API_TOKEN", ""),\n    instance=os.getenv("GLEAN_INSTANCE", ""),\n) as glean:\n    glean.client.activity.feedback(feedback1={\n        "tracking_tokens": [\n            "trackingTokens",\n        ],\n        "event": models.Event.VIEW,\n    })\n    # Use the SDK ...\nimport http.client\nimport json\nconn = http.client.HTTPSConnection("instance-name-be.glean.com")\npayload = json.dumps({\n  "trackingTokens": [\n    "trackingTokens"\n  ],\n  "event": "VIEW"\n})\nheaders = {\n  \'Content-Type\': \'application/json\',\n  \'Authorization\': \'Bearer <token>\'\n}\nconn.request("POST", "/rest/api/v1/feedback", payload, headers)\nres = conn.getresponse()\ndata = res.read()\nprint(data.decode("utf-8"))', 'go_code_sample': 'package main\nimport(\n\t"context"\n\t"os"\n\tapiclientgo "github.com/gleanwork/api-client-go"\n\t"github.com/gleanwork/api-client-go/models/components"\n\t"log"\n)\nfunc main() {\n    ctx := context.Background()\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv("GLEAN_API_TOKEN")),\n        apiclientgo.WithInstance(os.Getenv("GLEAN_INSTANCE")),\n    )\n    res, err := s.Client.Activity.Feedback(ctx, nil, &components.Feedback{\n        TrackingTokens: []string{\n            "trackingTokens",\n        },\n        Event: components.EventView,\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res != nil {\n        // handle response\n    }\n}\npackage main\nimport (\n  "fmt"\n  "strings"\n  "net/http"\n  "io"\n)\nfunc main() {\n  url := "https://instance-name-be.glean.com/rest/api/v1/feedback"\n  method := "POST"\n  payload := strings.NewReader(`{\n  "trackingTokens": [\n    "trackingTokens"\n  ],\n  "event": "VIEW"\n}`)\n  client := &http.Client {\n  }\n  req, err := http.NewRequest(method, url, payload)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  req.Header.Add("Content-Type", "application/json")\n  req.Header.Add("Authorization", "Bearer <token>")\n  res, err := client.Do(req)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  defer res.Body.Close()\n  body, err := io.ReadAll(res.Body)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  fmt.Println(string(body))\n}', 'java_code_sample': 'package hello.world;\nimport java.lang.Exception;\nimport java.util.List;\nimport org.openapis.openapi.Glean;\nimport org.openapis.openapi.models.components.Event;\nimport org.openapis.openapi.models.components.Feedback;\nimport org.openapis.openapi.models.operations.FeedbackResponse;\npublic class Application {\n    public static void main(String[] args) throws Exception {\n        Glean sdk = Glean.builder()\n                .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))\n            .build();\n        FeedbackResponse res = sdk.client().activity().feedback()\n                .feedback1(Feedback.builder()\n                    .trackingTokens(List.of(\n                        "trackingTokens"))\n                    .event(Event.VIEW)\n                    .build())\n                .call();\n        // handle response\n    }\n}\nOkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nMediaType mediaType = MediaType.parse("application/json");\nRequestBody body = RequestBody.create(mediaType, "{\\n  \\"trackingTokens\\": [\\n    \\"trackingTokens\\"\\n  ],\\n  \\"event\\": \\"VIEW\\"\\n}");\nRequest request = new Request.Builder()\n  .url("https://instance-name-be.glean.com/rest/api/v1/feedback")\n  .method("POST", body)\n  .addHeader("Content-Type", "application/json")\n  .addHeader("Authorization", "Bearer <token>")\n  .build();\nResponse response = client.newCall(request).execute();', 'typescript_code_sample': 'import { Glean } from "@gleanwork/api-client";\nconst glean = new Glean({\n  apiToken: process.env["GLEAN_API_TOKEN"] ?? "",\n  instance: process.env["GLEAN_INSTANCE"] ?? "",\n});\nasync function run() {\n  await glean.client.activity.feedback({\n    trackingTokens: [\n      "trackingTokens",\n    ],\n    event: "VIEW",\n  });\n}\nrun();\nconst myHeaders = new Headers();\nmyHeaders.append("Content-Type", "application/json");\nmyHeaders.append("Authorization", "Bearer <token>");\nconst raw = JSON.stringify({\n  "trackingTokens": [\n    "trackingTokens"\n  ],\n  "event": "VIEW"\n});\nconst requestOptions = {\n  method: "POST",\n  headers: myHeaders,\n  body: raw,\n  redirect: "follow"\n};\nfetch("https://instance-name-be.glean.com/rest/api/v1/feedback", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));', 'curl_code_sample': 'curl -L \'https://instance-name-be.glean.com/rest/api/v1/feedback\' \\\n-H \'Content-Type: application/json\' \\\n-H \'Authorization: Bearer <token>\' \\\n-d \'{\n  "trackingTokens": [\n    "trackingTokens"\n  ],\n  "event": "VIEW"\n}\''}
HEREAPI {'title': 'Create an agent run and stream the response', 'url': 'https://developers.glean.com/api/client-api/agents/create-and-stream-run', 'authentication': 'Authorization: http', 'request_schema': {'input': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'messages': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'role': {'type': 'Role (string)', 'description': 'The role of the message.', 'required': False}, 'content': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'text': {'type': 'string', 'description': '', 'required': True}, 'type': {'type': 'ContentType (string)', 'description': 'Possible values:[text]', 'required': True}}}}}, 'metadata': {'type': 'object', 'description': '', 'required': False, 'is_array': False}}, 'response_schema': {}, 'python_code_sample': 'from glean.api_client import Glean\nimport os\nwith Glean(\n    api_token=os.getenv("GLEAN_API_TOKEN", ""),\n    instance=os.getenv("GLEAN_INSTANCE", ""),\n) as glean:\n    res = glean.client.agents.run_stream(agent_id="<id>", messages=[\n        {\n            "role": "USER",\n        },\n    ])\n    # Handle response\n    print(res)\nimport http.client\nimport json\nconn = http.client.HTTPSConnection("instance-name-be.glean.com")\npayload = json.dumps({\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n})\nheaders = {\n  \'Content-Type\': \'application/json\',\n  \'Accept\': \'text/event-stream\',\n  \'Authorization\': \'Bearer <token>\'\n}\nconn.request("POST", "/rest/api/v1/agents/runs/stream", payload, headers)\nres = conn.getresponse()\ndata = res.read()\nprint(data.decode("utf-8"))', 'go_code_sample': 'package main\nimport(\n\t"context"\n\t"os"\n\tapiclientgo "github.com/gleanwork/api-client-go"\n\t"github.com/gleanwork/api-client-go/models/components"\n\t"log"\n)\nfunc main() {\n    ctx := context.Background()\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv("GLEAN_API_TOKEN")),\n        apiclientgo.WithInstance(os.Getenv("GLEAN_INSTANCE")),\n    )\n    res, err := s.Client.Agents.RunStream(ctx, components.AgentRunCreate{\n        AgentID: "<id>",\n        Messages: []components.Message{\n            components.Message{\n                Role: apiclientgo.String("USER"),\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.Res != nil {\n        // handle response\n    }\n}\npackage main\nimport (\n  "fmt"\n  "strings"\n  "net/http"\n  "io"\n)\nfunc main() {\n  url := "https://instance-name-be.glean.com/rest/api/v1/agents/runs/stream"\n  method := "POST"\n  payload := strings.NewReader(`{\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n}`)\n  client := &http.Client {\n  }\n  req, err := http.NewRequest(method, url, payload)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  req.Header.Add("Content-Type", "application/json")\n  req.Header.Add("Accept", "text/event-stream")\n  req.Header.Add("Authorization", "Bearer <token>")\n  res, err := client.Do(req)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  defer res.Body.Close()\n  body, err := io.ReadAll(res.Body)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  fmt.Println(string(body))\n}', 'java_code_sample': 'package hello.world;\nimport java.lang.Exception;\nimport java.util.List;\nimport org.openapis.openapi.Glean;\nimport org.openapis.openapi.models.components.AgentRunCreate;\nimport org.openapis.openapi.models.components.Message;\nimport org.openapis.openapi.models.operations.CreateAndStreamRunResponse;\npublic class Application {\n    public static void main(String[] args) throws Exception {\n        Glean sdk = Glean.builder()\n                .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))\n            .build();\n        AgentRunCreate req = AgentRunCreate.builder()\n                .agentId("<id>")\n                .messages(List.of(\n                    Message.builder()\n                        .role("USER")\n                        .build()))\n                .build();\n        CreateAndStreamRunResponse res = sdk.client().agents().runStream()\n                .request(req)\n                .call();\n        if (res.res().isPresent()) {\n            // handle response\n        }\n    }\n}\nOkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nMediaType mediaType = MediaType.parse("application/json");\nRequestBody body = RequestBody.create(mediaType, "{\\n  \\"agent_id\\": \\"string\\",\\n  \\"input\\": {},\\n  \\"messages\\": [\\n    {\\n      \\"role\\": \\"USER\\",\\n      \\"content\\": [\\n        {\\n          \\"text\\": \\"string\\",\\n          \\"type\\": \\"text\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\"metadata\\": {}\\n}");\nRequest request = new Request.Builder()\n  .url("https://instance-name-be.glean.com/rest/api/v1/agents/runs/stream")\n  .method("POST", body)\n  .addHeader("Content-Type", "application/json")\n  .addHeader("Accept", "text/event-stream")\n  .addHeader("Authorization", "Bearer <token>")\n  .build();\nResponse response = client.newCall(request).execute();', 'typescript_code_sample': 'import { Glean } from "@gleanwork/api-client";\nconst glean = new Glean({\n  apiToken: process.env["GLEAN_API_TOKEN"] ?? "",\n  instance: process.env["GLEAN_INSTANCE"] ?? "",\n});\nasync function run() {\n  const result = await glean.client.agents.runStream({\n    agentId: "<id>",\n    messages: [\n      {\n        role: "USER",\n      },\n      {\n        role: "USER",\n      },\n      {\n        role: "USER",\n      },\n    ],\n  });\n  // Handle the result\n  console.log(result);\n}\nrun();\nconst myHeaders = new Headers();\nmyHeaders.append("Content-Type", "application/json");\nmyHeaders.append("Accept", "text/event-stream");\nmyHeaders.append("Authorization", "Bearer <token>");\nconst raw = JSON.stringify({\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n});\nconst requestOptions = {\n  method: "POST",\n  headers: myHeaders,\n  body: raw,\n  redirect: "follow"\n};\nfetch("https://instance-name-be.glean.com/rest/api/v1/agents/runs/stream", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));', 'curl_code_sample': 'curl -L \'https://instance-name-be.glean.com/rest/api/v1/agents/runs/stream\' \\\n-H \'Content-Type: application/json\' \\\n-H \'Accept: text/event-stream\' \\\n-H \'Authorization: Bearer <token>\' \\\n-d \'{\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n}\''}
HEREAPI {'title': 'Create an agent run and wait for the response', 'url': 'https://developers.glean.com/api/client-api/agents/create-and-wait-run', 'authentication': 'Authorization: http', 'request_schema': {'input': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'messages': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'role': {'type': 'Role (string)', 'description': 'The role of the message.', 'required': False}, 'content': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'text': {'type': 'string', 'description': '', 'required': True}, 'type': {'type': 'ContentType (string)', 'description': 'Possible values:[text]', 'required': True}}}}}, 'metadata': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'run': {'type': 'object', 'description': '', 'required': False, 'is_array': True, 'properties': {'agent_id': {'type': 'Agent Id (string)', 'description': 'The ID of the agent to run.', 'required': True}, 'input': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'messages': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'role': {'type': 'Role (string)', 'description': 'The role of the message.', 'required': False}, 'content': {'type': 'object[]', 'description': '', 'required': False, 'is_array': True, 'properties': {'text': {'type': 'string', 'description': '', 'required': True}, 'type': {'type': 'ContentType (string)', 'description': 'Possible values:[text]', 'required': True}}}}}, 'metadata': {'type': 'object', 'description': '', 'required': False, 'is_array': False}, 'status': {'type': 'AgentExecutionStatus (string)', 'description': "The status of the run. One of 'error', 'success'.", 'required': False}}}}, 'response_schema': {}, 'python_code_sample': 'from glean.api_client import Glean\nimport os\nwith Glean(\n    api_token=os.getenv("GLEAN_API_TOKEN", ""),\n    instance=os.getenv("GLEAN_INSTANCE", ""),\n) as glean:\n    res = glean.client.agents.run(agent_id="<id>", messages=[\n        {\n            "role": "USER",\n        },\n    ])\n    # Handle response\n    print(res)\nimport http.client\nimport json\nconn = http.client.HTTPSConnection("instance-name-be.glean.com")\npayload = json.dumps({\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n})\nheaders = {\n  \'Content-Type\': \'application/json\',\n  \'Accept\': \'application/json\',\n  \'Authorization\': \'Bearer <token>\'\n}\nconn.request("POST", "/rest/api/v1/agents/runs/wait", payload, headers)\nres = conn.getresponse()\ndata = res.read()\nprint(data.decode("utf-8"))', 'go_code_sample': 'package main\nimport(\n\t"context"\n\t"os"\n\tapiclientgo "github.com/gleanwork/api-client-go"\n\t"github.com/gleanwork/api-client-go/models/components"\n\t"log"\n)\nfunc main() {\n    ctx := context.Background()\n    s := apiclientgo.New(\n        apiclientgo.WithSecurity(os.Getenv("GLEAN_API_TOKEN")),\n        apiclientgo.WithInstance(os.Getenv("GLEAN_INSTANCE")),\n    )\n    res, err := s.Client.Agents.Run(ctx, components.AgentRunCreate{\n        AgentID: "<id>",\n        Messages: []components.Message{\n            components.Message{\n                Role: apiclientgo.String("USER"),\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    if res.AgentRunWaitResponse != nil {\n        // handle response\n    }\n}\npackage main\nimport (\n  "fmt"\n  "strings"\n  "net/http"\n  "io"\n)\nfunc main() {\n  url := "https://instance-name-be.glean.com/rest/api/v1/agents/runs/wait"\n  method := "POST"\n  payload := strings.NewReader(`{\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n}`)\n  client := &http.Client {\n  }\n  req, err := http.NewRequest(method, url, payload)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  req.Header.Add("Content-Type", "application/json")\n  req.Header.Add("Accept", "application/json")\n  req.Header.Add("Authorization", "Bearer <token>")\n  res, err := client.Do(req)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  defer res.Body.Close()\n  body, err := io.ReadAll(res.Body)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  fmt.Println(string(body))\n}', 'java_code_sample': 'package hello.world;\nimport java.lang.Exception;\nimport java.util.List;\nimport org.openapis.openapi.Glean;\nimport org.openapis.openapi.models.components.AgentRunCreate;\nimport org.openapis.openapi.models.components.Message;\nimport org.openapis.openapi.models.operations.CreateAndWaitRunResponse;\npublic class Application {\n    public static void main(String[] args) throws Exception {\n        Glean sdk = Glean.builder()\n                .apiToken(System.getenv().getOrDefault("GLEAN_API_TOKEN", ""))\n            .build();\n        AgentRunCreate req = AgentRunCreate.builder()\n                .agentId("<id>")\n                .messages(List.of(\n                    Message.builder()\n                        .role("USER")\n                        .build()))\n                .build();\n        CreateAndWaitRunResponse res = sdk.client().agents().run()\n                .request(req)\n                .call();\n        if (res.agentRunWaitResponse().isPresent()) {\n            // handle response\n        }\n    }\n}\nOkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nMediaType mediaType = MediaType.parse("application/json");\nRequestBody body = RequestBody.create(mediaType, "{\\n  \\"agent_id\\": \\"string\\",\\n  \\"input\\": {},\\n  \\"messages\\": [\\n    {\\n      \\"role\\": \\"USER\\",\\n      \\"content\\": [\\n        {\\n          \\"text\\": \\"string\\",\\n          \\"type\\": \\"text\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\"metadata\\": {}\\n}");\nRequest request = new Request.Builder()\n  .url("https://instance-name-be.glean.com/rest/api/v1/agents/runs/wait")\n  .method("POST", body)\n  .addHeader("Content-Type", "application/json")\n  .addHeader("Accept", "application/json")\n  .addHeader("Authorization", "Bearer <token>")\n  .build();\nResponse response = client.newCall(request).execute();', 'typescript_code_sample': 'import { Glean } from "@gleanwork/api-client";\nconst glean = new Glean({\n  apiToken: process.env["GLEAN_API_TOKEN"] ?? "",\n  instance: process.env["GLEAN_INSTANCE"] ?? "",\n});\nasync function run() {\n  const result = await glean.client.agents.run({\n    agentId: "<id>",\n    messages: [\n      {\n        role: "USER",\n      },\n    ],\n  });\n  // Handle the result\n  console.log(result);\n}\nrun();\nconst myHeaders = new Headers();\nmyHeaders.append("Content-Type", "application/json");\nmyHeaders.append("Accept", "application/json");\nmyHeaders.append("Authorization", "Bearer <token>");\nconst raw = JSON.stringify({\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n});\nconst requestOptions = {\n  method: "POST",\n  headers: myHeaders,\n  body: raw,\n  redirect: "follow"\n};\nfetch("https://instance-name-be.glean.com/rest/api/v1/agents/runs/wait", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));', 'curl_code_sample': 'curl -L \'https://instance-name-be.glean.com/rest/api/v1/agents/runs/wait\' \\\n-H \'Content-Type: application/json\' \\\n-H \'Accept: application/json\' \\\n-H \'Authorization: Bearer <token>\' \\\n-d \'{\n  "agent_id": "string",\n  "input": {},\n  "messages": [\n    {\n      "role": "USER",\n      "content": [\n        {\n          "text": "string",\n          "type": "text"\n        }\n      ]\n    }\n  ],\n  "metadata": {}\n}\''}
Enhanced content written to /Users/aureliawang/workspace/glean-developer-site-revamp/build/llms-full-enhanced.txt
